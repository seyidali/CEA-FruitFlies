IterationNumber           MSE              MAE              MAPE              R2              ExpVar              MLSE              MedAE             Model
1                   1.35144         0.87406         0.3698         0.35659          0.38973          0.08522          0.63342          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.0113 3.8019 3.4995 3.5032 3.5708 3.8005 2.1199 3.2232 3.0008 2.2237   3.1503 2.1856 4.8682 5.1286 4.7456 4.6011 4.7132 4.7085 2.9845 5.4505   5.3422 5.2893 5.34   3.3156 2.3348 2.9059 2.8533 2.6934 3.5201 2.549   3.8376 1.9211 3.812  3.8902 3.8339 3.723  3.2588 2.3682 2.1312 3.9173   1.9643 2.1421 3.1538 3.1068 4.1473 2.8516 2.8515 3.8652 5.1103 5.1972   5.0423 5.1525 5.0242 4.1753]]
2                   2.72468         1.41447         0.60786         -0.2972          -0.14089          0.16069          1.30682          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.47   2.7793 4.7365 3.2982 3.2854 4.8917 3.6561 3.0486 3.5414 3.5912   3.6071 4.2706 3.6633 3.8569 4.0266 3.451  4.1091 3.9671 3.6871 3.4462   3.6267 3.4448 2.5796 3.4645 3.6512 3.6798 3.7728 3.7785 3.7923 3.729   4.4361 4.2909 4.4913 4.573  4.2233 4.3741 3.6301 3.9076 3.2408 4.267   4.3069 3.9943 4.3838 4.0439 4.2544 3.7187 4.2912 4.7299 4.9684 4.5262   5.0343 4.9189 4.6615 4.4389]]
3                   0.43922         0.50784         0.18426         0.79089          0.79093          0.02723          0.4439          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.8102 3.741  3.459  3.4758 3.7426 3.7925 2.1075 2.2591 2.1936 2.1356   2.5802 2.2207 4.7994 5.103  4.728  4.4054 4.74   4.6815 5.2408 5.3195   5.2476 5.3872 5.2335 5.179  2.4139 2.2165 2.5892 2.6456 2.4791 2.4715   1.6565 1.7283 1.8209 1.5566 1.7042 1.5765 2.0029 2.3987 2.2077 2.173   1.9842 2.2021 2.9861 3.1286 3.2024 2.8292 2.755  3.0355 5.2862 5.0653   5.0334 5.1356 4.9673 5.3205]]
4                   0.5059         0.55789         0.2069         0.75915          0.75942          0.03279          0.45438          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.4909 3.9731 3.5832 3.5495 3.6935 3.7486 2.2177 2.2437 2.0541 1.967   2.1877 2.2647 4.9518 5.1974 4.8008 4.5506 4.761  4.8825 5.2084 5.6074   5.1586 4.9732 5.1937 5.3192 2.404  2.9125 2.665  2.7074 2.1473 2.7672   1.7638 1.7592 1.7855 1.8122 1.7454 1.626  1.9052 2.408  2.2642 2.2201   1.8621 2.3572 3.124  3.1859 3.2907 2.9105 2.9893 3.2228 5.1981 5.2222   5.0501 4.9619 5.1055 5.0212]]
5                   0.94491         0.74059         0.28428         0.55014          0.55041          0.05792          0.67073          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.5097 3.8243 3.542  3.5752 2.8872 3.6736 3.0994 2.2735 2.3492 2.0869   3.2939 2.2698 4.8092 5.1251 3.3626 4.6688 3.9019 4.8222 3.305  3.2583   5.1212 5.1856 5.1771 5.2032 2.3897 3.4989 2.6607 2.6183 2.4886 2.7025   1.6498 1.8066 1.688  3.8666 3.6345 1.6843 1.9988 2.3342 2.1487 2.1909   1.9977 2.2147 3.1078 3.7225 3.3025 2.8967 2.9708 3.013  5.1321 5.1197   4.935  4.1    4.9365 4.2415]]
6                   2.51466         1.37162         0.56271         -0.1972          -0.14993          0.14817          1.26373          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0993 2.844  3.6601 2.9157 3.2611 2.7572 3.6349 3.7068 3.4622 3.5098   3.7111 3.1486 2.7459 3.9436 3.3095 4.3983 4.0028 3.8319 2.6278 3.1252   3.2739 3.62   3.5255 2.8157 3.6495 2.7686 3.6841 3.7119 3.7008 3.5479   4.1143 3.6667 4.0151 4.1804 4.4997 4.0457 3.8883 4.1163 2.602  3.9688   3.967  3.5814 3.7118 4.0863 4.2185 4.0278 3.98   4.3369 3.7409 4.2858   4.7187 4.8204 4.2896 4.8277]]
7                   0.48571         0.54605         0.20019         0.76876          0.76876          0.02998          0.4639          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3513 3.7136 3.2976 3.5017 3.7764 3.9013 2.176  2.3618 2.1741 2.1313   2.1637 2.2561 4.8968 5.0936 4.6685 4.3782 4.6468 4.7501 5.215  5.5395   5.323  5.1975 5.3279 5.0317 2.5797 2.7024 2.8099 2.5497 2.5045 2.7119   1.7113 1.6819 1.6432 1.6713 2.117  1.5492 2.0332 2.3872 2.167  2.1517   1.9992 2.3574 2.9546 3.0816 3.2813 2.9793 2.9527 3.0228 5.0388 5.2509   4.8625 4.8572 5.0496 5.1373]]
8                   0.4948         0.55875         0.21066         0.76443          0.76764          0.03164          0.4745          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.4305 3.9369 3.5424 3.6153 4.5643 3.7169 2.2029 2.3413 2.2423 2.1237   2.4496 2.2832 4.8851 5.0021 4.6525 4.6862 4.7965 4.7761 5.2457 5.4807   5.3289 5.0946 5.4135 5.2399 2.5151 2.9188 3.0027 2.6015 2.4586 2.6787   2.1253 1.7692 1.7768 1.8237 1.6954 1.564  2.0922 2.3355 2.2435 2.322   2.0224 2.2038 3.0662 3.1965 3.3612 2.9944 2.9297 3.1684 5.321  5.0796   4.9953 5.1608 5.1699 5.4554]]
9                   0.58077         0.56412         0.21637         0.7235          0.72594          0.03666          0.46467          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4078 4.6845 3.4677 3.4404 3.5119 3.6699 2.1278 2.3022 2.2118 2.0595   2.1349 2.24   4.8596 5.1534 4.7399 4.671  4.7544 4.8661 5.2604 5.5185   5.3195 5.3408 5.3264 5.2009 2.4329 2.9316 2.8545 2.6493 2.5407 2.6527   1.6267 1.6873 3.3232 1.6748 1.5976 1.5127 3.1087 2.3476 2.1205 2.1142   1.9318 2.1285 3.0094 3.0665 3.2074 2.8519 2.8632 3.0178 5.218  5.1671   5.0682 5.1494 5.0694 5.3409]]
10                   4.80977         1.73008         0.47644         -1.28989          -0.45008          0.29873          1.15145          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[1.3814 2.0569 1.2985 1.9801 2.6173 1.9568 1.8922 2.503  2.0129 1.9443   1.9308 1.7784 1.3746 2.8236 1.0712 1.3362 1.6878 2.6032 1.0551 1.8409   1.5636 2.0501 1.7573 1.73   1.9823 2.3508 1.5881 2.2086 2.4056 1.9537   2.8953 2.1183 1.5137 1.9786 2.2759 2.1016 2.2569 2.9976 4.1469 2.5769   1.8809 2.8475 1.8162 1.2726 1.3343 1.3479 4.0468 2.0867 2.0823 2.2741   1.9577 2.0744 2.0996 2.2288]]
11                   0.94487         0.79514         0.31598         0.55016          0.57887          0.06045          0.63012          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7988 4.044  3.892  3.1065 3.9866 3.9498 2.5998 2.3671 2.7481 2.3169   1.802  3.6219 5.2317 5.35   5.0406 4.0827 4.3759 5.3738 3.5454 5.1569   4.3593 5.3575 5.437  5.4732 2.2566 2.2031 2.757  2.6628 2.7442 3.0184   2.101  3.5491 2.8208 2.1263 1.5858 2.3791 2.6912 2.7466 2.5334 3.4445   1.7462 3.3397 3.4061 3.8281 3.4099 2.6651 3.3019 3.4764 5.6711 5.4226   5.1003 5.0281 5.2775 5.6176]]
12                   0.76569         0.68835         0.30213         0.63546          0.69688          0.05443          0.54455          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6895 4.3536 3.9581 3.9807 4.2319 4.5696 2.4841 3.0551 2.9345 2.4395   2.9324 2.5529 4.876  5.4337 5.1553 5.3159 5.0567 4.9848 5.4306 4.0786   5.2296 5.2858 5.6715 4.7505 2.5141 3.102  2.7792 2.8437 2.7412 2.8679   3.121  2.6739 2.192  2.6172 2.0307 2.569  2.4965 2.7102 3.3637 2.8622   2.0758 2.5362 3.4306 3.4534 3.8293 3.1573 3.446  3.6426 5.472  5.4258   4.9964 5.1022 4.879  4.6809]]
13                   0.52162         0.53592         0.20784         0.75166          0.75216          0.03482          0.42023          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4028 3.7991 4.424  3.4472 3.535  3.6922 2.1177 2.2448 2.1749 2.0499   2.1455 2.2307 4.8545 5.1    4.718  4.664  4.7119 4.8489 5.2441 5.5248   5.3134 5.3541 5.3398 5.1914 2.4614 2.8558 2.7948 2.6465 2.5489 2.6841   1.6163 1.6438 1.5447 1.7066 1.6092 1.5821 1.9883 3.2673 2.1146 2.1709   1.9165 2.096  2.9272 3.0789 3.1872 2.8799 2.867  2.9957 5.2042 5.2875   5.0844 5.1279 5.071  5.3349]]
14                   4.51459         1.63324         0.43717         -1.14935          -0.31492          0.28293          1.32348          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.2093 1.6365 1.3491 1.7568 3.8271 1.4145 1.876  2.0237 1.8339 1.7987   2.0953 1.5455 1.7844 1.6471 1.9072 1.4723 1.1294 2.855  1.77   2.2123   1.6848 1.6858 1.3487 1.9661 2.2895 1.684  1.9991 1.2105 1.8597 1.6215   3.5754 2.4306 1.7065 1.5178 1.6574 2.2077 1.4062 1.8919 4.2964 1.4685   1.7302 1.6686 3.1304 2.7985 2.9293 2.9592 2.0125 1.9905 2.7046 1.0638   2.0702 2.0098 5.5522 1.9049]]
15                   0.79678         0.63672         0.28575         0.62066          0.68001          0.05534          0.4264          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7874 4.7565 4.1699 4.0102 3.8309 3.9436 2.3169 2.6056 2.9369 2.2591   2.4163 1.8617 5.2878 4.7122 5.0913 4.8416 5.1827 4.4328 5.4792 5.2715   5.4024 5.3314 5.6928 4.2027 2.5951 2.8117 3.0557 2.7799 2.8302 2.8162   3.1535 2.4499 3.2065 4.0208 2.1056 2.0074 2.546  2.6552 2.3544 2.5568   2.4956 2.0314 3.4697 3.6795 3.6242 3.7115 3.8844 3.5043 4.7787 5.2107   5.2528 5.3769 5.3896 5.555 ]]
16                   0.75983         0.67215         0.29865         0.63825          0.70571          0.0537          0.48798          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.3857 4.499  3.8993 3.7961 4.1567 3.9919 2.3687 2.6497 2.9054 2.331   2.5133 2.6527 5.1798 5.4623 5.2341 4.8524 5.1827 5.1526 5.5963 4.2889   4.9669 5.3548 5.5817 4.5326 2.606  3.0874 2.4696 2.3733 3.0041 2.9489   2.5607 3.0738 2.9883 2.8557 2.2703 2.3997 2.2913 2.7368 2.888  2.54   2.3838 2.9319 3.6077 3.6759 3.6672 3.7695 3.4599 3.479  4.2906 5.4574   5.4018 5.4485 5.1908 5.6008]]
17                   0.92355         0.73005         0.29375         0.56031          0.5671          0.06001          0.63713          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4171 3.795  2.6875 2.2389 3.5186 3.6773 2.1321 2.3203 3.2569 2.077   3.5346 2.1786 4.8644 5.0828 4.7127 4.6689 4.7379 4.8722 5.2259 5.5344   5.2686 5.1971 5.2599 4.9739 2.4912 2.8142 3.5426 2.6765 2.3771 2.4461   4.2112 3.9105 1.7491 1.7028 1.609  1.6618 1.991  2.58   2.1486 2.1417   3.3252 2.1419 3.0547 3.0657 3.1452 2.8611 2.8885 3.8761 5.1842 5.0465   4.9666 5.1178 3.9885 5.1709]]
18                   2.99538         1.48904         0.63048         -0.42607          -0.27598          0.17102          1.38007          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.9313 4.0202 2.9658 2.7287 4.2884 3.424  3.2402 3.2182 3.4117 3.5154   4.3628 3.0915 4.1581 4.1228 3.7252 4.1038 4.1024 4.4148 3.1152 2.9596   3.1411 3.5836 3.1873 3.2018 3.6327 3.849  3.6782 4.313  3.7808 3.8423   4.5546 4.1782 4.211  4.2809 4.1541 4.4194 4.0434 3.8094 4.9105 4.3289   3.4679 3.5728 4.3834 3.1334 5.9696 4.5714 4.3806 4.3041 4.4388 4.9996   4.3923 4.8167 4.6903 4.8654]]
19                   0.48005         0.54075         0.20105         0.77145          0.77145          0.0307          0.49353          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3649 3.8374 3.5189 3.3855 3.4975 3.6987 2.072  2.3864 2.2195 2.0841   2.0667 2.1423 4.8085 5.1113 4.7193 4.6488 4.7068 4.8351 5.2932 5.4758   5.2016 5.3922 5.2752 5.1184 2.5509 2.801  2.7005 2.7228 2.4753 1.9737   1.701  1.8106 1.7293 1.8393 1.8371 1.9084 2.0058 2.3696 2.1615 2.1501   2.0048 2.1321 3.0467 3.0759 3.387  2.9196 2.8656 3.112  5.1633 5.0863   4.9879 5.1647 4.9225 5.1995]]
20                   0.48484         0.53386         0.20079         0.76917          0.77013          0.03124          0.47672          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4784 3.9338 3.5211 3.5586 3.6519 3.7038 2.2183 2.2211 2.25   2.1055   2.0985 2.2199 4.9228 5.265  4.6476 4.7562 4.8181 4.9122 5.2889 5.4044   5.0389 5.4292 5.3348 5.1313 2.3252 2.8223 2.7118 2.6739 2.4239 2.6949   1.6422 1.8719 1.7562 2.0073 1.715  1.7469 1.9687 2.3071 2.2071 2.2869   1.9495 2.2117 3.0787 3.2184 3.347  2.9595 2.8055 3.1467 5.2834 5.0633   5.1894 5.2822 5.1905 5.2911]]
21                   1.09808         0.799         0.29038         0.47722          0.47746          0.06152          0.61945          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4226 3.9084 3.4307 3.4835 3.5611 3.6464 2.3028 2.2666 2.1985 3.4624   3.0431 2.1976 4.8597 5.1383 4.7337 3.6944 4.5367 4.778  5.2676 3.331   3.1654 3.0815 5.1315 3.4133 2.5574 3.5743 2.6902 2.6251 2.4795 2.4249   1.7323 1.77   1.6757 1.7022 3.8872 4.0439 3.1835 2.5334 3.528  2.1339   1.9363 2.1209 3.9063 3.1558 3.2694 2.9065 2.9358 3.0231 4.4011 5.1616   5.0277 5.1188 5.0696 5.2607]]
22                   2.49565         1.38394         0.57121         -0.18816          -0.11437          0.14745          1.40432          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.5295 3.2856 3.2045 2.3905 3.0321 2.6991 3.1793 3.5329 3.3343 3.1046   3.1315 3.4242 3.7848 3.4381 3.6488 3.2771 4.0076 4.0651 3.3082 3.354   3.0659 3.0172 3.3398 3.6094 3.272  3.8334 3.8056 3.6422 3.5411 4.0511   4.3745 4.4936 3.8763 3.5334 3.8421 4.2141 4.1048 3.5199 3.6765 3.5519   4.4677 4.4337 4.2096 4.6195 3.4503 4.3056 4.2382 4.4592 4.9624 4.6206   4.87   4.3652 4.8394 4.9876]]
23                   0.44242         0.52378         0.19787         0.78937          0.7894          0.0295          0.47553          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4002 3.7558 3.4443 3.5244 3.5177 3.735  2.1457 2.2599 2.2657 2.0201   2.0717 2.2948 4.8193 4.8712 4.7173 4.7788 4.7534 4.7705 5.2087 5.4896   5.3745 5.3586 5.2258 5.1897 2.3913 2.8788 2.7318 2.6557 2.4556 2.6686   1.5863 1.8088 1.6936 1.8563 2.0269 1.4967 2.1221 2.3507 2.1581 2.1545   1.9429 2.2908 2.9816 3.0056 3.0704 2.8781 2.894  3.0582 5.1264 5.2205   5.012  5.108  5.2095 5.254 ]]
24                   0.45772         0.52462         0.19924         0.78208          0.78381          0.02974          0.46397          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4364 3.8026 3.4837 3.6139 3.7412 3.7203 2.358  2.3228 2.2475 2.217   2.1681 2.2301 4.9374 5.2077 4.8125 4.7682 4.7937 4.9404 5.2652 5.4753   5.1255 5.421  5.2824 5.1318 2.5519 2.8032 2.6471 2.5991 2.5786 2.7709   2.0147 1.9978 1.6649 1.7482 1.6531 1.4963 2.1119 2.4618 2.0873 2.2477   1.9955 2.2279 3.1304 3.1556 3.2843 3.0207 2.9482 3.0922 5.3066 4.9089   5.1884 5.1614 5.1491 5.4093]]
25                   0.75958         0.62587         0.21207         0.63837          0.64153          0.03982          0.46807          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3991 3.8152 3.3918 3.4681 3.5341 3.5722 2.0869 2.2803 2.1879 2.0566   2.1299 2.2007 4.8971 5.1314 3.0947 4.6841 4.7376 4.7444 5.2915 5.5341   3.6096 5.3052 5.3255 2.9995 2.4766 2.8303 2.8082 2.6778 2.5366 2.6685   2.0041 1.7319 1.5934 1.6719 1.5807 1.708  3.2155 2.3397 2.1137 2.1363   1.8997 2.1651 3.0039 3.0709 3.2156 2.8844 2.8841 2.8292 5.1046 5.1946   5.0546 4.939  5.0676 5.3826]]
26                   4.34773         1.65485         0.44332         -1.06991          -0.16466          0.25829          1.21063          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.1436 2.7943 2.0782 1.7784 1.5095 1.7976 1.4782 1.9562 1.7773 1.3379   1.4417 3.7268 2.517  1.9944 1.8334 1.4519 1.816  1.7174 2.8918 1.8153   1.7992 1.7795 1.6365 2.1001 2.4478 1.974  2.9281 1.6774 1.7857 1.6425   1.7225 2.2942 1.4315 2.1556 1.1911 2.2635 2.0861 2.2273 2.4074 1.7091   1.8604 1.9095 2.2951 1.5525 1.8769 2.1296 2.6954 2.0197 1.7872 1.3729   1.667  1.9608 2.127  1.8347]]
27                   0.76707         0.67245         0.26424         0.6348          0.65523          0.04658          0.56458          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.0687 4.7533 3.9776 3.7604 4.6677 4.1579 2.4423 2.5077 2.0289 3.2534   1.7909 2.3135 5.0938 5.6858 4.9    3.9152 5.2829 5.2859 5.3635 4.9811   5.3706 5.5596 4.1065 5.2579 2.504  2.9262 3.0051 2.7446 2.6729 2.9846   2.669  1.6007 1.4498 2.1331 2.1044 2.4126 2.619  2.6954 2.6297 3.5145   2.1414 2.4514 3.2728 2.5157 3.4958 3.0316 2.721  3.7534 5.2416 5.3456   5.4448 4.4457 4.5184 4.2817]]
28                   0.68297         0.61989         0.27562         0.67484          0.7442          0.04816          0.45318          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.888  4.3796 3.8678 4.0051 3.8615 4.3811 2.2036 3.1229 2.4615 2.3745   2.2687 2.5023 5.2984 5.5022 5.0979 5.1264 5.0279 5.0858 5.6066 4.7868   5.5552 5.2403 5.5144 5.5471 3.0791 3.1073 3.1944 2.8519 3.1676 3.2401   2.1172 2.7613 2.064  2.2504 2.3739 2.0937 2.1651 3.0147 2.6801 2.7277   2.6297 2.698  3.4684 3.6361 3.8736 3.4278 3.7243 3.4033 4.1048 5.3277   5.1957 5.4339 5.216  5.5434]]
29                   0.58245         0.56929         0.20779         0.7227          0.72312          0.03489          0.50377          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4018 4.6644 3.4728 3.4535 3.5635 3.6768 2.1369 2.2736 2.2023 2.0663   2.1314 3.1838 3.261  5.1161 4.7384 4.6417 4.7188 4.8729 5.2554 5.5261   5.3823 5.3168 5.3267 5.1922 2.0636 2.8589 2.7789 3.147  2.5656 2.6786   1.6328 1.5659 1.5634 1.6844 1.5937 1.6141 1.9909 2.286  2.1031 2.1172   3.2407 2.1198 3.0064 3.0604 3.2079 2.8681 2.874  3.0167 5.206  5.1977   5.1223 5.1347 5.0664 5.3344]]
30                   4.20042         1.60314         0.42822         -0.99978          -0.12892          0.26034          1.07347          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.5106 1.3034 1.4449 3.0803 3.6586 1.96   2.4726 1.7037 2.3543 1.2799   3.0514 0.9831 0.8806 2.2264 2.1139 2.1486 2.7929 3.7661 1.7695 1.5713   1.76   1.2361 1.4204 2.3321 2.1207 1.0525 1.4595 1.8927 1.8319 1.8255   2.2087 2.8306 2.1314 1.7782 1.8977 1.9979 0.757  1.9297 1.9116 2.1824   1.4941 2.3138 2.1454 2.4494 2.9134 1.9511 2.3988 2.2464 2.2409 2.0209   2.0175 2.3225 1.9913 2.4987]]
31                   0.72986         0.65301         0.27482         0.65252          0.68492          0.04808          0.53542          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7871 4.9588 2.9926 3.8402 3.995  3.5454 2.3545 2.4468 2.5535 2.4515   1.897  1.737  4.5035 5.1916 5.14   4.7281 5.1836 5.275  4.8286 5.5542   5.4502 5.3762 5.0017 5.5381 2.5113 2.8996 2.3502 2.6824 2.6628 2.8806   2.758  3.1891 2.477  2.3199 2.0884 2.5425 3.195  2.8425 2.4413 2.6196   3.1975 2.9396 3.5455 3.4687 2.7312 3.1429 3.498  2.7203 5.1879 5.1924   3.9582 5.3965 5.2892 5.6945]]
32                   0.66212         0.61812         0.26986         0.68477          0.76349          0.04591          0.5363          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.1264 4.2271 4.0304 4.0011 3.7908 4.0318 2.1802 2.7351 2.614  2.1544   2.4629 2.0263 5.3378 5.6692 5.0312 4.9227 5.0735 5.3438 5.2219 5.5418   5.6911 5.5948 5.5513 5.3808 2.915  3.1078 3.0171 2.6837 2.8709 2.9543   2.6356 2.6611 2.599  2.2021 2.312  2.1357 2.4398 2.7749 2.5758 2.901   2.4844 2.6565 3.4759 3.5419 3.73   3.6378 3.6895 3.557  4.8098 5.7206   5.5845 5.3278 5.462  5.4209]]
33                   0.82933         0.67251         0.23202         0.60516          0.60603          0.04465          0.6075          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.4216 3.8093 3.5597 3.5532 3.537  3.6605 2.1006 2.2782 2.1806 2.0455   2.1193 2.1943 4.8729 5.1026 4.6656 3.4609 4.7088 4.8431 5.0632 5.4495   3.2723 5.3307 2.8235 5.1795 2.481  2.7312 3.4552 3.4914 2.4567 2.7448   1.6193 1.6938 1.7335 1.7049 1.7311 1.8117 3.4554 2.3606 3.9166 2.117   3.1991 2.1267 3.0232 3.0695 3.203  2.876  2.9113 3.0288 5.1431 3.69   4.9671 5.0945 4.9386 4.3498]]
34                   2.80735         1.46073         0.61964         -0.33655          -0.20308          0.16383          1.45197          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.6102 5.3854 2.8664 3.1679 3.0692 2.8964 2.9557 3.2637 3.6038 3.4919   3.3616 3.1743 3.4148 5.1117 4.3994 4.1454 3.5397 3.8185 3.501  3.125   3.8182 3.1913 3.4077 3.3087 3.8254 3.612  3.5421 3.7055 3.8075 3.7186   3.9993 4.0844 4.3985 4.208  4.0416 4.07   4.2122 4.1948 4.6323 4.8067   4.2774 4.0567 3.9389 4.1476 4.0596 4.1663 3.9013 4.423  5.064  4.2914   4.6346 4.8433 5.1402 4.8269]]
35                   0.50477         0.56767         0.21156         0.75968          0.75983          0.0327          0.56048          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.5151 3.9532 3.4006 3.4599 3.5515 3.7631 2.1523 2.3207 2.2005 2.0443   2.1762 2.2674 4.8316 5.1389 4.7399 4.6586 4.6511 4.0858 5.0561 5.2109   5.1524 5.2481 5.182  5.0817 2.4798 2.7963 2.8271 2.5124 2.3833 2.2998   2.1883 1.6135 1.6685 1.7985 1.5978 1.7504 1.9802 2.6241 2.2242 2.1886   1.9391 2.2475 3.0857 3.125  3.2169 3.0247 2.7931 2.9768 5.2005 5.1325   5.0439 5.0035 4.9211 5.2257]]
36                   0.4911         0.54948         0.20945         0.76619          0.76771          0.03169          0.4962          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.5074 3.9833 3.5507 3.6122 3.6447 3.6063 2.2015 2.3219 2.2415 2.1157   2.187  2.2583 4.9538 5.2089 4.7822 4.6689 4.7528 4.7698 5.1157 5.4347   5.4316 5.255  5.1349 5.187  2.4975 2.8052 2.81   2.2875 2.4921 2.6882   1.652  1.8447 2.0496 1.8514 1.8706 1.664  1.9711 2.4841 2.3846 2.0765   2.043  2.23   2.8643 3.1664 3.3802 2.9729 2.9822 3.1041 5.3376 5.2573   5.174  5.2868 5.0885 5.4795]]
37                   0.85177         0.70862         0.27615         0.59448          0.60287          0.0528          0.60455          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.5273 3.9009 3.5598 3.5332 3.5343 3.6535 2.3201 3.1529 2.3951 2.0536   2.1088 3.8967 4.8799 5.1462 4.7373 4.4984 4.7471 4.7863 5.0819 5.5542   5.2655 5.173  3.0724 5.1573 2.4474 2.7067 2.7123 2.5907 2.5388 3.4882   1.8071 1.7506 4.1289 1.7866 1.8221 1.7048 2.0525 2.3638 3.557  2.1466   1.9287 2.2036 2.9801 3.8652 3.2184 3.8982 2.9466 3.0165 4.9654 5.2004   5.0262 5.0494 4.8498 5.3446]]
38                   2.75832         1.43332         0.60889         -0.31321          -0.19321          0.16191          1.41355          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9466 2.7853 3.4909 2.8757 3.7749 2.9655 3.6328 4.1022 3.446  3.3381   3.945  3.1529 3.2263 3.7937 3.8849 5.1156 3.7099 3.3404 3.1309 3.6248   3.7721 3.6652 2.9953 3.5682 3.6529 3.7228 4.032  3.6457 3.865  3.8145   4.1374 4.6007 4.231  3.5303 4.8893 3.9062 4.7224 3.8832 4.6078 4.1339   3.5031 3.8317 4.1947 4.3255 4.2757 4.3688 4.3224 4.2667 4.6365 4.6891   3.6678 4.6268 4.6034 4.8066]]
39                   0.49449         0.55111         0.2031         0.76458          0.76459          0.03119          0.4719          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4293 3.8101 3.5233 3.5329 3.5654 3.6078 2.1743 2.2054 2.3781 2.018   2.1409 2.2151 4.8631 4.9549 4.732  4.1349 4.6629 4.8588 5.0922 5.4364   5.3141 5.1964 5.14   5.1276 2.2946 2.7481 2.7837 2.714  2.5206 2.5321   1.7198 1.7768 2.4155 1.7547 1.7586 1.6476 2.3681 2.4434 2.2183 1.9981   1.9627 2.229  2.9768 3.153  3.0687 2.7308 2.9032 2.9977 5.2798 5.0675   4.9721 5.0134 4.9496 5.2842]]
40                   0.43429         0.50124         0.19215         0.79324          0.79508          0.02847          0.40168          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3517 3.7863 3.6135 3.6647 3.6861 3.7336 2.1668 2.3171 2.3147 2.1855   2.132  2.2274 4.8753 5.0328 4.743  4.7414 4.6486 4.7041 5.2498 5.5109   5.3221 5.3733 5.4185 5.1372 2.483  2.754  2.7793 2.7625 2.5677 2.6504   1.7657 1.9154 1.7874 1.944  1.7594 1.9682 2.1149 2.4868 2.0403 2.296   2.0426 2.3564 3.106  2.8711 3.0961 3.1472 2.9886 3.057  5.2304 5.223   5.1393 5.2197 5.2027 5.3364]]
41                   0.65491         0.61449         0.24501         0.6882          0.69001          0.04421          0.55753          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.458  3.8044 3.4586 3.0427 3.263  2.894  2.1104 3.1254 2.1626 2.0663   2.1361 2.1993 4.8604 5.1977 4.7273 4.6753 4.7386 4.8745 5.2765 3.6948   5.326  5.3646 5.3118 5.1871 2.4568 2.8442 3.1299 2.6611 2.5061 2.644   3.9717 1.6754 1.7981 1.6702 1.603  3.1738 1.9787 2.3308 2.1192 3.3728   1.9339 2.1415 3.0099 3.0653 3.2041 2.8225 2.8671 3.012  5.2262 5.2227   5.0786 5.059  5.093  5.3625]]
42                   4.15515         1.61361         0.41552         -0.97822          -0.01527          0.24275          1.34268          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.0368 2.0259 1.7825 4.7307 1.9561 2.4479 1.9685 2.83   1.9543 1.4684   1.89   1.5934 1.8491 1.7701 1.9212 2.5182 1.8093 2.3907 1.6466 1.3567   1.5004 1.9931 1.9077 1.967  2.0714 1.8537 1.4925 1.7101 1.364  1.8102   2.0888 2.0199 2.1839 1.4438 2.2587 2.1247 1.3236 1.4542 0.9549 1.8462   1.6983 2.1577 2.3079 1.1804 2.0224 2.1167 2.1407 1.6577 2.3    2.1409   1.9618 2.3834 1.958  2.5274]]
43                   0.81331         0.7661         0.30042         0.61279          0.6466          0.05271          0.71903          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7038 4.1941 3.9441 3.1513 4.5256 4.5165 3.0577 2.4821 2.4131 2.9615   2.3894 2.5288 4.2595 5.2523 4.8164 4.8317 5.0419 5.075  5.4616 5.3203   5.531  4.9555 5.762  5.265  2.7984 3.0587 2.8873 2.3369 1.9478 2.967   2.6411 2.4502 2.4918 2.2045 2.9123 1.8449 2.1667 2.2055 2.2445 2.6999   2.7372 3.4532 3.3671 3.5205 3.4916 2.1079 2.8379 3.7137 5.4948 5.4663   5.066  4.9902 3.9123 5.6005]]
44                   0.76189         0.68797         0.28382         0.63727          0.69098          0.0487          0.50572          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.2342 4.2823 4.2391 4.3959 4.0126 4.201  2.7862 2.6611 2.64   2.8892   2.4289 2.4912 4.2702 5.5739 5.1251 5.1105 5.0926 5.2698 5.3096 5.6919   5.5277 4.9025 5.1236 4.3992 2.9046 3.0441 3.0069 2.8498 2.6722 2.2681   2.4303 2.2754 1.8735 2.7912 2.1757 2.4556 2.5431 2.8987 2.6324 2.355   2.3047 2.881  3.5024 3.6774 3.6019 3.5945 3.4162 3.6986 5.4907 5.0468   4.033  5.2387 4.9508 5.5323]]
45                   0.58211         0.59225         0.23883         0.72286          0.72315          0.04215          0.55772          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4207 3.8277 3.4688 3.4723 2.9261 3.6597 2.0574 2.2509 3.2519 2.0569   2.1083 2.2029 4.9408 3.4836 4.7323 4.6751 4.7385 4.8832 5.2686 5.5225   5.3391 5.3177 5.3422 5.1928 2.4418 2.8409 2.7464 2.3387 2.1586 2.6601   1.5839 3.3182 3.4046 1.6323 1.6684 1.5265 1.9825 2.3374 2.0961 2.1488   1.9476 2.1037 3.0003 3.0492 3.1876 2.8659 2.8676 2.9808 5.2226 5.2055   5.042  5.0999 5.0712 5.3178]]
46                   5.13468         1.78691         0.46914         -1.44457          -0.34234          0.34024          1.41143          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.4743 1.9639 1.9652 2.3103 2.2434 1.9883 1.2402 2.2246 2.0572 1.6756   1.063  1.9104 1.3747 1.7736 1.5847 1.8913 1.9038 1.503  1.0598 0.847   0.4068 2.3891 1.4347 1.8994 2.0038 2.0508 2.7972 2.2141 1.884  1.5997   1.4721 2.2642 1.8225 1.945  2.1306 4.0663 2.3412 2.1392 1.9191 1.6669   1.6004 1.4855 1.183  2.0827 1.9853 1.8243 2.3535 2.5127 2.2112 1.6408   2.1462 1.5036 2.1092 1.3625]]
47                   0.80011         0.73454         0.28839         0.61907          0.63646          0.0513          0.58468          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.0362 4.2759 3.6985 4.4424 4.0418 3.5405 2.4969 2.7494 3.3054 1.8112   2.8887 1.8676 4.2193 5.5137 4.2525 4.9209 4.9463 3.8367 5.3465 5.7524   4.6274 4.6253 5.0469 5.4902 2.1183 3.2025 3.0868 3.4386 2.4778 2.7949   1.6816 2.1478 2.1184 1.8941 2.5671 1.5797 2.268  2.7977 1.8248 2.4317   2.5025 2.6086 3.9237 3.4389 3.9946 2.5443 3.7898 3.5314 5.6693 4.5097   5.425  5.2517 4.4339 5.2015]]
48                   0.77923         0.6946         0.29223         0.62902          0.69306          0.05268          0.48872          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8454 4.2938 4.0287 4.4336 4.1094 3.9668 2.501  2.7497 2.4445 2.2014   2.4069 2.8525 5.0105 5.1031 4.9834 4.1756 4.6443 5.1529 4.8932 5.7981   5.3261 5.5946 5.6509 5.3827 2.8578 2.6088 3.3425 2.765  2.8731 2.8671   2.0103 3.6191 2.0649 2.3634 2.6585 2.4532 2.3338 2.6128 2.4546 2.6492   1.6761 2.5674 3.6471 3.6025 3.824  3.6604 3.7356 3.7112 4.9783 5.4895   5.2765 5.421  5.0402 5.7588]]
49                   0.46227         0.51612         0.19001         0.77992          0.77992          0.0292          0.43342          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8001 3.4667 3.4667 3.5334 3.6666 2.1339 2.2667 2.2001 2.0666   2.1333 2.1999 4.869  5.1334 4.7334 4.6665 4.7333 4.8667 5.2667 5.5333   5.3333 5.3335 5.3331 5.1999 2.4667 2.8667 2.8    2.6664 2.5333 2.6665   1.6    1.6664 1.6    1.6669 1.6001 1.5334 2.     2.3334 2.1335 2.1334   1.9334 2.1335 2.9999 3.0669 3.2001 2.8668 2.8666 3.     5.1999 5.2   5.0666 5.1333 5.0666 5.3333]]
50                   0.46219         0.51603         0.18998         0.77996          0.77996          0.02919          0.43328          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4667 3.4668 3.5333 3.6666 2.1334 2.2667 2.2001 2.0669   2.1333 2.2001 4.8668 5.1333 4.7334 4.6665 4.7332 4.8666 5.2666 5.5333   5.3334 5.3333 5.3333 5.1999 2.4667 2.8667 2.8    2.6667 2.5332 2.6667   1.5999 1.6668 1.6001 1.6667 1.6001 1.5335 2.0016 2.3333 2.1329 2.1333   1.9335 2.1335 3.     3.0667 3.2    2.8667 2.8666 3.0001 5.2001 5.2   5.0667 5.1333 5.0667 5.3334]]
51                   0.46237         0.51613         0.19003         0.77987          0.77987          0.0292          0.43347          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4666 3.4666 3.5334 3.6666 2.1334 2.2665 2.2002 2.0666   2.1335 2.2002 4.8666 5.1332 4.7332 4.6667 4.7333 4.8667 5.2666 5.5334   5.3332 5.3332 5.3333 5.1998 2.4667 2.8666 2.8002 2.6666 2.5332 2.6667   1.6001 1.6668 1.6001 1.6664 1.6    1.5333 1.9999 2.3334 2.1335 2.1335   1.9334 2.1333 3.0001 3.0669 3.2027 2.8666 2.8667 3.     5.2    5.2   5.0667 5.1333 5.0666 5.3334]]
52                   0.524         0.53324         0.20719         0.75053          0.75067          0.03496          0.43327          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7998 3.4667 3.4666 3.5333 3.6666 2.1334 2.2667 2.2002 2.0668   2.1334 2.2    4.8668 5.1334 4.7333 4.6667 4.7334 4.8667 5.2667 5.5332   5.3333 5.3333 5.3333 5.2001 2.4665 2.8664 2.8    2.6666 2.5333 2.6666   1.6    1.6668 1.5999 1.6668 1.6002 1.5335 2.0001 3.2618 2.1334 2.1334   1.9335 2.1335 2.9999 3.0667 3.1999 2.8666 2.8666 3.0001 5.2    5.1999   5.0666 5.1334 5.0667 5.3333]]
53                   0.46223         0.51603         0.18998         0.77994          0.77994          0.0292          0.43312          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4665 3.5333 3.6667 2.1332 2.2669 2.2001 2.0666   2.1333 2.2    4.8666 5.1333 4.7333 4.6668 4.7334 4.8666 5.2667 5.5334   5.3333 5.3333 5.3333 5.2001 2.4664 2.8666 2.8    2.6666 2.5333 2.6666   1.6    1.6669 1.6001 1.6667 1.6018 1.5338 2.     2.3334 2.1334 2.1333   1.9332 2.1334 3.0001 3.0667 3.2    2.8667 2.8666 3.     5.1999 5.2   5.0666 5.1333 5.0667 5.3332]]
54                   0.44378         0.50123         0.18739         0.78872          0.78872          0.0287          0.38545          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4666 3.8954 3.5334 3.6667 2.1333 2.2667 2.2001 2.0667   2.1334 2.2    4.8666 5.1333 4.7332 4.6666 4.7333 4.8693 5.2175 5.5332   5.3333 5.3331 5.3334 5.2    2.4662 2.8668 2.8    2.6667 2.5332 2.6668   1.6001 1.6666 1.6    1.6667 1.6001 1.5334 2.0004 2.3331 2.3389 2.1335   1.9333 2.1333 3.     3.0669 3.1999 2.8667 2.8666 3.     5.1999 5.2   5.0667 5.1333 5.0667 4.704 ]]
55                   0.46152         0.51328         0.1886         0.78028          0.78028          0.02912          0.43343          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4002 3.8    3.4667 3.4667 3.5331 3.6664 2.1331 2.2666 2.1999 2.0667   2.1333 2.0498 4.8666 5.1333 4.7334 4.6666 4.7333 4.8668 5.2664 5.5334   5.3334 5.3333 5.3332 5.2    2.4665 2.8665 2.8    2.6667 2.5333 2.6666   1.6001 1.6667 1.5999 1.6664 1.6    1.5334 2.     2.3333 2.1334 2.1334   1.9332 2.1334 2.9998 3.0666 3.2    2.8667 2.867  3.     5.2    5.2   5.0667 5.1333 5.0665 5.3334]]
56                   0.46215         0.51601         0.18998         0.77998          0.77998          0.02919          0.43332          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4017 3.8    3.4667 3.4667 3.5334 3.6668 2.1334 2.2667 2.2002 2.0668   2.1334 2.2    4.8667 5.1333 4.7333 4.6665 4.7334 4.8666 5.2667 5.5333   5.3332 5.3333 5.3333 5.2    2.4666 2.8667 2.7999 2.6668 2.5333 2.6665   1.6001 1.6667 1.6001 1.6666 1.6003 1.5334 2.     2.3334 2.1334 2.1333   1.9335 2.1334 3.0002 3.0667 3.2    2.8669 2.8667 2.9999 5.2    5.2   5.0667 5.1333 5.0668 5.3332]]
57                   0.45826         0.51255         0.18868         0.78183          0.78183          0.02881          0.43338          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8002 3.4668 3.4668 3.5334 3.6666 2.133  2.2666 2.2    2.0667   2.1333 2.2    4.8666 5.1334 4.7334 4.6668 4.7334 4.8667 5.2665 5.5334   5.3333 5.3333 5.3334 5.2001 2.4645 2.8667 2.8    2.6666 2.5335 2.6668   1.6    1.6668 1.6001 1.6667 1.5999 1.5334 2.1916 2.3333 2.1333 2.1334   1.9333 2.1334 2.9999 3.0667 3.1999 2.8667 2.8667 3.0002 5.2    5.1999   5.0667 5.1332 5.0667 5.3332]]
58                   0.46225         0.51609         0.19001         0.77993          0.77993          0.0292          0.43387          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4668 3.4665 3.5333 3.6667 2.1333 2.2667 2.2    2.0669   2.1334 2.2002 4.8667 5.1333 4.7331 4.6667 4.7331 4.8666 5.2667 5.5332   5.3334 5.3333 5.3335 5.2    2.4666 2.8667 2.8    2.6663 2.5333 2.6665   1.6001 1.6665 1.6001 1.6666 1.6001 1.5323 2.     2.3333 2.1334 2.1333   1.9333 2.1335 3.0001 3.0667 3.2    2.8668 2.8665 3.     5.1999 5.2   5.0666 5.1331 5.0667 5.3334]]
59                   0.46222         0.51606         0.18999         0.77994          0.77994          0.0292          0.43332          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4666 3.4666 3.5333 3.6667 2.1334 2.2667 2.2001 2.0663   2.1333 2.2    4.8667 5.1334 4.7333 4.6667 4.7334 4.8666 5.2668 5.5333   5.3334 5.3333 5.3334 5.1999 2.4665 2.8665 2.7999 2.6667 2.5334 2.6668   1.6001 1.6667 1.6    1.6668 1.6001 1.5333 1.9999 2.3332 2.1334 2.1332   1.9333 2.1333 3.0002 3.0666 3.2    2.8668 2.8667 2.9997 5.2    5.1999   5.0668 5.1334 5.0666 5.3333]]
60                   0.46222         0.51607         0.19         0.77994          0.77994          0.0292          0.43328          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5333 3.6667 2.1334 2.2667 2.2001 2.0668   2.1331 2.2    4.8667 5.1333 4.7333 4.6667 4.7334 4.8668 5.2666 5.5334   5.3336 5.3333 5.3332 5.2    2.4666 2.8666 2.7998 2.6667 2.5335 2.6666   1.6001 1.6666 1.6002 1.6672 1.6001 1.5335 2.     2.3334 2.1332 2.1335   1.9333 2.1334 3.0002 3.0667 3.2    2.8667 2.8666 2.9996 5.2    5.1999   5.0667 5.1332 5.0668 5.3333]]
61                   0.46216         0.51553         0.18967         0.77997          0.77997          0.02919          0.43337          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4666 3.4666 3.5334 3.6667 2.1333 2.2667 2.2001 2.0666   2.1334 2.1997 4.8667 5.1333 4.7332 4.6665 4.7334 4.8666 5.2667 5.5331   5.3333 5.3332 5.3334 5.1999 2.4666 2.8665 2.8    2.6668 2.5334 2.6668   1.6001 1.6668 1.6288 1.6667 1.6002 1.5333 2.0002 2.3333 2.1334 2.1334   1.9333 2.1333 3.0001 3.0667 3.2    2.8666 2.8668 3.0002 5.2    5.2001   5.0666 5.1333 5.0664 5.3333]]
62                   0.46223         0.51606         0.19         0.77994          0.77994          0.0292          0.43327          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4666 3.5334 3.6667 2.1335 2.2666 2.2    2.0666   2.1333 2.2    4.8667 5.1333 4.7333 4.6666 4.7333 4.8667 5.2671 5.5333   5.3334 5.3333 5.3333 5.2001 2.4666 2.8666 2.8    2.6667 2.5336 2.6665   1.5999 1.6666 1.6    1.6668 1.6001 1.5335 2.0001 2.3333 2.1334 2.1334   1.9334 2.1333 2.9999 3.0667 3.2006 2.8665 2.8667 2.9999 5.2    5.2   5.0666 5.1333 5.0667 5.3333]]
63                   0.51626         0.54769         0.19592         0.75421          0.75469          0.03102          0.49995          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4666 3.4668 3.5335 3.6666 2.1332 2.2662 2.2    2.0668   2.1333 2.1999 4.8667 5.1335 4.7332 4.6666 4.7334 4.8667 5.2665 5.5332   3.625  5.3332 5.3333 5.1997 2.4667 2.8667 2.8    2.6667 2.5335 2.6668   1.6001 1.6667 1.6001 1.6667 1.6    1.5333 2.0002 2.3333 2.1335 2.1333   1.9335 2.1334 3.0001 3.0668 3.1999 2.8667 2.8667 3.0001 5.2    5.2001   5.0662 5.1334 5.0666 5.3333]]
64                   0.46216         0.51599         0.18994         0.77997          0.77997          0.02919          0.43343          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4667 3.4667 3.5335 3.6665 2.1334 2.2667 2.2    2.0666   2.1333 2.2002 4.8666 5.1333 4.7333 4.6668 4.7335 4.8666 5.2666 5.5332   5.3333 5.3332 5.3333 5.1998 2.4666 2.8666 2.8    2.6665 2.5333 2.6664   1.6001 1.6636 1.6001 1.6666 1.6001 1.5332 1.9999 2.3333 2.1334 2.1331   1.9333 2.1332 3.     3.0665 3.2    2.8667 2.8666 3.     5.2    5.1999   5.0666 5.1331 5.0667 5.3333]]
65                   0.46179         0.51481         0.18972         0.78015          0.78015          0.02918          0.43323          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8002 3.4666 3.4669 3.5332 3.6667 2.1335 2.2668 2.2005 2.0667   2.1334 2.2    4.8003 5.1332 4.7334 4.6667 4.7333 4.8667 5.2667 5.5333   5.3334 5.3332 5.3333 5.2    2.4667 2.8667 2.8001 2.6666 2.5337 2.6667   1.6    1.6666 1.6    1.6667 1.6    1.5335 2.     2.3333 2.1333 2.133   1.9333 2.1333 3.     3.0666 3.1999 2.8668 2.8667 3.     5.2    5.1998   5.0666 5.1334 5.0665 5.3332]]
66                   0.46257         0.51691         0.19042         0.77977          0.77977          0.02923          0.43348          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4007 3.7999 3.4668 3.4667 3.5333 3.6667 2.1333 2.2668 2.2456 2.0668   2.1333 2.2    4.8666 5.1332 4.7333 4.6667 4.7331 4.8667 5.2664 5.5332   5.333  5.3333 5.3334 5.2    2.4664 2.8665 2.7999 2.6664 2.5333 2.6664   1.5999 1.6667 1.6    1.6667 1.6001 1.5333 2.     2.3335 2.1333 2.1333   1.9334 2.1334 3.     3.0666 3.2001 2.8668 2.8666 3.0001 5.1999 5.2   5.0666 5.1333 5.0667 5.3334]]
67                   0.46222         0.51607         0.18999         0.77994          0.77994          0.02919          0.43323          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4666 3.5331 3.6666 2.1334 2.2667 2.2001 2.0668   2.1334 2.2001 4.8666 5.1334 4.7333 4.6666 4.7332 4.8668 5.2667 5.5334   5.3331 5.3332 5.3332 5.1999 2.4665 2.8668 2.7999 2.6666 2.5336 2.6666   1.6002 1.6668 1.6001 1.6666 1.5999 1.5335 2.     2.3332 2.1334 2.1332   1.9334 2.1333 2.9998 3.0666 3.2    2.8667 2.8666 2.9999 5.2    5.2001   5.0666 5.1333 5.0667 5.3333]]
68                   0.46227         0.5161         0.19         0.77992          0.77992          0.0292          0.43333          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4667 3.5334 3.6667 2.1333 2.2667 2.2    2.0667   2.1334 2.2    4.8666 5.1332 4.7334 4.6666 4.7315 4.8667 5.2666 5.5333   5.3334 5.3336 5.3336 5.2001 2.4666 2.8667 2.7999 2.6666 2.5334 2.6667   1.5999 1.6667 1.6    1.6666 1.6001 1.5334 1.9999 2.3335 2.1333 2.1333   1.9333 2.1333 3.     3.0667 3.2001 2.8666 2.8668 2.9998 5.2    5.2   5.0664 5.1333 5.0667 5.3334]]
69                   0.46222         0.51606         0.19         0.77994          0.77994          0.0292          0.43327          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4667 3.4665 3.5333 3.6666 2.1334 2.2666 2.2001 2.0667   2.1333 2.2001 4.8666 5.1333 4.7333 4.6668 4.7333 4.8666 5.2668 5.5334   5.3333 5.333  5.3333 5.1999 2.4668 2.8667 2.8    2.6666 2.5332 2.6667   1.6    1.6667 1.6    1.6669 1.6002 1.5335 2.0001 2.3334 2.1334 2.1334   1.9334 2.1332 3.     3.0667 3.2    2.8664 2.8668 3.0001 5.1999 5.2   5.0665 5.1333 5.0666 5.3333]]
70                   0.45078         0.50401         0.18397         0.78539          0.78546          0.0282          0.40005          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4666 3.4667 3.5333 3.6667 2.1333 2.2671 2.2    2.0667   2.1332 2.2001 4.8665 5.1333 4.7335 4.6665 4.7332 4.8666 5.2666 5.5331   5.3333 5.3334 5.3335 5.1998 2.4666 2.8666 2.1491 2.6668 2.5332 2.6668   1.6    1.6664 1.6001 1.6667 1.6001 1.5335 2.     2.3333 2.1331 2.1335   1.9334 2.1333 3.     3.0667 3.1999 2.8667 2.8666 2.9999 5.1999 5.2   5.0667 5.1331 5.0666 5.3333]]
71                   0.46226         0.5161         0.19001         0.77992          0.77992          0.0292          0.43437          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4668 3.4667 3.5334 3.6665 2.1334 2.2666 2.2    2.0667   2.1332 2.1999 4.8666 5.1332 4.7334 4.6665 4.7333 4.8667 5.2666 5.5334   5.333  5.3332 5.3334 5.2    2.4666 2.8666 2.7999 2.6666 2.5332 2.6667   1.6001 1.6667 1.6002 1.6666 1.6    1.5334 2.     2.3334 2.1334 2.1334   1.9333 2.1335 3.0001 3.0688 3.1999 2.8666 2.8666 2.9998 5.1999 5.1999   5.0666 5.1334 5.0666 5.3335]]
72                   0.46223         0.51607         0.19         0.77994          0.77994          0.0292          0.43342          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4669 3.4667 3.5333 3.6666 2.1333 2.2667 2.2002 2.0665   2.1334 2.2    4.8665 5.1333 4.7333 4.6664 4.7333 4.8667 5.2666 5.5333   5.3334 5.3334 5.3331 5.2    2.4667 2.8667 2.8002 2.6666 2.5332 2.6667   1.6001 1.6668 1.6001 1.6667 1.6001 1.5333 2.0001 2.3333 2.1333 2.1334   1.9333 2.1333 2.9996 3.0668 3.2    2.8667 2.8668 3.     5.2001 5.1998   5.0667 5.1334 5.0667 5.3333]]
73                   0.46221         0.51604         0.18998         0.77995          0.77995          0.02919          0.43328          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4666 3.4667 3.5332 3.6666 2.1336 2.2666 2.1999 2.0667   2.1333 2.2    4.8667 5.1333 4.7333 4.6667 4.7333 4.8667 5.2665 5.5334   5.3334 5.3332 5.3333 5.2    2.4664 2.8667 2.7999 2.6667 2.533  2.6666   1.6    1.6667 1.6001 1.6667 1.6001 1.5336 2.     2.3332 2.1331 2.1333   1.9333 2.1333 2.9999 3.0667 3.1999 2.8668 2.8667 3.     5.1999 5.1999   5.0667 5.1333 5.0667 5.3333]]
74                   0.46226         0.51684         0.19014         0.77992          0.77992          0.0292          0.43332          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8001 3.4666 3.4668 3.5333 3.6665 2.1333 2.2667 2.1999 2.0668   2.1333 2.2002 4.8667 5.1333 4.7333 4.6667 4.7333 4.8667 5.2668 5.5334   5.3333 5.3332 5.2914 5.1999 2.4666 2.8667 2.7998 2.6666 2.5335 2.6664   1.6    1.6668 1.6    1.6667 1.6001 1.5333 2.0001 2.3332 2.1334 2.1333   1.9332 2.1333 2.9997 3.0666 3.2001 2.8668 2.8667 3.0002 5.2    5.1999   5.0666 5.1333 5.0666 5.3335]]
75                   0.46202         0.51598         0.18991         0.78004          0.78004          0.02917          0.43338          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4668 3.4668 3.5333 3.6667 2.1334 2.267  2.2    2.0668   2.1334 2.1998 4.8668 5.1334 4.7333 4.6666 4.7333 4.8667 5.2666 5.5333   5.3333 5.3332 5.3334 5.2    2.4667 2.8666 2.8    2.6667 2.5332 2.6666   1.6002 1.6666 1.6001 1.6665 1.6002 1.5333 2.     2.329  2.1334 2.1333   1.9332 2.1334 2.9998 3.0667 3.2    2.8668 2.8667 3.     5.2001 5.2   5.0666 5.1333 5.0664 5.3333]]
76                   0.46221         0.51605         0.18999         0.77995          0.77995          0.02919          0.43328          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4667 3.4666 3.5332 3.6668 2.1334 2.2668 2.1999 2.0667   2.1334 2.1999 4.8667 5.1335 4.7333 4.6665 4.7332 4.8664 5.2666 5.5333   5.3333 5.3333 5.3332 5.2003 2.467  2.8666 2.7999 2.6666 2.5333 2.6667   1.6001 1.6667 1.6001 1.6668 1.6001 1.5335 2.     2.3333 2.1334 2.1333   1.9333 2.1334 3.0001 3.0666 3.2001 2.8667 2.8667 2.9997 5.2    5.2002   5.0666 5.1333 5.0667 5.3333]]
77                   0.46221         0.51605         0.18999         0.77995          0.77995          0.02919          0.43337          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5334 3.6668 2.1333 2.2668 2.2001 2.0668   2.1334 2.2    4.8666 5.1334 4.7334 4.6667 4.7333 4.8666 5.2668 5.5334   5.333  5.3334 5.3333 5.1999 2.4667 2.8666 2.7999 2.6668 2.5332 2.6663   1.6003 1.6666 1.6    1.6666 1.6001 1.5333 2.0001 2.3333 2.1335 2.1335   1.9334 2.1333 3.     3.0667 3.2    2.8667 2.8667 3.0001 5.1999 5.1999   5.0667 5.1333 5.0666 5.3332]]
78                   0.46235         0.51624         0.19006         0.77988          0.77988          0.0292          0.43817          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5332 3.6667 2.1334 2.2667 2.1999 2.0668   2.1336 2.2001 4.8666 5.1333 4.7333 4.6667 4.7333 4.8666 5.2665 5.5335   5.3333 5.3332 5.3333 5.2    2.4667 2.8664 2.7999 2.6667 2.5333 2.6661   1.6    1.6666 1.5999 1.6667 1.5999 1.5334 1.9999 2.3333 2.1334 2.1334   1.9331 2.1335 2.9999 3.0764 3.2    2.8667 2.8667 3.0001 5.1999 5.2   5.0666 5.1334 5.0667 5.3331]]
79                   0.46224         0.51606         0.19         0.77993          0.77993          0.0292          0.43328          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4667 3.5333 3.6667 2.1333 2.2667 2.2001 2.0667   2.1332 2.2001 4.8665 5.1334 4.7333 4.6666 4.7334 4.8667 5.2665 5.5334   5.3333 5.3333 5.3334 5.2001 2.4666 2.8667 2.7999 2.6667 2.5333 2.6664   1.6    1.6668 1.6001 1.6667 1.6001 1.5336 2.     2.3334 2.1332 2.1332   1.9332 2.1333 3.     3.0667 3.2    2.8666 2.8669 3.     5.2001 5.1999   5.0666 5.1332 5.0666 5.3334]]
80                   0.4622         0.51606         0.18999         0.77995          0.77995          0.02919          0.43328          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4669 3.4667 3.5334 3.6666 2.1333 2.2668 2.2    2.0667   2.1337 2.2    4.8667 5.1333 4.7333 4.6667 4.7335 4.8666 5.2666 5.5335   5.3332 5.333  5.3332 5.2    2.4666 2.8665 2.7999 2.6667 2.5334 2.6664   1.6    1.6667 1.6002 1.6668 1.6001 1.5335 2.     2.3334 2.1334 2.1334   1.9333 2.1334 2.9999 3.0665 3.1999 2.8667 2.8666 2.9998 5.2    5.2004   5.0667 5.1333 5.0666 5.3333]]
81                   0.4622         0.51606         0.18999         0.77995          0.77995          0.02919          0.43342          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4668 3.4667 3.5333 3.6668 2.1336 2.2667 2.2002 2.0667   2.1334 2.2    4.8666 5.1332 4.7333 4.6667 4.7333 4.8666 5.2667 5.5334   5.3334 5.3334 5.3333 5.2    2.4667 2.8666 2.8    2.6666 2.5334 2.6666   1.6001 1.6667 1.5999 1.6668 1.6    1.5333 2.     2.3332 2.1333 2.1334   1.9333 2.1333 2.9998 3.0668 3.2    2.8667 2.8665 3.0003 5.2    5.2   5.0667 5.1333 5.0668 5.3333]]
82                   0.46079         0.51461         0.18964         0.78062          0.78078          0.0291          0.42738          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    4.4547 3.4668 3.5335 3.6667 2.1333 2.2668 2.2    2.0667   2.1332 2.2001 4.8665 5.1334 4.7333 4.6666 4.7332 4.8667 5.2666 5.5333   5.3333 5.3333 5.3334 5.2003 2.4666 2.8666 2.7998 2.6666 2.5334 2.6665   1.5999 1.6669 1.6    1.6667 1.6001 1.5334 1.9998 2.3334 2.1335 2.1333   1.9333 2.1333 3.     3.0666 3.2    2.8667 2.8666 3.0001 5.2    5.2001   5.0667 5.1335 5.0667 5.3334]]
83                   0.46695         0.51795         0.19113         0.77769          0.77769          0.02957          0.43328          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5333 3.6666 2.1332 2.2667 2.2    2.0668   2.1333 2.2    4.8667 5.1332 4.7333 4.6667 4.7333 4.8666 5.2666 5.5334   5.3331 5.3334 5.3332 5.2    2.4663 2.9686 2.7998 2.6667 2.5332 2.6667   1.6001 1.6666 1.6    1.6668 1.6    1.5335 2.     2.3334 2.1334 2.1334   1.9333 2.1334 2.9999 3.0667 3.1999 2.8668 2.8667 3.     5.2    5.1999   5.0667 5.1333 5.0667 5.3334]]
84                   0.46221         0.51605         0.19         0.77995          0.77995          0.02919          0.43323          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8    3.4664 3.4667 3.5334 3.6667 2.1333 2.2668 2.2    2.0668   2.1332 2.2002 4.8667 5.1333 4.7333 4.6667 4.7335 4.8665 5.2668 5.5333   5.3331 5.3333 5.3332 5.2    2.4667 2.8666 2.7998 2.6666 2.5333 2.6667   1.6001 1.6667 1.6001 1.6667 1.5997 1.5334 2.0001 2.3335 2.1334 2.1332   1.9334 2.1333 3.     3.0665 3.2    2.8672 2.8666 2.9999 5.2    5.2   5.0667 5.1334 5.0665 5.3335]]
85                   0.46221         0.51606         0.19         0.77994          0.77994          0.0292          0.43333          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4667 3.4668 3.5334 3.6667 2.1334 2.2668 2.2001 2.0667   2.1333 2.2    4.8666 5.1332 4.7333 4.6665 4.7332 4.8667 5.2667 5.5331   5.3333 5.3333 5.3333 5.1999 2.4667 2.8666 2.8001 2.6667 2.5331 2.6666   1.6    1.6667 1.6002 1.6668 1.5996 1.5333 2.     2.3333 2.1333 2.1334   1.9333 2.1334 3.     3.0665 3.1998 2.8666 2.8666 2.9999 5.1999 5.1999   5.0667 5.1332 5.0667 5.3332]]
86                   0.46221         0.51606         0.18999         0.77994          0.77994          0.02919          0.43338          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4666 3.4666 3.5333 3.6667 2.1333 2.2667 2.2001 2.0664   2.1332 2.2    4.8666 5.1333 4.7332 4.6666 4.7332 4.8666 5.2665 5.5332   5.3332 5.3334 5.3332 5.2    2.4667 2.8666 2.8    2.6667 2.5332 2.6665   1.6001 1.6667 1.6    1.6666 1.6006 1.5334 2.0001 2.3333 2.1333 2.1335   1.9334 2.1333 2.9999 3.0667 3.1997 2.8667 2.8667 3.     5.1999 5.1998   5.0666 5.1333 5.0665 5.3333]]
87                   0.46278         0.51726         0.19022         0.77968          0.77968          0.02921          0.43328          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4667 3.4667 3.5334 3.6668 2.1334 2.2667 2.2001 2.0665   2.1335 2.2    4.8666 5.1334 4.7333 4.6666 4.7333 4.8666 5.2667 5.5332   5.3331 5.3332 5.3333 5.1998 2.4669 2.8666 2.8001 2.6664 2.5333 2.6665   1.5999 1.6668 1.6001 1.6667 1.6    1.5334 2.0002 2.3334 2.1334 2.1333   1.9333 2.1334 3.0001 3.0666 3.2001 2.8668 2.8665 3.     5.2001 5.1999   5.0666 5.0687 5.0666 5.3332]]
88                   0.46222         0.51606         0.18999         0.77994          0.77994          0.02919          0.43323          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4667 3.4666 3.5334 3.6667 2.1334 2.2666 2.2    2.0668   2.1331 2.2    4.8665 5.1332 4.7332 4.6666 4.7333 4.8668 5.2666 5.5333   5.3333 5.3333 5.3332 5.1997 2.4666 2.8667 2.7999 2.6666 2.5333 2.6667   1.6001 1.6667 1.6    1.6669 1.6    1.5336 1.9999 2.3333 2.1332 2.1334   1.9334 2.1334 2.9999 3.0667 3.2    2.8664 2.8669 3.0001 5.1999 5.2   5.0666 5.1332 5.0666 5.3333]]
89                   0.46224         0.51608         0.19         0.77993          0.77993          0.0292          0.43338          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4667 3.4668 3.5333 3.6667 2.1333 2.2668 2.2001 2.0667   2.1333 2.1999 4.8666 5.1333 4.7332 4.6666 4.7332 4.8667 5.2666 5.5333   5.3332 5.3333 5.3332 5.2    2.4666 2.8667 2.7999 2.6668 2.533  2.6666   1.6001 1.6668 1.6    1.6667 1.6001 1.5333 2.0001 2.3334 2.1333 2.1334   1.9333 2.1333 3.0001 3.0666 3.1999 2.8667 2.8667 3.0001 5.2001 5.2   5.0667 5.1333 5.0666 5.3333]]
90                   0.46224         0.51608         0.19         0.77993          0.77993          0.0292          0.43343          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4668 3.4666 3.5334 3.6667 2.1334 2.2667 2.2002 2.0666   2.1332 2.2    4.8665 5.1334 4.7333 4.6665 4.7334 4.8667 5.2665 5.5332   5.3333 5.3333 5.3331 5.1999 2.4665 2.8667 2.7999 2.6669 2.5333 2.6666   1.6001 1.6668 1.6001 1.6667 1.6    1.5333 2.     2.3334 2.1336 2.1335   1.9334 2.1334 3.0001 3.0665 3.2    2.8668 2.8666 2.9999 5.2    5.2   5.0666 5.1333 5.0666 5.3333]]
91                   0.46224         0.51607         0.19         0.77993          0.77993          0.0292          0.43332          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4666 3.5333 3.6667 2.1334 2.2666 2.2001 2.0667   2.1332 2.1999 4.8666 5.1333 4.7332 4.6667 4.7332 4.8663 5.2667 5.5333   5.3333 5.3334 5.3333 5.2001 2.4667 2.8668 2.8    2.6661 2.5333 2.6666   1.6001 1.6667 1.6    1.6668 1.6    1.5334 2.0001 2.3334 2.1334 2.1333   1.9331 2.1334 3.     3.0667 3.2001 2.8667 2.8667 3.     5.2    5.1999   5.0665 5.1334 5.0666 5.3334]]
92                   0.46216         0.51601         0.18998         0.77997          0.77997          0.02919          0.43337          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4666 3.4667 3.5334 3.6667 2.1333 2.2668 2.2001 2.0666   2.1334 2.2002 4.8663 5.1332 4.7332 4.6665 4.7333 4.8663 5.2667 5.5334   5.3333 5.3334 5.3332 5.2001 2.4669 2.8665 2.7998 2.6667 2.5332 2.6665   1.6001 1.6669 1.6001 1.6667 1.6001 1.5333 2.0001 2.3333 2.1331 2.1334   1.9334 2.1333 3.0001 3.0667 3.2001 2.8665 2.8667 3.     5.2    5.1998   5.0666 5.1333 5.0685 5.3333]]
93                   0.45823         0.50753         0.18573         0.78184          0.78188          0.02867          0.4          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4667 3.4665 3.5334 3.6667 2.1333 2.2667 2.2    2.0668   2.1333 2.2002 4.8667 5.1333 4.7332 4.6666 4.7332 4.8665 5.2667 5.5336   5.3334 5.3333 5.3332 5.2    2.4665 2.8666 2.7999 2.6667 2.5335 2.6668   1.5999 1.6669 1.6001 1.6668 1.6    2.0047 2.     2.3334 2.1337 2.1334   1.9333 2.1332 2.9999 3.0667 3.2001 2.8668 2.8666 3.     5.2    5.2   5.0664 5.1333 5.0667 5.3333]]
94                   0.46223         0.51607         0.19         0.77994          0.77994          0.0292          0.43333          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4667 3.4667 3.5333 3.6668 2.1335 2.2668 2.2    2.0668   2.1334 2.2001 4.8665 5.1333 4.7333 4.6666 4.7333 4.8666 5.2667 5.5333   5.3333 5.3333 5.3333 5.1999 2.4666 2.8669 2.8001 2.6668 2.5333 2.6665   1.6    1.6665 1.6    1.6668 1.6    1.5333 2.     2.3334 2.1334 2.1333   1.9335 2.1334 2.9999 3.0666 3.2001 2.8667 2.8667 3.0001 5.2005 5.2   5.0667 5.1333 5.0666 5.3331]]
95                   0.4622         0.51605         0.18999         0.77995          0.77995          0.02919          0.43333          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4667 3.5333 3.6666 2.1335 2.2667 2.2    2.0668   2.1334 2.2001 4.8667 5.1331 4.7333 4.6666 4.7333 4.8666 5.2667 5.5334   5.3333 5.3334 5.3334 5.2001 2.4667 2.8667 2.7999 2.6665 2.5334 2.6667   1.6    1.6667 1.6    1.6667 1.6    1.5333 2.0001 2.3334 2.1335 2.1333   1.9333 2.1333 3.     3.0666 3.1999 2.8666 2.8667 3.     5.2    5.2   5.0668 5.1332 5.0666 5.3334]]
96                   0.46222         0.51605         0.18999         0.77994          0.77994          0.0292          0.43352          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4667 3.5332 3.6667 2.1333 2.2668 2.2001 2.0668   2.1333 2.2002 4.8666 5.1334 4.7332 4.6667 4.7333 4.8666 5.2667 5.5333   5.3333 5.3333 5.3333 5.2    2.4666 2.8667 2.8    2.6666 2.5333 2.6666   1.6002 1.6667 1.6001 1.6667 1.6001 1.5332 2.0001 2.3333 2.1334 2.1333   1.9334 2.1331 3.     3.0669 3.1999 2.8667 2.8668 2.9999 5.1999 5.2001   5.0667 5.1333 5.0668 5.3334]]
97                   2.4931         1.39738         0.57508         -0.18694          -0.13704          0.14727          1.29858          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.2774 2.9995 3.1549 2.8121 3.3229 3.4565 3.7724 3.3852 3.1857 3.5944   3.6351 3.578  3.6226 4.0851 3.3059 3.9526 3.8482 4.0382 3.5033 3.1929   3.5054 3.4183 3.1982 3.147  3.6632 3.8791 3.7984 3.6609 3.7489 3.5767   3.6882 3.7063 3.9868 4.2262 4.2466 3.9171 3.8648 4.1909 3.684  3.2954   3.6659 4.0298 4.0489 3.9536 4.0168 3.949  3.848  4.1299 4.1809 4.0829   4.0695 3.6164 4.1471 4.2855]]
98                   2.32285         1.33965         0.55522         -0.10589          -0.05933          0.13909          1.1032          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.5388 3.1725 3.402  3.2098 2.9206 3.3027 3.2806 3.6364 3.0558 3.4961   3.3873 3.4759 3.9612 3.6621 4.5471 3.3979 3.6759 3.5632 3.46   3.4194   3.519  3.4501 3.569  3.2827 3.6847 3.7263 3.7631 3.7254 3.7745 3.7696   3.95   4.1796 3.7639 4.1328 4.0562 3.839  3.3742 3.79   3.5635 3.9164   3.7918 3.7985 3.8644 3.6101 4.0206 3.8742 4.0252 4.1504 4.0983 3.7864   4.0111 4.3795 3.9294 3.818 ]]
99                   2.35973         1.34963         0.56226         -0.12345          -0.06596          0.14176          1.3439          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.0467 3.4796 2.9539 3.199  2.925  3.0321 3.5287 3.9582 3.5599 3.5317   3.7345 3.6958 4.2421 4.0362 3.5505 4.0192 3.6006 3.4103 3.5696 3.7155   3.649  3.3978 3.5307 3.6536 3.726  3.761  3.7078 3.7642 3.6904 3.7803   4.3123 3.5553 4.0895 4.0433 4.3028 3.888  3.2721 3.4976 3.4581 3.9624   3.4516 3.6795 3.588  3.8522 4.1693 3.659  3.8955 4.1517 4.5187 4.3111   4.1911 4.0775 4.0363 4.0182]]
100                   2.32605         1.33765         0.54632         -0.10741          -0.06624          0.13789          1.43112          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.1508 3.186  3.5684 3.0537 3.4283 3.2859 3.6053 3.3158 3.8123 3.3509   3.5858 3.5075 3.7158 3.5047 3.7968 3.9455 3.5622 3.6253 3.371  3.609   3.2207 3.1844 3.444  3.3736 3.6325 3.771  3.7736 3.7223 3.7351 3.6592   3.8599 3.7555 3.7683 4.1547 3.8864 3.9148 3.2176 3.5641 3.7903 3.9819   3.4609 3.3745 3.9506 4.2306 3.6497 3.7439 3.9962 4.1757 4.2099 4.1199   4.1462 3.8456 3.8201 4.4324]]
101                   2.34241         1.3375         0.50344         -0.1152          -0.11447          0.132          1.36998          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8064 2.8322 2.9693 3.0746 2.9397 3.1475 3.2511 3.146  3.2565 3.0213   3.2972 3.1875 3.271  3.3023 3.2405 3.1363 3.4566 3.2167 3.0636 3.194   3.2524 3.0655 3.1692 2.9692 3.3125 3.3166 3.4299 3.356  3.3051 3.3414   3.6993 3.7921 3.6891 3.517  3.5293 3.5793 3.5808 3.3707 3.7965 3.2719   3.5044 3.3443 3.4853 3.561  3.4757 3.4703 3.5556 3.6067 3.5389 3.6678   3.619  3.4107 3.5626 3.5917]]
102                   2.2511         1.32261         0.49532         -0.07173          -0.07134          0.12705          1.3144          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9785 3.2733 2.9777 2.9406 3.0715 3.3256 3.2492 3.2148 3.2943 3.3434   3.2449 3.1222 3.4192 3.6489 3.4773 3.2702 3.1268 3.3892 3.1821 3.2049   3.0652 3.0659 2.9638 3.1436 3.3006 3.3696 3.3082 3.2945 3.3309 3.3285   3.7073 3.796  3.3511 3.4991 3.4195 3.3979 3.3296 3.1264 3.3386 3.562   3.4661 3.4511 3.4988 3.7195 3.6302 3.6041 3.4606 3.2946 3.6794 3.588   3.7785 3.2162 3.8594 3.4236]]
103                   2.2163         1.30436         0.48563         -0.05516          -0.05382          0.12458          1.33632          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9644 3.0852 3.1303 3.1457 2.8509 2.832  3.25   3.186  3.3033 3.1403   3.2925 3.2983 3.2742 3.7401 3.0892 3.2336 3.4606 2.9637 3.1071 3.0003   3.1109 3.1553 3.111  3.0701 3.2924 3.3606 3.3717 3.3088 3.333  3.3175   3.4172 3.3693 3.496  3.8141 3.6404 3.3546 3.2909 2.9842 3.4966 3.2815   3.0308 3.3396 3.5505 3.6036 3.4284 3.5773 3.3343 3.7029 3.698  3.8076   3.7289 3.5948 3.5965 3.8905]]
104                   2.25217         1.3211         0.49536         -0.07224          -0.07123          0.12753          1.3679          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1293 3.1492 2.6217 2.9523 2.8973 3.2012 3.1568 3.3181 3.1666 3.3114   3.216  3.3575 3.5595 3.2583 3.0472 3.3642 3.1271 3.5681 3.2193 2.9875   3.0736 3.1514 3.1493 3.1089 3.293  3.3404 3.4001 3.3511 3.2777 3.3435   3.493  3.4351 3.4825 3.571  3.4187 3.6513 3.1545 3.2086 3.541  3.5489   3.1857 3.5028 3.3595 3.6492 3.6464 3.3356 3.332  3.6004 3.2847 3.7076   3.6124 3.8721 3.6813 3.8097]]
105                   0.58291         0.56681         0.22708         0.72248          0.72717          0.0394          0.4268          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4102 3.7853 3.4574 3.4729 3.5377 4.063  2.4363 2.4265 2.4015 2.0602   2.3154 2.2282 4.8587 5.1399 4.7275 4.9335 4.9726 4.8604 5.2504 5.5569   4.896  5.3278 5.3351 4.47   2.4612 2.8628 3.0518 2.6407 2.5334 2.6724   1.6333 1.6591 2.2299 3.3913 1.5843 1.5503 2.0018 2.5395 2.1312 2.1371   1.9299 2.182  2.9667 3.0547 3.2036 3.9559 3.0708 2.9836 5.198  5.1947   5.45   5.4268 5.0706 5.3332]]
106                   0.48569         0.53327         0.19422         0.76877          0.76877          0.03008          0.42427          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4081 3.8212 3.4667 3.46   3.5388 3.6772 2.1356 1.9545 2.7289 2.0564   2.162  2.2079 3.5355 5.1277 4.7271 4.6503 4.686  4.8634 5.3438 5.5297   5.3492 5.3584 5.3273 5.1973 2.4556 2.852  2.8086 2.6379 2.5477 2.6462   1.6074 1.6677 1.6145 1.681  1.5754 1.8057 1.993  2.332  2.1332 2.1358   1.9521 2.1304 3.0567 3.3161 3.2013 2.8589 2.8484 2.9936 5.2007 5.1848   5.1658 5.1136 5.34   5.329 ]]
107                   0.49368         0.55259         0.20971         0.76496          0.7659          0.03218          0.50008          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4106 3.8103 3.4552 4.0243 3.5141 3.6648 2.1321 2.2724 2.5022 2.0807   2.132  2.1375 4.8346 5.134  4.7283 4.6573 4.7246 4.9905 5.2768 5.5341   5.3834 5.3293 5.3508 5.1806 2.463  2.8683 2.8102 2.668  2.5417 2.6586   1.606  1.6529 1.5905 1.6827 2.038  1.5239 2.0039 2.3779 2.5557 2.9618   1.9172 2.133  2.5808 3.1285 3.2099 2.8738 2.8643 3.03   5.1675 5.1937   5.0402 5.1575 5.1687 5.3348]]
108                   0.46355         0.53206         0.19998         0.77931          0.77961          0.03017          0.4912          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.398  4.3903 3.4587 3.4068 4.3338 3.6705 2.1314 2.2559 2.169  2.1284   2.1214 2.1986 4.8472 3.5991 4.7326 4.6769 4.7384 4.8565 5.2956 5.5571   5.3211 5.3197 5.3346 5.2106 2.4708 2.8362 2.9723 2.6907 2.5368 2.557   1.9222 1.7469 2.1108 1.6527 1.5517 1.7115 2.0005 2.3264 2.1187 2.1195   1.9113 2.1397 2.9846 3.0216 3.2096 2.8596 2.8664 3.6337 5.1788 5.1902   5.0594 5.1273 5.0717 5.2968]]
109                   0.44136         0.51788         0.19757         0.78987          0.78988          0.02999          0.4588          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.9353 3.9208 3.3561 3.751  3.5401 3.9315 2.2219 2.3004 2.2086 2.0938   2.2618 2.3566 4.7716 3.9418 4.6248 4.6218 4.5989 4.7321 5.1959 5.4848   5.2068 5.2558 5.0716 5.0264 2.3703 3.1793 2.7484 2.4871 2.454  2.4375   1.8088 1.8128 1.6706 1.9005 1.7423 1.6471 1.9968 2.3661 2.1543 2.1552   1.9491 2.3897 3.0555 3.1135 3.1935 2.9455 3.0315 3.0206 5.1018 4.9981   5.0138 5.0728 5.0744 5.1443]]
110                   0.48215         0.5322         0.20278         0.77045          0.77082          0.03123          0.51178          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4729 3.7238 3.4964 3.5899 3.5561 3.6645 2.1877 2.4441 2.3046 2.1167   2.3155 2.2196 4.8248 5.1082 4.6854 4.5832 4.5259 4.6847 5.1467 5.4911   5.3505 5.323  5.3552 4.9909 2.5092 2.8316 2.7453 2.6811 2.4834 2.7065   1.6843 2.0891 1.7896 1.8788 1.7174 1.7371 2.0043 2.5914 2.1775 2.1113   2.1613 2.4155 2.9973 3.0492 3.1705 2.9481 2.9239 3.1577 5.2279 5.0244   4.8826 4.9973 5.0779 5.2315]]
111                   0.46481         0.53426         0.19808         0.77871          0.77874          0.02875          0.42217          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4788 3.8095 3.7149 3.5918 3.5767 3.6727 2.218  2.3947 2.469  2.5498   2.5238 2.3374 4.375  5.1312 4.6509 4.6054 4.6869 4.7332 5.2872 5.4928   5.14   5.2494 5.2996 4.6979 2.807  2.8171 2.7092 2.4684 2.4672 2.2602   1.8424 1.7872 1.7644 1.8965 1.8085 1.6507 2.0904 2.2573 2.1279 2.1713   1.9594 2.1339 2.9609 3.1028 3.1915 2.8745 2.8678 2.9591 5.1658 5.1019   5.0733 4.9764 4.9393 5.2184]]
112                   0.53459         0.5521         0.21491         0.74549          0.74554          0.03626          0.48543          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3391 4.2623 3.4314 3.5032 3.6086 3.6624 2.1074 2.3483 2.2791 2.0959   2.5937 2.4831 4.4775 4.8718 4.68   4.6212 4.7141 4.7775 5.1789 5.4474   5.344  5.336  5.1067 4.9764 2.0505 2.8312 2.3756 2.5834 2.7476 2.5717   1.6218 2.9084 1.769  1.8531 1.7618 2.4294 2.0558 2.3852 2.1565 2.2021   1.9583 2.1212 3.0091 3.102  3.2141 2.7005 2.9164 2.9292 5.1316 5.0008   5.0419 5.0262 5.0052 4.5388]]
113                   2.20202         1.2841         0.49188         -0.04836          -0.04814          0.1258          1.1843          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9773 3.3917 3.391  3.3157 3.0554 2.9593 3.1735 3.1801 3.0679 3.5889   3.1719 3.1334 3.4174 3.4671 3.3288 3.3072 3.3998 3.4689 3.0836 3.1625   2.9164 3.0559 3.0895 3.2053 3.3659 3.3526 3.4992 3.3766 3.3887 3.3108   3.5644 3.7224 3.5524 3.6263 3.6608 3.6783 3.2975 3.4154 3.3429 3.0466   3.2294 3.6978 3.7154 3.7175 3.3392 3.5778 3.5767 3.5473 3.8603 3.8571   3.7657 3.8769 3.6142 3.9525]]
114                   2.23598         1.30966         0.50963         -0.06453          -0.06299          0.12919          1.3161          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.2011 3.2293 3.1341 2.9039 3.4193 3.204  3.2411 3.3656 3.1211 3.4068   3.2547 3.2228 3.4173 3.4731 3.3705 3.6528 3.6263 3.1093 3.0286 3.2788   3.4103 3.0998 3.379  3.1996 3.3475 3.4394 3.4874 3.5167 3.5093 3.3567   3.6135 3.8121 3.563  3.9935 3.4045 3.7212 3.3812 3.6353 3.4891 3.4201   3.4467 3.3769 3.4772 3.526  3.548  3.6568 3.5448 3.6569 3.5391 3.7447   3.6856 3.7741 3.6326 3.6825]]
115                   2.17797         1.29543         0.49814         -0.03691          -0.0368          0.12549          1.30625          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.0436 3.0868 2.9537 3.1221 2.7397 3.2386 3.3654 3.4169 3.2268 3.2429   3.1582 3.3214 3.4453 3.8481 3.3831 3.435  3.7549 3.3011 2.9625 3.3293   3.0795 3.3677 3.2257 3.2577 3.4355 3.3864 3.4214 3.395  3.2396 3.31   3.4782 3.6598 3.4638 3.679  3.4886 3.4094 3.2486 3.5938 3.4906 3.3855   3.1616 3.4021 3.6197 3.5567 3.6028 3.514  3.4442 3.3897 3.7089 3.8189   3.5311 3.6687 3.7651 3.9012]]
116                   2.20251         1.31808         0.50785         -0.04859          -0.04846          0.12717          1.27405          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.2451 2.7765 3.0994 3.0392 3.0516 3.3492 3.3313 3.1245 3.3607 3.3219   3.3048 3.2348 3.5322 3.8254 3.2353 3.3148 3.4207 3.564  3.1792 3.2338   3.0968 3.4686 3.4433 3.335  3.4301 3.439  3.3649 3.5451 3.3636 3.3417   3.5749 3.5851 3.6673 3.5716 3.5611 3.7794 3.4392 3.7173 3.3198 3.5565   2.0539 3.3777 3.4858 3.5425 3.5405 3.3853 3.4345 3.641  3.8252 3.6867   3.515  3.6012 3.7587 3.5837]]
117                   2.25057         1.29675         0.48855         -0.07147          -0.0707          0.12732          1.24467          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0924 3.0497 3.1123 2.7516 3.4398 2.8379 3.4663 3.366  3.0957 3.3482   3.3327 3.1254 3.3689 3.6028 3.1392 3.3784 3.3433 3.3447 2.9038 3.1509   3.1847 2.9561 3.1596 2.8439 3.2623 3.3292 3.3777 2.9074 3.3673 3.3762   3.5299 3.6928 3.5726 3.5984 3.5038 3.5971 3.4092 3.3421 3.1499 3.4437   3.2528 2.9443 3.5    3.5076 3.6063 3.5115 3.5716 3.5284 3.4705 3.7957   3.8652 3.8939 3.5445 3.6432]]
118                   2.1933         1.30319         0.4946         -0.04421          -0.04418          0.12511          1.29575          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.119  3.2822 3.2949 2.7891 2.9807 3.1671 3.2574 3.3106 3.1885 3.1771   3.2285 3.2078 3.3057 3.309  3.3403 3.2674 3.2225 3.2265 3.3045 3.1394   3.1521 3.287  3.2604 2.9874 3.3544 3.3644 3.3748 3.3576 3.3663 3.3737   3.5601 3.6891 3.6494 3.4707 3.7338 3.38   3.255  3.3377 3.3438 3.4118   3.4683 3.3024 3.7235 3.5774 3.4408 3.3801 3.5174 3.6344 3.7383 3.7109   3.712  3.8038 3.7535 3.6392]]
119                   2.25691         1.30405         0.49149         -0.07449          -0.07428          0.1276          1.31277          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0305 2.784  3.2407 3.0664 2.9641 3.3631 3.3665 3.1788 3.4122 3.2416   3.1558 3.1003 3.1918 3.7864 3.3655 3.5394 3.0723 3.27   3.0823 3.0256   3.1071 2.9799 3.0039 2.9193 3.3599 3.2947 3.3178 3.3656 3.4021 3.3022   3.815  3.6933 3.751  3.3416 3.5403 3.47   3.4254 3.2859 3.239  3.3219   3.3796 3.4741 3.2209 3.6045 3.6538 3.3502 3.632  3.3455 3.9055 3.8797   3.6727 3.7326 3.5026 3.9869]]
120                   2.34308         1.33314         0.51207         -0.11552          -0.11549          0.1339          1.32505          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9509 3.2604 2.882  3.1169 3.05   3.295  3.1711 3.3998 3.3097 3.2858   3.3357 3.3827 3.6151 3.3037 2.964  3.337  3.2087 3.5856 2.9773 3.0477   3.1799 3.1399 3.2943 3.0508 3.2827 3.4343 3.3333 3.3159 3.3891 3.3202   3.5436 3.5783 3.7071 3.5859 3.854  3.7744 3.2247 3.7244 3.431  3.2599   3.3087 3.4952 3.55   3.5099 3.5186 3.5484 3.4984 3.5508 3.6832 3.5146   3.7599 3.8233 3.5729 3.8061]]
121                   0.52338         0.54865         0.19533         0.75083          0.75149          0.03133          0.46153          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3806 3.7986 3.4682 3.4726 3.5286 3.8017 2.1366 2.2651 2.1919 2.2216   2.0947 2.1903 4.8778 5.0458 4.739  4.5739 4.7274 4.86   5.264  5.3726   3.4248 5.3324 5.3468 5.2023 2.466  2.8766 2.7988 2.6466 2.5391 2.669   1.6521 1.6533 1.6136 1.6646 1.6074 1.522  1.9882 2.3339 2.1448 2.1296   1.9398 2.134  3.005  3.0694 3.2102 2.8631 2.854  2.9925 5.1788 5.1881   5.0515 5.1404 5.0655 5.3288]]
122                   0.4764         0.52262         0.19104         0.77319          0.77321          0.03013          0.43398          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.376  3.7811 3.4758 3.4687 3.5284 3.6765 2.1397 2.2704 2.2035 2.0615   2.1366 2.2184 4.8728 5.1623 4.7561 4.6829 4.7271 4.8581 5.2601 5.5374   5.3422 5.3443 5.2741 5.1496 2.1897 2.8637 2.7203 2.6685 2.5402 2.645   1.592  1.6688 1.6878 1.6414 1.5991 1.5386 1.9682 2.3345 2.1316 2.1461   1.9358 2.1373 2.9748 3.0607 3.1953 2.8519 2.8877 3.0005 5.2092 5.1972   5.062  5.1547 5.0646 5.3323]]
123                   0.46241         0.5182         0.19057         0.77985          0.77985          0.02921          0.43177          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3891 3.7983 3.4949 3.4762 3.547  3.6846 2.1267 2.2532 2.2142 2.0453   2.1281 2.19   4.8627 5.1348 4.7352 4.6653 4.7394 4.8654 5.2688 5.5442   5.3549 5.327  5.3388 5.2054 2.4652 2.8462 2.8298 2.7107 2.5156 2.6661   1.6045 1.6648 1.589  1.675  1.6023 1.5361 2.0025 2.3253 2.1296 2.1343   1.9259 2.1353 2.9995 3.0663 3.1969 2.89   2.8654 3.0066 5.1977 5.2184   5.0661 5.1175 5.0492 5.3148]]
124                   0.46572         0.51993         0.19188         0.77828          0.77828          0.02946          0.46868          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3807 3.7882 3.4684 3.4853 3.5959 3.6533 2.1848 2.2792 2.2139 2.0698   2.135  2.1852 4.8596 5.1335 4.5837 4.6708 4.7352 4.8726 5.28   5.5314   5.332  5.3477 5.3355 5.2099 2.4761 2.8788 2.6836 2.6261 2.5337 2.6618   1.713  1.6626 1.5911 1.844  1.5931 1.5733 2.0038 2.3323 2.1686 2.1405   1.9044 2.1318 2.9685 3.0709 3.1941 2.8375 2.8675 2.9961 5.1962 5.2114   5.0578 5.1486 5.0517 5.3377]]
125                   0.47182         0.53356         0.19607         0.77537          0.77538          0.02908          0.50152          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4333 3.808  3.4292 3.4461 3.71   3.9023 2.3383 2.6677 2.1967 2.0904   2.2602 2.2991 4.6744 5.0279 4.6343 4.5705 4.6618 4.8201 5.0696 5.4614   5.3004 5.3599 5.1307 4.7736 2.4543 2.4693 2.5313 2.5261 2.4972 2.4935   2.1384 1.7775 1.787  1.7725 1.7555 1.8586 2.0952 2.3394 2.2203 2.1366   1.9952 2.1998 3.0261 3.1219 3.1718 3.0231 2.9645 2.9804 5.2014 4.9661   5.0176 5.0111 4.9819 5.2294]]
126                   0.56594         0.57736         0.2278         0.73056          0.73139          0.0381          0.52973          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3079 3.8437 3.4706 3.4808 3.4481 3.6893 2.1331 2.4492 2.5893 2.1366   2.437  2.2551 4.8597 5.0493 4.5755 4.5949 4.7349 4.6901 5.1145 5.5312   5.1442 5.1153 5.3218 5.137  2.3575 2.7796 2.7247 2.6271 2.525  2.8105   1.7652 1.843  1.6697 2.0121 2.2277 1.6986 2.23   3.3925 2.117  2.1419   1.9592 2.0657 3.2013 3.1168 3.2192 2.9457 2.9649 3.075  5.2077 5.0917   5.0241 5.0605 4.7649 5.1949]]
127                   0.46874         0.55068         0.20807         0.77684          0.77688          0.03114          0.51215          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3905 3.7936 3.494  3.4817 3.5175 3.7028 2.1736 2.3449 2.5824 2.217   2.1163 2.1963 4.8327 4.7753 4.7017 4.6254 4.7154 4.8593 5.2363 5.493   5.1606 5.3022 5.2235 5.1741 2.4193 2.9119 2.7165 2.8017 2.5062 2.3764   1.9797 1.9083 1.7706 2.0473 1.727  1.6837 2.027  2.3597 2.1362 2.2227   1.9438 2.0506 2.9725 3.1677 3.2256 2.8496 2.8582 3.1072 5.1032 5.1578   4.8124 4.9924 5.0663 5.1339]]
128                   0.51369         0.56732         0.20776         0.75544          0.75565          0.03222          0.58938          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3562 3.7567 3.4014 3.3223 3.5112 3.68   2.2123 2.3925 2.4374 2.0865   2.2495 2.5    4.8194 5.0349 4.6097 4.4304 4.6815 4.8357 4.7668 5.5299   4.7195 5.2256 5.3325 5.1111 2.4565 2.6454 2.7213 2.5214 2.3071 2.6233   1.74   1.8108 1.6271 1.9083 1.6826 1.7045 2.043  2.4691 2.1927 2.1645   1.9669 2.2227 3.1123 3.0794 3.324  2.8801 2.8395 3.0379 5.0287 5.1215   5.0056 5.1273 4.9954 5.1687]]
129                   2.84242         1.37158         0.4264         -0.35325          -0.14096          0.15162          1.15637          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6733 2.7366 2.4694 2.8012 2.7218 1.9067 2.5015 2.758  2.6374 2.8475   2.6693 2.3224 2.6799 3.1954 2.6156 3.0234 2.9964 3.1419 2.6326 2.779   1.6849 2.535  2.6024 2.1602 2.8226 3.0237 2.8643 2.2879 2.1093 2.685   2.8031 2.759  3.2142 3.1469 2.8015 2.7452 2.5378 2.5322 2.859  2.7279   2.6869 3.1763 2.3599 3.2806 2.8341 2.9752 2.1999 3.0774 3.0506 2.8592   3.4507 2.548  1.8656 3.232 ]]
130                   2.74396         1.34673         0.43182         -0.30637          -0.11902          0.14503          1.30057          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4918 2.1844 2.4534 2.6598 2.5182 2.2783 2.5173 2.4848 2.4733 2.6768   2.2136 2.1593 3.211  2.7256 2.9729 2.7668 2.4387 2.6251 2.7239 2.7137   2.2138 2.6618 2.4553 2.5689 2.3133 2.9276 1.7053 2.876  2.4664 2.8794   3.228  3.1843 3.0684 3.1937 3.1222 3.1546 2.4741 3.1505 3.0721 2.9786   3.1811 2.8524 3.2655 2.9868 2.9917 3.099  3.005  2.9361 3.1909 3.2079   2.5371 2.657  3.3411 2.5576]]
131                   3.10783         1.39946         0.41765         -0.47961          -0.17536          0.17396          1.11797          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.037  2.3064 2.1669 2.066  2.1845 2.6935 2.6565 2.3    2.5367 1.7346   2.4088 3.0678 2.181  2.092  2.7123 3.1151 2.5061 2.804  1.3186 2.6551   2.6547 2.5267 1.2944 2.2338 2.911  3.04   2.0135 2.8421 2.8996 2.86   2.8322 2.2267 2.7401 3.0981 1.897  3.1047 3.0468 2.758  2.9202 2.8808   2.0409 2.6962 2.6985 2.5059 2.9418 3.0277 1.5689 2.9769 3.4519 3.1056   2.8305 3.5513 2.5772 3.2021]]
132                   3.001         1.41683         0.44672         -0.42875          -0.21383          0.16213          1.29433          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4809 2.2988 2.4635 2.1429 2.2122 2.4437 2.6737 2.7696 2.8453 2.7162   2.5599 2.5636 2.4235 2.9541 2.9062 2.4373 2.1235 2.5619 2.3997 2.5832   2.1093 2.5513 1.8818 2.4246 2.8964 2.8067 2.9429 2.8856 2.891  2.8736   3.1692 2.6478 2.8054 3.3572 3.0099 2.864  3.088  3.0649 2.9286 2.0419   2.4739 3.0343 3.2319 2.4992 3.5668 3.0373 2.989  1.7258 2.9255 3.2728   3.1023 3.1344 3.2447 2.3473]]
133                   2.16352         1.28664         0.50932         -0.03003          -0.0187          0.1273          1.33595          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.7604 3.2028 3.3916 3.0307 2.9605 3.291  3.1257 3.2384 3.0223 3.0674   3.2682 3.2483 3.7099 3.9503 3.841  3.3065 3.2602 3.1938 3.1813 3.18   3.107  3.7493 3.164  3.5251 3.847  3.331  3.5282 3.7453 3.3311 3.2885   3.4642 3.7141 3.5729 3.8096 3.5761 3.5266 3.285  3.7406 3.3984 3.9685   3.6238 3.2735 3.717  4.1733 4.1047 3.3986 3.969  3.3518 4.6614 3.4117   4.9489 3.7868 3.8596 4.8142]]
134                   2.68798         1.42445         0.56319         -0.27972          -0.26895          0.15205          1.47667          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1166 3.058  3.0286 2.9595 3.0232 2.8596 3.3729 3.1282 4.0817 3.1796   3.4232 4.1905 3.8328 3.5624 3.1152 3.4574 3.5322 3.3037 3.2142 2.9183   3.1147 3.6134 3.4138 2.9703 4.0042 3.3476 4.0621 3.2694 3.3468 3.3162   4.6805 4.2403 4.0904 3.6122 3.4899 4.1295 3.7869 3.2394 4.7114 3.5824   3.3349 3.636  3.3787 3.8638 3.4918 3.5887 3.3189 3.5767 3.6427 3.4934   3.6232 3.578  3.8174 4.0646]]
135                   2.76435         1.43993         0.57807         -0.31608          -0.30166          0.15771          1.34195          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3592 3.121  3.5685 3.2751 2.8551 3.459  3.3154 3.8311 3.8907 3.2331   3.3276 3.2915 3.4213 3.9638 2.9923 3.3105 3.1638 3.0303 2.9936 3.4442   3.1302 3.9203 2.9867 3.0132 3.3226 3.315  4.0866 3.3819 3.3527 3.2741   3.4661 4.0338 3.5767 3.6013 4.7523 4.3397 3.753  4.279  3.4494 4.3357   3.3126 3.7048 3.642  3.9068 4.0467 3.4848 3.449  3.5344 3.6076 3.8402   3.9886 4.0622 3.4311 3.8377]]
136                   2.5073         1.35824         0.55384         -0.1937          -0.15984          0.14525          1.30202          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.0615 3.0822 3.0227 2.978  2.9064 3.8453 3.2411 3.3864 4.2804 3.5277   2.8542 3.0608 3.863  3.5965 3.9361 3.7392 3.3933 4.8757 3.1161 3.2963   3.5156 3.3035 3.2317 3.0042 3.3251 4.0209 4.1545 3.3692 3.5141 3.3351   4.553  3.3318 3.5944 3.3599 4.4324 3.3322 4.0345 3.7806 3.8153 3.987   3.102  3.8084 4.862  3.3085 4.5847 3.492  3.4746 3.5086 4.4877 3.7943   3.7643 3.7177 5.1402 3.9644]]
137                   2.43781         1.30749         0.44232         -0.16062          -0.08366          0.13091          1.28392          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4225 2.3985 2.3554 2.367  2.5574 2.7422 2.7386 3.099  2.8399 2.8867   3.1223 2.0685 2.5335 3.0852 3.3641 2.8047 2.651  2.9427 2.5326 3.0149   2.8123 2.9479 2.87   2.893  3.0371 2.8954 3.0419 2.9594 2.9874 3.0673   3.2101 3.4962 3.4548 3.3668 3.144  2.8756 2.5164 2.739  3.5186 2.8671   3.009  2.9449 3.4652 3.1638 3.3776 2.8087 3.1648 3.3631 3.7506 3.5636   3.6212 3.5096 2.892  3.0946]]
138                   2.37284         1.27808         0.42743         -0.12969          -0.03816          0.12594          1.2706          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5785 2.3352 2.6852 2.2357 2.3989 2.4179 2.7513 2.7687 2.6424 2.9255   2.829  2.5837 2.5821 2.4799 2.9034 2.8943 3.0789 3.2073 2.9388 2.9836   2.7611 2.8191 2.6491 2.7288 3.0079 2.9401 3.0418 2.8537 3.0088 2.9956   3.2112 3.2134 3.4217 2.8743 3.4001 3.1255 2.7895 2.9837 2.9645 2.892   2.9272 3.2943 3.171  3.3324 2.6318 3.4135 3.4261 3.0306 3.4933 3.7243   3.0735 2.9491 3.5169 3.1033]]
139                   2.36104         1.27982         0.4263         -0.12407          -0.03082          0.12541          1.20987          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.1911 2.5367 2.581  2.4076 2.2771 2.5435 2.8095 2.8813 2.7487 2.4403   2.8775 2.5334 2.6081 3.1615 2.7425 2.7851 3.0014 2.7073 3.0599 2.8767   2.9209 2.6733 2.7996 2.9471 2.9617 3.0336 3.0935 2.8588 2.9136 3.0161   3.1299 2.7874 3.3355 3.0819 3.4557 3.0833 2.986  2.961  2.5442 3.0371   2.8037 2.7362 3.3486 3.1649 3.1714 3.2242 3.2501 3.0605 3.7949 3.6066   3.0962 3.5284 3.0349 3.5577]]
140                   2.36086         1.26895         0.42132         -0.12398          -0.0357          0.12415          1.28147          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.2385 2.5528 2.6989 2.5802 2.6787 2.8413 2.9522 2.7753 2.6686 3.1364   2.7732 2.9302 2.6815 3.01   2.9119 2.8856 3.0125 2.739  2.7178 3.0334   2.8279 2.9439 2.5768 2.7604 3.0763 3.0833 2.9831 3.0157 3.0139 2.9201   3.3995 3.3378 3.2256 2.6515 2.6632 3.3287 2.78   3.0591 3.0007 2.7967   2.8799 3.263  3.2146 3.119  2.1447 3.0833 3.3906 3.1934 3.653  3.3679   3.4385 3.3021 3.0691 3.0321]]
141                   2.33428         1.33573         0.51051         -0.11133          -0.10797          0.13145          1.26233          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.1965 3.3765 3.267  3.1361 3.2378 3.3286 3.448  3.6429 3.6447 3.3027   3.4947 3.4592 3.421  3.479  3.5385 3.4703 3.3813 4.0846 3.1691 3.5144   3.3349 3.283  3.3036 3.2774 3.5509 3.7359 3.4518 3.4481 2.57   3.7725   3.7856 3.8277 3.5787 3.8876 3.6962 4.0834 3.5454 2.279  3.3218 3.4509   3.2896 3.3063 2.9857 3.7199 3.5705 3.6873 3.6976 4.0179 3.8509 3.7718   3.218  3.3263 3.2338 3.7445]]
142                   2.74239         1.45199         0.64142         -0.30562          -0.05409          0.16556          1.47725          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.6947 3.9762 3.9575 4.0316 4.0658 4.3637 4.2711 4.1961 4.2749 4.4238   3.9743 4.172  4.0918 3.997  4.4971 3.7755 4.3001 4.0743 4.1069 3.9515   3.9526 3.9431 3.8045 3.9786 3.8742 4.2371 4.1707 4.2049 3.949  4.3613   4.1711 4.5015 4.2104 4.1067 4.1289 4.0559 4.1143 4.1753 3.9701 4.1279   4.05   4.0041 3.9746 4.0377 3.8029 4.1998 3.9688 3.9558 4.066  4.234   4.3954 4.1047 4.1598 4.7294]]
143                   2.19156         1.29401         0.47515         -0.04338          -0.04299          0.12063          1.32413          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.1388 3.7159 3.1641 3.2376 3.2336 3.3179 3.4735 3.4888 3.4476 3.4601   3.4231 2.2895 3.2992 4.9911 3.3812 4.5462 3.314  3.3302 3.2029 3.2963   3.2512 3.1818 3.1933 3.2523 3.43   3.4927 3.4614 2.7575 3.4437 3.4494   3.5761 1.7537 3.5587 3.5791 3.5506 3.5357 3.1332 3.363  3.3114 3.3118   3.3569 3.3018 3.419  3.3979 3.4187 3.3536 3.3366 3.3849 3.3623 3.2961   3.2497 3.2365 3.2929 3.3745]]
144                   0.48447         0.53124         0.1948         0.76935          0.76941          0.03094          0.47168          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.3009 3.7848 3.4259 3.2977 3.3772 3.5333 2.3465 2.5993 2.3667 2.1049   2.1856 2.1533 4.7486 5.0212 4.5191 4.6325 4.6466 4.8557 5.1901 5.447   5.2412 5.3739 5.3076 5.2592 2.5156 2.9156 2.7746 2.7539 2.6912 2.7342   1.6765 1.6712 1.5556 1.5108 1.7409 1.5332 1.9748 2.4151 2.0868 2.0469   1.8527 2.1623 2.9906 3.0763 3.2693 2.913  2.7895 2.9968 5.2201 5.0718   5.0794 5.0537 4.9176 5.349 ]]
145                   2.23651         1.32305         0.517         -0.06478          -0.05932          0.12992          1.23598          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1687 3.3436 3.2032 3.1476 3.0944 3.2948 3.404  3.3433 3.5207 3.4252   3.4344 3.4337 3.439  3.609  3.578  3.4635 3.2128 3.6709 3.3714 3.2307   3.1012 3.2189 3.154  3.38   3.4256 3.7318 2.7915 3.6587 3.6049 3.6571   3.7094 3.729  3.5215 3.6908 3.5638 3.6386 3.5587 3.561  3.2927 3.3812   3.2579 3.7018 3.3515 3.7637 3.6984 3.3494 3.9207 3.6872 3.7017 3.7557   3.6464 5.0221 3.5375 3.2966]]
146                   2.64552         1.43617         0.62719         -0.25951          -0.06349          0.15979          1.46762          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.9577 4.     4.0681 3.5768 4.1049 3.7131 4.0414 4.0864 4.2224 3.7134   4.281  3.8919 4.0979 4.0002 3.7387 4.0988 4.18   4.2577 4.1955 3.903   3.8025 3.524  4.2946 4.1263 3.9539 4.1364 4.2472 3.9315 4.5034 4.2189   4.3573 4.3261 3.2906 4.5564 3.835  4.141  4.0463 4.1776 4.0071 4.1592   3.7011 3.7382 4.0303 3.9955 3.9455 3.9025 4.063  4.3812 3.7467 4.1127   4.2026 4.0921 4.1938 3.4465]]
147                   2.08713         1.22102         0.45377         0.00634          0.0064          0.11565          1.27527          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1149 3.7365 3.2482 3.2354 3.2963 3.2865 3.4292 3.4951 3.4363 3.4502   3.4558 3.4727 3.3735 3.481  3.3117 3.2375 3.3624 3.4093 3.2116 3.2339   3.1946 5.3208 3.1695 3.1323 3.4283 3.4742 3.473  3.453  3.4314 3.4493   3.5711 3.6036 3.6128 1.601  1.4386 3.5598 3.2602 3.3207 3.4261 3.4163   3.193  3.3281 3.3397 3.4095 3.4418 3.3544 3.3529 3.3855 3.4024 4.9909   3.2718 3.3651 3.2947 3.3075]]
148                   0.47572         0.5192         0.18788         0.77351          0.77399          0.03001          0.46597          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2061 3.6719 3.5132 3.3658 3.4004 3.4611 2.3178 2.4287 2.1241 2.2738   2.3191 2.1188 4.6349 5.1024 4.6807 4.5332 4.6036 4.8477 5.1708 5.4491   5.3845 5.4083 5.2433 5.1166 2.5724 2.7986 2.9715 2.7331 2.7938 2.629   1.6342 1.624  1.4681 1.4998 1.6623 1.3685 1.861  2.3733 2.1888 2.0601   1.8289 2.0218 2.9006 3.1375 3.289  2.9073 3.0625 3.0416 5.185  5.0305   4.8286 4.9705 4.9314 5.2172]]
149                   1.03963         0.71727         0.2778         0.50504          0.51235          0.06074          0.45067          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.432  3.8851 3.5132 3.3669 3.499  3.6169 3.3115 2.828  3.3016 3.4258   2.0781 2.1834 4.8544 5.2575 4.9188 3.3532 3.3633 4.884  5.2543 5.5537   5.3467 5.338  5.3419 2.724  3.3905 2.878  3.3798 2.8135 3.421  2.6448   3.4962 1.5551 1.5198 1.6882 1.6339 3.4031 2.0155 3.434  2.1357 2.1505   1.9093 2.1298 2.9881 3.0333 3.1208 2.838  2.8249 2.9781 5.1784 5.228   5.0925 5.2511 5.0569 5.5381]]
150                   2.57365         1.35377         0.51305         -0.22529          -0.22526          0.14487          1.24047          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.0716 2.6686 2.408  2.7646 4.3306 2.6981 2.9067 3.4511 3.5384 4.7131   3.6601 3.8386 2.8532 4.2025 2.5731 3.9636 4.0878 3.7846 2.4743 3.9003   2.5854 4.1683 2.4537 3.2689 3.739  3.8282 2.5284 2.2409 2.6134 4.4166   2.5886 3.7466 2.3529 4.5095 4.7225 3.793  2.6714 2.9225 3.7207 2.5362   3.7666 2.5855 2.7688 2.8581 4.4082 3.9712 2.6773 3.7754 4.1971 3.2143   4.4941 4.1803 4.3943 2.4779]]
151                   1.17243         0.87727         0.36178         0.44182          0.4436          0.07926          0.71577          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.7367 3.2378 3.4366 2.8354 3.6096 3.0724 3.0111 3.0724 3.1549 3.2212   3.1588 3.4666 3.4793 3.438  3.3549 4.3446 4.009  4.7507 5.0264 4.8172   5.1773 3.2533 4.8191 4.6843 2.0997 2.8591 2.761  3.444  3.0817 2.4273   3.5728 3.5306 3.502  2.0871 3.4395 1.5626 2.4816 3.4644 1.8177 2.5682   1.5342 2.1773 3.52   2.9108 3.289  3.1123 3.1655 2.9673 4.433  4.9453   5.1273 4.1882 5.2585 5.481 ]]
152                   1.61446         0.9907         0.34766         0.23137          0.25507          0.0879          0.77282          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3329 3.1075 3.6008 3.2443 3.0086 3.1536 3.1048 3.629  2.028  2.0189   1.9141 1.9173 3.1051 4.4896 3.6593 4.4741 2.9668 3.0185 2.9167 5.3666   2.8719 4.9955 5.4233 2.8897 3.1299 2.6697 3.721  2.2339 3.1711 3.0778   3.1598 3.2095 4.0003 1.462  1.3381 1.36   1.8833 2.503  3.0034 3.0082   2.8338 2.2456 3.0107 2.9815 3.3917 3.1989 2.9294 3.0329 3.01   5.2792   4.7296 4.8149 2.8951 3.0985]]
153                   0.62615         0.6111         0.24568         0.70189          0.70708          0.04295          0.49438          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5284 3.8096 3.4793 3.5492 3.5143 3.6392 2.1748 2.1698 2.0657 2.0073   2.0043 2.1517 4.9614 5.1168 4.8643 4.631  4.8477 5.0283 5.2571 5.5259   5.3342 5.3384 5.3242 5.1472 2.5869 2.8951 2.7551 3.4679 2.6132 2.6111   1.6107 3.4584 1.613  1.6845 1.471  1.5633 2.0061 2.4055 3.4321 2.1692   1.9052 3.4141 2.9624 3.046  3.3545 2.8618 2.9093 3.006  5.2165 5.2091   5.043  5.102  5.1289 5.3282]]
154                   2.91782         1.52287         0.57427         -0.38914          -0.38202          0.16855          1.63122          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.9612 3.4802 3.9444 2.4753 4.2013 4.3133 3.9491 3.6955 2.7023 4.3496   3.4977 4.2722 3.02   4.0332 1.9429 4.5035 3.5094 2.9635 4.9501 2.5919   3.8531 3.5299 2.8856 3.9091 4.1286 3.166  2.3928 4.6397 2.7335 4.0761   3.3289 3.7509 3.9985 3.9884 4.1371 4.0107 2.313  2.9317 4.0369 2.6396   3.7572 3.9127 3.9553 3.0645 3.7745 3.8369 2.3982 4.399  2.3164 1.9566   3.5227 2.8446 4.4786 2.2484]]
155                   1.21396         0.93193         0.33341         0.42204          0.42507          0.07011          0.94912          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.7565 3.2713 2.9413 2.8893 2.8927 3.4961 3.5312 3.2602 3.8184 2.6388   3.2392 3.3326 3.7064 3.0941 3.6284 3.3024 3.2599 3.3327 5.0391 4.6938   3.2723 5.2037 4.7968 4.77   2.9979 2.8911 3.3172 2.9428 2.3035 2.8683   2.6347 1.8362 1.9341 2.0189 2.3387 3.4764 2.4406 2.1549 3.2556 1.9551   1.6109 3.3861 3.3198 3.0345 3.4589 3.6257 3.1124 3.0313 3.3578 3.4319   4.2433 4.8027 5.2795 5.1341]]
156                   1.6143         1.02248         0.35626         0.23145          0.25402          0.08773          0.83673          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9747 3.532  3.2171 3.0228 2.9565 3.5957 3.6598 3.1588 2.8746 3.1609   2.0291 3.1347 4.6782 3.1443 3.1611 4.3361 4.0548 2.9903 5.0786 2.9417   2.99   3.5096 2.8729 2.897  3.1188 3.8047 2.55   3.1487 3.1423 3.7189   1.4145 1.5949 3.1217 3.1979 1.4889 3.2492 1.9078 3.0108 2.0531 2.0962   2.8975 2.9256 3.0485 3.0554 3.1064 2.925  2.9957 3.119  2.9105 3.1962   3.0961 5.0319 4.8787 5.1322]]
157                   2.14399         1.26853         0.48481         -0.02073          -0.01892          0.12182          1.3255          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.173  3.4389 3.2192 3.3269 3.2202 3.0845 3.35   3.3371 3.4937 3.4156   2.2989 3.4155 3.4674 3.3819 3.4919 3.5187 3.6567 3.2704 3.2628 3.279   3.3434 3.2445 3.2081 3.3167 3.6556 3.6085 3.4353 3.4262 3.6117 3.6126   3.8075 3.7421 3.7476 3.5982 1.4879 3.7773 3.3789 3.2465 3.3797 3.6032   3.5569 3.2993 3.3788 3.3247 3.7559 3.2964 3.6795 3.7031 3.6483 3.8091   3.6401 3.6473 3.6018 5.3277]]
158                   2.80416         1.46908         0.6478         -0.33503          -0.08714          0.16817          1.44465          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.8152 3.9971 4.0898 3.7417 3.9534 4.0354 4.1083 3.9708 4.1161 4.099   4.4696 4.016  4.2378 4.0506 3.9409 4.0413 3.919  4.096  4.0378 3.8192   4.1155 4.0236 4.0103 3.9532 4.1496 4.0901 4.2248 4.1433 4.162  3.8301   4.4145 4.5172 4.2271 4.1087 4.304  4.1402 4.2913 4.0796 4.2588 3.8219   3.8391 4.4829 3.9896 4.2994 4.2135 3.9411 4.1317 4.2481 4.1697 4.1104   4.2097 4.2858 4.0527 4.2381]]
159                   2.04182         1.21065         0.45374         0.02791          0.02831          0.11441          1.23237          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1678 3.8377 3.1555 3.2537 3.2682 3.3114 3.5002 3.4907 2.3361 2.1961   3.468  3.4677 3.3455 3.4351 3.2911 4.476  3.8473 4.7784 3.2201 5.6074   3.2317 3.245  3.2363 3.1743 3.4278 3.4616 2.9736 3.4486 3.4328 3.4499   1.5906 3.564  3.5673 3.5903 3.5535 1.5855 3.2064 3.4233 3.2794 3.2971   3.2248 3.3595 3.4193 3.3768 3.2832 3.3761 3.3669 3.4232 3.3449 3.3763   3.3446 3.298  3.3008 3.4053]]
160                   0.56063         0.54861         0.1939         0.73309          0.73397          0.03268          0.36375          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4034 3.7818 3.3854 3.4292 3.6012 3.5056 2.2746 2.5172 2.2625 2.1686   2.1545 2.1908 4.8698 5.1186 4.6763 4.5951 4.6646 4.8077 5.3093 5.4362   5.4512 5.3238 5.2695 5.2489 2.3801 2.7578 2.9079 2.6614 2.7401 2.6132   1.4981 1.5819 1.7114 1.606  1.5441 1.6861 1.927  2.357  2.0626 2.0854   1.8121 2.0789 3.0362 2.9713 3.1226 2.9317 2.946  3.1298 5.0426 5.2899   4.8691 4.9632 3.2823 5.3012]]
161                   2.10227         1.26044         0.50431         -0.00087          0.01333          0.12442          1.2333          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2349 3.215  3.3077 3.3461 3.5117 3.1685 3.3942 3.5202 3.4883 3.404   3.4384 3.421  3.592  3.6042 3.4796 3.7039 3.4408 3.1863 3.4887 3.3854   3.3355 3.5257 3.388  3.3662 3.6663 3.4463 3.6002 3.6872 3.5462 3.5749   3.542  3.8697 3.7174 3.7602 3.6281 3.7953 3.3962 3.3799 3.6404 3.431   3.4867 3.1932 3.7122 3.159  3.6681 3.6953 3.676  3.7696 3.808  3.7266   3.6599 5.0498 3.8489 3.9129]]
162                   2.62717         1.42787         0.6202         -0.25077          -0.05508          0.15855          1.398          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[4.0916 3.9716 4.374  4.0221 3.8011 4.0212 3.761  3.96   4.3651 3.991   3.7878 4.0736 4.0242 4.2326 4.1231 4.1404 4.0996 4.1833 4.0288 3.7921   4.0206 3.8915 4.0867 3.6918 4.0094 4.0492 4.0371 4.035  4.1339 4.0235   3.9132 4.2845 4.2325 4.0055 4.0015 4.3756 4.0168 4.0403 3.8139 4.2227   3.8083 4.0167 4.1233 3.9069 4.095  3.9176 4.0569 4.0489 3.8937 3.4166   4.0366 3.8931 4.0629 4.2811]]
163                   2.22291         1.30066         0.49861         -0.0583          -0.058          0.12753          1.31393          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2067 3.3721 3.2747 3.2718 3.1998 3.2883 3.4274 3.4802 3.4674 3.4393   3.4652 3.4667 3.3273 3.4944 3.304  4.5422 3.3125 3.3434 3.1882 3.2842   3.2071 3.2151 3.1664 3.1969 3.4408 3.4724 3.4758 3.4394 3.4265 3.4911   3.5851 3.5099 3.5537 3.5321 3.5856 3.4808 3.2873 3.3799 3.3046 3.2889   3.1262 3.3424 3.3302 3.4347 3.4053 3.3497 2.9133 3.341  5.1053 3.3389   3.2707 3.2721 3.2125 3.3917]]
164                   0.48128         0.52059         0.19302         0.77087          0.77088          0.03051          0.39357          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3885 3.7071 3.5281 3.5053 3.5237 3.6712 2.279  2.3197 2.2924 2.2939   2.2006 2.3086 4.712  5.136  4.7046 4.4726 4.6738 4.7248 5.3186 5.4548   5.2756 5.2914 5.4165 5.1033 2.3864 2.7555 2.894  2.6578 2.5303 2.7738   1.414  1.4924 1.7095 1.7477 1.634  1.5296 1.8984 2.4869 1.9848 2.1587   1.9842 2.1641 3.0423 3.0012 3.2981 2.7861 2.9233 3.0829 5.033  5.1713   5.0559 5.1771 4.9726 5.3841]]
165                   0.80811         0.68272         0.25299         0.61527          0.61563          0.04848          0.52502          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4902 3.7934 3.3909 3.4678 3.5125 3.6766 3.4687 2.1735 2.185  2.0791   2.1398 2.0761 4.9864 5.1322 4.9052 4.721  4.8606 4.8803 5.249  3.3422   3.1697 5.3907 5.2764 5.1699 2.49   3.3987 2.7678 2.6331 2.8155 2.6518   3.5078 1.5128 1.7092 1.6932 1.5754 3.4691 2.0099 2.3394 3.3216 2.0941   1.9192 2.1562 3.0018 3.0952 3.2126 2.8424 2.8652 3.3975 5.2021 5.242   4.9762 5.1427 3.2891 5.3011]]
166                   2.8988         1.44359         0.56259         -0.38009          -0.35997          0.16309          1.35357          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4558 4.1199 4.4895 3.6258 3.2692 3.0475 2.9184 3.9399 4.0303 3.5447   3.6819 4.0877 3.8444 3.394  4.0703 2.4409 3.6265 3.9498 3.6367 2.6819   2.5852 2.9376 2.8953 2.3922 3.5965 3.6437 4.1618 2.3729 2.6114 4.1608   4.2059 4.2813 2.8126 2.6919 4.2567 4.1044 3.9016 3.2445 2.526  4.0205   2.7201 4.3712 4.2862 3.8832 3.5056 4.6629 3.6992 4.1863 4.559  4.4271   3.8282 2.4407 4.1043 3.8345]]
167                   1.40699         0.96059         0.35379         0.33014          0.33249          0.08009          0.98365          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.889  3.8018 3.8889 2.9156 3.556  3.5704 2.8953 3.4626 3.0617 2.3709   2.7765 3.3402 3.1179 3.3745 3.5083 3.5262 3.4401 3.5981 3.3364 5.4127   4.1771 5.5614 3.2316 4.3057 2.5363 2.8405 3.1479 3.3931 3.4326 2.7883   2.4869 2.9883 1.453  2.166  3.4725 2.1139 2.1621 3.2919 2.1149 2.9658   1.9985 2.0471 3.0471 2.7711 3.7298 2.8839 3.0403 3.8105 5.0292 5.0736   4.3632 4.2423 3.2933 5.0718]]
168                   1.7056         1.03892         0.36516         0.18798          0.20459          0.09209          0.90038          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.9345 3.7268 3.1051 3.0693 3.5791 2.8148 1.82   3.185  2.605  3.1614   3.2392 3.1727 3.0919 4.8669 2.9943 2.9926 3.7587 3.0709 2.915  3.5827   5.2518 4.9994 2.8969 2.9642 3.1153 3.788  2.4049 2.6026 3.0074 3.0972   1.3901 1.3204 3.2927 3.2694 3.2634 1.4204 3.4368 2.3498 2.9963 3.6224   2.9385 2.9323 3.115  2.9931 3.1197 3.0318 2.8258 2.8243 3.6888 5.0364   4.9161 4.9101 2.9903 3.0832]]
169                   0.72676         0.65494         0.26838         0.654          0.65606          0.05023          0.51678          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3625 3.8543 3.4505 3.4799 3.3361 3.4511 1.9998 2.2503 3.405  1.9474   2.0062 2.1012 4.911  5.2193 4.7372 4.7176 4.8945 4.9076 5.2515 2.7401   5.3043 5.3262 5.349  5.2144 2.4821 2.8726 2.801  2.6596 3.4076 2.7861   1.4103 1.6394 3.5078 1.6247 3.7624 1.5328 1.9898 2.365  2.1378 3.4838   1.9336 3.3895 2.9917 3.0318 3.1671 2.8565 2.9339 2.9985 5.2171 5.1537   5.0903 5.217  5.1532 3.412 ]]
170                   0.94174         0.771         0.2735         0.55165          0.55627          0.05244          0.611          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8394 3.6293 3.3106 3.1757 3.4902 3.0389 3.3414 3.5352 2.2632 2.3027   3.5163 2.4972 3.9919 3.1666 3.3102 3.1944 4.1615 3.3619 5.2055 5.2196   5.1863 3.3099 3.3275 5.0469 2.3637 2.5182 3.2565 2.4568 2.9998 2.2559   1.5395 2.3005 1.7473 1.8799 2.242  1.6728 3.2603 2.2254 2.6228 3.4166   2.6334 2.1084 3.1107 3.0754 3.3902 2.7959 3.0006 3.5992 5.0474 4.9167   4.1193 4.9827 4.7373 4.6477]]
171                   2.19225         1.26337         0.47666         -0.04371          -0.04253          0.12542          1.05975          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9855 3.1567 3.1504 3.2513 3.0488 2.834  3.1759 3.8123 3.1484 2.7383   3.2513 2.4501 3.0022 4.5088 4.2974 2.9942 4.6281 3.0918 2.8768 5.3671   2.8951 2.9139 3.5247 4.9474 3.034  3.143  3.7787 3.0977 2.4561 2.3972   3.206  3.9296 3.785  3.273  3.7457 3.2483 2.836  2.9912 3.0625 3.057   2.196  3.6528 2.8276 3.676  3.3499 3.6171 2.618  3.6577 3.6559 4.9109   2.9358 2.9874 3.0165 3.7827]]
172                   2.34186         1.35479         0.53579         -0.11494          -0.10504          0.13658          1.4437          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2406 3.0554 3.2345 3.2384 3.0381 3.2305 3.4898 3.4873 3.494  3.4444   3.1692 3.702  3.4728 3.6617 3.3964 3.3315 3.6577 3.4772 3.1979 3.3647   3.3379 3.517  3.2217 3.318  3.5777 3.7168 3.6698 3.594  2.5156 3.436   3.7685 3.8468 3.9135 3.7533 3.622  3.6879 3.7492 3.4558 3.5558 3.6907   3.4142 3.3934 3.5783 3.7759 3.8183 3.5822 3.773  3.711  5.1463 3.3213   3.9491 3.36   3.8915 3.4042]]
173                   2.70023         1.43728         0.63364         -0.28555          -0.06633          0.16308          1.27813          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.7983 3.7029 3.8611 4.0591 3.8996 3.8771 4.2025 4.13   3.8658 3.8808   4.1437 4.16   3.9566 4.1453 4.0617 4.139  3.9725 3.9864 4.0026 3.8609   3.9153 4.1588 4.0487 4.104  4.145  4.2481 3.9912 3.8332 4.072  3.919   4.1036 3.9799 4.09   4.2917 4.5101 4.5828 3.6664 4.2132 4.4665 4.039   4.1994 4.1656 4.0888 3.9018 3.9532 4.1029 3.9318 4.2328 3.9788 4.2463   4.0237 4.1824 3.9364 4.2816]]
174                   1.99866         1.19181         0.46539         0.04846          0.0502          0.11623          1.2357          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1512 3.2964 3.1899 3.2937 3.2871 3.2797 2.2043 3.4806 2.3841 3.4958   2.1776 3.5004 3.3774 3.4322 4.4475 3.3464 3.8653 3.3328 3.2043 5.4541   5.3118 3.1888 3.1971 3.1896 3.4524 3.4699 3.4402 3.4381 3.4546 3.4704   3.5289 3.5926 3.6006 3.5482 3.5939 3.5708 3.2131 3.4344 3.3465 3.3041   3.175  3.3166 3.3563 3.3833 3.5056 3.3452 3.3551 3.411  4.3091 3.3431   3.3208 3.3635 3.8681 3.3308]]
175                   0.46451         0.51612         0.18911         0.77885          0.77888          0.02888          0.49818          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3157 3.7401 3.4022 3.3665 3.523  3.5128 2.1383 2.4275 2.2295 2.3215   2.4115 2.2248 4.613  5.0936 4.6787 4.551  4.698  4.9065 5.1831 5.6225   5.2947 5.2537 5.383  5.2713 2.7845 2.9409 3.103  2.8646 2.7896 2.7774   1.7388 1.4349 1.5816 1.5607 1.4667 1.4819 1.9137 2.2518 2.0308 1.984   2.0007 2.1279 3.0496 3.2098 3.3403 2.8267 2.9615 2.9014 5.0589 5.1163   5.1086 5.1208 5.0813 5.3269]]
176                   2.40165         1.36356         0.53077         -0.1434          -0.1408          0.13776          1.3483          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1226 3.3265 3.4549 3.1648 3.2926 3.293  3.421  3.4584 3.4698 3.5063   2.2223 3.4908 3.3453 3.6529 3.2943 3.56   3.2832 3.687  3.2956 3.3084   3.1737 3.5243 3.2675 3.2833 3.4277 3.4569 3.655  3.4592 2.5489 3.6601   3.8165 3.6859 3.5707 4.057  3.7596 3.6948 3.2891 3.6108 3.7957 3.2824   3.726  3.3298 3.53   3.7178 3.6765 3.7087 3.7524 3.6231 3.6332 3.3428   3.7214 3.2669 3.2194 3.7376]]
177                   2.84641         1.47472         0.64484         -0.35515          -0.12757          0.16908          1.44748          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.8584 3.6058 3.9809 3.9391 3.6715 3.894  4.0504 4.1686 4.4057 4.0815   4.3508 3.986  4.1266 4.0988 4.2746 3.6022 3.8867 4.1386 3.7228 4.1889   3.852  3.8566 3.909  3.8422 4.1849 4.2766 4.1083 4.0438 4.1258 4.0212   3.9784 4.4226 4.498  3.9098 4.1319 4.057  4.115  4.2064 4.0753 4.3729   4.2195 4.3703 3.9108 4.3203 3.9749 4.1239 4.2411 3.9967 4.111  3.8666   4.1288 4.18   4.0518 4.4863]]
178                   2.20908         1.2629         0.48115         -0.05172          -0.05105          0.12541          1.19597          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.193  3.3289 3.1817 3.1753 3.2703 3.3665 3.4787 3.5233 3.496  3.4484   3.4576 2.2387 4.7223 3.401  4.5737 3.1235 3.3272 3.4201 3.2223 3.2709   3.1777 3.2136 3.1942 3.2156 3.4209 3.4556 3.4905 3.4347 3.4487 3.4432   3.5718 3.6353 3.5828 3.6051 3.5152 1.4156 3.3039 3.4884 3.2914 3.3117   3.1681 3.333  3.4103 3.3463 3.42   3.3417 3.3624 3.034  3.2233 3.3165   3.2788 3.3387 3.2634 3.3676]]
179                   0.49821         0.54885         0.20164         0.76281          0.76281          0.03148          0.52307          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4163 3.7783 3.4132 3.4198 3.3646 3.67   2.2993 2.3466 2.4294 1.9813   2.4256 2.3607 4.8732 5.1023 4.6365 4.5605 4.6847 4.5847 5.1541 5.5828   5.2985 5.2474 5.4178 5.2653 2.4831 3.0052 2.7726 2.8286 2.5544 2.5828   1.579  1.6221 1.6151 1.6365 1.5712 1.3843 1.9766 2.3598 2.221  2.0807   1.9775 2.1098 3.0771 3.0091 3.3404 2.8011 2.9879 2.9358 5.2154 5.2162   5.1331 5.1726 4.8087 5.3793]]
180                   0.78266         0.6289         0.24982         0.62738          0.62739          0.05049          0.43392          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4133 3.7439 3.3262 3.479  3.454  3.3916 2.0325 2.2796 2.059  1.9414   1.9839 2.2254 4.9287 3.3284 3.3953 4.8159 4.8571 4.8743 5.3185 5.5323   5.288  5.3442 5.3371 3.3043 2.4667 2.8361 2.7963 2.668  2.542  3.4547   1.6317 3.5188 1.5791 1.5911 1.5956 3.4619 1.9732 3.3554 2.16   2.1379   1.9685 2.1902 2.9904 3.0509 3.1796 2.8224 2.7926 2.9515 5.2306 5.221   5.08   5.1493 5.1694 5.3758]]
181                   3.01494         1.45491         0.58418         -0.43538          -0.41648          0.16996          1.43675          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2736 3.8729 3.7929 3.7916 3.8352 2.6773 2.5211 4.1149 2.7006 5.5585   3.8415 3.9839 4.0275 2.7697 3.7573 2.5851 2.8723 2.6012 3.1258 2.5992   2.583  3.968  4.2552 4.4629 2.8125 4.3548 3.6031 2.779  4.2813 3.251   4.2979 4.2051 4.4124 4.3298 2.8069 3.2054 4.3308 3.6064 4.2085 2.389   4.0162 4.291  3.0123 3.5904 4.3173 3.6426 2.4978 3.1763 3.7798 4.1934   2.6409 3.6036 3.7839 4.4352]]
182                   1.24104         0.93235         0.33905         0.40915          0.41031          0.07077          0.9769          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8347 3.5334 2.9162 3.0317 2.9283 3.1512 3.147  3.2625 3.4545 3.1699   3.113  3.1949 3.5055 3.9456 3.3467 3.3967 3.8422 3.5012 4.5702 5.4146   5.1597 5.3342 5.0432 3.2948 3.4057 3.4652 3.0519 2.9679 2.2176 2.6403   3.2863 2.1126 2.0946 2.3224 2.7514 2.3857 1.963  1.9855 2.4308 3.5456   1.9469 2.4465 2.9837 3.1727 3.6174 3.9911 3.4043 3.1584 3.7232 3.5358   4.9132 5.2597 3.7434 3.3854]]
183                   1.56144         0.98519         0.37901         0.25661          0.25977          0.09225          0.956          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.0478 3.6743 3.0524 3.5254 3.0063 2.9926 1.7159 3.1767 2.3753 2.2047   3.1812 3.1203 3.6303 3.1297 3.056  4.094  4.1102 3.0157 2.8638 2.8738   2.8525 3.6167 5.5811 2.9385 3.0888 3.1343 3.2689 2.5471 3.1722 3.1443   3.2332 3.9552 3.2243 3.2419 1.5225 3.1964 2.1752 3.046  2.0451 3.0515   2.9424 2.9644 2.9989 3.0437 3.019  2.9876 3.0653 3.0289 5.3633 4.8876   4.3723 5.2494 5.133  5.333 ]]
184                   0.57582         0.55921         0.23111         0.72586          0.73832          0.04009          0.41963          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5248 3.907  3.5859 3.5369 3.6356 3.4159 2.1722 2.2368 2.0605 3.4793   2.1284 2.127  4.8647 5.1218 4.838  4.6997 4.807  4.911  5.2433 5.5361   5.344  5.3927 5.33   5.2009 3.3835 2.7982 2.8105 2.7021 2.4337 2.6785   1.5662 1.698  3.4398 3.4698 1.6118 1.4829 3.3106 2.4338 2.3148 2.0958   1.9401 2.0942 3.3916 3.3715 3.2027 2.7869 3.4179 2.9504 5.1811 5.099   5.085  5.1623 5.0792 5.3113]]
185                   2.29067         1.31176         0.50124         -0.09057          -0.07638          0.12963          1.27205          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.2617 3.8431 3.7507 3.9559 3.9171 3.899  2.6953 4.0822 2.7964 2.9528   3.4452 4.2501 3.9304 3.4376 4.1283 3.7519 3.4407 2.1736 3.4002 2.7424   4.3625 4.2207 3.4816 3.6825 4.4726 4.2355 3.6718 4.669  4.2052 4.3256   2.7377 3.0954 3.1947 2.6451 2.899  3.5714 2.3513 3.5137 2.5078 3.6201   4.6815 2.8816 2.7199 4.0369 4.2356 3.8206 2.7149 4.0714 4.3306 2.4876   4.3526 2.9528 3.1925 3.1906]]
186                   1.15355         0.86678         0.31946         0.45081          0.45084          0.06588          0.69205          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.61   2.9881 3.0702 3.453  3.7483 3.3605 3.9208 3.2264 3.4489 2.4517   3.525  3.2364 3.5836 3.6479 3.7142 3.054  3.9442 3.4696 4.4319 5.4616   4.9968 5.1493 4.887  3.255  3.3838 2.5656 2.7769 2.4489 2.9099 2.852   3.495  2.4482 3.5454 1.786  2.5061 2.3292 2.1339 2.2706 1.8606 1.8925   1.7194 2.3392 3.6404 2.9905 3.3814 3.0059 3.2049 3.438  4.5196 5.1722   4.9219 4.9915 3.4185 5.5206]]
187                   1.56385         0.95854         0.31498         0.25547          0.31739          0.08092          0.77005          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5557 3.0958 3.1851 3.5789 2.7552 2.9497 1.994  3.1493 3.1109 3.0736   3.2144 2.0037 3.094  3.0459 4.8712 2.9589 2.8708 3.6562 3.4828 2.9416   5.132  3.0289 2.9734 2.9086 2.4359 3.2079 3.1198 2.5876 3.0315 3.1912   1.3899 3.2244 1.7388 2.09   1.3069 1.3782 2.2638 2.4186 2.1446 1.9948   1.9882 3.0379 3.115  3.0877 3.2065 2.9948 3.0663 3.0784 4.768  5.3849   3.0134 2.8978 4.282  5.1163]]
188                   0.46209         0.51606         0.19         0.78          0.78          0.02919          0.43338          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4005 3.7999 3.4668 3.4663 3.533  3.667  2.1336 2.2665 2.201  2.067   2.1333 2.2009 4.8669 5.1333 4.7333 4.6667 4.7333 4.8661 5.2666 5.5333   5.3331 5.334  5.3344 5.2001 2.4681 2.867  2.799  2.6671 2.5336 2.6669   1.6003 1.667  1.6    1.6668 1.6004 1.5333 2.     2.3333 2.1334 2.1333   1.9336 2.1334 2.9999 3.0666 3.2001 2.8671 2.8669 2.9997 5.1999 5.1999   5.0665 5.1333 5.0669 5.3333]]
189                   0.4622         0.51608         0.19001         0.77995          0.77995          0.02919          0.43322          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4002 3.8    3.4666 3.4662 3.5331 3.6664 2.1337 2.2661 2.1999 2.067   2.1334 2.2003 4.8667 5.1331 4.7332 4.6664 4.7332 4.8665 5.2668 5.5333   5.333  5.3335 5.3334 5.1998 2.4666 2.8669 2.7999 2.6667 2.5335 2.666   1.6001 1.6667 1.599  1.6672 1.5998 1.5335 2.0001 2.3335 2.1332 2.1333   1.9335 2.1333 3.0003 3.0666 3.1998 2.8666 2.8668 3.     5.1997 5.1999   5.0668 5.1333 5.0667 5.3335]]
190                   0.46223         0.51608         0.19         0.77994          0.77994          0.0292          0.43357          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.7997 3.4669 3.4667 3.5336 3.6663 2.1336 2.267  2.2004 2.067   2.1338 2.2007 4.867  5.1331 4.733  4.6665 4.7332 4.8665 5.2667 5.5334   5.3333 5.3331 5.3336 5.2001 2.466  2.8668 2.7995 2.6666 2.5334 2.667   1.6001 1.6667 1.6003 1.6667 1.5999 1.5332 2.0001 2.3333 2.1332 2.1334   1.9334 2.1334 3.     3.067  3.2    2.8665 2.8669 3.0001 5.2    5.2001   5.0665 5.1335 5.0667 5.3335]]
191                   0.46222         0.5161         0.19001         0.77994          0.77994          0.0292          0.43327          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.7999 3.4666 3.4665 3.5334 3.6663 2.133  2.2672 2.2003 2.0667   2.1335 2.2004 4.8663 5.1331 4.7332 4.6663 4.733  4.8665 5.2665 5.5333   5.3335 5.3333 5.3335 5.2    2.4668 2.8666 2.7996 2.6663 2.5334 2.667   1.6001 1.6665 1.5999 1.6677 1.5997 1.5337 2.0001 2.3331 2.1328 2.1331   1.9333 2.1332 3.0002 3.0669 3.2001 2.8664 2.8666 3.0001 5.2004 5.2002   5.0667 5.1332 5.0666 5.3331]]
192                   0.46224         0.51611         0.19001         0.77993          0.77993          0.0292          0.43313          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4665 3.4667 3.5332 3.6668 2.1337 2.2667 2.2003 2.0666   2.1332 2.2003 4.8669 5.1329 4.733  4.6664 4.7329 4.8665 5.2666 5.5334   5.3333 5.3331 5.3334 5.2001 2.4661 2.8666 2.7999 2.6667 2.5339 2.6662   1.6    1.667  1.5999 1.667  1.6009 1.5338 2.     2.3334 2.1335 2.1333   1.9334 2.1336 3.0004 3.0664 3.2001 2.8667 2.8666 2.9996 5.2005 5.1999   5.0666 5.1332 5.0669 5.3333]]
193                   0.46219         0.51604         0.19         0.77996          0.77996          0.0292          0.43357          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7998 3.467  3.4666 3.5334 3.6664 2.1335 2.2671 2.2002 2.067   2.1331 2.2001 4.8664 5.1332 4.7331 4.6669 4.7332 4.8666 5.2668 5.5332   5.3331 5.3332 5.3331 5.2    2.4665 2.8667 2.7997 2.6667 2.5335 2.6662   1.5997 1.6673 1.601  1.667  1.6002 1.5332 1.9999 2.3332 2.1332 2.1332   1.9333 2.1333 3.     3.067  3.2002 2.8666 2.8665 3.     5.1998 5.1998   5.0666 5.1333 5.0671 5.3331]]
194                   0.46223         0.51608         0.19         0.77994          0.77994          0.02919          0.43288          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7997 3.4664 3.4661 3.5331 3.6667 2.134  2.2667 2.2001 2.0671   2.133  2.2003 4.8665 5.1333 4.7328 4.6663 4.7331 4.8665 5.2665 5.5333   5.3332 5.3333 5.3333 5.2001 2.4669 2.8664 2.8001 2.6667 2.533  2.6664   1.6002 1.6672 1.5992 1.6661 1.5999 1.5344 2.0003 2.3334 2.1333 2.1335   1.9329 2.1336 3.     3.0664 3.2    2.8667 2.8662 2.9999 5.2001 5.1995   5.0667 5.1334 5.0669 5.3333]]
195                   0.46222         0.51607         0.18999         0.77994          0.77994          0.02919          0.43302          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.7998 3.4665 3.4666 3.5333 3.6667 2.1336 2.267  2.2002 2.0671   2.1333 2.2003 4.8665 5.1333 4.733  4.6667 4.7331 4.8661 5.2667 5.5335   5.3335 5.3334 5.3333 5.2    2.4667 2.867  2.8    2.6667 2.5335 2.6666   1.6004 1.6669 1.5999 1.6668 1.5998 1.534  2.0001 2.3327 2.1332 2.1333   1.9332 2.1339 3.0001 3.0667 3.1999 2.8667 2.8663 3.0001 5.2    5.1997   5.0666 5.1327 5.0667 5.3334]]
196                   0.46224         0.51605         0.18998         0.77993          0.77993          0.02919          0.43348          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.7998 3.4665 3.4662 3.5331 3.6665 2.1338 2.2667 2.2001 2.0671   2.1338 2.2003 4.8662 5.1334 4.733  4.6666 4.7323 4.8665 5.2666 5.5332   5.3337 5.3334 5.3333 5.1998 2.4666 2.8671 2.8    2.6664 2.5335 2.6666   1.5999 1.6666 1.5998 1.6663 1.6003 1.5331 1.9999 2.3333 2.1332 2.1331   1.9337 2.1329 3.     3.0666 3.2001 2.8669 2.8667 2.9999 5.1994 5.2001   5.0666 5.1333 5.0664 5.333 ]]
197                   0.46225         0.51608         0.19         0.77993          0.77993          0.0292          0.43328          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4666 3.4668 3.533  3.6668 2.1337 2.2668 2.2    2.0662   2.1337 2.2009 4.8665 5.1332 4.7331 4.6665 4.7333 4.8663 5.2668 5.5334   5.3334 5.3332 5.3332 5.1999 2.4664 2.867  2.8002 2.6672 2.5331 2.6667   1.6002 1.6669 1.6005 1.667  1.6001 1.5333 1.9999 2.3328 2.1329 2.1333   1.9332 2.1335 3.0001 3.0665 3.2003 2.8666 2.867  3.0002 5.2001 5.1998   5.0667 5.1333 5.0671 5.3331]]
198                   0.46228         0.51612         0.19003         0.77991          0.77991          0.0292          0.43347          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4659 3.4667 3.5332 3.6667 2.1334 2.2667 2.1997 2.067   2.1329 2.2    4.8665 5.133  4.7329 4.6667 4.733  4.866  5.2667 5.5333   5.3331 5.3332 5.3334 5.2004 2.4663 2.8667 2.7999 2.6666 2.5326 2.6669   1.5999 1.6665 1.6011 1.6672 1.5984 1.5331 1.9997 2.3335 2.1334 2.1338   1.9333 2.1334 3.0002 3.0667 3.2001 2.8666 2.8665 2.9995 5.1992 5.2   5.0665 5.1337 5.0666 5.3331]]
199                   0.46228         0.51611         0.19         0.77991          0.77991          0.0292          0.43337          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8002 3.4671 3.4668 3.5333 3.6667 2.1333 2.2668 2.2001 2.0666   2.1334 2.2    4.8664 5.1333 4.7334 4.6665 4.7329 4.8666 5.2667 5.5336   5.3334 5.3334 5.3336 5.2    2.4665 2.8665 2.8    2.6672 2.5321 2.6668   1.6    1.6668 1.5999 1.6664 1.6    1.5333 2.0002 2.3328 2.1334 2.1333   1.9337 2.1334 2.9996 3.0667 3.2003 2.8664 2.8667 3.     5.2    5.1999   5.0665 5.1335 5.0661 5.3332]]
200                   0.46228         0.5161         0.19         0.77991          0.77991          0.0292          0.43358          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7999 3.4669 3.4664 3.5334 3.6665 2.1332 2.2671 2.2    2.0675   2.1335 2.2    4.8664 5.1333 4.7334 4.6667 4.7331 4.8664 5.2664 5.5335   5.3334 5.3334 5.3333 5.2002 2.4655 2.8665 2.8    2.6665 2.5334 2.6661   1.6004 1.667  1.5998 1.6665 1.6002 1.5331 2.     2.3333 2.1335 2.1333   1.9331 2.1333 3.     3.0664 3.2    2.8666 2.8669 2.9994 5.2003 5.1999   5.0666 5.1334 5.0657 5.3333]]
201                   0.4622         0.51604         0.18998         0.77995          0.77995          0.02919          0.43327          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7998 3.4663 3.467  3.5333 3.6663 2.1334 2.2668 2.2004 2.0667   2.1332 2.2006 4.8663 5.1335 4.7332 4.6662 4.7329 4.8665 5.2669 5.5333   5.3335 5.3335 5.3334 5.2    2.4663 2.8656 2.7996 2.6666 2.5337 2.6665   1.6006 1.6671 1.6002 1.6668 1.6004 1.5334 2.     2.3333 2.1332 2.1333   1.9332 2.1333 3.0001 3.0666 3.2002 2.8667 2.8667 2.9997 5.1999 5.1998   5.0667 5.1334 5.0666 5.3334]]
202                   0.4622         0.51606         0.18999         0.77995          0.77995          0.02919          0.43327          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.7997 3.4667 3.4668 3.5336 3.6667 2.1337 2.2666 2.2002 2.0668   2.1339 2.2006 4.8665 5.1327 4.733  4.6665 4.7328 4.8666 5.2666 5.5334   5.3334 5.3335 5.3334 5.1999 2.4667 2.8663 2.8003 2.6665 2.5337 2.6665   1.6002 1.6665 1.6003 1.6668 1.6001 1.5336 2.     2.3335 2.1334 2.1333   1.9331 2.1335 2.9999 3.0668 3.2001 2.8667 2.8667 2.9997 5.1998 5.2005   5.0668 5.1335 5.0663 5.3334]]
203                   0.46222         0.51609         0.19         0.77994          0.77994          0.0292          0.43308          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3996 3.7996 3.4664 3.467  3.5328 3.6659 2.1341 2.2666 2.2006 2.0668   2.1336 2.2019 4.8662 5.1331 4.7333 4.6667 4.7333 4.8667 5.2665 5.5333   5.3332 5.3339 5.3332 5.2    2.4662 2.8668 2.8003 2.6671 2.533  2.6667   1.5999 1.6664 1.6003 1.6664 1.6002 1.534  1.9999 2.3333 2.1333 2.1333   1.933  2.1335 3.0003 3.0666 3.2    2.8668 2.8668 3.     5.2    5.2002   5.0668 5.1332 5.0666 5.3333]]
204                   0.46208         0.51603         0.18999         0.78001          0.78001          0.02919          0.43273          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7996 3.4664 3.4665 3.5334 3.6665 2.1334 2.2672 2.2006 2.0673   2.1331 2.2006 4.8666 5.1323 4.7331 4.667  4.7337 4.8664 5.2667 5.5333   5.3333 5.3332 5.3334 5.2    2.4663 2.8667 2.7998 2.6663 2.5337 2.6667   1.5998 1.6667 1.6003 1.667  1.6    1.5345 2.     2.3333 2.1334 2.1332   1.9335 2.1332 3.0007 3.0666 3.1999 2.8665 2.8668 2.9995 5.1995 5.2   5.0667 5.1333 5.0664 5.333 ]]
205                   0.46222         0.51609         0.19002         0.77994          0.77994          0.02919          0.43333          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3996 3.8    3.4666 3.467  3.5335 3.6664 2.1334 2.2667 2.2004 2.0669   2.1336 2.2002 4.867  5.1332 4.7344 4.6662 4.7331 4.8667 5.2666 5.5332   5.3333 5.3331 5.3335 5.2    2.4673 2.8667 2.8004 2.6668 2.5332 2.6665   1.5995 1.6671 1.5999 1.6668 1.5999 1.5334 2.0001 2.3333 2.1333 2.1337   1.9336 2.1334 2.9999 3.0667 3.2    2.8665 2.8666 2.9999 5.1999 5.2   5.0664 5.1334 5.0663 5.3334]]
206                   0.46222         0.51606         0.18999         0.77994          0.77994          0.0292          0.43343          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3996 3.7997 3.4662 3.4663 3.5333 3.6663 2.1339 2.2665 2.2002 2.0668   2.1336 2.2013 4.8661 5.133  4.7333 4.6661 4.7332 4.8668 5.2665 5.5331   5.3334 5.3331 5.3333 5.2    2.4666 2.8669 2.8    2.6663 2.5336 2.6665   1.6001 1.6667 1.6002 1.6663 1.6002 1.5333 1.9999 2.3335 2.1327 2.1331   1.9333 2.1334 2.9999 3.0668 3.1999 2.8666 2.8667 2.9999 5.2    5.2   5.0668 5.1333 5.0663 5.3331]]
207                   0.46223         0.51605         0.18999         0.77994          0.77994          0.0292          0.43307          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4669 3.4669 3.5335 3.6663 2.1337 2.2674 2.2002 2.0669   2.1337 2.2003 4.8663 5.1332 4.7333 4.6666 4.7337 4.8665 5.2669 5.5335   5.3331 5.3334 5.3333 5.2001 2.466  2.8658 2.8003 2.6666 2.5327 2.6666   1.6001 1.6668 1.6    1.6664 1.6002 1.5339 2.     2.3335 2.1334 2.1334   1.9334 2.1333 2.9999 3.0667 3.2    2.8666 2.8664 3.     5.1999 5.2003   5.0663 5.1332 5.066  5.3331]]
208                   0.46218         0.51607         0.18999         0.77996          0.77996          0.02919          0.43312          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7998 3.4664 3.4665 3.5329 3.6665 2.1329 2.267  2.1997 2.0667   2.1338 2.2008 4.8668 5.1329 4.7332 4.6668 4.7334 4.8666 5.2671 5.5335   5.3334 5.3332 5.3327 5.2002 2.4667 2.8666 2.8003 2.6667 2.5335 2.6666   1.6002 1.6665 1.6    1.6668 1.6001 1.5336 2.     2.3331 2.1332 2.1335   1.9333 2.1333 3.0005 3.0665 3.2    2.8666 2.8667 2.9999 5.1999 5.1999   5.0665 5.1338 5.0661 5.3333]]
209                   0.46225         0.51611         0.19001         0.77993          0.77993          0.0292          0.43328          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.399  3.7999 3.4659 3.4667 3.5333 3.6665 2.1333 2.2668 2.1998 2.0674   2.1333 2.2003 4.8666 5.1333 4.7332 4.6664 4.7332 4.8664 5.2665 5.5331   5.3333 5.3338 5.3335 5.2001 2.4667 2.8664 2.8    2.6663 2.5335 2.6667   1.6    1.6669 1.6    1.6668 1.5996 1.5336 2.0001 2.3334 2.1335 2.1334   1.9335 2.1333 2.9996 3.0666 3.2001 2.8664 2.8666 3.     5.2001 5.2001   5.0666 5.1335 5.0662 5.3333]]
210                   0.46221         0.51606         0.19         0.77995          0.77995          0.0292          0.43318          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.8001 3.4666 3.4664 3.5333 3.6666 2.1338 2.2667 2.2004 2.067   2.1334 2.2004 4.8665 5.1332 4.733  4.6665 4.7344 4.8665 5.2665 5.5332   5.3334 5.3336 5.3337 5.2001 2.4667 2.8667 2.8001 2.6666 2.533  2.6667   1.5998 1.6671 1.6    1.6664 1.6001 1.5338 2.     2.3335 2.133  2.1334   1.9333 2.1333 2.9998 3.0667 3.1999 2.8666 2.8667 2.9999 5.2    5.2001   5.0667 5.1333 5.0666 5.3331]]
211                   0.46218         0.51603         0.18999         0.77996          0.77996          0.02919          0.43282          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4668 3.4666 3.5334 3.6666 2.1332 2.2673 2.2006 2.0673   2.1337 2.2002 4.8665 5.1332 4.7332 4.6662 4.7333 4.8664 5.2667 5.5327   5.3334 5.3334 5.3329 5.2002 2.4666 2.8666 2.8001 2.6667 2.5331 2.6668   1.5999 1.6678 1.6006 1.6667 1.6009 1.5345 2.0001 2.3336 2.1338 2.1335   1.9333 2.1333 2.9999 3.0668 3.1998 2.8668 2.8677 3.     5.1999 5.2   5.0666 5.1337 5.0664 5.3333]]
212                   0.46226         0.51613         0.19002         0.77992          0.77992          0.0292          0.43337          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.466  3.4664 3.5332 3.6664 2.133  2.2671 2.2    2.066   2.1334 2.2005 4.8662 5.1331 4.7333 4.6664 4.7331 4.8666 5.2668 5.5333   5.3328 5.3334 5.3333 5.2    2.4664 2.866  2.7999 2.667  2.5334 2.6667   1.5996 1.6668 1.5995 1.6667 1.5999 1.5334 2.0001 2.3333 2.1333 2.1332   1.9333 2.1333 3.0001 3.0668 3.2002 2.8663 2.8667 3.     5.2    5.2   5.0665 5.1333 5.0668 5.3334]]
213                   0.46219         0.51604         0.18998         0.77996          0.77996          0.02919          0.43332          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4665 3.4669 3.5339 3.6666 2.1334 2.2669 2.2    2.0669   2.1341 2.2006 4.8665 5.1329 4.733  4.6662 4.7332 4.8668 5.2665 5.5334   5.3335 5.3334 5.3331 5.2    2.4665 2.8662 2.7993 2.6662 2.5335 2.6676   1.6    1.6668 1.6    1.6662 1.6007 1.5336 1.9999 2.3337 2.1334 2.1333   1.9329 2.1334 3.     3.0669 3.1996 2.8667 2.8669 3.0001 5.1997 5.1999   5.0663 5.1335 5.0667 5.3332]]
214                   0.46217         0.51606         0.19         0.77997          0.77997          0.02919          0.43312          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7997 3.4665 3.4663 3.5333 3.6666 2.1334 2.2676 2.2004 2.0673   2.1338 2.2001 4.8664 5.1333 4.7332 4.6664 4.7331 4.8666 5.2668 5.5332   5.333  5.3335 5.3329 5.2008 2.4669 2.8667 2.7997 2.667  2.5329 2.6661   1.5998 1.6668 1.6    1.6666 1.6001 1.5337 2.     2.3333 2.1338 2.1332   1.9331 2.1334 2.9997 3.0666 3.1998 2.8668 2.8668 3.0001 5.2001 5.199   5.0667 5.1332 5.0667 5.3332]]
215                   0.46226         0.51613         0.19002         0.77992          0.77992          0.0292          0.43367          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4663 3.4666 3.5331 3.6667 2.1338 2.2669 2.2    2.067   2.1332 2.1999 4.8666 5.1332 4.7332 4.6662 4.7332 4.8666 5.2668 5.5335   5.3332 5.3341 5.3335 5.1998 2.4662 2.8666 2.7999 2.6672 2.5335 2.6669   1.6001 1.6669 1.6002 1.6669 1.5998 1.5326 1.9999 2.3331 2.1335 2.1333   1.9334 2.1338 3.0001 3.0666 3.2    2.8668 2.8666 3.     5.2    5.1999   5.0667 5.1329 5.0667 5.3331]]
216                   0.46221         0.51603         0.18999         0.77995          0.77995          0.0292          0.43347          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4666 3.467  3.5336 3.6661 2.1344 2.2674 2.1991 2.0666   2.1328 2.2001 4.8665 5.1331 4.7333 4.6668 4.7333 4.8667 5.2667 5.5333   5.3335 5.3336 5.3336 5.2003 2.4666 2.8666 2.8001 2.6666 2.5331 2.6666   1.6001 1.6672 1.6002 1.6665 1.5996 1.5332 2.     2.3336 2.1328 2.133   1.9332 2.1334 3.0001 3.0668 3.2    2.8667 2.8665 2.9998 5.2    5.1997   5.0665 5.1333 5.0667 5.333 ]]
217                   0.46228         0.51612         0.19002         0.77991          0.77991          0.0292          0.43327          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3995 3.8003 3.4666 3.4667 3.5334 3.6664 2.1336 2.2672 2.2004 2.0665   2.1335 2.2    4.8665 5.1333 4.7331 4.6662 4.7332 4.8665 5.2666 5.5333   5.3335 5.3332 5.3333 5.2001 2.4666 2.8668 2.8004 2.6663 2.5337 2.6668   1.6003 1.6674 1.6002 1.6668 1.6003 1.5338 2.0001 2.3333 2.1334 2.134   1.9333 2.1333 3.0004 3.067  3.1998 2.8668 2.8666 3.0005 5.2002 5.2   5.0668 5.1329 5.067  5.3333]]
218                   0.46221         0.51609         0.18999         0.77995          0.77995          0.02919          0.43363          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3995 3.7992 3.4667 3.4659 3.5323 3.6667 2.1332 2.2663 2.2006 2.0669   2.1336 2.2005 4.8664 5.1335 4.7329 4.6663 4.7336 4.8665 5.2659 5.5333   5.3333 5.3335 5.3333 5.1998 2.4667 2.8665 2.7997 2.6671 2.5335 2.6664   1.6003 1.6666 1.6001 1.6665 1.5998 1.5335 2.0001 2.3334 2.1334 2.1332   1.9332 2.1333 2.9996 3.0662 3.1999 2.8668 2.8666 2.9998 5.2001 5.1998   5.0664 5.1331 5.068  5.3337]]
219                   0.46219         0.51607         0.19         0.77996          0.77996          0.02919          0.43328          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.7997 3.4666 3.4668 3.5331 3.6665 2.1339 2.267  2.2009 2.067   2.1333 2.2003 4.8663 5.1327 4.7332 4.6662 4.7334 4.8665 5.2668 5.5335   5.3336 5.3334 5.3333 5.2002 2.4667 2.8664 2.8002 2.6671 2.5334 2.6665   1.6001 1.6667 1.6    1.6665 1.6005 1.5333 1.9996 2.3334 2.1333 2.1331   1.9334 2.1334 3.0004 3.0665 3.2002 2.8667 2.8669 3.0002 5.2    5.2   5.0667 5.1331 5.0664 5.3333]]
220                   0.46226         0.51609         0.19         0.77992          0.77992          0.0292          0.43332          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7996 3.4667 3.4667 3.5325 3.6666 2.1333 2.2668 2.1997 2.0667   2.1335 2.2005 4.8666 5.1336 4.7334 4.6662 4.7327 4.8657 5.2667 5.5335   5.3335 5.3333 5.3332 5.2    2.4666 2.8666 2.7999 2.6664 2.5334 2.6667   1.5999 1.6665 1.5999 1.6666 1.6004 1.5336 2.     2.3335 2.1334 2.1334   1.9332 2.1336 3.0002 3.0669 3.2    2.8667 2.8666 3.     5.1997 5.2002   5.0666 5.1333 5.0664 5.3333]]
221                   0.4622         0.516         0.18996         0.77995          0.77995          0.02919          0.43347          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8002 3.4666 3.4665 3.5329 3.6667 2.1335 2.2666 2.2001 2.0669   2.1338 2.2004 4.8664 5.1332 4.7334 4.6662 4.7333 4.8663 5.267  5.533   5.3332 5.3335 5.3334 5.2    2.4667 2.8668 2.7997 2.6665 2.5333 2.667   1.6011 1.6662 1.6007 1.6668 1.6004 1.5332 1.9998 2.3334 2.1333 2.1333   1.9334 2.1332 3.     3.0668 3.2001 2.8672 2.8666 3.     5.2    5.2001   5.0666 5.1334 5.0675 5.3335]]
222                   0.46229         0.5161         0.19         0.77991          0.77991          0.0292          0.43348          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3995 3.8002 3.4667 3.4664 3.5328 3.6663 2.1336 2.2669 2.2    2.0665   2.1343 2.1998 4.8667 5.1332 4.7331 4.6666 4.7327 4.8664 5.2664 5.5332   5.3331 5.3331 5.3334 5.1999 2.4664 2.8668 2.7999 2.667  2.5333 2.6665   1.6004 1.667  1.6001 1.6667 1.6    1.5333 2.0002 2.3334 2.1334 2.1335   1.9332 2.1332 2.9999 3.0668 3.2002 2.8664 2.8665 2.9999 5.2002 5.1998   5.0663 5.1333 5.0669 5.3327]]
223                   0.46215         0.516         0.18997         0.77998          0.77998          0.02919          0.43342          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7997 3.4666 3.4667 3.5335 3.6669 2.1335 2.2671 2.2002 2.0674   2.1339 2.1999 4.8664 5.1333 4.7335 4.6664 4.7333 4.8668 5.2671 5.5334   5.3334 5.3334 5.3332 5.2    2.4672 2.8667 2.8    2.6668 2.5335 2.6666   1.5997 1.6664 1.6003 1.6666 1.6004 1.5334 2.     2.3331 2.1334 2.1332   1.9334 2.1332 2.9998 3.0669 3.2001 2.8671 2.8668 3.0001 5.2    5.1999   5.0666 5.1333 5.0667 5.3335]]
224                   0.4622         0.51606         0.18999         0.77995          0.77995          0.02919          0.43337          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4663 3.4666 3.5334 3.6664 2.1334 2.2666 2.2    2.0675   2.1336 2.2006 4.8666 5.1331 4.7332 4.666  4.7332 4.8663 5.2671 5.5333   5.3334 5.3334 5.3336 5.2    2.4663 2.8666 2.8002 2.6663 2.5337 2.6665   1.6003 1.6668 1.5997 1.6668 1.6    1.5339 2.     2.3331 2.1335 2.1333   1.9334 2.1333 3.0002 3.0673 3.1999 2.8667 2.8667 2.9999 5.2001 5.1998   5.0663 5.1333 5.0669 5.3333]]
225                   0.46223         0.51606         0.18999         0.77994          0.77994          0.0292          0.43343          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7999 3.4668 3.4666 3.5334 3.6667 2.1336 2.2666 2.2006 2.0668   2.1335 2.2002 4.8667 5.1331 4.7334 4.6668 4.7333 4.8666 5.2667 5.5334   5.3333 5.3333 5.3337 5.2001 2.4662 2.8668 2.8002 2.6664 2.5335 2.6669   1.6003 1.6668 1.6012 1.6668 1.6002 1.5331 1.9999 2.3332 2.1334 2.1335   1.9334 2.1336 3.     3.0665 3.2001 2.8666 2.8668 3.     5.2    5.1998   5.0666 5.133  5.0668 5.3335]]
226                   0.46214         0.51605         0.19         0.77998          0.77998          0.02919          0.43342          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7996 3.4672 3.4667 3.5331 3.6665 2.1335 2.2671 2.2002 2.0664   2.1336 2.2005 4.8665 5.1328 4.733  4.6666 4.7333 4.8665 5.2667 5.5333   5.3333 5.333  5.3333 5.2001 2.4665 2.8666 2.8001 2.6655 2.5335 2.6671   1.6001 1.6667 1.6    1.6668 1.6002 1.5333 2.0001 2.3335 2.1333 2.1334   1.9335 2.1333 3.     3.0668 3.1997 2.8667 2.8668 3.     5.1997 5.2   5.0669 5.1332 5.0669 5.3332]]
227                   0.46223         0.51603         0.18997         0.77994          0.77994          0.02919          0.43333          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8003 3.4667 3.4665 3.5331 3.6666 2.1334 2.2668 2.2002 2.0675   2.1323 2.1997 4.8663 5.1333 4.7331 4.6664 4.7335 4.8664 5.2668 5.5336   5.3336 5.3332 5.3332 5.1998 2.4665 2.8668 2.7995 2.6667 2.533  2.6666   1.6006 1.666  1.6001 1.6667 1.6008 1.5332 2.0004 2.3331 2.1335 2.1332   1.9333 2.1334 2.9999 3.0664 3.2002 2.8669 2.8667 3.0001 5.1997 5.2   5.0665 5.1331 5.0669 5.3334]]
228                   0.46228         0.51612         0.19003         0.77991          0.77991          0.0292          0.43367          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4665 3.4665 3.5337 3.6667 2.1328 2.2672 2.2004 2.0669   2.1339 2.2005 4.8669 5.133  4.7333 4.6666 4.7329 4.8664 5.2667 5.5334   5.3336 5.3334 5.3331 5.2002 2.4666 2.8668 2.7998 2.6668 2.533  2.6666   1.6002 1.6668 1.5996 1.6662 1.6    1.5335 1.9999 2.3338 2.1335 2.1336   1.9332 2.1332 3.     3.0675 3.2004 2.8668 2.8667 3.0004 5.1998 5.1998   5.0667 5.1334 5.0668 5.3332]]
229                   0.46219         0.51607         0.19001         0.77996          0.77996          0.02919          0.43337          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7994 3.4666 3.467  3.5329 3.6667 2.1335 2.2671 2.1999 2.0677   2.1337 2.2002 4.8665 5.1333 4.7332 4.6661 4.7332 4.8666 5.2667 5.5333   5.3336 5.3336 5.3332 5.2002 2.4666 2.8667 2.7997 2.6662 2.5336 2.6667   1.5994 1.667  1.5998 1.6672 1.6    1.5335 2.     2.3334 2.1331 2.1333   1.9334 2.1334 2.9999 3.0669 3.2002 2.8669 2.8666 3.0001 5.1999 5.1998   5.0667 5.1338 5.0662 5.3333]]
230                   0.46216         0.51607         0.18999         0.77997          0.77997          0.02919          0.43317          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3994 3.7998 3.4662 3.4663 3.5321 3.6666 2.1342 2.2672 2.2002 2.0668   2.1336 2.2003 4.8666 5.1326 4.7334 4.6666 4.7329 4.8663 5.2668 5.5332   5.3338 5.3334 5.3338 5.1996 2.4668 2.8663 2.7999 2.6668 2.5333 2.6662   1.5998 1.6661 1.5998 1.6665 1.6    1.5337 2.     2.3334 2.1333 2.1335   1.9335 2.133  3.     3.0667 3.1998 2.8667 2.8667 3.0002 5.1999 5.1999   5.0667 5.1334 5.0666 5.3333]]
231                   0.46218         0.51606         0.18999         0.77996          0.77996          0.02919          0.43342          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4666 3.4663 3.5336 3.6664 2.1339 2.2668 2.1998 2.0669   2.1334 2.2001 4.8663 5.1334 4.733  4.6665 4.7327 4.8664 5.2669 5.5329   5.333  5.3336 5.3331 5.1999 2.4665 2.8667 2.8    2.6668 2.5335 2.667   1.6001 1.6666 1.5996 1.6665 1.6002 1.5335 2.     2.3335 2.1334 2.1335   1.9344 2.1333 2.9997 3.067  3.1998 2.8664 2.8668 3.0001 5.1999 5.2007   5.0668 5.1334 5.0665 5.3332]]
232                   0.46222         0.51608         0.19         0.77994          0.77994          0.0292          0.43352          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.8001 3.4661 3.4667 3.5334 3.6666 2.1337 2.2666 2.2007 2.0669   2.1337 2.1995 4.8663 5.1331 4.7333 4.6663 4.7331 4.8665 5.2666 5.5322   5.3333 5.3332 5.3341 5.1997 2.4661 2.8666 2.8001 2.6667 2.5333 2.6667   1.6003 1.6669 1.5998 1.6665 1.5997 1.5332 2.0002 2.3335 2.1336 2.1333   1.9337 2.1334 3.     3.0669 3.2002 2.8673 2.8667 2.9996 5.1999 5.2   5.0666 5.1334 5.0663 5.3334]]
233                   0.46229         0.51613         0.19002         0.77991          0.77991          0.0292          0.43318          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3995 3.7999 3.4668 3.4662 3.5332 3.6665 2.133  2.2668 2.2004 2.0672   2.1334 2.1999 4.8663 5.1334 4.7331 4.6665 4.7331 4.8666 5.2666 5.5332   5.3333 5.3332 5.3336 5.1999 2.4663 2.8668 2.8    2.6664 2.5333 2.6665   1.5996 1.6672 1.6    1.6671 1.6002 1.5337 1.9999 2.3333 2.1335 2.1333   1.9334 2.1334 3.0005 3.0665 3.2001 2.8666 2.8662 3.0002 5.1997 5.1999   5.0669 5.1334 5.0664 5.3333]]
234                   0.46226         0.51609         0.19001         0.77992          0.77992          0.0292          0.43327          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.8003 3.4668 3.4667 3.5332 3.6668 2.1337 2.2666 2.2004 2.0667   2.1332 2.2002 4.8664 5.1333 4.7328 4.6664 4.7333 4.8665 5.2666 5.5333   5.3333 5.3334 5.3332 5.1999 2.4666 2.8664 2.8    2.6667 2.5334 2.6669   1.5999 1.6668 1.6004 1.667  1.5998 1.5336 1.9997 2.3334 2.133  2.1333   1.9331 2.1334 3.0004 3.0668 3.2001 2.8671 2.8665 3.0004 5.1999 5.1999   5.0667 5.1333 5.0665 5.333 ]]
235                   0.46218         0.51605         0.18999         0.77996          0.77996          0.02919          0.43392          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7999 3.4667 3.467  3.5333 3.6669 2.1335 2.2668 2.2003 2.0678   2.1338 2.2004 4.8665 5.1331 4.7332 4.6667 4.7329 4.8667 5.2666 5.5334   5.3335 5.3335 5.3334 5.2001 2.4665 2.8663 2.8003 2.6667 2.5334 2.6665   1.5998 1.6666 1.6003 1.6663 1.5997 1.5324 2.0002 2.3334 2.1333 2.1334   1.9339 2.1333 2.9999 3.0669 3.1998 2.8669 2.8667 3.     5.1998 5.1999   5.0666 5.133  5.0662 5.3333]]
236                   2.53862         1.42009         0.59837         -0.20861          -0.11077          0.15174          1.4481          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.7783 3.4962 3.5789 3.382  3.3081 3.382  3.667  3.4867 3.7745 3.8903   3.9212 4.0401 3.9376 3.9464 3.7466 3.8871 3.7708 3.7716 3.6527 3.4981   3.5346 3.6694 3.7323 3.6757 3.9862 4.0111 3.9237 3.9302 3.9637 3.9431   4.0041 3.9769 4.0833 4.0056 4.0789 3.9904 3.7752 4.0324 4.0306 3.8591   3.6035 4.0943 4.1263 3.8548 4.0641 3.8432 3.8058 3.9917 3.7683 4.1385   3.862  4.0229 3.8162 4.0326]]
237                   2.51166         1.40776         0.59208         -0.19578          -0.0957          0.15009          1.53035          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.5982 3.4581 3.3644 3.5797 3.539  3.3782 3.8907 3.6251 3.8679 3.7621   3.9598 3.9326 4.0696 3.7432 3.8501 3.6768 3.6851 3.4934 3.6613 3.794   3.5526 3.83   3.7221 3.7659 3.8852 3.9667 3.9521 4.0482 3.9131 3.8682   4.1586 4.0392 3.9378 4.1253 4.129  3.8196 3.7098 3.6886 3.9365 3.8386   3.7175 4.0518 4.0923 4.2488 3.8753 3.8746 3.9415 3.9527 3.8449 4.259   3.7894 4.0238 3.8324 4.1048]]
238                   2.57338         1.43872         0.60219         -0.22516          -0.12817          0.15326          1.49567          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.2593 3.5379 3.3059 3.4641 3.542  3.7076 3.797  3.7644 3.8777 3.5955   3.861  3.9171 3.645  3.7194 3.5787 3.9053 3.7993 3.8534 3.5621 3.7499   3.698  3.3582 3.6721 3.8754 3.7982 3.9879 4.1019 3.8975 3.9039 3.9034   3.9408 4.0704 4.0423 4.1099 3.8412 4.1435 3.9526 3.7973 3.8224 4.0663   3.7995 3.8468 4.0426 3.8567 4.1906 3.8761 4.0402 4.222  4.0433 3.9761   3.9267 3.9336 3.8049 4.0543]]
239                   2.47598         1.38968         0.59288         -0.17879          -0.07243          0.14974          1.37978          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.5726 3.3341 3.4204 3.6041 3.4861 3.6518 3.8848 3.8759 3.871  3.6274   3.8857 3.8367 4.0429 3.6372 3.6159 3.9854 4.0533 3.7687 3.7048 3.5964   3.732  3.8591 3.5745 3.7667 3.7963 4.2116 3.8928 3.8604 3.8448 3.8488   3.932  4.1193 4.0371 4.0882 4.0573 4.1726 3.952  3.8578 4.0026 3.7383   3.6322 3.9819 4.0025 3.9088 4.0258 3.8441 3.9326 3.9387 3.9059 3.7974   4.1504 4.1412 3.9762 4.1533]]
240                   2.26938         1.32882         0.49288         -0.08043          -0.07843          0.12709          1.46585          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8646 3.0184 3.177  2.8624 3.1367 2.894  3.2652 3.3199 3.24   3.2465   3.364  3.3474 3.4996 3.3709 3.498  3.1803 3.1127 3.0044 3.1353 3.1162   3.4033 3.1924 3.1137 3.3384 3.4531 3.4352 3.4674 3.4353 3.3943 3.389   3.5479 3.5498 3.6036 3.4107 3.4947 3.5592 3.3585 3.0145 3.4817 3.0296   3.3023 3.54   3.3575 3.62   3.4643 3.3045 3.3529 3.5017 3.509  3.3356   3.5084 3.4582 3.3093 3.2801]]
241                   2.26408         1.3178         0.50105         -0.07791          -0.07783          0.12872          1.30048          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1765 3.0497 2.8628 3.3005 2.9224 3.0617 3.2267 3.3749 3.2682 3.232   3.15   3.2735 3.4108 3.4754 3.5048 3.1817 3.1613 3.3691 3.3264 3.2542   3.1061 3.0728 3.2569 3.303  3.4521 3.4677 3.4353 3.4191 3.4401 3.4344   3.6116 3.3837 3.5288 3.6124 3.5726 3.4412 3.0253 3.5985 3.3635 3.4067   3.348  3.6226 3.5318 3.5508 3.6565 3.4555 3.584  3.6678 3.6966 3.4229   3.6094 3.4776 3.458  3.3705]]
242                   2.27759         1.32782         0.49842         -0.08434          -0.08287          0.12878          1.38507          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9272 3.2185 2.7711 2.9073 2.8922 2.9178 3.2576 3.2405 3.2781 3.4645   3.3867 3.3154 3.2207 3.408  3.2179 3.4202 3.2799 3.2593 3.0952 3.4204   3.0868 3.2478 3.3055 3.2268 3.4598 3.4506 3.4175 3.4161 3.3998 3.3798   3.3961 3.641  3.6426 3.5843 3.4497 3.5823 3.3487 3.3784 3.2392 3.364   3.2049 3.2797 3.3923 3.4494 3.429  3.4763 3.5175 3.3361 3.2752 3.297   3.5603 3.5742 3.6319 3.3268]]
243                   2.3363         1.34779         0.50799         -0.11229          -0.11183          0.13206          1.44328          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0666 3.0671 2.8689 3.0127 2.9878 3.0852 3.144  3.2168 3.3861 3.3511   3.3582 3.446  3.1527 3.4413 3.3998 3.1803 3.1868 3.2261 3.2653 3.0129   3.3502 3.1727 3.1185 3.1539 3.4414 3.4181 3.4502 3.4164 3.3825 3.4307   3.4624 3.5885 3.5781 3.6464 3.4829 3.6514 3.1091 3.3799 3.5417 3.6452   3.215  3.407  3.56   3.624  3.55   3.352  3.4981 3.5151 3.5861 3.4994   3.5561 3.4343 3.4523 3.4613]]
244                   1.66926         1.06734         0.38542         0.20528          0.20561          0.09093          1.08123          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3109 3.4844 3.4722 2.912  3.3685 3.4015 3.5214 2.252  3.4861 2.5584   3.5108 3.4895 3.3698 5.1135 4.7019 4.5836 4.7018 4.8479 3.2596 5.5335   5.3277 5.3277 3.256  3.2621 2.4684 3.4283 3.0794 3.3986 3.3841 3.4141   3.4867 1.7048 1.634  1.6154 3.4807 3.4736 3.3451 3.3581 2.0827 3.3498   3.2434 3.2655 3.3326 3.3785 3.4121 2.8756 2.981  3.3231 3.3116 3.2416   3.2024 3.2587 3.1975 3.311 ]]
245                   1.67982         1.062         0.38607         0.20026          0.20094          0.09307          1.08545          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3195 3.801  3.2955 3.3303 3.358  3.6132 3.5215 3.5177 2.2202 3.4701   3.4719 2.1902 3.3723 3.4925 4.6963 3.341  3.3639 3.387  3.2655 5.5412   5.3338 3.2457 3.2254 5.2124 2.5078 2.8256 3.4249 2.6379 3.398  3.4167   3.4884 1.5985 1.5855 3.5499 3.518  3.5374 3.347  2.9451 3.3185 3.3337   3.2272 2.1303 3.3349 2.5591 3.205  3.3349 2.8913 3.3857 5.1569 3.2949   3.2192 3.2767 3.2791 3.301 ]]
246                   1.53258         1.03599         0.41182         0.27035          0.27922          0.094          1.09338          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.966  3.4419 3.3637 2.8874 3.3454 3.359  3.4759 3.5622 3.5174 2.0942   2.1474 3.4759 3.3795 5.1388 4.7035 4.6171 4.6992 3.3855 5.2631 3.2875   5.3299 3.2161 5.3341 3.1955 2.4653 3.4789 3.4485 3.4003 2.524  2.6675   3.5275 2.8997 3.5346 3.5278 1.625  3.5045 3.2811 2.3302 3.4086 3.3418   3.169  3.3415 3.3215 3.1267 3.3873 3.2979 3.3142 3.0249 3.3064 3.9218   3.2636 5.1038 5.0105 5.2964]]
247                   1.56897         1.03389         0.39796         0.25303          0.25305          0.09314          0.89742          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.349  3.807  3.283  3.4298 3.3737 3.6245 3.5111 2.3492 2.2779 3.4352   2.1396 2.2139 3.3847 3.4858 3.3778 3.2861 4.7032 3.4218 5.2636 5.5353   3.2456 5.3248 3.2409 5.1895 2.4706 3.0975 3.4001 2.5904 3.3831 3.4266   3.4624 3.5149 1.5859 3.3107 3.4464 1.5926 3.3192 3.4217 3.3425 3.3472   3.2433 3.3516 3.3452 3.3575 3.3928 3.2981 2.8682 2.9498 3.3095 3.3634   5.0448 3.2944 3.1953 3.3296]]
248                   2.31286         1.33731         0.5043         -0.10113          -0.10095          0.13045          1.40553          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.167  3.3559 3.1779 3.2124 3.1902 3.3592 3.4043 3.4323 3.4305 3.3845   3.4338 3.5234 3.2676 3.4588 3.321  3.4518 3.2014 3.415  3.3187 3.3308   3.3063 3.1837 3.1685 3.1552 3.4117 3.4576 3.4489 3.4562 3.4636 3.4453   3.5229 3.6171 3.5924 3.5055 3.5276 3.4716 3.2106 3.315  3.2685 3.3811   3.0438 3.5116 3.3156 3.3998 3.412  3.4027 3.3759 3.4376 3.2755 3.4223   3.3186 3.3733 3.2505 3.3409]]
249                   2.34702         1.34613         0.50795         -0.11739          -0.11729          0.1322          1.32448          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.169  3.3224 3.146  3.1527 3.2579 3.2912 3.437  3.4647 3.4237 3.4277   3.4886 3.3896 3.4017 3.323  3.3215 3.1855 3.2465 3.3482 3.1561 3.3155   3.2098 3.218  3.2422 3.1926 3.4282 3.4799 3.495  3.4541 3.4341 3.4602   3.5153 3.5212 3.6148 3.5941 3.6054 3.563  3.3467 3.3593 3.3005 3.2859   3.2689 3.3305 3.3768 3.4469 3.5303 3.453  3.3363 3.3968 3.4044 3.3276   3.3524 3.3786 3.2513 3.4488]]
250                   2.31081         1.34129         0.5061         -0.10015          -0.09999          0.13046          1.39828          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.145  3.3357 3.1003 3.2095 3.1678 3.2538 3.4075 3.4431 3.446  3.3763   3.4256 3.4467 3.2833 3.4688 3.2964 3.3201 3.3508 3.2408 3.2437 3.3049   3.2138 3.2408 3.169  3.1948 3.424  3.457  3.4777 3.4362 3.4309 3.4468   3.567  3.5291 3.5282 3.596  3.5189 3.5004 3.2632 3.4268 3.3266 3.3182   3.3898 3.2708 3.3696 3.4177 3.4132 3.3879 3.3753 3.428  3.4464 3.438   3.3502 3.3528 3.302  3.395 ]]
251                   2.32551         1.34518         0.50995         -0.10715          -0.10714          0.13161          1.3964          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2006 3.2969 3.1274 3.1775 3.2405 3.256  3.4177 3.4389 3.4294 3.4065   3.4445 3.4372 3.4123 3.3812 3.254  3.3782 3.1947 3.4121 3.2682 3.244   3.1527 3.301  3.2293 3.2867 3.4228 3.4628 3.4898 3.4653 3.4474 3.4538   3.5003 3.5671 3.5879 3.5854 3.5582 3.5382 3.3719 3.4933 3.427  3.2874   3.358  3.3658 3.4487 3.4273 3.4418 3.4493 3.3409 3.4198 3.3575 3.3551   3.3177 3.356  3.3182 3.4358]]
252                   2.29461         1.34501         0.54122         -0.09244          -0.06624          0.13531          1.35795          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.3933 3.2654 3.342  3.548  3.2834 3.2756 3.583  3.6375 3.6631 3.645   3.6108 3.4589 3.7416 3.5674 3.6022 3.4318 3.4655 3.6583 3.5195 3.4862   3.4837 3.3609 3.1346 3.5723 3.6221 3.7066 3.7071 3.7227 3.6703 3.7055   3.7137 3.7841 3.6587 3.7247 3.8277 3.8849 3.3905 3.7196 3.3815 3.691   3.7088 3.5743 3.7617 3.611  3.8553 3.844  3.8643 3.7676 3.8516 3.6656   3.8081 3.7375 3.7883 3.8551]]
253                   2.31289         1.35273         0.54047         -0.10115          -0.08167          0.13577          1.3379          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.2346 3.4114 3.2166 3.1426 3.3672 3.0787 3.5526 3.5134 3.3265 3.378   3.6118 3.552  3.4766 3.5739 3.4915 3.3439 3.4615 3.495  3.4557 3.4444   3.5533 3.5222 3.3735 3.4425 3.6748 3.7289 3.611  3.7186 3.6839 3.7436   3.6834 3.7645 3.8238 3.8619 3.7448 3.8386 3.6259 3.5583 3.7207 3.633   3.655  3.7396 3.6685 3.6158 3.6824 3.7617 3.7058 3.7414 3.6507 3.7891   3.7159 3.8592 3.8351 3.7321]]
254                   2.42172         1.3873         0.55379         -0.15296          -0.13429          0.14145          1.44827          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.8758 3.1762 3.1927 3.1198 3.2385 3.2738 3.5906 3.5252 3.5926 3.5166   3.5408 3.572  3.5906 3.7297 3.419  3.166  3.5868 3.4245 3.4422 3.4857   3.462  3.2353 3.566  3.4258 3.6544 3.7156 3.6936 3.7109 3.6568 3.7302   3.8208 3.8844 3.8536 3.8059 3.7756 3.8428 3.5684 3.7961 3.439  3.6213   3.6303 3.5126 3.8367 3.8014 3.8299 3.749  3.5126 3.6784 3.7009 3.7943   3.7205 3.7568 3.6296 3.8903]]
255                   2.27656         1.34347         0.53985         -0.08385          -0.05869          0.13425          1.33268          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.4736 3.1136 3.2315 3.3533 3.2073 3.3846 3.5357 3.6254 3.4336 3.5791   3.5651 3.4851 3.7388 3.6544 3.5854 3.6663 3.6089 3.6907 3.4519 3.4051   3.4138 3.6399 3.3041 3.3494 3.6815 3.75   3.7004 3.7325 3.6576 3.7207   3.9771 3.7352 3.7534 3.7488 3.8427 3.7454 3.7692 3.4844 3.6501 3.5402   3.5639 3.7214 3.6796 3.6338 3.8197 3.5215 3.6505 3.8628 3.8415 3.8788   3.6854 3.8478 3.7001 3.6874]]
256                   2.24197         1.31084         0.49158         -0.06738          -0.06687          0.12629          1.22155          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1501 3.0752 3.0355 2.8563 3.0689 3.0243 3.3901 3.4638 3.2333 3.2127   3.2449 3.1862 3.4739 3.483  3.2775 3.3248 3.2081 3.4018 2.9443 3.4719   3.0791 3.1222 3.1551 3.357  3.4173 3.4315 3.4354 3.429  3.4249 3.4195   3.5734 3.5401 3.3922 3.545  3.5342 3.5922 3.5338 3.2871 3.322  3.0658   3.2706 3.2098 3.6361 3.4896 3.4963 3.4657 3.5445 3.5623 3.6292 3.4091   3.4852 3.5105 3.4223 3.5752]]
257                   2.34661         1.34614         0.5043         -0.1172          -0.11629          0.13193          1.40532          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9492 3.247  2.788  3.1846 3.1103 3.1072 3.1963 3.266  3.2429 3.3452   3.107  3.2204 3.5174 3.4324 3.3357 3.1869 3.2325 2.9913 3.2434 3.1584   3.2497 3.0389 3.0217 3.2474 3.4124 3.448  3.4331 3.4099 3.3726 3.4359   3.6135 3.7957 3.569  3.4269 3.5454 3.6173 3.1919 3.2507 3.4265 3.5549   3.4463 3.3767 3.3449 3.4866 3.6426 3.4565 3.2725 3.6158 3.5165 3.4086   3.3814 3.4234 3.4011 3.6158]]
258                   2.26925         1.31857         0.49298         -0.08037          -0.07907          0.12762          1.3771          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8363 3.3117 3.0312 2.9149 3.0591 2.9182 3.2282 3.3539 3.2841 3.1983   3.2679 3.3135 3.2279 3.3721 3.2403 3.3521 3.3422 3.3543 3.1964 3.1969   3.3179 3.1136 3.1457 3.2998 3.4256 3.5043 3.4851 3.4476 3.406  3.4195   3.454  3.5347 3.5528 3.4672 3.4703 3.5219 2.9977 3.2179 3.1671 3.3195   3.2279 3.6131 3.4927 3.6162 3.4718 3.5939 3.5406 3.4778 3.5653 3.4046   3.5328 3.3803 3.1929 3.4759]]
259                   2.21402         1.2978         0.48489         -0.05407          -0.05199          0.12438          1.28067          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9444 3.0716 3.011  3.1754 2.9301 3.1087 3.1868 3.2301 3.3132 3.3055   3.1792 3.1897 3.3724 3.3759 3.2884 3.1899 3.4128 3.3996 3.0788 3.2815   3.1787 3.1954 3.1829 3.0242 3.3768 3.43   3.4129 3.4242 3.3848 3.4367   3.4443 3.4782 3.5216 3.6308 3.5696 3.5259 3.4683 3.34   3.1643 3.0219   3.2411 3.167  3.3376 3.3427 3.4366 3.4478 3.2667 3.5168 3.5574 3.551   3.4092 3.6511 3.4348 3.4809]]
260                   1.66467         1.04025         0.3948         0.20747          0.21373          0.09706          0.88398          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3533 3.7991 3.3481 3.3452 3.4267 3.4758 2.133  3.5539 3.5149 2.0296   3.464  2.1932 3.3693 3.4617 3.3217 3.2793 3.3618 4.8407 5.2816 3.2736   3.2651 3.2319 5.3348 5.2163 3.3728 2.8664 3.4212 2.6971 2.5413 3.4211   3.557  3.5078 3.5171 1.6544 3.484  1.514  1.9549 3.3498 3.3302 2.0914   1.9325 2.1292 3.0897 3.352  3.3454 3.3252 3.3008 3.329  5.2089 3.2911   3.2185 3.2096 3.2283 3.3574]]
261                   1.54737         0.98114         0.34387         0.26331          0.27892          0.08287          0.8307          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2918 3.2378 3.3941 3.4568 3.3299 3.2221 2.1318 3.4983 3.508  2.0712   3.5043 2.1987 3.4166 3.4922 3.3212 3.3529 3.3369 4.8535 5.2632 3.3026   3.2715 3.2754 3.4141 5.2476 3.4004 2.9704 3.4054 2.6681 3.4155 3.4236   2.7341 1.6564 1.7312 1.6929 3.4642 3.5107 2.6845 3.451  2.1248 3.3582   3.2692 2.1163 3.0393 3.3292 3.3759 3.3126 3.3288 3.3333 3.2668 3.3047   3.2469 3.2685 3.325  3.2897]]
262                   1.80238         1.12155         0.41354         0.1419          0.14319          0.10053          1.13355          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4371 3.7928 3.3718 3.4744 3.4408 3.2421 2.1523 2.2505 3.521  2.1186   3.5412 2.1909 3.4083 3.4675 3.3486 3.3379 4.2644 4.8577 3.3057 3.2813   3.2352 3.4103 5.3304 4.5317 2.4685 3.42   2.8218 2.8881 2.5507 3.4141   3.5188 4.0177 3.4963 3.5006 1.599  3.4211 3.3217 2.2484 3.3604 3.3352   3.3347 3.3273 3.3593 3.344  3.2549 3.3095 3.2951 3.3303 3.2607 3.3281   3.2578 3.2321 3.2296 5.2987]]
263                   1.45113         0.97478         0.37075         0.30913          0.30916          0.08619          0.8081          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3766 3.5483 3.4692 3.3609 3.5491 3.3851 3.4805 2.3982 2.2009 3.4794   2.2994 3.5392 4.879  3.4901 4.6831 3.2969 3.3197 3.3709 5.2762 3.2828   3.2258 4.8506 5.3547 5.2078 2.4619 3.4096 3.4341 3.4074 3.4086 3.3944   1.6327 3.5353 3.4488 3.5042 1.5925 3.4782 3.3301 2.4745 3.3393 2.0666   1.9344 3.3297 3.0501 3.3671 3.3654 2.8632 3.2972 3.3531 3.2371 3.3133   3.282  5.0754 3.2317 3.3235]]
264                   2.29899         1.33647         0.50331         -0.09453          -0.09433          0.12961          1.34003          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1412 3.3266 3.2006 3.149  3.1864 3.2524 3.4652 3.4451 3.4086 3.414   3.4109 3.4403 3.3132 3.488  3.3287 3.2663 3.3525 3.3576 3.2764 3.2429   3.1782 3.2579 3.2185 3.2309 3.4102 3.4826 3.4553 3.453  3.425  3.4438   3.5743 3.4852 3.5486 3.6115 3.5273 3.5306 3.2425 3.2765 3.3224 3.3096   3.1411 3.3266 3.4205 3.4515 3.492  3.325  3.3973 3.3703 3.4466 3.347   3.3623 3.3085 3.2946 3.4466]]
265                   2.3358         1.3525         0.51174         -0.11205          -0.11204          0.13212          1.42438          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1102 3.3242 3.1993 3.166  3.1791 3.3627 3.4199 3.4314 3.4724 3.4471   3.4098 3.433  3.3334 3.3731 3.3374 3.4201 3.3579 3.2509 3.142  3.2289   3.2716 3.2086 3.212  3.2377 3.4226 3.4575 3.479  3.4547 3.4376 3.4563   3.5665 3.5694 3.5663 3.5145 3.5539 3.5411 3.3301 3.4485 3.3678 3.5087   3.3484 3.3936 3.3588 3.4263 3.443  3.3897 3.3482 3.4589 3.423  3.361   3.3531 3.2774 3.3373 3.4187]]
266                   2.33954         1.3442         0.50776         -0.11383          -0.11369          0.13194          1.38508          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1263 3.2891 3.2275 3.1896 3.2442 3.2721 3.4056 3.4217 3.44   3.417   3.4197 3.4739 3.3911 3.3935 3.2463 3.3551 3.2319 3.2902 3.252  3.3273   3.2207 3.2829 3.2644 3.162  3.4296 3.4826 3.4615 3.4803 3.4133 3.4463   3.5513 3.5927 3.5264 3.5637 3.5077 3.5635 3.2767 3.4483 3.2782 3.318   3.1758 3.3937 3.4489 3.4466 3.4868 3.4004 3.4018 3.4301 3.3665 3.29   3.3143 3.3213 3.2625 3.3069]]
267                   2.29895         1.3349         0.50497         -0.09451          -0.09449          0.12991          1.36603          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3188 3.2825 3.1861 3.2065 3.218  3.2328 3.3525 3.4693 3.4164 3.3995   3.4367 3.4478 3.2994 3.521  3.3247 3.2864 3.2866 3.5071 3.1874 3.3331   3.1562 3.2454 3.3151 3.187  3.4458 3.4619 3.4479 3.4736 3.4396 3.4549   3.5659 3.4915 3.5741 3.5875 3.5558 3.5182 3.3612 3.3927 3.3497 3.3648   3.2611 3.3364 3.4126 3.4105 3.4433 3.3618 3.3695 3.4154 3.4005 3.384   3.3327 3.3516 3.3645 3.3908]]
268                   2.4827         1.32006         0.43432         -0.18199          -0.08566          0.12956          1.1143          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.535  2.5453 2.6195 3.0212 2.7549 2.6925 2.8817 2.7474 2.8705 2.9681   2.877  3.0034 2.9833 3.1083 2.7708 3.0509 2.8144 2.8791 2.7474 2.7171   2.9448 2.5518 2.8926 2.6649 2.9463 3.001  3.0763 3.0798 3.0003 2.9815   3.1851 3.0663 3.2337 2.8991 3.056  3.0843 3.0012 2.8044 2.9367 3.1232   2.8459 3.1054 3.0915 3.2468 2.9617 3.1694 2.921  3.0025 2.9214 2.7874   3.0676 3.032  2.9937 3.113 ]]
269                   2.34332         1.2636         0.42005         -0.11563          -0.02227          0.12248          1.11612          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.8938 2.3732 2.7891 2.9021 2.9146 2.3755 2.6504 3.0348 2.7658 2.9195   2.7842 2.7722 2.8137 2.7386 2.9236 2.7867 2.7225 3.0204 2.5746 2.9691   2.6267 2.9487 2.8265 2.7867 2.9698 3.0421 3.0405 2.9568 2.971  3.0214   3.1883 3.3087 3.1488 3.1064 2.8827 2.9399 2.8817 2.9169 3.0266 2.4993   2.8726 2.7186 3.0813 3.1071 3.0693 3.1868 3.2665 3.2576 3.2742 3.3698   3.2395 3.047  3.2506 3.199 ]]
270                   2.35321         1.29149         0.43415         -0.12034          -0.03363          0.12461          1.16393          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.7022 2.6846 2.4778 3.0761 2.3867 2.5358 2.9922 2.8081 2.7919 2.7628   3.1593 3.0294 2.7726 3.132  3.0259 3.0099 2.8845 2.8802 3.125  2.7719   3.0418 2.7649 2.6465 2.744  2.9089 2.9786 2.9082 2.8938 2.8755 3.0716   3.181  3.1888 3.0524 3.2869 3.1911 2.9944 2.8957 3.0291 2.7405 2.8515   2.9435 3.0149 3.2284 2.8641 3.0366 3.1571 2.948  3.0454 3.0193 3.1292   3.0924 3.4394 3.3027 3.1469]]
271                   2.51788         1.3264         0.43764         -0.19874          -0.09049          0.1328          1.20317          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4495 2.2655 2.4463 2.435  2.6698 2.5519 2.6517 2.5898 2.8079 2.8869   2.9771 2.7074 2.5503 2.859  2.9635 2.6324 2.5334 2.8645 2.8747 2.6673   2.8486 2.6511 2.9074 2.808  3.0338 3.0049 3.07   2.9381 2.9761 2.9665   3.1276 3.1631 3.233  3.0837 3.2328 3.0773 3.113  2.925  2.9237 3.0524   2.7329 3.1096 2.9327 3.2005 3.0059 3.2815 3.3139 3.0905 3.1997 3.0965   3.2391 2.969  3.1893 3.0366]]
272                   7.34862         2.2644         0.59563         -2.49861          -0.09103          0.63034          1.9546          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.0689 0.3513 0.85   1.0668 1.1951 0.8265 0.4349 0.4859 0.9335 0.7395   0.8482 1.2904 1.8323 0.139  1.0155 0.7591 0.7122 0.6714 0.3001 0.9509   1.1391 1.3108 1.1048 1.1509 1.5519 1.6374 1.6642 1.6784 1.5231 0.9758   1.2663 1.1388 2.028  1.3941 1.5839 1.2765 1.129  0.7393 1.2535 0.8483   1.0793 0.8048 1.513  0.979  1.1064 1.5061 1.4643 1.3251 1.0933 0.9688   2.117  1.889  0.806  1.7153]]
273                   7.6032         2.31448         0.61788         -2.61981          -0.18874          0.66481          2.06293          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.9306 0.1902 1.0145 1.03   1.228  0.7741 1.1775 1.443  1.2678 1.0147   0.3506 1.0438 1.2137 0.6585 1.5977 0.9404 0.973  0.6643 1.6972 0.5234   0.4438 1.1232 1.3496 0.628  1.343  1.4077 1.0758 1.1109 0.6245 1.9859   2.1655 1.1287 0.6692 1.6872 1.213  0.8278 0.79   1.6258 1.2659 1.1594   1.5275 0.8706 1.0403 1.2733 0.961  1.8813 1.0336 2.0685 0.4151 0.7678   0.5162 1.4872 1.5245 1.9172]]
274                   3.07822         1.51933         0.68233         -0.46551          -0.08099          0.1813          1.43205          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.1813 4.4503 4.0694 4.1755 3.9156 3.6278 4.1605 4.7508 3.9068 4.4737   4.2678 3.9809 3.9962 4.0221 4.1784 4.6295 3.9198 4.5302 4.0257 3.8478   4.5472 3.9842 4.5061 4.3156 4.4963 4.5921 4.2833 4.0367 4.3687 3.9439   5.0468 4.2528 4.6797 4.3763 4.1658 4.1006 4.9189 4.0965 4.1622 4.1343   4.4017 4.2038 4.6909 4.4072 4.1615 5.1534 4.4998 3.9363 4.6018 3.8737   4.3671 4.1889 4.2161 4.3763]]
275                   3.05912         1.47597         0.67016         -0.45642          -0.08568          0.18065          1.40258          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8897 3.5105 4.1538 4.1298 3.3028 3.7997 4.2701 4.2492 4.6767 4.1435   4.3636 5.2918 3.8747 3.6097 4.006  4.1973 4.5582 4.3166 3.2221 4.3167   4.7744 4.4295 4.2194 4.1102 4.1488 4.0792 4.2928 4.3082 4.4767 4.6686   4.378  4.4646 3.9952 4.0887 4.2737 4.715  4.3867 4.0877 4.5507 4.3185   4.3013 4.0267 4.4693 4.521  4.5101 4.2778 3.9818 4.1576 4.6747 4.6704   4.7504 4.6809 4.3308 4.3166]]
276                   3.10279         1.53305         0.6861         -0.47721          -0.08958          0.18233          1.45408          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.2858 3.4192 3.9612 4.1269 3.9973 3.9474 4.5842 3.9436 4.4108 4.0827   4.3947 4.3257 4.0816 4.2271 4.2216 4.6158 4.0591 3.7852 3.9219 3.7306   4.6986 3.8131 3.8412 4.2368 4.2075 4.6701 4.1502 4.5999 4.4948 4.3145   4.5038 4.4298 4.0708 4.4558 4.7662 4.7834 4.3931 4.0686 3.7622 3.8589   4.1725 4.2676 4.4085 4.3403 4.9702 4.6869 4.1856 4.8418 3.998  4.5512   4.5522 4.4455 4.8375 4.8926]]
277                   3.03163         1.50811         0.67653         -0.44333          -0.10958          0.1797          1.28987          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6554 3.3908 4.032  4.2388 4.449  4.1757 3.5659 4.3424 4.2221 4.2327   4.3483 4.4063 4.5436 4.4628 4.0889 4.7125 4.0803 3.9307 3.4565 3.7614   4.033  3.5717 4.0921 4.1121 4.3896 4.0256 4.208  4.1609 4.4385 4.0232   4.6595 4.4764 4.4493 4.551  4.4688 4.1647 3.8892 4.486  3.9898 4.3875   4.2093 3.8651 4.5337 4.2352 4.7299 4.169  4.2016 4.2794 4.7803 4.568   3.9617 4.4052 4.8005 4.4673]]
278                   2.46567         1.3232         0.45584         -0.17388          -0.11027          0.1319          1.2257          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9355 2.7514 2.8023 2.7463 2.7013 2.6828 2.7993 2.9959 3.0639 2.9858   3.1093 2.9662 3.0757 2.8629 2.8067 2.6196 3.1898 2.8988 2.8726 2.9212   2.6657 2.726  3.0675 2.9393 3.1215 3.1722 3.0558 3.0412 3.0462 3.01   3.3156 3.4192 3.083  3.2277 3.3516 3.4629 2.698  3.3102 2.9588 2.6213   3.0174 2.9093 3.2331 3.2338 3.1963 3.1099 3.1446 3.201  3.1331 3.0858   3.1395 2.994  3.1874 3.2616]]
279                   2.38824         1.32518         0.45481         -0.13702          -0.08277          0.12764          1.2726          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7867 2.7163 2.6308 2.6925 2.7085 2.6796 2.9294 3.136  2.9347 3.2197   2.9861 3.0344 2.8873 3.0702 2.7906 2.9642 2.9635 3.0151 2.9978 2.7553   2.8373 2.9049 2.915  2.9826 3.0826 3.192  3.1443 3.1687 3.1566 3.1857   3.2581 3.1436 3.1061 3.2652 3.2315 3.2377 3.4581 2.9993 3.1204 3.0414   3.0714 3.0348 3.0369 3.0358 3.1212 3.2079 3.087  3.19   3.2602 3.5777   2.972  3.1984 3.1956 3.1194]]
280                   2.39911         1.32836         0.45915         -0.14219          -0.09247          0.12918          1.3614          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4198 2.912  2.5888 2.6447 2.5983 3.0791 2.8214 2.9803 2.9496 3.0511   2.9347 2.855  3.0265 2.8237 2.9093 2.853  2.9983 3.0807 2.8821 2.9273   2.9657 2.8482 2.7895 3.0607 3.1567 3.153  3.1565 3.0952 3.1577 3.1653   3.38   3.1096 3.1228 3.2519 3.0836 3.4312 3.1912 3.232  3.3675 3.0905   3.0402 3.0275 3.2726 2.9145 3.3339 3.2473 3.103  3.4714 3.3031 3.1421   3.4513 3.0896 3.2571 3.4176]]
281                   2.4576         1.34645         0.46809         -0.17004          -0.11903          0.13303          1.34292          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.658  2.7387 2.7026 2.2139 2.5138 2.6805 3.0225 3.0231 3.0402 2.9485   2.6157 3.0766 3.017  2.9332 3.0253 2.8658 2.8412 3.0874 3.021  2.9436   3.0012 2.8862 3.0789 2.7553 3.141  3.097  3.16   3.1403 3.1237 3.1543   3.3507 3.3509 3.3658 3.1881 3.1892 3.3604 3.1723 3.2673 3.1875 3.0815   3.1388 3.1397 3.3485 3.2404 3.3294 3.0801 3.1227 3.1219 3.1592 3.4146   3.2723 2.9951 3.136  3.4716]]
282                   2.17879         1.29408         0.48324         -0.0373          -0.03623          0.1223          1.35543          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.3251 3.3512 3.3091 3.319  3.347  3.3251 3.356  3.3582 3.3512 3.3596   3.3612 3.3575 3.3116 3.3458 3.3009 3.2858 3.3326 3.3171 3.3004 3.3102   3.2869 3.28   3.3108 3.2825 3.3175 3.3833 3.3487 3.3304 3.3535 3.3378   3.3686 3.3993 3.3659 3.361  3.3801 3.3558 3.3085 3.3705 3.3595 3.3662   3.3385 3.3592 3.3283 3.3699 3.362  3.3429 3.3349 3.3472 3.3389 3.288   3.3155 3.3111 3.257  3.3217]]
283                   2.27375         1.34197         0.54927         -0.08251          -0.03403          0.13573          1.52413          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.5984 3.7291 3.7514 3.7432 3.7302 3.6606 3.6295 3.6772 3.8175 3.6577   3.782  3.7326 3.7055 3.759  3.7087 3.6493 3.6955 3.7559 3.6575 3.5844   3.7051 3.6215 3.6816 3.7463 3.7348 3.6756 3.6151 3.8281 3.7322 3.805   3.6738 3.8229 3.7783 3.7348 3.7728 3.5996 3.7595 3.7536 3.6705 3.7796   3.7679 3.7036 3.6169 3.6885 3.7104 3.7603 3.6209 3.6895 3.667  3.5773   3.6147 3.6787 3.635  3.6512]]
284                   2.18289         1.29675         0.48365         -0.03925          -0.03798          0.12245          1.36023          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.2924 3.3648 3.2942 3.3011 3.3304 3.3406 3.3297 3.3809 3.3635 3.3461   3.3427 3.3837 3.3054 3.3189 3.2874 3.2906 3.2984 3.2962 3.2835 3.2831   3.2915 3.3066 3.2837 3.2847 3.3132 3.368  3.3652 3.3575 3.3409 3.3441   3.357  3.3544 3.3469 3.3803 3.3613 3.3652 3.3414 3.3902 3.3592 3.3468   3.3468 3.3286 3.3385 3.3443 3.3586 3.3508 3.3338 3.3354 3.3004 3.3118   3.3084 3.3108 3.3029 3.3115]]
285                   2.17906         1.29954         0.49053         -0.03743          -0.03739          0.1233          1.39815          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.3469 3.3864 3.3527 3.3608 3.3658 3.3756 3.3896 3.4009 3.3986 3.3847   3.3891 3.3977 3.3522 3.3759 3.3381 3.3308 3.359  3.3507 3.3232 3.3718   3.3347 3.3328 3.3313 3.3208 3.3688 3.4052 3.3999 3.3878 3.3752 3.3894   3.4087 3.4276 3.409  3.4148 3.4083 3.4014 3.3843 3.4188 3.4019 3.3911   3.3767 3.3995 3.382  3.3861 3.4028 3.3707 3.3666 3.3842 3.3487 3.3469   3.3356 3.3404 3.3364 3.359 ]]
286                   2.1754         1.29546         0.48494         -0.03569          -0.03494          0.12237          1.36415          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3004 3.3452 3.3089 3.3199 3.3469 3.3408 3.3914 3.3619 3.3637 3.3512   3.3671 3.3646 3.326  3.3719 3.3291 3.3099 3.322  3.3245 3.3098 3.3142   3.3154 3.2802 3.3159 3.2966 3.3345 3.3815 3.3555 3.3393 3.3309 3.3525   3.3952 3.3938 3.3581 3.3704 3.3487 3.3837 3.3622 3.3996 3.3743 3.3697   3.3415 3.3757 3.3222 3.3573 3.377  3.3547 3.3197 3.359  3.3268 3.3192   3.3097 3.3203 3.3035 3.3144]]
287                   2.30777         1.35391         0.55228         -0.09871          -0.05174          0.13715          1.53763          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.7278 3.737  3.6547 3.5505 3.7406 3.7358 3.783  3.7869 3.7766 3.7683   3.6152 3.7366 3.7001 3.7101 3.6914 3.6354 3.5718 3.7768 3.675  3.618   3.7054 3.6911 3.5554 3.5412 3.7085 3.6775 3.6791 3.7852 3.7476 3.6675   3.7781 3.6427 3.7939 3.7717 3.7457 3.7084 3.6567 3.7185 3.8004 3.6256   3.777  3.6895 3.6333 3.764  3.7799 3.582  3.6042 3.8283 3.5946 3.7176   3.7219 3.62   3.5975 3.7256]]
288                   2.17847         1.29368         0.48223         -0.03715          -0.03575          0.12213          1.35815          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2975 3.3167 3.2976 3.325  3.322  3.3214 3.3371 3.3415 3.3599 3.3463   3.3346 3.3393 3.291  3.3196 3.2955 3.2906 3.2968 3.2919 3.2897 3.3013   3.2818 3.2983 3.2886 3.2631 3.3191 3.3574 3.3511 3.3605 3.3203 3.3297   3.3849 3.364  3.3653 3.3643 3.3642 3.3639 3.3545 3.3748 3.3729 3.3564   3.3375 3.3405 3.3285 3.3344 3.3644 3.3364 3.3439 3.3326 3.324  3.3097   3.3092 3.2981 3.2914 3.3375]]
289                   2.17917         1.30017         0.49057         -0.03748          -0.03745          0.12328          1.39645          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3458 3.3873 3.3552 3.3546 3.3581 3.373  3.3897 3.3986 3.3969 3.3856   3.3899 3.3955 3.3471 3.3756 3.3347 3.3278 3.3361 3.3695 3.3253 3.3485   3.3287 3.3325 3.3542 3.321  3.3669 3.4076 3.4024 3.3879 3.395  3.389   3.408  3.4141 3.4091 3.4154 3.4104 3.4018 3.3813 3.4114 3.4181 3.3981   3.3813 3.396  3.3825 3.3878 3.4024 3.3703 3.3708 3.3832 3.3494 3.348   3.3334 3.343  3.3335 3.3781]]
290                   2.44628         1.38459         0.58925         -0.16465          -0.04049          0.1479          1.45528          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.9226 3.9558 3.8079 4.0089 3.8834 3.9436 3.9417 3.9379 3.841  3.8101   3.965  3.8779 3.9873 3.8459 3.9259 3.8858 3.8665 3.8379 3.7261 3.9259   3.8359 3.8896 3.8223 3.8328 3.7689 3.8278 3.9627 3.9866 3.943  4.0391   3.8703 3.9851 4.006  3.9519 3.988  3.9005 3.7835 3.9766 3.8961 3.9846   3.9013 3.6671 3.9855 3.8326 3.9203 4.0261 3.7901 3.8339 3.9098 3.7289   3.828  3.9324 3.7628 3.976 ]]
291                   2.79977         1.46409         0.64932         -0.33294          -0.05569          0.16843          1.49212          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.1895 3.9803 4.1833 4.2029 4.0407 4.3473 4.2769 4.1587 3.8943 3.0972   4.2437 4.1771 3.7994 4.2724 4.1891 4.059  4.095  4.166  4.1979 4.2954   4.2162 3.7547 4.1004 4.2249 4.2372 4.3105 4.3702 4.0191 4.1863 4.4392   4.0906 4.3657 4.2549 4.2593 4.2246 4.3185 4.1859 4.3093 4.149  4.2005   4.0657 3.8213 4.2477 4.1882 4.1506 4.21   4.2393 4.0833 4.0135 4.0742   4.1512 4.1148 4.1069 4.3259]]
292                   2.18149         1.3015         0.49223         -0.03859          -0.03859          0.12362          1.40675          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.353  3.3917 3.3612 3.3596 3.3651 3.3811 3.3995 3.4116 3.404  3.3897   3.3947 3.4066 3.356  3.3846 3.3439 3.3303 3.3473 3.3582 3.3337 3.3576   3.338  3.3374 3.3382 3.3273 3.3769 3.4135 3.4089 3.3932 3.3833 3.3946   3.4208 3.4227 3.4198 3.4281 3.418  3.4149 3.3951 3.4249 3.4102 3.4069   3.3868 3.408  3.3933 3.4022 3.4125 3.382  3.3828 3.3952 3.3643 3.357   3.3544 3.3565 3.3454 3.3761]]
293                   2.18354         1.29146         0.47554         -0.03956          -0.03516          0.12133          1.31905          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2491 3.3047 3.2769 3.2735 3.2824 3.2923 3.3243 3.3089 3.3152 3.2738   3.3135 3.3241 3.2557 3.2742 3.2759 3.2464 3.2666 3.256  3.2309 3.2526   3.2636 3.2688 3.2446 3.2307 3.269  3.3124 3.3229 3.3047 3.2767 3.2766   3.3388 3.3016 3.3156 3.3244 3.3354 3.3096 3.2912 3.3305 3.3242 3.2731   3.2943 3.3087 3.242  3.3035 3.327  3.2989 3.3097 3.314  3.2707 3.2696   3.2681 3.2298 3.2346 3.2937]]
294                   2.41935         1.37648         0.58559         -0.15183          -0.0329          0.1466          1.4438          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8963 3.7693 3.8697 3.8929 3.8982 3.8538 3.844  3.9739 4.0136 3.9955   3.8621 3.9308 3.8494 3.8602 3.8525 3.8722 3.8031 3.8779 3.597  3.8485   3.8817 3.8488 3.9718 3.8198 3.9454 3.8371 3.8936 3.8167 3.8238 3.8974   4.0259 3.9686 3.848  3.9778 4.0027 3.9691 3.8836 3.8752 3.8386 3.9187   3.9727 3.8808 3.8345 3.8395 3.7742 3.7647 3.81   3.9261 3.8616 3.8931   3.7836 4.0165 3.957  3.9361]]
295                   2.86624         1.48598         0.65828         -0.36459          -0.06485          0.17159          1.48855          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.0584 4.227  4.1169 4.3109 4.0742 3.6538 4.1791 4.2758 4.2001 3.9261   4.3573 4.2017 4.3019 4.3113 4.0775 3.8564 4.1856 4.2627 4.0167 4.1257   4.2221 4.1014 4.129  4.0071 4.1595 4.2187 4.351  4.3018 4.2622 4.2419   4.1852 4.0362 4.1769 4.2267 4.2698 4.0721 4.171  4.3114 4.4202 4.2774   4.2007 4.0693 4.257  4.2635 4.2436 4.2047 4.2    4.2565 4.3293 4.1686   4.005  4.1839 4.1939 4.0769]]
296                   2.18071         1.30156         0.49224         -0.03821          -0.03821          0.12358          1.4041          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3535 3.393  3.3567 3.3563 3.3628 3.3788 3.398  3.4107 3.4024 3.3923   3.3964 3.4033 3.3594 3.3821 3.3488 3.3403 3.3423 3.3579 3.3347 3.3567   3.3407 3.3406 3.3391 3.3248 3.3766 3.4139 3.4087 3.3962 3.3837 3.3947   3.4193 3.4244 3.4187 3.4283 3.4171 3.4146 3.3969 3.4255 3.4089 3.4049   3.3893 3.4096 3.395  3.399  3.4115 3.3797 3.379  3.3955 3.3634 3.3615   3.3497 3.3535 3.3456 3.3715]]
297                   2.22991         1.30214         0.48129         -0.06164          -0.05793          0.12407          1.31635          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2856 3.3182 3.2585 3.2345 3.2892 3.2746 3.507  3.294  3.5258 3.2682   3.2993 3.3091 3.2427 3.2698 3.2498 3.2123 3.2578 3.242  3.2129 3.2527   3.2374 3.2249 3.2265 3.2134 3.4966 3.3244 3.3194 3.2967 3.2808 3.2939   3.3257 3.3482 3.293  3.5286 3.3035 3.3198 3.2719 3.3392 3.2854 3.3157   3.2906 3.3043 3.2724 3.2916 3.317  3.2752 3.2539 3.27   3.2404 3.2627   3.2508 3.2581 3.2801 3.2836]]
298                   2.18884         1.29855         0.48579         -0.04208          -0.04124          0.12301          1.3563          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3113 3.367  3.2955 3.3186 3.3109 3.3438 3.3495 3.3783 3.3553 3.3376   3.339  3.3864 3.3287 3.3406 3.2846 3.2884 3.3015 3.3139 3.3029 3.3414   3.3012 3.2857 3.305  3.2767 3.3388 3.3662 3.3606 3.3642 3.3515 3.3413   3.358  3.3998 3.392  3.3932 3.3756 3.3753 3.3481 3.4001 3.3522 3.3573   3.3464 3.3764 3.3645 3.3918 3.3774 3.3106 3.3645 3.3337 3.3023 3.3401   3.3031 3.3261 3.2874 3.3289]]
299                   2.26692         1.33927         0.54822         -0.07926          -0.03116          0.13537          1.50513          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.7104 3.7515 3.7445 3.6538 3.7898 3.6834 3.5661 3.7846 3.6665 3.6172   3.7645 3.7579 3.5638 3.7799 3.7489 3.7314 3.6542 3.766  3.7295 3.6421   3.7105 3.6618 3.7222 3.578  3.7577 3.6921 3.7862 3.7306 3.7128 3.6372   3.6654 3.7759 3.8312 3.6185 3.8082 3.5791 3.7831 3.7592 3.7982 3.6959   3.6866 3.7304 3.6669 3.7606 3.6869 3.6074 3.7333 3.6847 3.7366 3.7163   3.5616 3.6    3.6702 3.579 ]]
300                   2.18224         1.29469         0.48266         -0.03894          -0.03757          0.12234          1.35875          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3108 3.347  3.3095 3.3079 3.3066 3.319  3.3443 3.3495 3.3625 3.3266   3.3288 3.3374 3.2937 3.3355 3.2771 3.2935 3.3019 3.3015 3.2855 3.3194   3.2937 3.2757 3.2753 3.2781 3.3144 3.366  3.3719 3.3503 3.325  3.3353   3.3698 3.373  3.3631 3.3801 3.366  3.3549 3.3554 3.3638 3.3545 3.3647   3.3191 3.3567 3.3312 3.3402 3.3608 3.3277 3.3444 3.3449 3.2899 3.3131   3.3041 3.2975 3.301  3.3451]]
301                   2.17498         1.2989         0.4908         -0.03548          -0.03548          0.12318          1.3997          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3689 3.3877 3.3581 3.3756 3.3676 3.3761 3.3912 3.4012 3.3974 3.3813   3.3899 3.4205 3.3514 3.3726 3.3325 3.3532 3.3385 3.3694 3.3246 3.3544   3.3371 3.3363 3.3333 3.3224 3.3656 3.4241 3.3995 3.3876 3.3741 3.3863   3.4097 3.4112 3.4054 3.4127 3.4073 3.4271 3.4035 3.4185 3.4011 3.3999   3.4018 3.415  3.3825 3.3887 3.4003 3.3719 3.3631 3.3803 3.3471 3.3724   3.3559 3.3623 3.3375 3.3817]]
302                   2.17768         1.29642         0.48458         -0.03677          -0.03582          0.12238          1.35615          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3023 3.3373 3.3013 3.3085 3.323  3.3238 3.3427 3.3671 3.3551 3.347   3.3627 3.3814 3.3162 3.3566 3.2949 3.3221 3.2904 3.3042 3.3151 3.301   3.2891 3.3104 3.3155 3.3006 3.3156 3.3724 3.3512 3.3492 3.3351 3.3514   3.3657 3.3738 3.3737 3.3688 3.382  3.3785 3.3388 3.3983 3.356  3.3563   3.355  3.3576 3.3567 3.3764 3.3808 3.3424 3.3215 3.3464 3.2928 3.3088   3.3221 3.3044 3.2984 3.3573]]
303                   2.32285         1.35934         0.55365         -0.10589          -0.0585          0.13783          1.4974          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.6705 3.6344 3.6553 3.7521 3.7273 3.7862 3.7182 3.6836 3.8014 3.6604   3.7161 3.7624 3.7631 3.7127 3.7234 3.5855 3.6587 3.6952 3.5585 3.5641   3.5953 3.6074 3.5492 3.6255 3.7843 3.8041 3.7774 3.6687 3.8279 3.6774   3.7299 3.7907 3.7225 3.7075 3.7152 3.8017 3.8142 3.7379 3.6825 3.6632   3.6904 3.7212 3.6494 3.7551 3.7202 3.8053 3.7706 3.6669 3.6494 3.707   3.7324 3.5332 3.6113 3.5786]]
304                   2.18978         1.29819         0.48405         -0.04254          -0.04116          0.12278          1.3577          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2977 3.3319 3.3042 3.3136 3.3107 3.3371 3.3546 3.3505 3.3497 3.3596   3.3218 3.3541 3.3052 3.3182 3.2879 3.2729 3.296  3.2914 3.2734 3.306   3.2952 3.2876 3.2771 3.2744 3.3148 3.3464 3.3705 3.3417 3.3141 3.3427   3.3686 3.3834 3.3751 3.3739 3.3824 3.3791 3.3431 3.3839 3.3573 3.355   3.3422 3.3594 3.3286 3.3433 3.3581 3.3419 3.3084 3.3383 3.3173 3.3087   3.2723 3.3188 3.3037 3.3186]]
305                   2.17883         1.29999         0.49055         -0.03732          -0.03728          0.12327          1.39475          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3539 3.3813 3.354  3.3585 3.3601 3.3732 3.3873 3.4037 3.3939 3.3828   3.3919 3.3948 3.3476 3.3731 3.3366 3.3298 3.3374 3.348  3.3277 3.3558   3.3368 3.3545 3.332  3.3198 3.3709 3.4064 3.4008 3.3842 3.3952 3.4062   3.4098 3.416  3.4093 3.4122 3.4088 3.4023 3.3876 3.4195 3.4001 3.3947   3.3752 3.3983 3.3816 3.3889 3.4014 3.3712 3.3698 3.3835 3.349  3.3473   3.3308 3.341  3.338  3.3609]]
306                   2.41558         1.38344         0.5854         -0.15003          -0.03652          0.14599          1.51598          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.9713 3.8839 3.8094 3.7804 4.0227 3.9041 3.9731 3.7785 3.9816 3.7089   3.9263 3.981  3.9155 3.9015 3.8115 3.7912 3.8232 3.9029 3.9027 3.8245   3.9054 3.9734 3.7838 3.5494 3.9313 3.9466 3.8141 3.9001 3.9102 3.6419   3.9506 3.8124 3.8059 3.9941 3.9866 3.7331 3.7129 3.9998 3.9665 3.9198   3.9517 4.008  3.9122 3.8667 3.6786 3.8658 3.8831 3.9499 3.8984 3.9059   3.8415 3.8026 3.8944 3.7439]]
307                   2.81788         1.47026         0.65265         -0.34156          -0.04208          0.16952          1.4003          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.2362 4.1556 4.2151 4.0992 4.1585 4.222  4.1565 4.1226 4.3158 4.3431   4.1107 4.2766 4.2798 4.1281 4.086  4.2434 4.2548 4.2078 4.2185 4.0581   4.1588 4.2819 4.2892 3.9344 4.2369 4.2965 4.2476 4.0926 4.1661 4.1989   4.1145 4.3126 3.9008 4.3269 4.2567 4.2557 3.8836 4.0931 4.3598 4.3226   4.2713 4.2466 3.9913 4.044  4.1989 4.1651 4.2288 4.2531 3.9661 4.0111   3.9602 4.0494 4.1484 4.3438]]
308                   2.1801         1.30107         0.49202         -0.03793          -0.03792          0.12353          1.4043          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3492 3.3848 3.36   3.3573 3.3618 3.3784 3.3955 3.407  3.4031 3.3918   3.3962 3.405  3.3547 3.3804 3.3466 3.339  3.3417 3.3617 3.333  3.3587   3.3402 3.34   3.3394 3.3273 3.3775 3.4152 3.4084 3.3962 3.3838 3.3963   3.4181 3.4243 3.4168 3.4249 3.4172 3.417  3.3973 3.4286 3.406  3.4053   3.3895 3.4036 3.391  3.3989 3.4117 3.3813 3.3801 3.3927 3.3604 3.3604   3.3469 3.3523 3.349  3.3752]]
309                   2.19084         1.29544         0.47714         -0.04304          -0.03885          0.12182          1.33055          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2572 3.3096 3.2741 3.2764 3.2681 3.2976 3.318  3.3266 3.3279 3.3051   3.3206 3.3412 3.2142 3.2844 3.2348 3.248  3.2688 3.2675 3.2477 3.2631   3.1993 3.2547 3.2225 3.2044 3.2849 3.2998 3.333  3.2894 3.2989 3.2813   3.3478 3.3532 3.3257 3.3193 3.3107 3.322  3.2791 3.301  3.2761 3.3383   3.2786 3.3281 3.3038 3.2965 3.344  3.3073 3.2555 3.304  3.271  3.2248   3.4118 3.2621 3.2526 3.2705]]
310                   2.4529         1.39245         0.59409         -0.1678          -0.03502          0.14874          1.44418          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8868 3.9676 3.7709 3.903  3.9497 3.9152 3.9505 3.9011 3.9873 3.5783   3.9227 4.0135 3.8579 3.9692 3.9304 3.8949 3.8079 3.7867 3.9494 3.9222   3.9382 3.914  3.8085 3.8159 3.9672 3.9946 3.9311 3.814  3.767  3.9051   3.9794 3.96   4.0096 3.9847 3.9884 3.9498 3.9477 3.8855 3.9108 3.9432   3.9549 3.9199 3.9188 3.9977 3.8556 3.8982 3.8616 4.0217 3.9132 3.9254   3.9223 3.8643 3.911  3.9399]]
311                   2.86894         1.4915         0.65918         -0.36588          -0.08425          0.17165          1.43055          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.1628 4.2014 4.1223 3.9661 4.3202 4.1618 4.3463 4.0754 4.3625 4.1486   4.263  3.9384 3.941  4.2575 4.2169 4.325  4.0344 4.0211 4.2563 4.207   4.1344 4.0436 4.021  4.1419 4.1766 4.195  4.2675 4.2364 4.1544 4.3066   4.2407 4.1004 4.1877 4.0753 4.0082 4.3964 4.1883 4.3876 4.2376 4.3875   4.25   4.3983 3.3241 4.1174 4.3482 4.2208 3.9325 4.3685 4.0573 4.1455   3.991  4.0466 4.1354 3.6483]]
312                   2.18234         1.30174         0.49239         -0.03899          -0.03899          0.12367          1.4045          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3514 3.3934 3.3586 3.3609 3.3648 3.3755 3.4    3.4131 3.4043 3.3912   3.3994 3.4017 3.3581 3.3805 3.3474 3.3392 3.3471 3.3587 3.3324 3.3578   3.3414 3.3405 3.3389 3.3269 3.3773 3.4152 3.4078 3.3963 3.3831 3.3961   3.4216 3.4281 3.4227 3.428  3.4222 3.4164 3.394  3.4242 3.4087 3.4074   3.3862 3.4047 3.3974 3.4024 3.4115 3.3795 3.3797 3.3939 3.3581 3.3674   3.34   3.348  3.3488 3.3766]]
313                   2.18813         1.29952         0.47852         -0.04175          -0.03798          0.1217          1.3061          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.258  3.3301 3.2819 3.2659 3.2682 3.3002 3.3059 3.3058 3.298  3.2906   3.5153 3.3065 3.2567 3.2767 3.2581 3.2297 3.262  3.2797 3.241  3.2757   3.2233 3.2139 3.2434 3.4435 3.2862 3.3036 3.2968 3.2887 3.2546 3.3147   3.3416 3.333  3.3207 3.3224 3.3275 3.3156 3.2743 3.3013 3.3057 3.3071   3.3165 3.32   3.2822 3.5057 3.2957 3.2991 3.2489 3.2949 3.2608 3.2613   3.2418 3.2033 3.2291 3.2833]]
314                   2.17868         1.2958         0.48443         -0.03725          -0.03645          0.1224          1.3624          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3121 3.3559 3.3486 3.3058 3.352  3.3495 3.3486 3.3636 3.3734 3.3614   3.3585 3.363  3.3257 3.3451 3.3081 3.2834 3.3159 3.3288 3.2885 3.3115   3.3148 3.2946 3.3044 3.2803 3.3389 3.3578 3.371  3.3679 3.3382 3.3598   3.3743 3.4148 3.3469 3.3647 3.3779 3.3725 3.3745 3.3738 3.3671 3.3438   3.3563 3.3618 3.3557 3.346  3.3848 3.3522 3.3142 3.3501 3.2889 3.3388   3.2746 3.3261 3.3334 3.3307]]
315                   2.2787         1.33789         0.55061         -0.08487          -0.03428          0.13644          1.4793          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.6892 3.6451 3.699  3.5787 3.6192 3.7625 3.7398 3.6836 3.8046 3.6761   3.7824 3.6373 3.7954 3.6537 3.8238 3.6219 3.5052 3.6986 3.7344 3.5826   3.7393 3.7506 3.7521 3.7198 3.7013 3.8068 3.6064 3.6445 3.761  3.6404   3.8089 3.7259 3.8484 3.7807 3.8184 3.8188 3.5962 3.7183 3.7376 3.7998   3.6195 3.7855 3.7569 3.6624 3.7181 3.7208 3.6515 3.7955 3.5579 3.7529   3.7181 3.6926 3.5765 3.7519]]
316                   2.17661         1.29357         0.48244         -0.03626          -0.035          0.12209          1.35065          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3009 3.3434 3.3068 3.2991 3.3182 3.3271 3.3579 3.3517 3.3521 3.3245   3.327  3.3497 3.3208 3.3447 3.2828 3.2763 3.2842 3.3205 3.2768 3.3133   3.3057 3.2955 3.3092 3.2931 3.322  3.3565 3.3634 3.3351 3.3358 3.3496   3.3874 3.3816 3.3894 3.3534 3.3838 3.3516 3.3354 3.353  3.3361 3.3778   3.3346 3.3564 3.3441 3.3427 3.3594 3.3378 3.3281 3.3282 3.3189 3.3179   3.3143 3.2901 3.297  3.3178]]
317                   2.18437         1.30189         0.49147         -0.03996          -0.03993          0.1236          1.39585          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.345  3.3897 3.3606 3.3515 3.3602 3.3787 3.393  3.4208 3.3973 3.3836   3.3954 3.3933 3.3493 3.37   3.3355 3.3297 3.3559 3.3495 3.3231 3.3502   3.3294 3.3314 3.3372 3.319  3.3693 3.4036 3.3992 3.3861 3.393  3.4066   3.4075 3.4144 3.4113 3.4351 3.4107 3.4036 3.3869 3.4175 3.3998 3.4008   3.3777 3.3944 3.4019 3.3892 3.4161 3.3663 3.3911 3.3839 3.3478 3.351   3.3345 3.3407 3.3373 3.3603]]
318                   2.1788         1.29579         0.48448         -0.0373          -0.03646          0.12243          1.361          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.331  3.3505 3.3379 3.3244 3.3078 3.3317 3.3614 3.3702 3.3676 3.3522   3.3581 3.3419 3.2916 3.3431 3.2937 3.2979 3.3063 3.3202 3.3241 3.3443   3.3011 3.3041 3.3149 3.2853 3.3335 3.3661 3.3829 3.3392 3.3471 3.3394   3.3854 3.3568 3.3963 3.3607 3.4037 3.3694 3.3388 3.387  3.3819 3.3573   3.3694 3.3629 3.3787 3.3555 3.3591 3.3344 3.3435 3.3329 3.2996 3.3121   3.2913 3.3166 3.3079 3.3176]]
319                   2.25775         1.33493         0.54686         -0.07489          -0.02385          0.13494          1.5085          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.6645 3.6417 3.7679 3.6786 3.7353 3.7106 3.6625 3.8546 3.7032 3.7574   3.758  3.7916 3.6201 3.7346 3.6988 3.7129 3.5825 3.714  3.6565 3.7228   3.6293 3.595  3.7127 3.6666 3.6796 3.7667 3.6529 3.6002 3.629  3.8085   3.8229 3.6591 3.8473 3.5944 3.6896 3.7814 3.6595 3.6137 3.8633 3.8107   3.7395 3.6015 3.7506 3.7313 3.7697 3.706  3.6389 3.757  3.667  3.7244   3.8336 3.741  3.7465 3.6905]]
320                   2.1771         1.29447         0.48287         -0.03649          -0.03521          0.12214          1.35778          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2889 3.323  3.2889 3.2984 3.3315 3.3527 3.3292 3.348  3.3482 3.3368   3.3358 3.357  3.3066 3.331  3.2998 3.2901 3.2999 3.3081 3.2782 3.2954   3.2865 3.2862 3.284  3.2893 3.3469 3.3716 3.3708 3.3593 3.3382 3.3406   3.3523 3.3692 3.3722 3.3715 3.3627 3.3538 3.3375 3.3872 3.3629 3.3587   3.3434 3.3559 3.3632 3.3255 3.3621 3.3251 3.3024 3.3244 3.3147 3.331   3.3051 3.3025 3.3171 3.3382]]
321                   2.17798         1.29976         0.49072         -0.03691          -0.03689          0.12327          1.39635          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3515 3.4055 3.3753 3.3549 3.362  3.3773 3.3917 3.4037 3.3958 3.3847   3.393  3.4152 3.3492 3.372  3.3375 3.327  3.3569 3.3478 3.3294 3.3468   3.3362 3.33   3.3338 3.3206 3.3682 3.4044 3.3971 3.4057 3.3745 3.3867   3.4105 3.415  3.4052 3.4163 3.4094 3.3964 3.4048 3.4192 3.3963 3.3996   3.3731 3.4006 3.3793 3.3896 3.3992 3.369  3.3707 3.3822 3.3492 3.3723   3.337  3.363  3.3342 3.3609]]
322                   2.49944         1.40475         0.59804         -0.18996          -0.06447          0.15082          1.45568          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8583 3.9624 3.7934 3.8064 3.7772 3.8711 3.8616 4.0118 3.9226 3.9067   3.985  3.9103 3.8994 3.7747 3.8608 3.9518 3.8945 3.8451 3.8705 3.7636   3.9045 3.8285 3.909  3.7402 3.9798 3.977  4.0005 3.8354 3.7543 3.9923   3.9008 3.9972 3.9966 3.9449 4.0347 3.8966 3.9283 3.9166 4.0168 4.0027   3.9795 3.9116 3.9279 3.825  4.0131 3.9001 3.839  3.9028 3.897  3.9344   3.8837 3.826  3.7194 3.7474]]
323                   2.74422         1.45439         0.64656         -0.30649          -0.01172          0.16603          1.41657          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.1386 4.1605 4.1481 4.1572 4.1634 4.1546 4.2816 4.1735 4.1169 4.2466   4.0151 4.2288 4.0405 4.2401 4.3148 4.1832 4.1779 4.0729 4.078  4.2027   4.3064 4.1723 4.1985 4.1295 4.2091 3.4798 4.0752 4.2082 4.2431 4.0458   4.1377 4.1407 4.2187 4.5334 4.4121 4.3207 4.3354 4.1887 4.2569 4.3074   4.1371 4.0451 4.0924 3.5659 4.2611 4.3333 4.0925 4.454  4.3218 4.0376   4.0748 4.2266 4.3097 3.9911]]
324                   2.18166         1.30139         0.49228         -0.03867          -0.03867          0.12364          1.40395          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3516 3.3897 3.3582 3.3623 3.3665 3.3757 3.3957 3.4114 3.4034 3.3902   3.3938 3.4035 3.3616 3.3838 3.3474 3.3387 3.3462 3.3599 3.3326 3.3562   3.3379 3.3369 3.3396 3.3258 3.3748 3.4151 3.4089 3.3961 3.3804 3.3953   3.4203 3.4285 3.4226 3.4252 3.4212 3.4171 3.3948 3.4287 3.4088 3.4044   3.3904 3.4071 3.3913 3.4008 3.4139 3.3842 3.3781 3.3945 3.3607 3.3627   3.3482 3.3522 3.3474 3.3744]]
325                   2.20831         1.30168         0.48282         -0.05135          -0.04935          0.12324          1.31625          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4388 3.2884 3.2839 3.2508 3.2677 3.2707 3.3285 3.2898 3.5298 3.5203   3.3005 3.316  3.2523 3.2867 3.2341 3.2753 3.2448 3.239  3.2586 3.2821   3.4619 3.2736 3.2458 3.2303 3.2837 3.2725 3.314  3.3149 3.277  3.3091   3.3244 3.3333 3.5066 3.3139 3.3427 3.3148 3.3104 3.358  3.3165 3.2977   3.325  3.5089 3.2845 3.5059 3.3345 3.4927 3.2974 3.295  3.2695 3.2768   3.2299 3.2465 3.2519 3.285 ]]
326                   2.50546         1.40855         0.59599         -0.19283          -0.06913          0.1505          1.44833          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.9438 3.933  3.9147 3.9318 3.9453 3.7984 3.9679 3.8847 3.9686 3.9274   3.9701 3.9396 3.7127 3.8007 3.8844 3.8174 3.8856 3.8749 3.8189 3.7626   3.5849 3.9249 3.909  3.7971 3.9466 3.8703 4.0015 3.9477 3.8916 3.9354   3.9957 3.9531 3.8824 3.9025 3.8491 4.0005 3.8702 3.9286 3.9426 3.995   3.9499 3.9971 3.9572 3.9076 3.9581 3.9841 3.758  3.8999 3.9047 3.8367   3.777  3.8769 3.6806 3.8933]]
327                   2.82751         1.4875         0.65738         -0.34615          -0.0692          0.17095          1.46303          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.0987 4.2583 2.3785 4.158  4.2346 4.2369 4.1781 4.2246 4.3259 4.1211   4.2428 4.1938 4.2248 4.1191 4.1616 4.1015 4.2138 4.2161 4.1698 4.0973   4.1543 4.1415 4.2091 4.0907 4.2718 4.1464 4.349  4.108  4.2055 4.1383   4.0891 4.1669 4.3682 4.2931 4.2017 4.0681 4.1621 4.2186 3.8457 4.1134   4.1686 4.235  4.13   4.2105 4.3143 4.1095 4.0289 4.1864 4.3153 4.0405   4.163  4.1038 4.2746 4.2757]]
328                   2.18276         1.30212         0.49245         -0.03919          -0.03919          0.12369          1.40545          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3537 3.391  3.3559 3.3582 3.3679 3.3792 3.3987 3.4068 3.4034 3.3898   3.3958 3.4037 3.3583 3.3887 3.3456 3.3366 3.3459 3.3564 3.3331 3.3586   3.3385 3.3384 3.3369 3.3239 3.3765 3.4149 3.4084 3.3954 3.3824 3.3958   3.4205 3.4228 3.4221 3.4279 3.4217 3.418  3.3964 3.4267 3.4103 3.4072   3.3891 3.4101 3.3931 3.4022 3.4148 3.3802 3.3811 3.3956 3.358  3.361   3.3508 3.3509 3.3501 3.3681]]
329                   2.18137         1.29452         0.47911         -0.03853          -0.03527          0.12175          1.3282          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2699 3.3001 3.2707 3.2363 3.2819 3.2906 3.4846 3.3139 3.342  3.2865   3.2848 3.3269 3.2706 3.2787 3.2331 3.4504 3.2199 3.2848 3.2452 3.2971   3.2452 3.2556 3.4479 3.2285 3.2401 3.3079 3.3093 3.2954 3.275  3.2962   3.3294 3.3311 3.3361 3.5087 3.3215 3.3379 3.2993 3.2981 3.2977 3.3295   3.2836 3.2833 3.3142 3.3106 3.3395 3.2918 3.2926 3.294  3.2693 3.2353   3.2408 3.246  3.2537 3.2882]]
330                   0.93635         0.72255         0.27272         0.55421          0.55547          0.0562          0.56668          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3986 3.8    3.4677 3.4658 3.3771 3.6668 2.1333 2.2666 2.2008 3.3965   2.1342 2.201  3.358  3.3828 3.3448 3.3386 3.3457 3.3584 5.2664 5.5322   5.3334 5.3337 5.3333 5.1995 3.3774 3.4151 3.4088 2.668  2.5324 3.3962   1.6002 1.6672 1.6003 1.6666 1.5991 1.5329 1.9999 3.4274 3.4085 3.409   1.9334 3.4086 3.0006 3.0648 3.2    3.3778 3.3767 3.0007 5.1992 3.3518   5.0675 5.1332 5.0669 3.3659]]
331                   1.14322         0.79943         0.28935         0.45573          0.46912          0.06461          0.69737          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3995 3.4028 3.4667 3.4672 3.3776 3.6665 2.1336 3.4153 2.1999 2.0662   2.1333 2.2008 3.3587 3.3828 3.3464 3.3399 3.3472 3.3573 5.2661 3.3652   5.3331 5.3333 5.3321 5.2008 2.4676 3.4151 2.7999 2.6673 2.5328 2.6665   1.5967 1.668  1.5998 1.6679 1.6002 1.5335 3.3949 3.4266 3.4091 3.4088   3.389  3.4099 2.9991 3.3961 3.2008 2.8686 2.8684 2.9989 5.2001 3.3512   3.3389 5.133  3.34   3.3663]]
332                   1.17013         0.82865         0.29784         0.44291          0.44315          0.06411          0.66488          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8002 3.4665 3.4667 3.3776 3.3906 3.4031 2.2669 2.1985 3.3962   2.1333 2.201  3.3587 5.1332 3.3478 3.3396 3.3453 3.3589 5.2665 5.5325   5.3335 5.3327 5.3333 5.1993 3.3773 3.4151 3.4088 2.6662 2.5338 2.6652   1.6003 1.6667 1.6    1.666  1.6008 1.5344 3.3964 3.4262 3.409  3.4076   3.3904 3.4078 3.3899 3.3964 3.2    2.8677 3.3777 3.     3.3529 5.1995   5.0682 3.3457 3.3405 3.3651]]
333                   1.1079         0.8242         0.29866         0.47254          0.47389          0.06288          0.72948          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4004 3.4026 3.4661 3.3709 3.5336 3.6655 3.4031 3.4154 2.2055 3.3956   2.135  2.2002 3.3577 3.3844 3.3475 3.3391 3.3466 3.359  5.2668 5.5327   5.3331 5.3339 5.3342 5.1993 2.468  2.8663 2.7996 2.667  2.5317 3.3962   1.5998 1.6678 1.5999 1.6676 1.6012 1.5334 3.3974 3.426  3.4088 3.4089   3.3899 3.4085 3.3892 3.3961 3.1978 3.377  2.8673 3.3894 3.3521 3.3526   5.0667 5.1324 3.3401 3.3654]]
334                   1.26212         0.86002         0.29866         0.39912          0.40531          0.06639          0.61492          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4007 3.4022 3.4668 3.3707 3.5342 3.3895 2.1339 2.2672 2.1992 2.0669   2.1331 3.4086 3.3573 5.1322 3.3462 3.3399 3.3457 3.3584 5.2667 5.533   5.3323 5.3333 5.3335 5.1979 3.3773 2.8664 3.4088 2.6662 3.3836 2.6638   1.5997 1.6674 1.6001 1.6695 1.6014 1.5334 3.3965 3.4274 3.4083 3.4089   3.3879 3.4077 3.3901 3.0667 3.1979 2.8676 3.3769 3.3894 3.3522 3.3524   3.3398 3.3464 3.3406 3.3659]]
335                   1.12397         0.82435         0.29313         0.46489          0.4687          0.06232          0.69817          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.402  3.467  3.4667 3.5333 3.667  2.1339 2.2671 2.2009 2.067   2.1338 2.2035 3.3578 5.1323 3.3473 3.3387 3.345  3.3582 5.2662 5.5315   5.3335 3.3459 5.3334 5.2008 3.3773 3.4151 2.7985 2.6662 3.3836 3.3962   1.5995 1.6671 1.6004 1.6678 1.5998 1.5343 3.3966 3.4271 3.4078 3.4085   1.9297 3.4085 3.0006 3.396  3.4082 2.8656 2.8668 3.3898 3.3515 5.1989   5.066  3.3454 5.065  3.3643]]
336                   0.97609         0.74882         0.27598         0.53529          0.53643          0.05689          0.59977          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4005 3.4028 3.3704 3.4667 3.3781 3.39   2.1339 2.2675 2.1995 2.0671   2.1334 2.2007 3.3581 5.133  3.3465 3.34   3.3455 3.359  5.2666 5.5336   5.333  5.3334 5.3337 5.1996 2.4659 2.8669 3.4088 2.6669 3.3837 2.6671   1.6012 1.6663 1.6009 1.6674 1.6013 1.5335 3.396  3.4277 3.4087 3.4093   1.9328 3.4082 2.9991 3.3963 3.4086 2.8681 3.3759 3.3897 5.1984 3.3521   5.0675 5.1331 5.0667 3.3648]]
337                   1.09403         0.80512         0.29821         0.47914          0.4792          0.06289          0.72883          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.4027 3.4665 3.4674 3.5335 3.6667 3.4023 2.2674 3.4083 3.3964   2.1351 2.1993 3.3596 3.3829 3.3456 3.3396 3.3455 3.3584 5.2652 5.5335   5.3339 5.3335 5.3333 5.1993 3.3773 3.4151 2.801  3.3961 3.3836 3.3961   1.6014 1.6675 1.5999 1.6687 1.6001 1.5334 3.3962 3.4259 3.409  3.4075   1.9332 3.4095 3.3903 3.3949 3.4086 2.867  3.3772 2.9994 5.1986 5.2007   5.0663 3.3456 3.339  3.3641]]
338                   1.11919         0.82941         0.30294         0.46717          0.46744          0.06326          0.72978          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4004 3.4022 3.3715 3.467  3.5333 3.3901 3.4034 2.2675 2.2028 3.3967   2.1336 3.4085 3.358  5.1333 3.3456 3.3399 3.345  3.3591 5.2669 5.5344   5.3325 5.3333 5.3332 5.2006 3.3773 2.8667 3.4088 3.3962 2.533  2.6669   1.6008 1.6666 1.6012 1.6638 1.6002 1.5344 3.3958 3.4269 3.4095 3.4085   1.9334 3.4086 3.3903 3.0674 3.2006 2.8659 2.866  3.0003 3.3521 5.1995   3.3401 5.1361 5.0662 5.3327]]
339                   1.10725         0.78044         0.27787         0.47285          0.47374          0.05938          0.56702          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3655 3.4024 3.4651 3.4666 3.5304 3.3899 2.1334 2.2658 2.1997 2.0662   3.4023 2.2014 4.8673 5.1331 3.3461 3.3391 3.3458 3.3593 5.2668 5.5338   5.3344 5.3326 5.3332 5.1999 3.3774 2.8664 2.7997 2.6665 2.5333 3.3962   1.5982 1.6663 1.5959 1.6704 1.6    1.5343 3.3963 3.4284 3.4098 3.4086   3.3891 3.4079 3.     3.0669 3.1999 2.8681 3.3774 2.9991 5.1999 5.1996   3.3404 3.346  3.339  3.3659]]
340                   1.22964         0.84         0.30711         0.41458          0.4146          0.06776          0.72953          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3996 3.4028 3.4668 3.4665 3.5338 3.3899 2.1344 3.4152 2.2009 3.3967   2.1332 3.4096 3.3593 5.1333 3.3459 3.3388 3.3464 4.8679 5.2655 5.5333   5.333  5.3343 5.3326 5.2012 3.3774 3.4151 2.8002 3.3962 3.3836 3.3962   1.5989 1.6671 1.5999 1.6664 1.6    1.5337 3.3966 3.4268 3.408  3.4093   3.3888 3.4094 3.0006 3.0671 3.201  3.3769 2.8688 2.9988 3.3525 3.3518   3.3383 5.133  3.3387 3.3641]]
341                   0.98041         0.72936         0.28291         0.53324          0.53445          0.05888          0.4992          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.4019 3.4672 3.4669 3.3767 3.6667 3.4029 3.4151 2.1992 2.0674   2.1332 3.4101 4.8669 3.3839 3.3459 3.3395 3.3452 3.357  5.2664 5.5336   5.3337 5.3328 5.3328 5.2002 3.3774 2.8658 3.4088 2.6671 2.5339 2.6661   1.6008 1.6676 1.6    1.6673 1.6006 1.5344 3.3957 3.4283 3.4075 3.4104   3.3895 3.4092 3.0008 3.0689 3.2008 3.3772 3.3773 3.3893 5.199  5.2004   5.0666 5.1343 3.34   3.365 ]]
342                   1.1827         0.84677         0.31803         0.43693          0.43783          0.0698          0.69875          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4002 3.7991 3.4666 3.4654 3.5336 3.3892 2.133  3.4144 3.409  2.0672   2.1334 3.4101 3.3581 5.1311 3.3456 3.34   3.3458 3.3589 5.266  5.5337   5.3331 5.3338 5.3328 5.1998 2.4667 2.8668 3.4088 2.6662 2.5322 2.6666   1.6005 1.666  1.6    1.6667 1.6005 1.5333 1.9994 3.4278 3.4078 3.409   1.9315 3.4081 3.0019 3.3969 3.4091 3.3765 3.3776 2.9998 3.3534 5.2002   5.0673 3.3478 5.0668 3.3648]]
343                   1.10543         0.78747         0.27836         0.47372          0.49075          0.06128          0.6004          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4661 3.4667 3.3769 3.3901 2.134  2.2672 2.2005 2.0664   2.1344 2.1995 3.3593 3.3836 3.3463 3.3381 3.3465 3.3593 5.2668 5.5335   5.3331 5.3331 5.3329 5.2    2.4674 2.8675 2.7999 2.6671 2.5343 2.6668   1.5995 1.6641 1.6    1.6668 1.6002 1.5337 1.9995 3.4272 3.4086 3.4097   1.9338 3.4087 3.0002 3.396  3.409  2.8622 3.3779 3.3896 5.1993 3.3526   3.3382 5.134  3.3397 3.3652]]
344                   0.95375         0.73579         0.27126         0.54593          0.54597          0.05482          0.59892          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4681 3.3707 3.5332 3.3907 2.1324 2.2691 2.2005 2.067   3.4025 2.2012 3.3581 5.1334 3.3445 3.3383 3.347  3.3604 5.2659 5.5333   5.3337 5.3333 5.3332 5.1962 2.4671 2.8661 2.7998 2.6673 3.3836 2.6677   1.6001 1.6662 1.5992 1.6667 1.6    1.5338 3.3962 3.4259 3.4077 3.4086   3.39   3.409  3.3893 3.0667 3.1996 2.8666 3.3776 3.0024 5.2002 3.3528   5.0672 5.1323 5.0683 3.365 ]]
345                   1.18777         0.84034         0.30365         0.43452          0.43599          0.06674          0.72918          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3654 3.4011 3.4665 3.3706 3.5344 3.6667 2.1328 3.4146 2.2017 3.3958   2.1329 2.1999 3.3587 5.1327 3.3458 3.339  3.3461 3.3588 5.2682 5.5332   5.333  5.3332 5.3322 5.2012 2.4657 3.415  3.4088 3.3962 3.3836 3.3962   1.6018 1.6663 1.6011 1.668  1.6002 1.5353 3.3959 3.4259 3.4081 2.1333   1.9333 3.4083 2.9996 3.3953 3.4087 2.8677 3.3774 3.0004 3.3535 3.3513   5.0666 5.1331 3.3397 3.3657]]
346                   1.05917         0.80359         0.29018         0.49574          0.49841          0.06056          0.69782          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.401  3.4037 3.3712 3.4666 3.5336 3.6663 2.1341 2.2658 3.4078 3.396   2.1338 2.2002 3.3603 3.3832 3.3459 3.3395 3.3467 3.3582 5.267  5.5331   5.3331 5.3332 5.3334 5.1994 2.4662 2.8671 2.8018 2.6698 3.3837 3.3962   1.5997 1.6676 1.5983 1.6665 1.6002 1.5339 3.3967 3.4256 3.4088 3.4084   1.9266 3.4094 3.39   3.3961 3.4097 3.3773 3.3779 3.3892 3.351  3.3515   5.0653 3.3464 5.0667 3.3641]]
347                   1.02667         0.7924         0.28868         0.51121          0.51448          0.05972          0.72888          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3985 3.4028 3.3706 3.3707 3.3775 3.3904 2.1334 2.267  2.201  3.3968   2.1335 3.4094 3.3589 3.3835 3.3459 3.3401 3.3452 3.3593 5.2668 5.5317   5.3333 5.3312 5.3317 5.1997 2.4665 2.8664 2.8002 2.6669 2.5333 3.3962   1.6    1.6656 1.6003 1.6682 1.5993 1.5338 3.3949 3.427  3.4102 3.4086   1.9333 3.411  3.39   3.3962 3.4087 2.8662 3.3771 2.9999 3.3525 5.1998   5.0657 3.3469 5.0672 3.3647]]
348                   0.94217         0.73936         0.27301         0.55144          0.55277          0.05552          0.60115          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4004 3.402  3.4667 3.4672 3.3779 3.3901 3.4028 2.2677 2.2006 2.0674   2.1334 2.1974 3.3584 3.3835 3.3457 3.3406 3.3458 3.3595 5.2648 5.5338   5.3342 5.3326 5.3319 5.2    2.4664 2.8678 2.7997 2.6677 3.3836 3.3962   1.6002 1.6666 1.5998 1.6676 1.5999 1.5335 3.3968 3.426  3.4081 3.4081   1.9328 3.4084 3.3896 3.3958 3.41   3.377  2.8665 3.0004 5.1997 5.1988   5.0654 3.3465 5.0653 3.3653]]
349                   1.00967         0.74748         0.27865         0.51931          0.51935          0.05875          0.59945          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4004 3.4028 3.4666 3.4672 3.5346 3.3916 2.1344 2.2667 2.2002 2.0678   3.4019 2.1997 3.3576 3.3851 3.3454 3.3394 3.3449 3.3577 5.2668 5.5331   5.3329 5.3334 5.3331 5.2008 2.4636 3.4151 3.4087 2.6671 2.5331 2.6666   1.6001 1.6677 1.6    1.6678 1.6002 1.5341 3.3967 3.4276 3.4084 3.4086   3.3914 3.4082 2.9991 3.3956 3.4085 2.8673 2.8664 2.9991 5.1976 5.2003   5.0663 5.1336 3.3401 5.3327]]
350                   1.07391         0.79239         0.29144         0.48872          0.48876          0.06093          0.67932          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.4026 3.3709 3.4666 3.5335 3.3898 3.402  2.267  2.1984 2.0669   3.4025 2.1994 3.3586 5.1354 3.3457 3.3393 3.346  4.8659 5.2669 5.5327   5.3326 5.3316 5.3341 5.2007 2.467  3.4151 2.8004 3.3962 2.5334 2.6674   1.6001 1.6663 1.6004 1.6671 1.5997 1.532  3.3964 3.4269 3.4084 3.4096   3.3897 3.4077 3.0026 3.3965 3.1992 2.8663 3.377  3.0009 5.201  3.3528   3.3403 5.133  5.0665 3.3643]]
351                   1.2489         0.89886         0.31534         0.40541          0.41366          0.06862          0.79907          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4023 3.4032 3.4672 3.4685 3.5331 3.6668 2.1327 2.2667 2.2007 3.3965   2.1331 3.4092 3.3582 5.1334 3.3455 3.3409 3.3455 3.3587 5.2671 5.533   5.3331 5.3329 5.3333 5.2015 2.4667 2.8669 3.4088 2.6655 2.5337 3.3962   1.599  1.6663 1.6017 1.6667 1.6016 1.5337 2.     3.4285 3.4079 3.4072   1.9341 3.4096 3.3906 3.0677 3.2001 2.8666 2.8648 3.39   3.3517 3.3523   3.3407 3.3476 5.0662 3.3647]]
352                   1.12742         0.83105         0.30559         0.46324          0.46342          0.06517          0.72938          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4007 3.8011 3.3693 3.4675 3.5334 3.6668 3.4024 3.4143 3.4091 3.3959   2.1337 2.2003 3.3583 3.3836 3.3454 3.3385 3.3453 3.3577 5.2659 5.5332   5.3348 5.3325 5.3335 5.2009 3.3774 3.4151 2.8    3.3962 2.5331 3.3962   1.6    1.6667 1.6005 1.6665 1.6    1.5333 3.3954 3.4277 2.1331 3.4089   1.9303 3.4099 2.9995 3.0667 3.2005 3.3774 2.8653 3.0009 3.3526 3.3522   5.0661 3.3455 5.0666 5.3337]]
353                   0.97967         0.74877         0.27978         0.53359          0.53371          0.05719          0.6002          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3997 3.4028 3.4662 3.467  3.5335 3.6666 2.135  2.2665 2.2005 3.3966   2.1348 2.1972 3.3577 5.1332 3.345  3.3396 3.3449 3.3566 5.2664 5.5339   5.3325 5.3341 5.3335 5.2003 3.3773 3.4151 3.4088 2.6678 3.3837 3.3962   1.6    1.6676 1.5997 1.6671 1.6003 1.5334 3.3968 3.4275 3.4088 3.4106   1.9337 3.41   3.3904 3.0664 3.2002 2.8671 3.3768 3.0017 5.1997 3.3516   5.0661 5.1344 5.0649 3.3654]]
354                   0.93076         0.74338         0.28317         0.55688          0.55688          0.05715          0.60075          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4005 3.4018 3.4661 3.4672 3.5334 3.3898 3.4021 2.2674 2.1995 2.0659   3.4019 2.2008 3.3574 3.3828 3.3456 3.3399 3.3464 3.3583 5.2672 5.5348   5.3326 5.3339 5.3334 5.2001 2.4666 3.415  2.8004 3.3962 2.5345 2.6655   1.6002 1.6683 1.6    1.6676 1.6004 1.533  3.3961 3.4275 3.4068 3.409   1.9327 3.409  3.3888 3.3951 3.4085 2.8663 3.3773 2.9996 5.1974 5.1982   5.0662 5.1336 5.0669 3.3663]]
355                   1.12861         0.82753         0.30448         0.46268          0.46269          0.06427          0.72948          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.4019 3.4674 3.371  3.5334 3.6665 2.1331 2.2669 2.2022 3.3961   3.4025 3.4096 3.3586 5.1332 3.3461 3.3394 3.3464 3.3584 5.2659 5.5331   5.3329 5.3326 5.334  5.1972 3.3774 3.4151 2.8002 2.6663 2.5331 3.3962   1.6002 1.6665 1.5997 1.6683 1.5994 1.5337 3.3969 3.4291 3.4098 3.4093   1.9336 3.4093 3.3898 3.0667 3.4087 3.3769 2.8685 2.9995 3.3524 5.2005   5.0655 5.1337 3.3393 3.3645]]
356                   0.89632         0.70402         0.27513         0.57327          0.57921          0.05484          0.56653          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.4032 3.4668 3.3722 3.5333 3.6679 3.4024 3.4151 2.1995 3.3961   2.1335 3.4081 3.359  3.3831 3.3471 3.3403 3.3463 3.3586 5.2659 5.5325   5.3327 5.334  5.3327 5.1998 3.3774 2.8659 2.8007 2.6632 3.3836 2.6667   1.6016 1.6671 1.6002 1.6676 1.6013 1.5339 3.3966 3.4288 3.4093 3.4093   3.3887 3.4091 2.9998 3.0666 3.2015 2.866  3.3772 3.3901 5.1982 5.1997   5.0668 5.1331 5.0656 5.3332]]
357                   0.95619         0.74333         0.27169         0.54477          0.5478          0.05554          0.5997          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3657 3.4037 3.3705 3.4665 3.5329 3.3901 2.1312 2.2662 2.2007 2.0664   2.1329 2.1972 3.3585 5.1334 3.3467 3.3402 3.3458 3.3576 5.2664 5.5334   5.334  5.3347 5.3324 5.2004 2.4671 2.8668 2.8    2.667  2.535  2.6644   1.601  1.6672 1.6003 1.6695 1.6005 1.5335 3.3957 3.4282 3.4081 3.4098   1.9333 3.4079 2.9997 3.07   3.409  2.8666 3.3775 3.3894 3.3526 5.2005   5.0668 5.1325 5.0675 3.3636]]
358                   1.14309         0.8392         0.32357         0.45579          0.46006          0.06911          0.72963          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3639 3.4021 3.4672 3.3702 3.5335 3.6662 3.4024 3.415  2.1997 3.3964   2.1337 2.2013 3.3583 5.1338 3.3457 3.3391 3.3455 3.3588 5.2668 5.5332   5.3339 5.3329 5.332  5.2002 2.4663 3.4151 3.4088 3.3962 3.3836 2.6666   1.5998 1.6662 1.6    1.6668 3.4149 1.5335 3.396  3.428  3.4089 3.4076   1.9331 3.4083 2.9989 3.0652 3.2002 2.8676 2.8663 3.0013 5.1995 3.3526   5.0662 5.1336 5.0671 5.3324]]
359                   0.97591         0.75047         0.28256         0.53538          0.53597          0.05835          0.60072          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4007 3.4034 3.4665 3.3717 3.5336 3.3894 3.4027 2.2661 2.1989 2.0652   2.1314 3.4089 3.3586 3.3845 3.3453 3.3399 3.3492 3.3578 5.2659 5.5333   5.3333 5.3335 5.3338 5.1992 3.3774 3.4151 2.8022 2.667  2.5332 2.6669   1.6007 1.6677 1.5995 1.6661 1.6004 1.536  3.3965 3.4272 3.4087 3.4094   1.9329 3.4092 3.3901 3.3967 3.2008 2.8654 3.3773 3.0006 5.1995 5.1998   5.0667 3.3459 5.0667 3.3653]]
360                   1.1405         0.81521         0.29113         0.45702          0.45772          0.06255          0.64848          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.4031 3.4666 3.3699 3.3779 3.3906 3.4018 2.2673 2.2006 3.396   2.1326 2.2    3.3593 5.1326 3.3457 3.3394 3.3456 3.3591 5.2669 5.5338   5.3345 5.3325 5.3329 5.2    3.3774 2.8669 3.4088 3.3962 3.3836 2.6658   1.6004 1.6672 1.6022 1.6662 1.6001 1.5339 1.9998 3.4286 3.4081 3.4089   1.9343 3.4099 3.0001 3.0663 3.409  2.8663 3.3793 2.9997 3.3527 5.1988   3.3382 3.3455 5.0665 5.3328]]
361                   1.14983         0.84858         0.30768         0.45258          0.45307          0.06422          0.72928          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4002 3.4037 3.467  3.4664 3.3765 3.6668 3.4026 2.2664 2.2016 2.0669   3.4027 2.1998 3.3599 5.1335 3.3461 3.3405 3.3452 3.3596 5.266  5.5355   5.3332 5.3318 5.3327 5.2006 3.3773 3.4151 3.4088 3.3962 3.3836 2.666   1.6002 1.6655 1.6    1.6657 1.5998 1.534  3.3957 3.4261 3.4095 3.4083   3.3895 3.4075 3.3901 3.3963 3.4086 2.8678 2.8669 3.0003 3.3527 3.3519   5.0666 3.3463 5.0673 5.3332]]
362                   1.05155         0.7867         0.29606         0.49937          0.49963          0.06137          0.60037          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4007 3.7995 3.4663 3.4671 3.3778 3.6666 2.133  3.4152 3.4089 2.0684   2.1337 2.1997 3.3584 5.1342 3.3457 3.3391 3.3451 3.3586 5.2685 5.5331   3.3459 5.334  5.3335 5.2004 3.3774 2.8672 2.8003 3.3962 2.5336 2.6655   1.6005 1.6668 1.6002 1.6668 1.6001 1.5313 3.3961 3.4271 3.4099 3.4096   3.3897 3.409  3.0014 3.0657 3.4079 3.3769 2.8666 2.9993 5.2013 5.1987   5.0657 5.1335 5.0669 3.364 ]]
363                   1.08527         0.79575         0.29322         0.48331          0.4841          0.0624          0.66613          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4009 3.4026 3.4666 3.4664 3.5331 3.6663 2.1361 3.4151 2.2031 3.3965   2.1335 3.4089 3.3582 5.1325 3.3474 3.34   3.3463 3.3581 5.2673 5.5325   5.3333 5.3335 5.3332 5.1999 2.4662 2.8666 2.8004 2.6651 3.3836 2.6666   1.5999 1.6653 1.6004 1.6678 1.6016 1.5343 2.0007 3.4272 3.4078 3.4086   3.3898 3.4092 2.9998 3.0658 3.1999 2.8693 2.8596 3.0007 3.3526 5.2018   5.0665 3.3459 5.0668 3.3659]]
364                   1.28068         0.88802         0.30908         0.39028          0.39344          0.06802          0.7643          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3993 3.4023 3.4664 3.4655 3.5325 3.6661 3.4022 2.2662 3.4091 3.3959   2.1334 2.2    3.3587 5.1333 3.3458 3.339  3.3467 3.3591 5.2666 5.5331   3.3457 5.3352 5.3333 5.2002 3.3774 2.867  3.4088 2.6624 3.3836 2.6666   1.6004 1.6667 1.6007 1.6667 1.6006 1.5326 3.3965 3.4275 3.4086 3.4081   3.3914 3.4083 3.0003 3.397  3.201  2.867  2.8684 3.0001 3.3512 3.3528   5.0669 3.3457 3.3391 3.3646]]
365                   1.41212         0.93204         0.33266         0.32771          0.33557          0.07711          0.8002          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3992 3.4024 3.4651 3.3695 3.3765 3.3898 2.134  2.2655 3.4083 2.0667   3.4026 3.4088 3.3574 5.1336 3.3466 3.3392 3.344  3.3581 3.3396 3.3644   5.3338 5.3334 5.3325 3.3333 2.4666 3.4151 3.4088 3.3962 2.5332 2.6666   1.5996 1.6676 1.6005 1.6683 1.6016 1.5342 3.3958 3.4274 3.4077 3.4098   1.9338 3.4089 2.9998 3.0683 3.4082 2.8664 3.3772 3.0007 3.3516 5.2002   3.3407 5.1337 5.0666 3.366 ]]
366                   1.18843         0.85022         0.30598         0.4342          0.4342          0.06551          0.72978          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3648 3.8018 3.4677 3.4669 3.5329 3.3893 3.4022 2.2649 2.1997 3.3966   3.4028 2.1997 3.3583 3.3826 3.3464 3.3385 3.3482 3.359  5.2666 5.5329   5.3333 5.3329 5.3334 5.1995 3.3774 2.8666 3.4088 3.3962 3.3836 3.3962   1.6044 1.6693 1.5993 1.6653 1.5982 3.4089 3.3963 3.4274 3.4082 3.4088   3.3893 3.4083 3.0002 3.3968 3.2001 2.867  3.3773 3.0011 3.3522 3.3523   5.0654 3.3462 3.3398 3.3641]]
367                   1.02905         0.76408         0.28192         0.51008          0.51138          0.05921          0.56698          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3648 3.4026 3.3708 3.4666 3.3775 3.3894 2.1334 3.4149 2.1992 3.3956   2.1329 2.2    3.3583 3.3835 3.3455 3.3397 3.3454 3.3582 5.2655 5.5329   5.3336 5.3334 5.3325 5.1983 3.3774 2.8677 3.4088 2.6666 2.5332 2.6666   1.6014 1.6664 1.6001 1.668  1.601  1.5327 3.3969 3.4277 3.4083 3.4092   3.3903 3.4094 3.3896 3.0658 3.2009 2.8667 2.8666 3.3901 5.1996 3.3514   5.0661 5.1335 3.34   3.364 ]]
368                   1.25579         0.90478         0.32432         0.40213          0.40226          0.06876          0.76375          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.4035 3.4662 3.4673 3.3779 3.39   2.1333 2.266  3.408  2.0666   3.4024 3.409  3.3583 5.1325 3.3456 3.3395 3.345  3.3583 5.2661 5.5336   5.3331 5.3313 5.3329 5.1994 3.3773 2.8669 3.4088 3.3962 3.3836 3.3962   1.6015 1.669  1.6    1.6677 1.6012 1.5328 3.3952 3.4278 3.4095 3.4093   3.3893 3.4091 3.3895 3.0662 3.1979 2.8687 2.8667 3.3898 3.3531 3.3508   5.0663 3.3451 3.3397 5.3319]]
369                   1.08671         0.82231         0.31604         0.48263          0.49344          0.06447          0.72943          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3995 3.4015 3.4673 3.4675 3.5334 3.39   3.4018 2.2663 3.4088 3.3959   3.402  3.4089 3.3589 5.1332 3.3454 3.3398 3.3459 3.3591 5.2659 5.5337   5.3343 5.3339 5.3326 5.2004 3.3773 2.8667 3.4088 2.6672 2.5352 3.3962   1.6005 1.667  1.5999 1.6668 1.6009 3.4099 3.3963 3.428  3.41   3.4082   3.3899 3.4076 3.0002 3.396  3.4092 3.3771 3.3763 2.9996 5.1991 3.3526   5.067  5.1324 5.0668 3.3646]]
370                   1.2347         0.88499         0.32085         0.41217          0.41681          0.07041          0.72953          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.401  3.4025 3.4665 3.466  3.377  3.6664 2.1327 3.4144 2.2    2.0667   3.4032 3.4088 3.3578 3.3841 3.3459 3.34   3.3466 3.3591 5.267  5.5346   5.3328 5.3329 5.3334 5.201  2.4661 2.8665 3.4088 3.3962 3.3836 3.3962   1.6007 1.6664 1.6025 1.668  1.6001 1.5332 2.0004 3.4264 3.4076 3.409   1.9342 3.4085 3.3898 3.0669 3.1999 3.3779 3.377  3.3891 3.3521 3.3539   5.0664 3.3456 3.3402 3.3643]]
371                   1.08737         0.79627         0.2926         0.48232          0.48236          0.06136          0.5982          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3988 3.4024 3.4669 3.4667 3.5333 3.3892 2.133  2.2653 2.2025 2.0678   3.4017 3.4097 3.3596 5.1331 3.3456 3.3386 3.3457 3.3574 5.2658 5.5335   5.3347 5.333  5.3332 5.1988 2.4667 2.867  3.4088 3.3961 3.3836 2.6664   1.6002 1.6669 1.6002 1.666  1.6004 1.5344 3.3966 3.428  3.4099 3.4089   3.3906 3.408  3.3901 3.0667 3.1996 3.3772 3.3776 2.999  5.1971 3.3511   5.0689 5.1321 3.3403 3.3656]]
372                   1.04323         0.79797         0.2922         0.50333          0.5051          0.06081          0.72898          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3647 3.4032 3.4666 3.4666 3.3779 3.6667 2.1338 2.2679 2.2004 3.3966   2.1335 3.4085 3.3574 3.384  3.3451 3.338  3.3455 3.3581 5.2663 5.5339   5.3329 5.3324 5.3325 5.1993 2.4671 2.867  3.4088 3.3962 3.3837 3.3962   1.5995 1.6674 1.6004 1.6677 1.6015 1.5332 3.3951 3.4282 3.4094 3.4088   1.9298 3.4087 2.9988 3.067  3.1998 2.8659 2.8666 2.9973 3.352  5.1993   5.068  3.3462 5.0663 3.3641]]
373                   1.37645         0.93004         0.32095         0.34469          0.35075          0.07243          0.7644          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3994 3.4013 3.4663 3.3714 3.5334 3.6662 2.134  2.2671 2.2034 2.0671   3.4029 2.2003 3.3586 5.1347 3.3453 3.3395 3.3444 3.3573 5.2662 5.533   5.3335 5.3342 5.3325 3.3331 2.4671 3.4151 3.4087 3.3962 2.5333 3.3962   1.6001 1.6665 1.601  1.6672 1.6003 1.5343 2.002  3.4273 3.4087 3.4078   3.3895 3.4094 3.     3.3961 3.2    2.8644 2.8674 2.9997 3.3515 3.3534   3.3396 3.3456 5.0668 5.3321]]
374                   1.1926         0.86595         0.31959         0.43221          0.43232          0.06792          0.72953          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.4027 3.4665 3.4665 3.5324 3.3901 3.4027 2.2636 2.2001 3.3959   3.4031 2.1998 3.3588 5.1329 3.3454 3.3398 3.3457 3.3585 5.2666 5.5336   5.3336 5.3345 5.3333 5.2005 3.3773 2.8679 3.4088 3.3962 2.5333 3.3962   1.6003 1.6677 1.5999 1.6669 3.4147 1.5358 3.3953 3.4277 3.4084 3.409   1.9329 3.4079 2.9993 3.0652 3.1988 3.3774 3.3781 3.0002 3.3529 3.3535   5.0667 5.137  3.3394 3.3647]]
375                   1.08096         0.80102         0.29397         0.48537          0.48538          0.06101          0.63338          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4016 3.4032 3.4668 3.4699 3.3782 3.6663 2.1329 3.4157 2.1997 2.0662   3.4022 2.2    3.3592 5.1326 3.3465 3.3389 3.3449 3.3594 5.266  5.5333   5.3334 5.3332 5.3329 5.2002 3.3773 2.8666 2.7996 2.666  3.3836 3.3962   1.5998 1.6676 1.601  1.6688 1.5995 1.5342 3.3968 3.4262 3.4094 3.4095   3.3905 3.4077 3.391  3.0653 3.1983 2.8671 2.8663 3.3896 3.3518 5.1992   5.0662 5.134  3.3398 3.3641]]
376                   0.90074         0.70838         0.26893         0.57117          0.57403          0.05317          0.56638          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.4023 3.4665 3.4684 3.533  3.6665 2.1344 2.2684 3.4087 3.3954   3.4024 2.2003 3.3576 3.3838 3.3464 3.3385 3.3453 3.3593 5.2674 5.5336   5.3339 5.3312 5.3345 5.1997 3.3774 2.8663 2.8008 2.6662 3.3836 2.6665   1.6008 1.6682 1.6002 1.6659 1.6018 1.5338 3.3965 3.4287 3.4087 3.4082   3.3906 3.4097 3.0021 3.3964 3.4087 3.3774 3.377  3.3894 3.3517 5.1999   5.0674 5.133  5.0661 5.3329]]
377                   1.19173         0.85959         0.30982         0.43263          0.43284          0.06595          0.76385          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3652 3.4018 3.4677 3.4671 3.5337 3.3898 3.4035 2.2654 2.199  2.065   3.4034 3.4091 3.3575 5.1332 3.3459 3.34   3.3454 3.359  5.2631 5.533   5.3328 5.3335 5.3335 5.1984 3.3773 2.8666 3.4087 2.6662 2.5311 2.667   1.6022 1.6669 1.6003 1.6674 1.6003 1.5338 3.3956 3.4268 3.4097 3.4108   3.389  3.4093 3.3902 3.0639 3.4081 2.8667 2.8679 3.3897 5.2    3.3524   3.3396 3.3462 5.0674 3.365 ]]
378                   2.27873         1.3368         0.54552         -0.08488          -0.0437          0.13557          1.51985          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.6981 3.7514 3.6067 3.6357 3.6727 3.6133 3.7461 3.7143 3.6282 3.5857   3.6951 3.7068 3.6313 3.6461 3.6679 3.6945 3.6427 3.6179 3.6273 3.6567   3.5724 3.677  3.5577 3.6048 3.7108 3.7668 3.7337 3.7533 3.6672 3.6654   3.6995 3.8009 3.7394 3.758  3.6393 3.6726 3.6603 3.7217 3.7436 3.6631   3.6246 3.6533 3.7106 3.6826 3.762  3.679  3.7088 3.7251 3.588  3.6952   3.6118 3.7117 3.6231 3.727 ]]
379                   2.24361         1.3329         0.54231         -0.06816          -0.02662          0.13362          1.5065          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.6517 3.7241 3.7083 3.5882 3.6257 3.7061 3.7269 3.7683 3.6698 3.6363   3.6214 3.7165 3.64   3.6905 3.6495 3.6161 3.6524 3.637  3.6634 3.6867   3.6294 3.6742 3.6729 3.6526 3.711  3.7318 3.7559 3.6635 3.6848 3.7281   3.6916 3.6793 3.6774 3.6768 3.7487 3.702  3.7717 3.6636 3.6547 3.65   3.6927 3.6333 3.7466 3.7513 3.6672 3.696  3.6438 3.659  3.6544 3.6276   3.6982 3.7139 3.5792 3.6551]]
380                   2.26987         1.33786         0.54712         -0.08066          -0.03616          0.13538          1.51415          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.6414 3.6521 3.6467 3.6962 3.648  3.6358 3.7475 3.6897 3.7224 3.6679   3.7659 3.7209 3.7005 3.7    3.6413 3.6606 3.6661 3.6938 3.6606 3.6793   3.6565 3.606  3.6259 3.6139 3.6783 3.743  3.7306 3.6907 3.7331 3.7072   3.7089 3.7179 3.7351 3.7391 3.8029 3.6908 3.723  3.776  3.6956 3.6273   3.6568 3.6611 3.6896 3.7309 3.6816 3.7361 3.5846 3.7523 3.6173 3.71   3.6346 3.7376 3.6864 3.6586]]
381                   2.28889         1.34154         0.54679         -0.08972          -0.04723          0.13598          1.50397          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.6582 3.7146 3.627  3.6127 3.6465 3.6736 3.7107 3.7809 3.7538 3.6754   3.6946 3.7244 3.6291 3.6954 3.6291 3.6014 3.6189 3.7381 3.63   3.6573   3.6508 3.6451 3.7304 3.5916 3.6577 3.7825 3.7403 3.6993 3.6098 3.7378   3.7322 3.7521 3.7186 3.622  3.7862 3.6946 3.6742 3.6825 3.6271 3.7616   3.6482 3.667  3.6991 3.75   3.7136 3.7129 3.7099 3.6756 3.595  3.6698   3.5947 3.6756 3.6027 3.7154]]
382                   2.18612         1.29457         0.47919         -0.04079          -0.03795          0.12193          1.3333          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2876 3.3217 3.2924 3.2954 3.3011 3.3117 3.3231 3.3364 3.3335 3.3156   3.3252 3.3348 3.2824 3.3073 3.2654 3.2639 3.2685 3.2821 3.2643 3.2857   3.2668 3.2682 3.2713 3.2557 3.2944 3.3406 3.3323 3.3215 3.3076 3.3197   3.3346 3.3394 3.3357 3.3461 3.334  3.3345 3.3201 3.3542 3.3322 3.3297   3.3139 3.3331 3.3125 3.3207 3.3335 3.2964 3.301  3.3097 3.2797 3.2779   3.2634 3.2667 3.2619 3.2861]]
383                   2.18603         1.29468         0.47924         -0.04075          -0.03795          0.12193          1.3333          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.29   3.3231 3.294  3.2912 3.3018 3.3169 3.3259 3.3364 3.3331 3.3171   3.3229 3.3366 3.2783 3.3078 3.2677 3.2655 3.2656 3.285  3.2632 3.2847   3.2684 3.2704 3.268  3.2568 3.3017 3.3413 3.3312 3.3178 3.3063 3.3226   3.3344 3.3412 3.3354 3.3469 3.335  3.3346 3.3232 3.3508 3.3348 3.3335   3.3144 3.3302 3.3145 3.3199 3.3305 3.2987 3.3032 3.3166 3.2771 3.2738   3.2629 3.2712 3.2627 3.292 ]]
384                   2.18568         1.29418         0.47917         -0.04058          -0.03778          0.12192          1.33075          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2913 3.3255 3.2895 3.2944 3.2994 3.3115 3.3249 3.3396 3.3307 3.3204   3.3256 3.3365 3.2791 3.307  3.271  3.2587 3.2703 3.2817 3.2661 3.291   3.2689 3.2709 3.2733 3.2585 3.3036 3.3373 3.3315 3.3184 3.3094 3.3182   3.3389 3.3486 3.337  3.3458 3.3383 3.3308 3.3191 3.3531 3.3281 3.3333   3.3123 3.3273 3.3108 3.3204 3.3303 3.3027 3.3031 3.3109 3.2786 3.274   3.2637 3.2681 3.2616 3.2836]]
385                   2.18623         1.29429         0.47911         -0.04084          -0.03801          0.12193          1.33185          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.29   3.329  3.296  3.2939 3.3001 3.3108 3.3247 3.3409 3.3301 3.3172   3.3237 3.3333 3.2831 3.3034 3.2653 3.2614 3.2701 3.2797 3.2602 3.2907   3.267  3.269  3.2674 3.26   3.2999 3.3394 3.3335 3.3183 3.3102 3.3172   3.3399 3.3481 3.3391 3.342  3.3353 3.3331 3.3144 3.3478 3.331  3.33   3.3103 3.3316 3.312  3.3195 3.3321 3.3009 3.3028 3.3122 3.2767 3.2764   3.2603 3.2678 3.266  3.2863]]
386                   2.17424         1.29672         0.48621         -0.03514          -0.03491          0.12238          1.33828          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3884 3.3826 3.3732 3.3944 3.312  3.3921 3.3841 3.3477 3.3792 3.4274   3.4182 3.3137 3.3212 3.3512 3.3459 3.2921 3.3434 3.3508 3.3149 3.3548   3.3734 3.2947 3.3737 3.3243 3.3065 3.411  3.3239 3.3509 3.3787 3.402   3.4156 3.2198 3.4214 3.3769 3.446  3.3754 3.3831 3.4213 3.4341 3.3311   3.3646 3.3674 3.4103 3.3771 3.3981 3.3992 3.411  3.4184 3.3791 3.3157   3.3291 3.3038 3.1313 3.3344]]
387                   2.19779         1.30198         0.48948         -0.04634          -0.04604          0.12399          1.39185          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3183 3.3663 3.3589 3.3649 3.3827 3.3872 3.404  3.409  3.3778 3.162   3.4144 3.3649 3.3696 3.3499 3.2948 3.3728 3.3218 3.1555 3.3695 3.39   3.3344 3.097  3.3259 3.3381 3.3458 3.379  3.4377 3.408  3.3329 3.3856   3.4152 3.3612 3.4161 3.4312 3.4255 3.4073 3.3602 3.4421 3.4245 3.412   3.4074 3.4059 3.374  3.4073 3.1895 3.3722 3.3673 3.416  3.2398 3.3787   3.3418 3.3329 3.3535 3.3084]]
388                   2.1154         1.27435         0.47842         -0.00712          -0.0069          0.11929          1.37393          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4048 3.37   3.3726 3.3723 3.4088 3.4489 3.4059 3.3018 3.1163 3.402   3.1667 3.3455 3.3624 3.3572 3.3456 3.3441 3.2864 3.3147 3.32   3.3778   3.384  3.3495 3.3514 3.3257 3.3592 3.4055 3.3959 3.4215 3.4129 3.3992   3.4094 3.4462 3.4011 3.3963 3.4101 3.4142 3.148  3.233  3.4099 3.3987   3.3776 3.3979 3.3037 3.3441 3.3966 3.3834 3.4089 3.3847 3.3697 3.3506   3.3616 3.3829 3.3415 3.3944]]
389                   2.15575         1.28108         0.48035         -0.02633          -0.0256          0.12131          1.35175          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3597 3.3671 3.3212 3.3961 3.3445 3.1528 3.3558 3.3819 3.4399 3.4314   3.3324 3.3847 3.323  3.3519 3.3539 3.3263 3.3235 3.3624 3.3301 3.3576   3.3765 3.3504 3.3559 3.3102 3.3978 3.4135 3.344  3.13   3.3678 3.3976   3.3827 3.4375 3.3751 3.1897 3.4193 3.1363 3.4    3.4321 3.4025 3.392   3.3884 3.3595 3.3556 3.1856 3.4416 3.3806 3.3717 3.3799 3.302  3.1121   3.2648 3.3263 3.3279 3.3425]]
390                   2.18016         1.30048         0.49118         -0.03795          -0.03794          0.12342          1.4027          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3589 3.3963 3.3658 3.3657 3.3715 3.384  3.3975 3.4109 3.4037 3.3914   3.3981 3.4042 3.3523 3.3788 3.3393 3.3341 3.3395 3.3531 3.3353 3.36   3.3405 3.3431 3.3398 3.3289 3.3715 3.4089 3.4046 3.3913 3.3784 3.3911   3.4091 3.4158 3.4094 3.4153 3.4093 3.4036 3.3898 3.4234 3.4046 3.4034   3.3845 3.4012 3.3835 3.3908 3.402  3.3729 3.3724 3.3829 3.3467 3.3464   3.3345 3.3411 3.3356 3.3596]]
391                   2.1803         1.30055         0.49124         -0.03802          -0.03801          0.12343          1.4031          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3599 3.3978 3.3654 3.3647 3.3713 3.3846 3.3969 3.4098 3.4024 3.3904   3.3964 3.4033 3.354  3.3777 3.3398 3.3336 3.3412 3.356  3.3352 3.3589   3.34   3.3389 3.341  3.3304 3.3726 3.41   3.4042 3.3912 3.3792 3.3908   3.4101 3.4166 3.4086 3.4163 3.4098 3.4039 3.3927 3.4241 3.4036 3.4029   3.3832 3.4044 3.3842 3.3908 3.404  3.3711 3.3721 3.3843 3.3472 3.3474   3.3351 3.3401 3.3349 3.3602]]
392                   2.1799         1.30039         0.49113         -0.03783          -0.03782          0.1234          1.40285          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3588 3.3971 3.3657 3.3651 3.3734 3.3841 3.397  3.4096 3.4039 3.3912   3.3964 3.402  3.3534 3.3785 3.3405 3.336  3.3408 3.3552 3.3344 3.3586   3.3412 3.3403 3.3407 3.3279 3.3713 3.409  3.4034 3.3899 3.3782 3.392   3.41   3.4143 3.4096 3.4176 3.4093 3.4027 3.3895 3.4216 3.4043 3.403   3.3839 3.4035 3.3844 3.3919 3.4033 3.3725 3.3723 3.3846 3.346  3.3477   3.3339 3.3409 3.334  3.361 ]]
393                   2.18022         1.30057         0.49117         -0.03798          -0.03797          0.12341          1.40295          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.36   3.3961 3.3643 3.3664 3.3717 3.386  3.3971 3.4104 3.4022 3.3906   3.3963 3.4029 3.3526 3.3791 3.3409 3.3338 3.3398 3.3534 3.3348 3.3599   3.3406 3.3403 3.3396 3.3275 3.3719 3.4095 3.403  3.3908 3.3782 3.3903   3.4102 3.4159 3.4094 3.4161 3.409  3.4039 3.3906 3.4212 3.4036 3.4031   3.3852 3.4036 3.385  3.3908 3.4036 3.372  3.3713 3.384  3.3471 3.3483   3.334  3.3391 3.3368 3.3577]]
394                   2.26085         1.33663         0.5395         -0.07637          -0.04435          0.13373          1.5243          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.5667 3.6436 3.6424 3.6    3.6987 3.6335 3.72   3.6688 3.6603 3.6803   3.6464 3.7402 3.6043 3.66   3.5302 3.6088 3.6018 3.6239 3.5782 3.6736   3.5728 3.5864 3.5827 3.6268 3.5756 3.6745 3.7012 3.6691 3.61   3.6786   3.6951 3.6664 3.6573 3.7031 3.6545 3.6454 3.6647 3.6551 3.6729 3.6425   3.6973 3.6895 3.6432 3.6237 3.7063 3.5562 3.6762 3.6461 3.5939 3.6009   3.6115 3.6199 3.5984 3.6917]]
395                   2.2437         1.32852         0.53794         -0.0682          -0.03621          0.13312          1.5231          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.5854 3.6457 3.6497 3.6422 3.5954 3.6383 3.7341 3.7325 3.6078 3.6311   3.6753 3.6986 3.5738 3.6649 3.6496 3.6292 3.6321 3.5909 3.6144 3.5982   3.6596 3.6472 3.5941 3.6463 3.6568 3.6933 3.6224 3.6661 3.5492 3.6313   3.6714 3.734  3.6268 3.6976 3.6799 3.6709 3.6163 3.699  3.6656 3.6142   3.6824 3.6693 3.6776 3.6418 3.6652 3.6655 3.625  3.6665 3.5636 3.5616   3.5809 3.6028 3.5939 3.6374]]
396                   2.27447         1.33787         0.54148         -0.08285          -0.05012          0.13462          1.49965          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.6095 3.6132 3.65   3.6017 3.6907 3.693  3.734  3.6691 3.7006 3.6478   3.6747 3.583  3.6546 3.5953 3.5581 3.6176 3.6663 3.6673 3.6188 3.6052   3.5747 3.5449 3.5615 3.5968 3.6689 3.684  3.6816 3.6479 3.627  3.7198   3.6658 3.7428 3.7049 3.6882 3.6664 3.6924 3.6741 3.7419 3.673  3.7142   3.6384 3.6733 3.6828 3.6219 3.6507 3.5971 3.6086 3.674  3.5939 3.5837   3.6274 3.5798 3.5683 3.6045]]
397                   2.26849         1.33703         0.54055         -0.08001          -0.04672          0.13421          1.52145          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.594  3.7028 3.6755 3.6096 3.6385 3.606  3.6489 3.6674 3.7381 3.6266   3.6751 3.7221 3.6169 3.6339 3.5969 3.5817 3.6049 3.5943 3.5741 3.6343   3.6652 3.6485 3.626  3.5193 3.5939 3.6861 3.6795 3.6981 3.6766 3.6419   3.6706 3.656  3.7031 3.7151 3.6933 3.6381 3.666  3.681  3.6884 3.6757   3.673  3.6944 3.7245 3.6481 3.6217 3.6658 3.6301 3.6868 3.5788 3.6382   3.5971 3.6536 3.5604 3.6083]]
398                   2.18636         1.29471         0.47965         -0.0409          -0.03828          0.12201          1.3339          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2919 3.3244 3.301  3.2953 3.3039 3.3165 3.3325 3.3417 3.3338 3.3178   3.3283 3.3336 3.2866 3.3093 3.2706 3.2626 3.2709 3.2844 3.2651 3.2894   3.2763 3.2687 3.2707 3.2609 3.3009 3.3404 3.334  3.3234 3.3102 3.3216   3.3419 3.3505 3.3409 3.3471 3.3383 3.3321 3.3219 3.354  3.3341 3.3358   3.3208 3.3379 3.3142 3.3187 3.3323 3.3046 3.3077 3.3179 3.2743 3.2815   3.264  3.2674 3.2667 3.2874]]
399                   2.18471         1.29432         0.47946         -0.04012          -0.03749          0.12192          1.33515          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2918 3.3248 3.299  3.2974 3.3079 3.3139 3.3316 3.3393 3.3365 3.32   3.3283 3.3345 3.2877 3.3094 3.2703 3.2676 3.2697 3.2854 3.2649 3.2917   3.272  3.269  3.2697 3.2661 3.2998 3.3404 3.3305 3.3201 3.3118 3.3229   3.34   3.3432 3.3393 3.3457 3.3396 3.3375 3.3222 3.3526 3.3325 3.3369   3.3169 3.3339 3.3171 3.3234 3.3358 3.3014 3.3033 3.3159 3.2798 3.2743   3.2655 3.2735 3.2632 3.2897]]
400                   2.18537         1.29459         0.47966         -0.04043          -0.03783          0.12197          1.33515          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2913 3.3266 3.2968 3.2944 3.2993 3.3163 3.3246 3.34   3.3354 3.3249   3.3296 3.3349 3.2852 3.3068 3.2717 3.2655 3.2718 3.2878 3.2674 3.2925   3.2743 3.2722 3.2702 3.2584 3.3038 3.3385 3.334  3.3222 3.3081 3.3243   3.3411 3.3472 3.3406 3.349  3.3432 3.3332 3.3186 3.3536 3.3364 3.3368   3.3161 3.3356 3.3168 3.3218 3.3347 3.3044 3.3053 3.3144 3.281  3.2799   3.2666 3.2704 3.2636 3.2938]]
401                   2.1854         1.29459         0.47956         -0.04045          -0.03781          0.12196          1.33305          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2896 3.3315 3.2975 3.297  3.3012 3.3151 3.3249 3.3403 3.3328 3.3209   3.3297 3.3358 3.2819 3.3116 3.2736 3.264  3.2739 3.2828 3.2644 3.2901   3.2721 3.2678 3.2719 3.2611 3.3026 3.3436 3.3358 3.3229 3.3114 3.3248   3.3388 3.3452 3.3427 3.3451 3.3365 3.3327 3.3235 3.3553 3.3316 3.3318   3.3185 3.3342 3.3123 3.3217 3.3333 3.3003 3.3014 3.3154 3.2771 3.2776   3.2665 3.2722 3.2664 3.2927]]
402                   2.15545         1.29407         0.5029         -0.02619          -0.02126          0.12448          1.42857          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4833 3.0127 3.5055 3.5224 3.4961 3.5569 3.0478 3.5627 3.5436 3.5506   3.6348 3.5729 3.5149 3.4066 3.2978 3.492  3.552  3.4997 3.5018 3.3856   3.4875 3.0722 3.5105 3.5046 3.5152 3.0747 3.5701 3.5498 3.5386 3.6245   3.4362 3.5828 3.5769 3.3417 3.6098 3.5695 3.333  3.6233 3.5666 3.571   3.5746 3.3551 3.5774 3.5687 3.5762 3.5251 3.5616 3.5785 3.5509 3.458   3.53   3.4983 3.482  3.5277]]
403                   2.32175         1.34694         0.52078         -0.10536          -0.10139          0.13318          1.55955          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.5114 3.5608 3.55   3.3202 3.5493 3.5716 3.3593 3.5394 3.5587 3.527   3.4247 3.5684 3.5082 3.34   3.3667 3.497  3.5355 3.0452 3.0042 3.2911   3.5026 3.486  2.9953 3.2687 3.3319 3.5777 3.6325 3.5323 3.5739 3.5287   3.3607 3.5825 3.5605 3.5997 3.3623 3.6054 3.5681 3.599  3.5639 3.5468   3.5679 3.5604 3.5666 3.3571 3.584  3.5488 3.5409 3.5537 3.548  3.301   3.5251 3.4965 3.501  3.5411]]
404                   2.14153         1.29986         0.49955         -0.01956          -0.01827          0.1233          1.28648          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3807 3.5733 3.5337 3.3198 2.9192 2.9645 3.5722 3.5695 3.3604 3.5464   3.5225 3.0781 3.5005 3.5363 3.0269 3.3057 3.4602 3.5108 3.516  3.511   3.6167 3.5172 3.4706 3.5181 3.5596 3.5717 3.5605 3.5875 3.3113 3.4172   3.3632 3.5634 3.5847 3.4398 3.5594 3.5703 3.5428 3.3732 3.5646 3.0669   3.5726 3.3419 3.5527 3.3488 3.333  2.8799 3.5669 3.4978 3.2752 3.5893   3.4993 3.5398 3.4981 3.5204]]
405                   2.18396         1.33139         0.5151         -0.03976          -0.03629          0.1263          1.5171          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.9092 3.4207 3.5386 3.4995 3.5318 3.5467 3.5554 3.3705 3.5731 3.6307   3.5555 3.547  3.54   2.9318 3.5009 3.5036 3.4941 3.3106 3.5045 3.5456   3.4931 3.5271 3.4637 3.4684 2.9741 3.5772 3.5699 3.623  3.0191 3.5637   3.5608 3.5909 3.5545 2.9151 3.5552 3.6219 3.5542 3.5794 3.568  3.5725   3.3389 3.5499 3.578  3.357  3.6076 3.3209 3.5212 3.5493 3.5128 3.5158   3.5097 3.5077 3.53   3.5175]]
406                   2.18073         1.30085         0.49151         -0.03823          -0.03822          0.12348          1.4047          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3598 3.3987 3.3667 3.367  3.3755 3.386  3.3993 3.4114 3.4062 3.3921   3.3984 3.4037 3.353  3.379  3.3425 3.3357 3.3421 3.3551 3.3361 3.3618   3.3419 3.3429 3.3409 3.3291 3.3733 3.4107 3.4053 3.3922 3.3798 3.3925   3.4109 3.4188 3.4103 3.4178 3.4127 3.4055 3.3932 3.4236 3.405  3.4048   3.3873 3.4046 3.3858 3.3921 3.4057 3.3724 3.3726 3.3849 3.3472 3.3479   3.3368 3.3418 3.336  3.3611]]
407                   2.18061         1.30078         0.49154         -0.03817          -0.03816          0.12349          1.40445          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.359  3.3989 3.3685 3.3682 3.3735 3.385  3.3987 3.4119 3.4051 3.3929   3.3996 3.4047 3.3546 3.3798 3.3428 3.337  3.3429 3.3533 3.3367 3.3614   3.3423 3.3427 3.341  3.3287 3.3736 3.412  3.4053 3.3921 3.379  3.3922   3.4126 3.419  3.411  3.4178 3.4108 3.4045 3.3931 3.4253 3.4064 3.4038   3.3879 3.4044 3.385  3.3911 3.4054 3.3741 3.3723 3.3862 3.3486 3.3478   3.3362 3.3421 3.3366 3.3623]]
408                   2.18049         1.30084         0.49149         -0.03811          -0.0381          0.12347          1.40445          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3592 3.3985 3.3661 3.3663 3.3729 3.3876 3.3982 3.4122 3.4056 3.3928   3.3991 3.4044 3.3558 3.3815 3.3407 3.3356 3.3416 3.3555 3.3357 3.3613   3.3433 3.3421 3.3419 3.3294 3.3734 3.4117 3.4045 3.3925 3.3801 3.3925   3.4118 3.4172 3.4105 3.4171 3.4115 3.4046 3.3909 3.4233 3.4056 3.4033   3.3868 3.4051 3.3871 3.3911 3.4059 3.3735 3.3741 3.3855 3.349  3.3484   3.3355 3.3413 3.336  3.3612]]
409                   2.18029         1.30067         0.4915         -0.03801          -0.03801          0.12347          1.4041          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3617 3.3989 3.3685 3.3659 3.3747 3.3853 3.3995 3.4112 3.4051 3.3933   3.399  3.4053 3.3542 3.3788 3.3421 3.3363 3.3435 3.355  3.3361 3.3606   3.3417 3.3415 3.3421 3.3315 3.374  3.411  3.4051 3.3927 3.3805 3.3917   3.4131 3.4196 3.4114 3.4184 3.4112 3.4049 3.3901 3.4249 3.404  3.4042   3.3872 3.4034 3.3865 3.392  3.4048 3.3727 3.3736 3.3863 3.3493 3.3487   3.3354 3.342  3.3362 3.3625]]
410                   2.74937         1.33046         0.39564         -0.30895          -0.03658          0.13884          1.01408          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6636 2.7006 2.616  2.497  2.596  2.624  2.6232 2.6716 2.6833 2.6574   2.6697 2.6087 2.5421 2.5818 2.5458 2.6069 2.5812 2.5871 2.5639 2.5957   2.596  2.6165 2.6351 2.6019 2.6056 2.5958 2.6254 2.6537 2.5703 2.6397   2.6487 2.6444 2.6899 2.6864 2.6589 2.6538 2.6525 2.6864 2.6617 2.6503   2.6841 2.6414 2.6552 2.7037 2.6632 2.6083 2.6676 2.5659 2.5828 2.6095   2.5549 2.6848 2.6231 2.5896]]
411                   2.75449         1.32841         0.39368         -0.31138          -0.03177          0.13889          0.98297          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.5301 2.6593 2.6525 2.5914 2.6659 2.5202 2.6589 2.5877 2.6624 2.622   2.7002 2.6417 2.597  2.602  2.5889 2.6756 2.5569 2.5689 2.6037 2.6053   2.4968 2.4574 2.6002 2.6227 2.6843 2.566  2.6465 2.5555 2.649  2.6204   2.5702 2.6639 2.6196 2.6938 2.6802 2.6328 2.6222 2.7045 2.6947 2.6472   2.613  2.6124 2.6474 2.6702 2.5296 2.6831 2.6753 2.6215 2.5019 2.5957   2.5997 2.6018 2.6339 2.5789]]
412                   2.75441         1.33472         0.3945         -0.31135          -0.02952          0.13869          1.03945          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6643 2.6079 2.5845 2.6142 2.5798 2.5746 2.6733 2.6672 2.6933 2.6075   2.6908 2.6278 2.5802 2.5874 2.5812 2.3786 2.566  2.6515 2.5701 2.602   2.5468 2.6386 2.6235 2.6044 2.5896 2.7031 2.662  2.7286 2.3617 2.6692   2.6351 2.451  2.4951 2.6416 2.6969 2.6849 2.6779 2.6486 2.668  2.6607   2.6113 2.6653 2.6399 2.4875 2.6156 2.6242 2.6107 2.6429 2.6079 2.5958   2.6713 2.6214 2.5807 2.6555]]
413                   2.7533         1.32656         0.39407         -0.31082          -0.03575          0.13886          1.02655          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.5998 2.6334 2.6193 2.5971 2.6247 2.6583 2.6656 2.7296 2.682  2.5848   2.5731 2.6336 2.6286 2.6403 2.5662 2.5551 2.588  2.6222 2.6372 2.6242   2.5421 2.576  2.6558 2.5731 2.6742 2.7624 2.6196 2.62   2.6354 2.6519   2.6778 2.6158 2.6414 2.652  2.6707 2.5016 2.6033 2.6776 2.6418 2.607   2.6313 2.6602 2.6211 2.6122 2.6489 2.5438 2.6777 2.6346 2.5985 2.6313   2.4439 2.6268 2.5814 2.6463]]
414                   9.61075         2.7099         0.75808         -3.57558          -0.0794          1.01915          2.28437          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.3085 0.7055 0.4628 0.3804 0.9372 1.0995 1.3409 0.2967 1.0965 1.1774   0.6918 0.3768 1.3201 1.0368 0.863  0.4291 1.2476 0.7126 0.5113 0.4016   0.0832 0.0881 0.2886 0.619  1.1879 0.1983 0.6869 0.4105 0.8682 0.8388   0.8634 0.8855 0.7728 0.7045 0.4847 0.2338 0.5605 0.3258 0.1961 0.2688   0.7278 0.9632 0.3358 0.5975 1.1206 0.9179 0.7614 0.7556 0.5748 0.7572   0.4978 0.3655 0.7336 0.2621]]
415                   2.23286         1.32538         0.54477         -0.06304          -0.00856          0.13391          1.50827          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.7816 3.7741 3.6881 3.7598 3.6572 3.8899 3.9091 3.6871 3.6867 3.6943   3.7321 3.7005 3.7126 3.689  3.6845 3.7644 3.6715 3.8141 3.5453 3.7509   3.5495 3.5921 3.7009 3.704  3.6371 3.6372 3.6435 3.5995 3.757  3.7205   3.8288 3.7053 3.6498 3.8181 3.7792 3.6576 3.7005 3.6435 3.6981 3.6941   3.7726 3.747  3.667  3.6691 3.8466 3.7918 3.7575 3.7056 3.6545 3.8675   3.6472 3.9838 3.793  3.7225]]
416                   2.27307         1.34142         0.54712         -0.08219          -0.03532          0.13529          1.50325          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.7869 3.7426 3.654  3.739  3.7154 3.8101 3.7937 3.7902 3.7383 3.8414   3.7327 3.7523 3.6086 3.7462 3.6315 3.5734 3.6875 3.6707 3.6835 3.5343   3.6156 3.701  3.7872 3.6655 3.7389 3.7258 3.7535 3.8932 3.7382 3.6684   3.6532 3.655  3.5905 3.6533 3.7707 3.6762 3.6915 3.751  3.5822 3.7061   3.6288 3.7684 3.6352 3.5518 3.7617 3.6523 3.6239 3.7667 3.5946 3.6712   3.577  3.6379 3.6935 3.7972]]
417                   2.2575         1.32963         0.5444         -0.07477          -0.02887          0.13476          1.45215          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6002 3.7338 3.65   3.6456 3.5644 3.6878 3.6077 3.7507 3.7575 3.6994   3.6545 3.7959 3.7156 3.7102 3.6545 3.7751 3.7883 3.6803 3.6106 3.8939   3.5537 3.8295 3.5566 3.5435 3.8261 3.6416 3.6178 3.7089 3.7165 3.7212   3.8203 3.7325 3.8243 3.7775 3.8994 3.7504 3.5989 3.5886 3.6407 3.6887   3.5499 3.7784 3.5612 3.5814 3.6717 3.7917 3.6121 3.7322 3.8856 3.609   3.6522 3.6231 3.6155 3.7583]]
418                   2.33202         1.35858         0.55699         -0.11025          -0.06159          0.13887          1.4778          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.596  3.6663 3.6456 3.6856 3.6338 3.6813 3.6794 3.8287 3.6925 3.7868   3.7634 3.6047 3.5643 3.6702 3.753  3.7389 3.6404 3.6176 3.531  3.5059   3.6421 3.8078 3.6874 3.6944 3.8736 3.9045 3.8504 3.6167 3.7823 3.785   3.7714 3.7994 3.8161 3.6043 3.7328 3.9197 3.7661 3.8182 3.6859 3.7861   3.632  3.7837 3.602  3.7335 3.6482 3.589  3.6436 3.6952 3.7391 3.617   3.6319 3.6913 3.5447 3.7499]]
419                   2.50712         1.30468         0.41271         -0.19362          -0.03784          0.12791          1.15377          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7788 2.8315 2.7727 2.8269 2.7971 2.7861 2.803  2.8475 2.8422 2.8601   2.8133 2.8731 2.7684 2.8457 2.7762 2.7305 2.7596 2.7572 2.8019 2.8112   2.776  2.717  2.8084 2.7341 2.7801 2.8011 2.8623 2.8273 2.8209 2.8976   2.8451 2.8453 2.8431 2.8562 2.8411 2.8037 2.8203 2.8727 2.8051 2.8206   2.7689 2.8058 2.8323 2.8425 2.8548 2.7698 2.7901 2.8719 2.7575 2.7954   2.8165 2.8031 2.7979 2.8102]]
420                   2.50455         1.30057         0.41135         -0.19239          -0.03881          0.12769          1.14803          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8016 2.8658 2.7997 2.8226 2.8514 2.8357 2.848  2.8637 2.8425 2.8437   2.7998 2.8367 2.7665 2.8563 2.738  2.7883 2.8218 2.8041 2.7765 2.7552   2.7861 2.7911 2.7818 2.7326 2.8195 2.8175 2.873  2.8421 2.8264 2.8462   2.8119 2.8428 2.8221 2.8509 2.8387 2.8287 2.7775 2.858  2.861  2.8086   2.7985 2.8138 2.8483 2.8453 2.8752 2.8103 2.8178 2.851  2.7725 2.7601   2.7655 2.7918 2.7426 2.7693]]
421                   2.50771         1.30119         0.41178         -0.19389          -0.03932          0.12794          1.12828          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8246 2.8017 2.776  2.8343 2.7912 2.7894 2.8449 2.7717 2.8562 2.8588   2.8607 2.8013 2.8074 2.8009 2.7644 2.6787 2.7799 2.7819 2.7353 2.7639   2.8112 2.7641 2.7663 2.7555 2.8281 2.8351 2.8344 2.8492 2.8369 2.803   2.8182 2.8622 2.8325 2.8556 2.8792 2.7999 2.8175 2.8956 2.8574 2.8433   2.8441 2.8061 2.8272 2.8406 2.8556 2.7932 2.8084 2.9006 2.7618 2.77   2.8382 2.7808 2.8026 2.7994]]
422                   2.51328         1.30912         0.4157         -0.19655          -0.04234          0.12857          1.15092          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8262 2.8532 2.8096 2.8458 2.7867 2.7546 2.7929 2.8526 2.8841 2.8055   2.8569 2.8521 2.7285 2.816  2.7822 2.7698 2.7704 2.7984 2.7557 2.8078   2.7927 2.7636 2.761  2.7661 2.7589 2.8143 2.8409 2.8737 2.8148 2.8479   2.9241 2.8405 2.8423 2.8743 2.8449 2.8108 2.8031 2.9002 2.8453 2.8515   2.7932 2.8759 2.8394 2.7846 2.8419 2.7943 2.738  2.8129 2.7762 2.7642   2.781  2.7932 2.8424 2.7772]]
423                   2.78613         1.46506         0.58894         -0.32645          -0.29922          0.16286          1.41525          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[2.0654 2.7782 2.6323 2.4792 3.2759 3.0971 3.752  3.8259 3.4028 3.3596   3.3947 3.3926 3.5386 3.974  3.9215 3.811  3.2652 3.4548 3.0531 3.2171   2.9765 2.8443 2.8288 3.1103 3.6086 3.7391 3.7714 3.7879 3.6879 3.742   4.1961 4.1034 3.8611 4.4315 4.2195 4.2842 3.8188 3.649  3.5231 3.5256   3.2134 3.6547 4.076  3.9264 4.0235 4.1744 4.183  3.7773 4.2641 4.5824   4.2202 3.8712 4.1494 4.0633]]
424                   2.75095         1.44285         0.58863         -0.3097          -0.24151          0.15803          1.30533          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.1591 3.053  3.2974 2.6588 3.1967 4.0126 3.7732 3.8962 2.7349 4.0649   3.94   2.3909 4.7672 4.1777 4.4607 3.8912 3.0198 3.8741 2.7259 2.8513   3.6145 2.8595 3.5588 3.5504 4.0497 3.227  3.8149 3.8098 4.0859 3.5918   4.0544 4.2643 4.1494 4.736  4.4699 4.0252 3.4397 3.8699 3.0266 4.4149   3.4373 3.7159 3.6271 4.5997 2.983  4.5374 4.1488 4.2554 3.81   5.0723   4.3972 3.8949 3.1077 4.9584]]
425                   2.34067         1.3459         0.50895         -0.11437          -0.11426          0.13213          1.32575          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.1849 3.3396 3.174  3.1902 3.2477 3.3115 3.458  3.4616 3.4642 3.4275   3.4643 3.4536 3.4343 3.5398 3.3892 3.3437 3.3839 3.4294 3.1382 3.1855   3.1911 3.2067 3.1416 3.1219 3.3712 3.4113 3.4037 3.3912 3.3794 3.3925   3.5997 3.6112 3.6109 3.5899 3.5739 3.5337 3.2274 3.4256 3.3273 3.3242   3.2674 3.3214 3.4031 3.3974 3.4301 3.331  3.3555 3.3882 3.3805 3.3701   3.3309 3.3095 3.2968 3.4101]]
426                   2.33528         1.34777         0.5183         -0.11181          -0.1105          0.13321          1.40255          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.282  3.4388 3.3259 3.3245 3.3535 3.3695 3.5362 3.5717 3.5596 3.5169   3.5334 3.5715 3.5106 3.6044 3.4575 3.4311 3.4763 3.513  3.2193 3.301   3.2214 3.2499 3.241  3.2038 3.4462 3.4804 3.4815 3.4574 3.4524 3.4569   3.6572 3.6624 3.668  3.5127 3.6611 3.6136 3.3505 3.4873 3.3958 3.4059   3.3426 3.3992 3.4342 3.2877 3.4764 3.4027 3.4096 3.421  3.4027 3.403   3.357  3.3554 3.3478 3.4583]]
427                   2.50376         1.3907         0.5594         -0.19202          -0.16349          0.14693          1.39543          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[2.4454 3.6964 2.5116 3.4521 2.7462 3.4075 3.7169 3.4844 3.4755 3.1684   3.6121 3.285  3.3944 3.5357 3.6159 3.6881 3.6805 3.9184 3.2773 3.2444   3.1752 3.2177 3.0818 3.456  3.6847 3.7459 3.4073 3.85   3.7177 3.795   4.0189 4.0395 3.8868 4.0697 3.5741 3.5335 3.3293 3.6557 3.5835 3.3444   3.7591 4.0202 4.1256 3.5929 4.2919 4.0206 4.121  3.3654 4.8112 4.7419   3.6035 3.2845 4.0474 4.5767]]
428                   2.60191         1.42125         0.59402         -0.23875          -0.15355          0.15369          1.31995          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[2.897  2.6937 3.2773 3.4665 3.1238 2.9564 3.4228 3.7972 3.5537 3.5671   3.9441 3.5945 3.3545 4.5143 4.1629 3.6492 3.8944 3.716  3.3833 3.2972   3.8167 3.1977 3.1401 3.4185 4.2706 3.8306 3.7881 3.9372 3.8156 3.9944   4.0012 4.5113 4.5849 3.9155 4.319  4.193  4.2893 3.9874 2.7076 4.1354   3.4173 3.6407 4.232  3.8437 3.7841 3.8308 4.4357 3.7016 4.2342 4.0893   4.43   3.8474 5.0286 4.874 ]]
429                   2.34677         1.34534         0.50814         -0.11727          -0.11713          0.13231          1.3496          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1842 3.3455 3.2275 3.2192 3.2354 3.2709 3.4483 3.4825 3.4961 3.422   3.4139 3.4767 3.391  3.5503 3.3522 3.3236 3.3942 3.4374 3.1394 3.1754   3.1394 3.1414 3.2312 3.1042 3.3685 3.4105 3.4    3.3912 3.3788 3.3909   3.6114 3.6048 3.5898 3.5938 3.5657 3.5822 3.2717 3.3704 3.3052 3.3824   3.2554 3.3168 3.3778 3.3875 3.4182 3.3245 3.3581 3.3379 3.353  3.3753   3.2976 3.3013 3.3315 3.4616]]
430                   2.34787         1.3552         0.52011         -0.1178          -0.11676          0.13381          1.39425          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2912 3.4611 3.3106 3.2027 3.3302 3.4058 3.5352 3.5689 3.5682 3.5213   3.532  3.5645 3.5019 3.6266 3.4502 3.4309 3.4618 3.5189 3.2163 3.2844   3.1176 3.2335 3.2416 3.2052 3.4472 3.4809 3.478  3.4643 3.4515 3.4701   3.505  3.6678 3.6536 3.6489 3.6545 3.4746 3.3554 3.4932 3.3908 3.3948   3.3098 3.3937 3.4135 3.4512 3.4886 3.3851 3.3879 3.4297 3.3922 3.4066   3.3318 3.362  3.389  3.4403]]
431                   2.48575         1.3969         0.52706         -0.18344          -0.18344          0.14          1.32623          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3001 3.1202 3.2736 3.8057 3.4494 3.742  3.772  3.7    3.4318 3.5547   3.3919 3.2776 3.7374 3.4783 3.6654 3.0636 3.0692 3.3324 3.2016 3.0269   3.3466 2.8231 3.0845 2.9787 3.3136 3.0179 3.4178 3.0596 3.4596 3.3195   3.5012 3.763  3.8273 3.6293 3.8614 3.2032 3.4259 3.4424 3.3182 3.5841   3.5035 3.5704 4.0101 3.6902 3.272  2.815  2.5566 3.4047 3.1804 3.5947   3.4842 3.1906 3.4844 3.2063]]
432                   2.53947         1.34803         0.50443         -0.20902          -0.20894          0.14231          1.41472          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.135  3.9089 3.3209 3.3936 3.2698 3.3383 3.603  3.5144 3.4082 3.4658   3.1947 4.4507 3.1605 3.5301 3.6018 3.3693 2.8982 4.2958 3.2304 3.2301   3.3227 1.7767 3.0388 2.9673 4.0345 3.082  3.4451 3.4549 3.7784 4.1743   3.5097 3.7817 2.105  3.6361 3.6952 3.9891 3.2798 3.3898 1.9556 3.4141   3.155  3.3011 3.3273 3.4622 3.6255 3.3536 3.5545 3.3465 3.3642 3.281   3.2794 3.3725 3.7144 4.0549]]
433                   2.6071         1.42993         0.57794         -0.24121          -0.20805          0.15283          1.61918          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.6221 3.6649 3.4123 3.5901 3.4987 3.6914 3.933  3.8634 3.9    3.7971   3.7804 3.7493 3.7359 3.9139 3.7187 3.7539 3.7096 3.8173 2.5122 3.5893   3.6689 3.587  3.4077 3.3892 3.6974 3.7576 3.8283 3.7687 3.8459 3.8032   4.0474 3.9113 3.985  3.9505 3.9528 3.9152 3.5566 3.7807 3.7098 2.8504   3.7149 3.8334 3.6932 2.7661 3.8112 2.7015 3.881  3.7139 2.9865 3.8144   3.8113 3.6509 3.9916 3.8827]]
434                   2.48196         1.36794         0.52324         -0.18164          -0.18163          0.1401          1.376          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2601 3.3436 3.5152 3.3248 3.3767 3.42   3.2663 3.2527 3.7116 3.1497   4.0423 3.4765 3.1297 3.2973 3.5886 3.7869 3.3399 3.4713 2.8799 3.1766   3.0479 3.1086 3.065  2.9263 3.1923 3.9076 3.2381 3.3161 3.5181 3.4456   3.8314 3.2093 3.5439 3.8855 3.6645 3.1261 3.5165 3.6615 3.321  3.4165   3.1899 4.0162 2.8802 3.6072 3.3355 3.4054 2.8869 3.297  3.5347 3.2749   3.3183 3.5127 3.168  3.7064]]
435                   5.36177         1.82241         0.60929         -1.55269          -1.2456          0.375          1.46388          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4624 1.9198 2.1001 3.8604 2.9888 3.4129 0.4468 2.1624 1.2834 1.3472   1.5094 3.8688 0.7391 2.4721 2.0368 2.9177 2.2592 3.166  1.5388 5.2333   0.7547 2.2673 1.9625 0.0775 1.9589 5.1955 1.8023 2.4719 2.2735 3.7364   2.6944 5.7522 1.3474 1.1756 6.5217 1.8213 2.2469 4.1373 2.349  1.1257   0.9648 2.7503 4.4271 3.7566 1.2546 4.2806 1.0364 1.2257 2.6707 6.5752   3.5991 3.5754 2.0494 0.7342]]
436                   2.50161         1.35389         0.51493         -0.19099          -0.19051          0.14627          1.25877          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4014 3.4009 3.2792 3.2162 3.226  3.3775 4.5306 2.8328 3.4989 4.1867   1.8402 3.405  3.4326 3.5471 4.0962 3.8008 3.4288 3.4328 4.1543 4.0161   3.2536 2.1243 2.3948 2.9985 3.2886 3.4476 3.2804 4.2091 3.6719 3.3387   3.6458 3.5912 4.0303 3.5123 3.609  3.4117 3.7968 3.3754 1.4976 3.1838   3.5769 3.3606 3.7281 3.3719 3.409  1.4059 3.291  3.718  4.5797 4.5754   2.4155 3.3964 3.4243 4.3658]]
437                   2.93502         1.50654         0.5857         -0.39734          -0.39097          0.1666          1.50402          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4962 2.8651 3.5452 2.4773 3.5554 3.6493 3.9223 2.8926 2.7686 3.7595   3.7924 3.8048 3.7905 3.9932 3.848  3.7917 3.7251 2.8848 3.4887 2.7841   2.6576 3.4828 2.4861 2.6164 3.7445 3.8974 3.8976 3.9057 3.9039 3.813   3.9592 4.1299 4.0573 4.3159 3.9591 4.1336 3.7251 3.8619 2.6615 2.6453   2.6634 3.6123 4.0199 3.8063 4.1669 2.7807 2.6932 3.8017 3.9511 2.7226   3.8079 3.7556 2.6073 3.8342]]
438                   2.48884         1.3773         0.56219         -0.18491          -0.14962          0.14613          1.31488          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.8945 3.407  3.0516 2.9741 3.2561 2.7124 3.1038 3.7174 3.5079 3.4547   3.5504 3.0507 3.2891 3.9305 3.628  3.43   3.7177 3.9147 3.3872 3.1873   3.1831 3.1554 3.5603 3.4091 3.6637 3.4143 3.7968 3.7627 3.6902 3.7686   4.2671 3.957  3.972  3.7324 4.0911 3.9577 4.0506 3.8793 4.3246 3.5083   4.0058 3.3583 3.3828 3.3946 4.253  3.8295 4.1053 3.3693 4.3228 4.6636   3.2781 4.0896 4.3952 4.6108]]
439                   2.99311         1.48612         0.61803         -0.42499          -0.33282          0.17144          1.39035          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2239 3.1785 3.2695 2.7949 3.1848 3.1349 3.9508 3.1033 3.8039 4.0423   3.5131 3.6614 4.4251 4.1676 3.4523 4.2837 3.6417 4.5641 3.3438 3.9573   3.4734 4.2213 3.2918 3.813  3.8379 3.9751 3.8046 3.8938 4.0374 4.0644   4.5664 4.2899 4.1457 4.6429 4.3531 4.3709 4.6435 3.6023 2.6132 3.862   3.4802 4.2573 3.4081 4.0354 5.1033 4.8057 3.621  3.9638 4.4282 2.3543   2.7836 3.1602 4.4666 4.3587]]
440                   2.35151         1.34864         0.50977         -0.11953          -0.11941          0.13267          1.33785          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1826 3.3433 3.2026 3.2031 3.2123 3.2987 3.4472 3.4746 3.4773 3.4143   3.4573 3.4601 3.4222 3.5287 3.3983 3.338  3.3738 3.4446 3.1188 3.2029   3.1491 3.1561 3.1565 3.1062 3.371  3.4066 3.4055 3.3901 3.3807 3.3907   3.5901 3.6011 3.6104 3.611  3.5595 3.5522 3.2871 3.4211 3.3399 3.3284   3.2872 3.3358 3.3788 3.3881 3.4269 3.3289 3.3454 3.3859 3.3607 3.3604   3.3019 3.3627 3.3075 3.4129]]
441                   2.37503         1.35871         0.51863         -0.13073          -0.13013          0.13464          1.4125          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1744 3.4504 3.3072 3.3164 3.3491 3.392  3.5489 3.5695 3.5611 3.5122   3.5339 3.4414 3.4935 3.6063 3.4548 3.3007 3.3051 3.537  3.2366 3.284   3.2382 3.2375 3.1158 3.1992 3.4494 3.346  3.4818 3.4531 3.4468 3.3339   3.6519 3.6715 3.6652 3.6876 3.6393 3.6356 3.3458 3.3397 3.419  3.3948   3.3143 3.406  3.429  3.4462 3.4842 3.3863 3.4019 3.43   3.3939 3.3938   3.3521 3.2014 3.3421 3.4633]]
442                   2.36867         1.31788         0.5398         -0.1277          -0.09831          0.14003          1.31318          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.8909 2.5552 3.0884 3.3764 3.2238 3.4453 3.6039 3.4989 3.0164 3.4717   3.4608 3.8058 3.5028 3.8262 3.7173 3.4115 3.2717 3.5637 3.5528 3.5201   3.1763 3.5593 3.553  2.7161 3.5932 3.7599 3.6344 3.4138 3.3891 3.7346   3.8112 4.2367 4.0548 4.2189 3.9218 3.5341 3.6941 3.405  4.0367 3.3957   3.3301 3.3558 3.8903 4.2556 3.991  3.3411 3.8194 3.3909 4.4945 4.5417   4.1639 4.6264 4.1315 4.1096]]
443                   2.56965         1.35862         0.5667         -0.22338          -0.16767          0.14995          1.27053          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.5465 3.6169 3.2537 3.1124 3.5381 3.1158 3.612  3.8014 3.7676 3.8203   3.7278 3.2624 3.7705 3.8553 3.4486 3.5971 3.5602 3.9718 2.7718 3.7444   3.8269 3.8421 3.3887 3.5313 3.9026 2.9973 3.9283 2.8467 3.763  3.7218   3.9692 4.383  4.4453 4.7666 4.1322 3.1963 4.2086 3.8661 2.922  3.9093   3.924  4.1103 2.954  4.4147 2.5592 4.2244 4.3227 3.826  4.0776 3.2892   3.1006 5.2538 5.3894 3.2515]]
444                   2.36689         1.35138         0.5109         -0.12685          -0.12673          0.13347          1.35625          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.178  3.3389 3.1956 3.158  3.2603 3.2849 3.47   3.5043 3.4663 3.4067   3.4599 3.4742 3.4267 3.5343 3.3739 3.33   3.3471 3.445  3.1165 3.2038   3.1596 3.1595 3.1764 3.0792 3.3716 3.4118 3.4046 3.3907 3.3815 3.3922   3.6078 3.616  3.5646 3.6389 3.5784 3.541  3.2953 3.4118 3.337  3.3155   3.2875 3.3755 3.3444 3.4079 3.4424 3.3481 3.3462 3.3694 3.3643 3.3489   3.2984 3.3571 3.2781 3.4237]]
445                   2.35666         1.35453         0.52015         -0.12198          -0.12093          0.13424          1.4022          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2924 3.458  3.3113 3.3077 3.3427 3.3928 3.546  3.554  3.5569 3.5185   3.5446 3.4417 3.4904 3.6047 3.4592 3.4339 3.4598 3.5008 3.2116 3.2926   3.2353 3.2272 3.1287 3.1941 3.4436 3.485  3.4648 3.4566 3.4422 3.4736   3.6568 3.652  3.6432 3.6702 3.6399 3.6345 3.3237 3.5011 3.4113 3.3931   3.3341 3.2524 3.433  3.4469 3.4834 3.4048 3.4034 3.4251 3.401  3.2523   3.3645 3.3861 3.359  3.4598]]
446                   2.52326         1.37438         0.51376         -0.2013          -0.19911          0.14059          1.34032          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4156 3.2797 3.1359 3.5099 3.059  3.4106 3.1786 3.6078 3.4275 3.2096   3.4086 4.0013 3.5341 3.0404 3.6666 3.5468 3.1092 3.0443 3.0581 2.9562   3.0697 3.3098 3.1388 3.1241 3.5769 3.5262 2.9987 3.0093 3.646  3.4503   3.6507 3.5158 3.2205 3.715  4.0647 3.2615 3.3519 3.4895 2.9142 3.051   3.3922 3.9561 3.6345 2.7219 3.3035 3.3663 3.3622 3.5459 2.8353 3.2332   3.1872 2.7878 3.0577 2.935 ]]
447                   2.24376         1.28377         0.47869         -0.06823          -0.06762          0.12453          1.2273          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5216 3.3905 3.6328 3.6255 3.4618 3.3517 3.475  3.3339 3.3382 3.4653   3.6946 3.4986 4.0938 3.4199 3.0282 3.6017 3.3779 3.4004 3.1022 3.1491   3.1144 3.8486 2.8931 3.0909 3.3663 2.2163 2.9294 1.872  3.3451 3.4686   1.8634 3.6922 3.4796 3.6398 3.3113 3.5603 3.6175 3.4126 3.3974 3.2342   2.3396 4.4439 3.3971 3.3599 3.5002 4.5629 3.2514 3.2901 3.3136 3.7796   3.2658 3.3239 3.2334 3.3452]]
448                   2.87703         1.46477         0.59241         -0.36973          -0.33758          0.16626          1.44882          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.488  2.7703 3.5821 3.5041 3.5382 3.7144 3.7793 3.9169 3.8353 3.8163   3.785  3.8086 3.8665 3.8993 3.7673 3.7321 2.765  3.7829 3.5054 3.5238   3.5731 3.5911 2.6374 2.4822 2.8226 3.9152 3.7296 3.946  3.8154 3.7928   3.9223 3.9662 4.0821 4.2406 4.072  3.9512 2.7086 3.9924 3.6251 3.6693   3.5584 3.7781 3.8538 3.7551 3.918  3.7816 3.7922 3.7063 3.7234 3.8246   2.5341 3.9465 3.6748 3.9347]]
449                   2.31156         1.33465         0.50308         -0.10051          -0.10026          0.13046          1.39108          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2189 3.2462 3.1448 3.2337 3.3446 3.697  3.5974 3.5467 3.9452 3.5392   3.2953 3.6845 3.2875 3.6309 3.2072 3.3961 3.2023 3.7208 3.0975 2.8564   3.3988 3.2488 3.4699 3.3252 2.9113 3.2541 3.459  3.2235 3.4252 3.3643   2.9733 3.4184 3.6869 3.513  3.3627 3.6449 2.8765 3.5351 3.403  3.0158   3.4689 3.307  3.4292 3.3317 3.5431 3.2516 3.3948 2.8931 3.0399 2.8473   3.4131 3.6039 3.4227 4.0836]]
450                   4.18928         1.6841         0.65518         -0.99448          -0.98896          0.25562          1.44135          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.7648 0.7052 5.1267 2.7524 2.5526 3.8557 2.2864 2.3647 3.9574 2.6475   3.3454 4.6676 3.821  3.016  2.832  2.8696 5.0707 3.6512 2.9637 2.7633   1.5766 1.8576 5.1138 3.0309 3.0723 4.5243 0.0482 1.7715 4.1481 3.8943   2.4288 4.7065 5.7929 3.2748 3.7326 4.3966 1.9222 4.2168 5.9895 2.5498   3.5084 5.4572 2.265  2.7321 4.1375 2.354  1.9733 2.9548 5.7574 2.3039   3.0893 2.032  5.4121 1.8166]]
451                   2.47922         1.39795         0.54116         -0.18033          -0.17793          0.1415          1.54885          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2707 3.3385 3.2721 3.2724 3.4529 3.4072 4.0522 3.3273 3.4691 1.6696   3.5536 3.4985 4.3703 3.4052 3.5257 3.7424 3.3523 2.9696 3.1252 3.351   3.1864 3.1843 3.3312 3.158  3.6396 3.4973 3.3573 4.3398 3.1134 3.397   3.788  3.6493 3.5638 3.7451 3.6654 3.1362 3.5303 3.6719 3.7315 3.373   3.8797 3.2762 3.3531 4.8113 3.5992 3.0734 2.9585 3.2467 3.3135 3.3193   3.4597 3.6233 3.4766 3.6294]]
452                   2.40898         1.34938         0.52518         -0.14689          -0.13376          0.13761          1.34913          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.7384 3.7439 3.5382 3.4854 3.5492 2.6992 3.8617 2.7328 3.9278 2.8806   3.7787 3.8948 2.88   3.9358 3.8921 2.7777 3.7154 3.7217 2.5728 3.5016   3.5164 3.7047 3.4911 3.5556 3.6938 3.9242 3.8939 3.9116 3.6728 3.9011   4.0096 2.9721 2.8627 4.2359 2.9113 3.9024 3.7182 3.6919 2.813  3.6811   3.7836 3.6546 3.743  3.8241 2.8313 3.6279 3.7131 4.1492 3.7123 4.0507   4.0466 2.7043 4.1105 3.7923]]
453                   2.42735         1.35367         0.5507         -0.15564          -0.13239          0.14288          1.19772          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.7969 2.84   3.2271 3.0339 3.0254 2.71   3.2573 3.4978 3.2586 3.1653   3.3234 3.125  3.6737 3.5473 3.7129 3.6842 3.6713 4.331  3.2659 3.2328   2.9601 3.2137 3.0991 3.1416 3.7266 3.6292 3.4048 3.7008 3.6935 3.6873   4.0623 3.5879 3.9253 3.9087 3.5836 4.2317 3.7374 4.1345 3.6675 4.2901   3.558  3.2831 3.8151 4.0057 4.5152 4.1124 3.8518 3.3887 4.1791 3.3028   4.52   4.4897 4.4179 3.3952]]
454                   2.79172         1.47764         0.61379         -0.32911          -0.24798          0.16316          1.315          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.9978 3.8776 3.3471 2.7556 2.8339 3.631  3.6278 3.9757 4.012  3.8867   3.737  3.762  3.6248 4.0639 3.9114 3.3977 3.8715 3.1953 3.1717 3.3483   3.1979 2.6823 3.668  3.4094 4.0478 2.9592 3.8892 4.0393 4.172  3.8628   4.6195 4.4224 4.1692 4.312  4.2266 4.2391 3.6093 3.7344 2.7581 4.2335   3.6732 3.2681 3.7264 3.7527 4.4472 3.9695 3.1783 4.6703 4.7417 4.5902   4.3996 4.8146 4.7304 3.7155]]
455                   2.33676         1.34531         0.50869         -0.11251          -0.11246          0.13192          1.38215          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2    3.3978 3.22   3.2093 3.2624 3.3017 3.4631 3.4666 3.4677 3.4308   3.451  3.4624 3.4327 3.5523 3.4054 3.3403 3.3749 3.4184 3.1201 3.1795   3.1868 3.1978 3.1428 3.129  3.3724 3.4092 3.4039 3.3926 3.3803 3.3919   3.5653 3.5666 3.5437 3.6244 3.541  3.5785 3.3293 3.4069 3.3736 3.3302   3.2363 3.3907 3.3744 3.3919 3.4147 3.3371 3.3609 3.3975 3.3693 3.3967   3.3196 3.3463 3.3004 3.4341]]
456                   2.36236         1.35508         0.51756         -0.1247          -0.12416          0.13405          1.3978          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2899 3.4548 3.3155 3.3185 3.3429 3.2966 3.4107 3.5665 3.5632 3.5259   3.5397 3.5543 3.4866 3.6248 3.4568 3.2886 3.4448 3.5067 3.213  3.1775   3.2218 3.2417 3.2432 3.2008 3.4553 3.4851 3.3272 3.4694 3.4511 3.459   3.6394 3.6591 3.6637 3.5155 3.5003 3.6244 3.3585 3.4883 3.4032 3.4101   3.3053 3.3924 3.4313 3.4497 3.4834 3.3928 3.3989 3.4385 3.4113 3.219   3.3481 3.3575 3.1914 3.4613]]
457                   2.26323         1.2966         0.54271         -0.0775          -0.02817          0.13623          1.2499          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2378 3.401  3.2328 2.9523 3.2849 2.7896 3.2124 3.5899 3.6798 3.0561   3.4657 3.4847 3.8017 2.9551 3.9938 3.8703 4.074  4.1553 3.4278 2.8795   3.4149 3.5769 3.6003 3.1886 3.3808 3.705  3.6978 3.3927 3.3752 3.7518   4.5189 3.5959 3.6024 4.0952 4.5231 4.1724 3.967  3.3991 3.3387 3.0583   3.8888 3.8834 4.1184 4.0291 4.093  3.8507 3.3359 4.0865 4.2753 4.9386   4.4262 4.8716 4.1256 4.2268]]
458                   3.15503         1.5709         0.66223         -0.50208          -0.38647          0.18089          1.52357          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9903 3.9375 2.6406 2.9364 2.6376 3.0514 3.4134 3.5443 3.4097 3.7695   4.0582 3.7533 3.8266 3.8734 4.2292 3.6879 3.7471 3.9664 3.4735 3.853   3.2153 3.3539 3.796  3.2356 2.5802 4.0879 3.802  3.899  4.022  4.1289   4.6418 4.8428 4.347  4.7135 4.3677 5.0249 4.0926 3.4241 4.0492 3.6888   4.5098 4.3537 3.3633 4.4118 4.9189 4.052  3.529  4.8336 3.835  3.2621   4.6838 4.5048 4.8542 4.0523]]
459                   2.35429         1.34958         0.51003         -0.12085          -0.12075          0.1328          1.35075          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1635 3.345  3.2368 3.2213 3.2281 3.2776 3.4364 3.5107 3.4661 3.4507   3.4368 3.4692 3.4472 3.605  3.3805 3.3419 3.3893 3.4021 3.1647 3.1807   3.1532 3.1375 3.1414 3.1065 3.3708 3.4098 3.4045 3.3922 3.3794 3.391   3.5924 3.6322 3.5989 3.574  3.5924 3.569  3.2868 3.3929 3.3509 3.3247   3.2405 3.3506 3.3791 3.3916 3.4228 3.3494 3.3318 3.3717 3.3649 3.3523   3.3009 3.3481 3.3066 3.4147]]
460                   2.33364         1.34722         0.51694         -0.11102          -0.11025          0.13297          1.40975          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.308  3.4585 3.3211 3.317  3.343  3.4047 3.538  3.5712 3.5501 3.5171   3.5502 3.5613 3.5126 3.4839 3.4577 3.423  3.4419 3.501  3.2253 3.2897   3.1142 3.236  3.2315 3.202  3.4432 3.481  3.4802 3.4757 3.4527 3.463   3.5118 3.6782 3.6465 3.6737 3.4995 3.4849 3.348  3.4686 3.408  3.4115   3.3076 3.4003 3.2783 3.4338 3.48   3.2505 3.3918 3.4406 3.4054 3.4087   3.3593 3.3839 3.3501 3.4588]]
461                   2.43656         1.37745         0.51158         -0.16002          -0.15964          0.13533          1.36277          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.9801 3.2978 2.9357 3.2873 3.0268 3.3971 3.3449 3.4426 3.7176 3.6912   3.1483 3.2534 3.0935 3.0734 3.5033 3.6032 3.1998 3.3139 3.2919 3.3315   3.3564 3.1976 2.8318 2.9909 3.6044 3.0635 3.8625 3.2773 2.9143 3.5234   4.368  3.4331 3.1659 3.5309 3.6934 3.109  3.8133 3.0003 3.3723 2.9501   3.3692 3.811  4.024  3.2014 3.5847 3.807  3.8365 2.89   3.0232 2.8479   3.5569 3.3154 3.3852 3.4862]]
462                   3.08504         1.51135         0.56139         -0.46876          -0.46741          0.17575          1.4937          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3251 3.7691 2.3319 3.2877 3.184  3.3178 4.0367 4.1031 3.5123 3.4796   3.5073 3.2797 1.9183 3.7447 3.7663 3.8674 3.1553 3.4846 3.3177 3.2637   1.9976 2.3487 2.6723 1.9361 3.9996 3.2044 3.5519 3.4201 3.3902 3.2009   3.5915 3.7856 3.5426 3.1273 3.625  3.9111 3.6618 4.0666 3.3171 3.2979   4.1324 3.4751 3.1687 3.2502 3.4203 3.3106 3.2408 2.5155 3.3038 2.7816   3.26   2.8866 3.2675 4.4788]]
463                   2.78546         1.45658         0.56153         -0.32613          -0.31155          0.15692          1.59183          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6042 3.6837 3.4841 3.5487 3.6837 3.6187 3.7665 3.8119 3.8382 3.8957   3.8503 3.9001 3.8399 3.9519 3.7782 2.7683 3.7038 2.6579 2.5659 2.6781   3.4374 3.4246 3.5258 2.5512 3.8077 3.7493 3.7782 3.7264 2.7078 3.7878   3.9153 4.0997 4.0746 4.121  2.7688 2.8426 2.6138 2.7329 3.7047 3.878   3.7356 3.6718 3.9408 4.0323 3.9786 3.6478 3.965  3.74   2.7092 3.7532   3.6358 3.7048 3.612  4.1105]]
464                   2.50723         1.38195         0.53011         -0.19367          -0.19366          0.14166          1.36382          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8634 3.4212 3.3852 3.7885 3.1072 3.1369 3.7693 3.2034 3.5969 3.6743   3.2866 3.7542 3.3178 3.4454 3.3274 2.9685 3.0671 3.5886 3.0322 3.4044   3.3537 3.3726 3.0391 2.9759 3.0493 3.6798 3.5193 3.307  2.9539 3.3254   3.4877 4.0749 3.7632 3.8421 3.0094 3.7622 3.3343 3.7518 3.2281 3.6015   2.7859 3.02   3.526  3.2844 3.3559 2.7865 3.1588 3.6836 3.6245 3.5921   3.4103 3.431  3.2075 2.9616]]
465                   3.75862         1.53523         0.55423         -0.78944          -0.78741          0.20718          1.25883          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3445 2.7107 3.6847 4.2962 1.7994 2.5853 1.6679 1.5626 1.6221 5.6871   2.6427 5.7468 3.6333 2.8819 3.9944 3.8124 4.903  4.7193 2.3041 4.6593   3.4919 3.7953 2.6778 1.9847 2.4178 4.6792 2.8483 3.9649 4.0956 4.0646   5.6817 1.8127 1.5882 4.64   2.5053 5.1429 5.5502 1.5861 4.8816 2.7539   0.4602 3.8714 1.5936 6.0406 2.3607 1.505  2.5029 1.7312 6.061  2.1886   6.9814 1.6613 6.5634 4.2512]]
466                   2.89062         1.48413         0.55555         -0.3762          -0.37567          0.16024          1.53432          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.7959 4.1211 3.1723 3.5664 3.3729 3.8918 3.3525 4.0243 3.5312 4.2808   3.6533 3.6089 3.4111 3.5451 3.3313 2.0198 3.5275 2.468  3.0229 3.5755   3.5331 3.1821 3.0335 3.1377 3.0832 3.366  4.4414 3.395  3.3837 3.3891   3.2933 3.6668 4.6937 3.6456 2.6938 3.244  3.9052 3.4214 2.8397 3.3425   3.2894 3.7713 3.5893 3.4386 3.2438 3.3392 3.9745 3.6002 3.3154 3.1746   3.3008 2.6226 3.3017 3.5401]]
467                   2.83967         1.49071         0.59859         -0.35194          -0.32817          0.16513          1.5415          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.4167 3.7312 3.6275 3.4954 3.5367 3.5307 3.8093 3.9327 3.8277 3.7764   3.7501 3.877  3.8077 2.9107 2.7583 3.6747 3.8312 3.8993 3.5225 2.4911   2.7253 3.3657 3.3756 3.3857 3.7432 3.8181 3.9383 3.7601 3.6645 3.7829   4.011  4.1197 4.1923 4.0417 3.0034 4.0633 3.7121 3.8185 3.6867 3.7726   3.6959 3.9956 3.7561 3.8768 3.8432 2.7273 3.751  2.6575 4.2146 3.9231   3.6307 2.6389 4.0858 3.7483]]
468                   2.3503         1.34774         0.50974         -0.11896          -0.11891          0.13258          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2735 3.3    3.3534 3.4823 3.5146 3.4984 3.4661   3.4822 3.4983 3.44   3.5466 3.3866 3.36   3.3867 3.44   3.165  3.2298   3.1813 3.1812 3.1813 3.1492 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.5889 3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3334 3.3333   3.2533 3.3334 3.3528 3.3689 3.4012 3.3204 3.3204 3.3527 3.3133 3.3132   3.26   3.2866 3.26   3.3667]]
469                   2.35034         1.34775         0.50975         -0.11897          -0.11893          0.13259          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4067 3.2733 3.2733 3.3    3.3534 3.4824 3.5146 3.4984 3.4661   3.4822 3.4984 3.4406 3.5467 3.3867 3.36   3.3866 3.44   3.165  3.2298   3.1812 3.1814 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3837 3.3962   3.5728 3.589  3.5728 3.5891 3.5728 3.5567 3.28   3.4134 3.3334 3.3333   3.2533 3.3333 3.3527 3.3688 3.4014 3.3204 3.3204 3.3528 3.3133 3.3133   3.26   3.2867 3.26   3.3667]]
470                   2.35035         1.34775         0.50975         -0.11898          -0.11893          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4067 3.2734 3.2733 3.3    3.3532 3.4824 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3867 3.4398 3.165  3.2298   3.1812 3.1812 3.1814 3.1488 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.5889 3.5728 3.5889 3.5728 3.5566 3.28   3.4133 3.3334 3.3335   3.2533 3.3333 3.3529 3.3689 3.4013 3.3204 3.3204 3.3526 3.3133 3.3132   3.26   3.2866 3.26   3.3667]]
471                   2.35037         1.34775         0.50975         -0.11899          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2735 3.3    3.3534 3.4821 3.5146 3.4983 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3866 3.4399 3.1649 3.2298   3.1812 3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5567 3.2801 3.4134 3.3334 3.3333   3.2531 3.3332 3.3527 3.3689 3.4013 3.3203 3.3204 3.3528 3.3133 3.3133   3.26   3.2867 3.2599 3.3667]]
472                   2.35032         1.34775         0.50975         -0.11896          -0.11892          0.13258          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2732 3.2735 3.3001 3.3533 3.4822 3.5147 3.4984 3.4661   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1812 3.1812 3.1488 3.3773 3.4151 3.4088 3.3962 3.3837 3.3963   3.5728 3.5887 3.5728 3.589  3.5728 3.5566 3.28   3.4132 3.3334 3.3333   3.2533 3.3334 3.3528 3.369  3.4014 3.3204 3.3204 3.3527 3.3134 3.3132   3.26   3.2866 3.2603 3.3666]]
473                   2.35026         1.34773         0.50974         -0.11894          -0.11889          0.13258          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2733 3.2999 3.3534 3.4824 3.5146 3.4984 3.4659   3.4822 3.4984 3.4399 3.5467 3.3869 3.3601 3.3867 3.4399 3.1651 3.2297   3.1812 3.1812 3.1813 3.1489 3.3774 3.4151 3.4087 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5567 3.28   3.4127 3.3332 3.3334   3.2533 3.3333 3.3527 3.3689 3.4014 3.3204 3.3203 3.3527 3.3133 3.3133   3.26   3.2868 3.26   3.3667]]
474                   2.35033         1.34774         0.50974         -0.11897          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2735 3.2999 3.3533 3.4822 3.5147 3.4984 3.466   3.4823 3.4983 3.44   3.5467 3.3866 3.36   3.3867 3.44   3.165  3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3836 3.3962   3.5728 3.5887 3.5728 3.589  3.5728 3.5567 3.28   3.4133 3.3333 3.3333   3.2533 3.3332 3.3527 3.3689 3.4013 3.3204 3.3203 3.3527 3.3134 3.3132   3.26   3.2865 3.26   3.3667]]
475                   2.35039         1.34777         0.50975         -0.119          -0.11895          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2733 3.3    3.3541 3.4822 3.5146 3.4982 3.466   3.4823 3.4984 3.44   3.5469 3.3865 3.3599 3.3868 3.44   3.165  3.2298   3.1816 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.5889 3.5728 3.5566 3.2801 3.4133 3.3333 3.3334   3.2533 3.3333 3.3528 3.3689 3.4013 3.3204 3.3205 3.3527 3.3133 3.3133   3.2597 3.2862 3.26   3.3667]]
476                   2.35042         1.34777         0.50976         -0.11901          -0.11897          0.13259          1.3336          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4066 3.2733 3.2733 3.3    3.3533 3.4822 3.5145 3.4985 3.4661   3.4823 3.4985 3.44   3.5467 3.3867 3.36   3.3867 3.44   3.1651 3.2297   3.181  3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5727 3.589  3.5728 3.589  3.5729 3.5567 3.28   3.4136 3.3338 3.333   3.2533 3.3334 3.3528 3.369  3.4012 3.3204 3.3204 3.3528 3.3133 3.3134   3.26   3.2867 3.2598 3.3665]]
477                   2.3504         1.34776         0.50976         -0.119          -0.11896          0.13259          1.3334          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4064 3.2734 3.2733 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.4397 3.5467 3.3867 3.3599 3.3866 3.44   3.1652 3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5729 3.589  3.5729 3.5566 3.2802 3.4137 3.3333 3.3334   3.2534 3.3334 3.3527 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3133   3.26   3.2867 3.2599 3.3667]]
478                   2.35028         1.34773         0.50974         -0.11894          -0.1189          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4067 3.2733 3.2733 3.3002 3.3531 3.4822 3.5144 3.4983 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3866 3.44   3.1651 3.2298   3.1813 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3836 3.3962   3.5728 3.589  3.5727 3.5889 3.5728 3.5566 3.28   3.4133 3.3333 3.3333   3.2533 3.3333 3.3528 3.3688 3.4013 3.3203 3.3204 3.353  3.3133 3.3133   3.26   3.2867 3.2602 3.3665]]
479                   2.35033         1.34775         0.50975         -0.11897          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2469 3.4067 3.2733 3.2733 3.3    3.3532 3.4822 3.5145 3.4984 3.466   3.4822 3.4983 3.44   3.5467 3.3865 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1812 3.1814 3.1489 3.3773 3.415  3.4088 3.3962 3.3837 3.3963   3.5729 3.589  3.5729 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3334   3.2535 3.3333 3.3528 3.3689 3.4013 3.3204 3.3204 3.3527 3.3134 3.3135   3.26   3.2867 3.2599 3.3665]]
480                   2.35037         1.34776         0.50975         -0.11899          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.273  3.2733 3.3001 3.3532 3.4822 3.5146 3.4985 3.466   3.4824 3.4984 3.4398 3.5467 3.3866 3.36   3.3867 3.4398 3.165  3.2297   3.1813 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3333 3.3334   3.2533 3.3332 3.3527 3.3689 3.4014 3.3204 3.3204 3.3527 3.3133 3.3133   3.26   3.2867 3.26   3.3667]]
481                   2.35033         1.34774         0.50975         -0.11897          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2735 3.2734 3.2999 3.3533 3.4822 3.5146 3.4984 3.466   3.4823 3.4984 3.44   3.5467 3.3868 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5726 3.5893 3.5728 3.5566 3.2801 3.4133 3.3333 3.3334   3.2534 3.3333 3.3528 3.3689 3.4013 3.3203 3.3205 3.3527 3.3132 3.3132   3.26   3.2868 3.26   3.3667]]
482                   2.35039         1.34776         0.50975         -0.119          -0.11895          0.13259          1.3334          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2736 3.2733 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3868 3.36   3.3867 3.4398 3.1651 3.2298   3.1813 3.1813 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5727 3.589  3.5728 3.589  3.573  3.5566 3.28   3.4133 3.3334 3.3334   3.2533 3.3333 3.3528 3.3689 3.4011 3.3204 3.3204 3.3529 3.3133 3.3126   3.26   3.2864 3.2599 3.3667]]
483                   2.35029         1.34774         0.50974         -0.11895          -0.1189          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2735 3.2734 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.4397 3.5467 3.3867 3.3601 3.3867 3.4402 3.1651 3.2298   3.1812 3.1813 3.1813 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3963   3.5728 3.5886 3.5728 3.589  3.5729 3.5566 3.28   3.4133 3.3334 3.3333   3.2533 3.3333 3.3528 3.3691 3.4013 3.3203 3.3203 3.3528 3.3133 3.3134   3.2601 3.2867 3.2599 3.3666]]
484                   2.35036         1.34775         0.50975         -0.11898          -0.11894          0.13259          1.3333          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4067 3.2734 3.2735 3.3001 3.3533 3.4822 3.5144 3.4984 3.466   3.4821 3.4984 3.4399 3.5467 3.3867 3.3599 3.3867 3.4399 3.1651 3.2298   3.1813 3.1812 3.1812 3.1489 3.3773 3.4151 3.4089 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5729 3.5566 3.28   3.4133 3.3331 3.3333   3.2535 3.3333 3.3527 3.3689 3.4013 3.3203 3.3204 3.3527 3.3133 3.3132   3.26   3.2862 3.2599 3.3667]]
485                   2.35036         1.34774         0.50975         -0.11898          -0.11894          0.13259          1.3333          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2736 3.2734 3.3    3.3534 3.4822 3.5147 3.4984 3.466   3.4822 3.4984 3.4401 3.5467 3.3867 3.3603 3.3867 3.44   3.165  3.2298   3.1812 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5729 3.5566 3.2799 3.4133 3.3333 3.3333   3.2533 3.3333 3.3528 3.3689 3.4013 3.3204 3.3205 3.3528 3.313  3.3133   3.2597 3.2866 3.26   3.3667]]
486                   2.35037         1.34776         0.50975         -0.11899          -0.11894          0.13259          1.3333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2733 3.3001 3.3536 3.4821 3.5146 3.4984 3.4661   3.4822 3.4984 3.4399 3.5467 3.3867 3.36   3.3867 3.4399 3.1651 3.2296   3.1812 3.1812 3.1812 3.149  3.3774 3.415  3.4088 3.3963 3.3836 3.3962   3.5728 3.589  3.5733 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3332   3.2532 3.3333 3.3526 3.3689 3.4013 3.3204 3.3203 3.3526 3.3134 3.3132   3.26   3.2867 3.26   3.3666]]
487                   2.35031         1.34773         0.50974         -0.11896          -0.11891          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2734 3.3    3.3531 3.4822 3.5146 3.4984 3.466   3.4822 3.4982 3.4399 3.5465 3.3867 3.3602 3.3866 3.44   3.1651 3.2298   3.1812 3.181  3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5729 3.5888 3.5727 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3332   3.2533 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3528 3.3133 3.3133   3.2601 3.2866 3.26   3.3667]]
488                   2.35036         1.34776         0.50975         -0.11898          -0.11894          0.13259          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2729 3.3    3.3534 3.4823 3.5146 3.4984 3.466   3.4822 3.4984 3.4398 3.5467 3.3866 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5727 3.5566 3.28   3.4134 3.3333 3.3335   3.2533 3.3333 3.3527 3.3688 3.4012 3.3204 3.3203 3.3528 3.3134 3.3134   3.26   3.2867 3.2599 3.3666]]
489                   2.35034         1.34774         0.50975         -0.11897          -0.11893          0.13259          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2735 3.3001 3.3534 3.4826 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5465 3.3866 3.3601 3.3867 3.4402 3.1651 3.23   3.1812 3.1813 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5562 3.28   3.4135 3.3333 3.3333   3.2533 3.3334 3.3527 3.369  3.4014 3.3203 3.3204 3.3527 3.3133 3.3134   3.26   3.2867 3.2597 3.3666]]
490                   2.35035         1.34774         0.50975         -0.11898          -0.11893          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2735 3.3    3.3533 3.4821 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3867 3.44   3.165  3.2299   3.1812 3.1811 3.1812 3.1491 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.5889 3.5729 3.589  3.5728 3.5565 3.28   3.4136 3.3333 3.3335   3.2533 3.3334 3.3525 3.3689 3.4012 3.3204 3.3204 3.3528 3.3133 3.3133   3.26   3.2865 3.26   3.3667]]
491                   2.35041         1.34777         0.50975         -0.11901          -0.11896          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2469 3.4066 3.2733 3.2734 3.3    3.3533 3.4822 3.5146 3.4985 3.4661   3.4824 3.4984 3.44   3.5466 3.3867 3.3599 3.3865 3.44   3.165  3.2298   3.1812 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3336 3.3333   3.2533 3.3333 3.3528 3.3691 3.4013 3.3204 3.3204 3.3527 3.3133 3.3132   3.26   3.2867 3.2598 3.3666]]
492                   2.35035         1.34775         0.50974         -0.11898          -0.11893          0.13258          1.33335          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2734 3.3    3.3533 3.4822 3.5145 3.4984 3.466   3.4822 3.4985 3.44   3.5467 3.3866 3.36   3.3866 3.44   3.165  3.2298   3.1812 3.1813 3.1812 3.1488 3.3773 3.4151 3.4088 3.3963 3.3836 3.3963   3.5728 3.589  3.5727 3.5886 3.5728 3.5567 3.28   3.4133 3.3334 3.3333   3.2533 3.3333 3.3527 3.3689 3.4012 3.3204 3.3204 3.3527 3.3132 3.3133   3.2599 3.2866 3.2599 3.3667]]
493                   2.35027         1.34773         0.50974         -0.11894          -0.1189          0.13258          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2469 3.4067 3.2733 3.2734 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3866 3.3599 3.3867 3.44   3.1651 3.2298   3.1813 3.1812 3.1813 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.5727 3.5889 3.5728 3.5887 3.5728 3.5563 3.28   3.4133 3.3332 3.3334   3.2534 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3528 3.3133 3.3131   3.26   3.2867 3.26   3.3667]]
494                   2.35035         1.34775         0.50975         -0.11898          -0.11893          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2733 3.2733 3.3    3.3533 3.4822 3.5145 3.4984 3.4662   3.4822 3.4985 3.44   3.5467 3.3867 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1812 3.1813 3.1489 3.3774 3.4151 3.4088 3.3963 3.3836 3.3963   3.5728 3.589  3.5728 3.589  3.5728 3.5567 3.2801 3.4133 3.3333 3.3334   3.2533 3.3335 3.3528 3.3689 3.4013 3.3204 3.3204 3.3528 3.3133 3.3136   3.26   3.2866 3.26   3.3667]]
495                   2.35032         1.34774         0.50975         -0.11897          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2733 3.2734 3.3001 3.3533 3.4822 3.5145 3.4985 3.466   3.4822 3.4984 3.4399 3.5467 3.3867 3.36   3.3867 3.4399 3.1651 3.2298   3.1812 3.1814 3.1812 3.1488 3.3774 3.4151 3.4089 3.3962 3.3836 3.3962   3.5728 3.5891 3.5728 3.589  3.5728 3.5567 3.28   3.4133 3.3334 3.3333   3.2533 3.3333 3.3527 3.3689 3.4013 3.3204 3.3203 3.3527 3.3133 3.3133   3.2601 3.2866 3.2601 3.3672]]
496                   2.35037         1.34777         0.50975         -0.11899          -0.11894          0.13259          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2733 3.3    3.3534 3.4821 3.5146 3.4986 3.466   3.4822 3.4984 3.4401 3.5467 3.3866 3.36   3.3867 3.4402 3.165  3.2298   3.1811 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5727 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3335 3.3333   3.2538 3.3333 3.3529 3.3689 3.4013 3.3202 3.3203 3.3528 3.3135 3.3134   3.2599 3.2865 3.26   3.3666]]
497                   2.35035         1.34776         0.50975         -0.11898          -0.11893          0.13259          1.3333          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2734 3.2731 3.2997 3.3533 3.4822 3.5146 3.4984 3.4661   3.4822 3.4985 3.4397 3.5467 3.3871 3.36   3.3866 3.4399 3.165  3.2298   3.1813 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3837 3.3962   3.5729 3.589  3.5728 3.589  3.5729 3.5566 3.2799 3.4134 3.3333 3.3333   3.2533 3.3333 3.3528 3.3689 3.4013 3.3205 3.3202 3.3528 3.3133 3.3133   3.26   3.2867 3.2601 3.3667]]
498                   2.35034         1.34775         0.50975         -0.11897          -0.11893          0.13259          1.3334          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4065 3.2733 3.2733 3.3    3.3534 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5466 3.3867 3.36   3.3872 3.44   3.1651 3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3836 3.3962   3.573  3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3333 3.3334   3.2533 3.3334 3.3528 3.369  3.4013 3.3204 3.3204 3.3526 3.3132 3.3133   3.2599 3.2866 3.26   3.3664]]
499                   2.35037         1.34775         0.50975         -0.11899          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2732 3.2734 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.4402 3.5469 3.3866 3.3598 3.3873 3.44   3.1651 3.2298   3.1813 3.1812 3.181  3.1489 3.3774 3.4151 3.4088 3.3961 3.3836 3.3962   3.5728 3.589  3.5728 3.5891 3.5727 3.5566 3.2801 3.4138 3.3334 3.3331   3.2531 3.3333 3.3527 3.3689 3.4015 3.3204 3.3204 3.3527 3.3133 3.3133   3.26   3.2866 3.26   3.3666]]
500                   2.35034         1.34775         0.50975         -0.11897          -0.11893          0.13259          1.33335          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4064 3.2733 3.2733 3.3    3.3533 3.4822 3.5147 3.4984 3.466   3.4821 3.4985 3.4399 3.547  3.3867 3.36   3.3867 3.44   3.165  3.2298   3.1812 3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3963 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3333   3.2534 3.3334 3.3529 3.3691 3.401  3.3205 3.3204 3.3529 3.3134 3.3134   3.2599 3.2867 3.26   3.3667]]
501                   2.35035         1.34776         0.50975         -0.11898          -0.11893          0.13259          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.407  3.2734 3.2733 3.3    3.3535 3.4822 3.5146 3.4983 3.4661   3.4822 3.4983 3.44   3.5467 3.3867 3.36   3.3866 3.4399 3.165  3.2298   3.1812 3.1811 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.5891 3.5728 3.5567 3.28   3.4133 3.3332 3.3334   3.2538 3.3333 3.3528 3.3689 3.4013 3.3203 3.3204 3.3528 3.3137 3.3133   3.26   3.2868 3.26   3.3667]]
502                   2.35035         1.34775         0.50975         -0.11898          -0.11893          0.13259          1.3334          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4068 3.2733 3.2736 3.3    3.3533 3.4822 3.5145 3.4983 3.4662   3.4822 3.4984 3.44   3.5469 3.3867 3.36   3.3866 3.44   3.165  3.2296   3.1813 3.1812 3.1812 3.149  3.3773 3.4151 3.4088 3.3962 3.3836 3.3963   3.5729 3.5888 3.5727 3.589  3.5727 3.5566 3.28   3.4136 3.3333 3.3335   3.2532 3.3333 3.3527 3.3689 3.4011 3.3204 3.3204 3.3528 3.3133 3.313   3.2599 3.2867 3.26   3.3667]]
503                   2.35037         1.34775         0.50974         -0.11899          -0.11894          0.13259          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4068 3.2733 3.2733 3.3    3.3533 3.4821 3.5145 3.4984 3.4661   3.4822 3.4984 3.44   3.5466 3.3866 3.3596 3.3867 3.44   3.165  3.2298   3.1811 3.1812 3.1813 3.1489 3.3773 3.4151 3.4089 3.3962 3.3836 3.3962   3.5728 3.589  3.5727 3.589  3.5728 3.5567 3.28   3.4133 3.3333 3.3333   3.253  3.3333 3.3527 3.3689 3.4012 3.3204 3.3203 3.3528 3.3133 3.3134   3.26   3.2865 3.26   3.3667]]
504                   2.35035         1.34775         0.50975         -0.11898          -0.11893          0.13259          1.3333          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2733 3.2734 3.2997 3.3533 3.4822 3.5147 3.4984 3.4661   3.4822 3.4984 3.44   3.5466 3.3867 3.3601 3.3867 3.44   3.1651 3.2298   3.1812 3.1812 3.1813 3.1489 3.3774 3.4151 3.4089 3.3962 3.3837 3.3962   3.5728 3.5889 3.5728 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3333   3.2534 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3528 3.3133 3.3133   3.26   3.2866 3.26   3.3665]]
505                   2.35043         1.34777         0.50975         -0.11902          -0.11897          0.13259          1.33345          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2465 3.4068 3.2733 3.2733 3.2999 3.3535 3.4822 3.5148 3.4984 3.466   3.4822 3.4983 3.44   3.5466 3.3867 3.3598 3.3867 3.44   3.165  3.2299   3.1812 3.1812 3.1813 3.1489 3.3773 3.415  3.4088 3.3962 3.3836 3.3963   3.5728 3.5889 3.5728 3.589  3.573  3.5566 3.28   3.4133 3.3336 3.3332   3.2533 3.3333 3.3527 3.369  3.4013 3.3204 3.3204 3.3527 3.3133 3.3131   3.2597 3.2866 3.26   3.3666]]
506                   2.35032         1.34774         0.50975         -0.11896          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2734 3.3    3.3533 3.4822 3.5146 3.4983 3.466   3.4822 3.4985 3.44   3.5467 3.3866 3.36   3.387  3.44   3.1651 3.2299   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4089 3.3962 3.3837 3.3962   3.5728 3.589  3.5729 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3333   3.2534 3.3331 3.3527 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3133   3.26   3.2866 3.26   3.3666]]
507                   2.35036         1.34775         0.50975         -0.11898          -0.11894          0.13259          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2734 3.3    3.3533 3.4821 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3866 3.3602 3.3867 3.44   3.165  3.2297   3.1812 3.1812 3.1812 3.149  3.3774 3.4151 3.4088 3.3963 3.3836 3.3962   3.5729 3.5889 3.5728 3.589  3.573  3.5565 3.28   3.4135 3.3333 3.3333   3.2534 3.3333 3.3527 3.3689 3.4013 3.3203 3.3204 3.3527 3.3133 3.3132   3.2598 3.2867 3.2601 3.3666]]
508                   2.35035         1.34775         0.50974         -0.11898          -0.11893          0.13258          1.3333          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2734 3.2734 3.3    3.3533 3.4822 3.5143 3.4984 3.466   3.4822 3.4984 3.44   3.5468 3.3866 3.36   3.3866 3.44   3.1649 3.2298   3.1812 3.1811 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3837 3.3962   3.5728 3.5889 3.5728 3.589  3.5728 3.5566 3.2802 3.4133 3.3333 3.3333   3.2535 3.3333 3.3527 3.3689 3.4012 3.3204 3.3203 3.3527 3.3134 3.3133   3.2599 3.2866 3.26   3.3666]]
509                   2.35032         1.34774         0.50974         -0.11896          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2734 3.3    3.3533 3.4821 3.5146 3.4984 3.4661   3.4822 3.4983 3.4405 3.5466 3.3865 3.3599 3.3868 3.44   3.1651 3.2298   3.1813 3.1813 3.1811 3.1487 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.2799 3.4132 3.3333 3.3333   3.2534 3.3333 3.3528 3.369  3.4014 3.3204 3.3204 3.3528 3.3134 3.3133   3.2601 3.2866 3.26   3.3666]]
510                   2.3503         1.34773         0.50974         -0.11896          -0.11891          0.13258          1.3334          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4065 3.2735 3.2731 3.3    3.3532 3.4822 3.5146 3.4984 3.4658   3.4822 3.4984 3.44   3.5467 3.3867 3.3601 3.3867 3.4401 3.1651 3.2298   3.1812 3.1813 3.1812 3.149  3.3774 3.4151 3.4088 3.3962 3.3836 3.3963   3.5728 3.5891 3.5728 3.589  3.5728 3.5564 3.2799 3.4134 3.3334 3.3333   3.2533 3.3334 3.3525 3.3689 3.4013 3.3204 3.3205 3.3527 3.3133 3.3133   3.26   3.2867 3.26   3.3663]]
511                   2.35032         1.34774         0.50974         -0.11897          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2735 3.3    3.3534 3.4822 3.5146 3.4982 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3864 3.44   3.1651 3.2298   3.1813 3.1812 3.1814 3.1489 3.3774 3.4151 3.4089 3.3962 3.3837 3.3962   3.5727 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3332 3.3334   3.2533 3.3333 3.3531 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3133   3.2599 3.2866 3.26   3.3667]]
512                   2.35033         1.34774         0.50975         -0.11897          -0.11892          0.13258          1.3335          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2468 3.4066 3.2733 3.2737 3.3    3.3533 3.4822 3.5146 3.4984 3.4661   3.4824 3.4985 3.44   3.5465 3.3867 3.3604 3.3866 3.4399 3.165  3.2298   3.1812 3.1813 3.1812 3.1488 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5727 3.589  3.5727 3.5889 3.5728 3.5567 3.28   3.4133 3.3333 3.3332   3.2536 3.3337 3.3527 3.3689 3.4014 3.3204 3.3204 3.3526 3.3132 3.3133   3.26   3.2866 3.26   3.3666]]
513                   2.3503         1.34774         0.50974         -0.11896          -0.11891          0.13258          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2733 3.3    3.3533 3.4823 3.5145 3.4985 3.466   3.4822 3.4984 3.4401 3.5468 3.3867 3.36   3.3866 3.4401 3.1651 3.2298   3.1812 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5726 3.589  3.5728 3.5566 3.28   3.4133 3.3334 3.3333   3.2533 3.3333 3.3528 3.3689 3.4013 3.3204 3.3204 3.3528 3.3133 3.3134   3.2601 3.2867 3.26   3.3667]]
514                   2.35037         1.34775         0.50975         -0.11899          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2734 3.2732 3.3    3.3533 3.4822 3.5145 3.4984 3.466   3.4822 3.4983 3.44   3.5467 3.3867 3.3599 3.3867 3.4399 3.1652 3.2297   3.1812 3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5729 3.589  3.5728 3.5567 3.28   3.4136 3.3334 3.3333   3.2533 3.3333 3.3528 3.3689 3.4012 3.3204 3.3204 3.3527 3.3132 3.3133   3.26   3.2867 3.26   3.3667]]
515                   2.35034         1.34774         0.50975         -0.11897          -0.11893          0.13258          1.33325          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4069 3.2734 3.2733 3.3    3.3533 3.4822 3.5146 3.4983 3.4661   3.4822 3.4984 3.4398 3.5466 3.3868 3.3599 3.3867 3.4399 3.1651 3.2298   3.1812 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3963   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3332 3.3333   3.2532 3.3331 3.3527 3.369  3.4015 3.3204 3.3203 3.3526 3.3133 3.3133   3.26   3.2867 3.26   3.3667]]
516                   2.38074         1.34953         0.54795         -0.13345          -0.10102          0.14038          1.23698          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.1815 2.6785 2.8131 2.7823 2.99   2.922  3.3547 3.4517 3.1818 3.4286   3.8115 3.4258 3.4104 3.5432 3.7646 3.4328 3.663  3.6391 3.1125 3.2944   3.4714 3.1128 3.4536 3.3284 3.754  3.754  3.7599 3.7737 3.7636 3.5755   3.691  3.8774 4.0161 4.3599 4.2326 4.2333 3.7103 3.3293 3.5312 3.4139   3.5098 3.8886 4.063  3.7851 3.5889 3.913  3.7984 4.1171 4.5768 4.3845   4.2683 4.3422 3.9986 4.5016]]
517                   2.32227         1.33198         0.53261         -0.10561          -0.07487          0.1356          1.3277          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.4368 3.1111 3.5445 2.5489 3.5232 3.2972 3.629  3.2931 3.1996 3.7224   3.168  3.4347 3.485  4.0328 3.9626 3.5385 3.4463 3.9929 3.3724 3.2068   3.2312 3.6733 2.9121 3.1193 3.6674 3.4108 3.674  3.7757 3.6572 3.7526   3.7082 3.5893 4.2357 3.6576 3.9956 4.3809 3.5511 3.419  3.2677 3.5799   3.646  3.4496 4.157  4.2084 3.7168 3.5946 3.3635 4.1023 4.6157 4.5988   3.3698 3.9736 4.1229 4.2645]]
518                   2.32847         1.33882         0.55456         -0.10856          -0.06754          0.14041          1.22267          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.1265 3.0293 2.8335 2.9158 2.4299 3.0746 3.5419 3.7693 3.2861 3.111   3.6908 3.1482 4.1295 3.3666 3.3371 3.9995 3.5248 3.5331 3.5571 3.1731   3.3836 3.1697 3.8505 3.5091 3.3726 3.7769 3.7091 3.675  3.6619 3.6672   4.0676 4.0085 4.0745 4.5087 3.7121 3.5666 4.2053 3.3902 3.6342 3.7778   3.2524 3.8842 3.9286 3.7821 4.1234 4.4412 3.3735 3.7235 4.2774 4.3093   4.7622 4.4546 4.4217 4.485 ]]
519                   2.46883         1.35568         0.55809         -0.17539          -0.14825          0.14607          1.35882          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[2.7845 2.9608 3.0922 2.6537 3.183  3.0269 3.1872 3.1876 3.4516 3.6078   3.4489 3.4529 3.682  4.065  3.4548 3.6183 3.962  3.5998 2.8075 3.334   3.4294 3.2865 3.6093 3.3721 3.691  3.7121 3.4027 3.3908 3.5457 3.673   4.1869 3.6359 4.2    3.927  4.323  4.0704 3.9006 4.1859 3.9878 3.6799   2.8384 4.0221 3.3005 4.0104 3.4431 3.6176 3.6087 4.0391 3.4123 4.3873   4.17   4.2337 4.5373 4.1688]]
520                   2.34998         1.33706         0.50592         -0.1188          -0.11816          0.13298          1.34953          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8761 3.0379 2.923  2.9686 3.0108 2.9603 3.2612 3.2836 3.2764 3.2678   3.2427 3.4375 3.2949 3.404  3.2149 3.2746 3.3202 3.321  3.0432 3.0931   3.1282 3.0445 3.1394 3.0492 3.3548 3.3916 3.3952 3.3863 3.3593 3.3701   3.7001 3.6287 3.7164 3.6164 3.7566 3.6843 3.3303 3.3683 3.5692 3.2343   2.94   3.1893 3.527  3.5743 3.5752 3.4789 3.4355 3.5231 3.6862 3.6466   3.5158 3.6292 3.6204 3.6029]]
521                   2.38302         1.35153         0.50833         -0.13453          -0.13375          0.13428          1.38747          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8017 3.2799 2.9435 3.103  2.9558 3.0773 3.2974 3.3214 3.4475 3.3616   3.6481 3.1826 3.19   3.4136 3.1826 3.3104 3.1611 3.4702 3.0192 2.9477   3.0663 3.018  3.0876 3.22   3.3577 3.392  3.3893 3.377  3.3661 3.3774   3.558  3.7612 3.7082 3.6688 3.6361 3.6122 3.3704 3.3307 3.1886 3.0676   3.2324 3.262  3.5359 3.538  3.5987 3.4872 3.5306 3.3991 3.5607 3.5829   3.4667 3.4604 3.5625 3.5974]]
522                   2.32833         1.33254         0.50507         -0.10849          -0.10783          0.13204          1.3192          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8263 3.0761 2.9707 2.9418 3.0279 2.9783 3.4409 3.3571 3.3727 3.2362   3.3723 3.3098 3.4112 3.452  3.5188 3.2269 3.2429 3.3828 3.1629 3.0445   3.0101 3.1033 3.1679 2.9999 3.3578 3.3984 3.3885 3.3733 3.3571 3.38   3.7058 3.7637 3.5258 3.7539 3.6781 3.6832 3.3136 3.3757 3.0082 3.2091   3.0876 3.3286 3.4305 3.496  3.5707 3.3984 3.334  3.5293 3.5646 3.6255   3.5699 3.6354 3.633  3.5487]]
523                   2.35569         1.34634         0.50838         -0.12152          -0.12114          0.13339          1.34175          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7804 3.0792 2.8913 2.8555 2.9295 3.1854 3.3338 3.3097 3.3312 3.2532   3.241  3.3523 3.4649 3.3228 3.4413 3.2383 3.3842 3.3985 3.074  3.1471   2.9781 2.9801 3.0263 3.0552 3.3549 3.3937 3.3903 3.3789 3.3599 3.3731   3.7717 3.6624 3.6188 3.651  3.6857 3.6725 3.3669 3.3318 3.0963 3.5763   3.5087 3.2435 3.4372 3.5848 3.5326 3.5223 3.432  3.5341 3.5951 3.6214   3.6923 3.6046 3.4917 3.6053]]
524                   2.39996         1.3598         0.51168         -0.1426          -0.14255          0.13474          1.37625          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3416 3.462  3.3472 3.4333 3.5259 3.504  3.5941 3.5642 3.5528 3.5287   3.5272 3.5179 3.4848 3.5593 3.3603 3.4183 3.3222 3.4096 3.132  3.1698   3.1834 3.1686 3.1999 3.2048 3.3885 3.4145 3.4084 3.4084 3.3854 3.3985   3.5508 3.5052 3.4731 3.5007 3.5327 3.5454 3.3262 3.4278 3.3979 3.3546   3.3485 3.3523 3.3002 3.3005 3.421  3.2709 3.2469 3.2667 3.2284 3.1969   3.0567 3.188  3.0986 3.2899]]
525                   2.36137         1.35239         0.50937         -0.12422          -0.12421          0.13271          1.3008          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3123 3.6002 3.2573 3.3581 3.3634 3.5067 3.6049 3.5739 3.5958 3.6049   3.5218 3.5492 3.453  3.5921 3.3482 3.2293 3.427  3.4352 3.2004 3.3067   3.1775 3.1704 3.2402 3.2657 3.3802 3.4186 3.4038 3.4126 3.3862 3.4079   3.6042 3.514  3.4596 3.5769 3.4729 3.5463 3.2515 3.3301 3.2963 3.3053   3.2737 3.2774 3.2097 3.3206 3.377  3.3526 3.281  3.3897 3.2828 3.256   3.1485 3.2092 3.1885 3.378 ]]
526                   2.34864         1.34136         0.50765         -0.11817          -0.11816          0.13237          1.32865          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3456 3.5274 3.4357 3.4068 3.3434 3.4554 3.4528 3.6353 3.5937 3.5099   3.4942 3.4449 3.5424 3.6332 3.2872 3.3499 3.3876 3.5734 3.2174 3.2648   3.2342 3.2384 3.1842 3.1258 3.3848 3.4207 3.4155 3.3839 3.385  3.3979   3.566  3.5602 3.5081 3.6044 3.5156 3.5086 3.2823 3.3984 3.3073 3.3364   3.2222 3.3209 3.2475 3.2763 3.3649 3.3182 3.1965 3.3732 3.202  3.339   3.2797 3.1916 3.0946 3.432 ]]
527                   2.37948         1.35233         0.51169         -0.13285          -0.13279          0.13412          1.30263          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2173 3.4448 3.4632 3.2437 3.4594 3.3559 3.5757 3.615  3.6202 3.542   3.633  3.5705 3.3806 3.5117 3.384  3.26   3.5113 3.5037 3.3221 3.1969   3.2068 3.1745 3.1738 3.1445 3.384  3.4293 3.4134 3.3943 3.3951 3.3994   3.5333 3.5587 3.5138 3.5185 3.4596 3.5457 3.3455 3.5451 3.207  3.2758   3.1609 3.4199 3.2827 3.3247 3.3056 3.3362 3.2188 3.3081 3.2732 3.2409   3.2536 3.1676 3.1745 3.1556]]
528                   2.342         1.34566         0.50871         -0.115          -0.11487          0.1322          1.3382          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1652 3.2881 3.2004 3.1702 3.2144 3.2841 3.4199 3.4719 3.4602 3.4202   3.4333 3.4233 3.4397 3.5924 3.3613 3.3758 3.3495 3.4627 3.1498 3.1536   3.1438 3.1187 3.1706 3.1074 3.3735 3.4103 3.4053 3.3903 3.3795 3.3918   3.603  3.5798 3.6162 3.6237 3.6188 3.5599 3.2807 3.4161 3.341  3.2909   3.2256 3.3354 3.3886 3.4119 3.4121 3.3509 3.3708 3.4016 3.3803 3.3852   3.3255 3.3592 3.3546 3.3939]]
529                   2.34945         1.34723         0.50927         -0.11855          -0.11838          0.13261          1.33695          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1494 3.332  3.1897 3.2135 3.1943 3.2385 3.4376 3.4673 3.4639 3.4247   3.4364 3.452  3.4085 3.5652 3.4126 3.404  3.41   3.3615 3.1173 3.1674   3.1556 3.1323 3.144  3.1066 3.3742 3.4098 3.4029 3.3884 3.3806 3.389   3.6206 3.6201 3.599  3.6173 3.6082 3.5864 3.2608 3.3825 3.3443 3.3296   3.1932 3.3171 3.3755 3.4025 3.4371 3.3477 3.3272 3.3728 3.3618 3.3678   3.312  3.3485 3.3461 3.4194]]
530                   2.36482         1.35289         0.51169         -0.12587          -0.12575          0.13346          1.3554          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1676 3.3135 3.1944 3.1543 3.2101 3.2897 3.4315 3.4361 3.4771 3.4208   3.4292 3.4629 3.381  3.5619 3.3984 3.3877 3.3403 3.3789 3.1156 3.2055   3.1573 3.1281 3.1416 3.1089 3.3732 3.4118 3.4035 3.3909 3.3794 3.3931   3.6143 3.6433 3.6006 3.6084 3.5949 3.5961 3.2593 3.4381 3.3559 3.3344   3.2957 3.3549 3.3764 3.4022 3.4305 3.3597 3.3559 3.4013 3.3765 3.3803   3.2996 3.3618 3.3167 3.4248]]
531                   2.3439         1.3472         0.50996         -0.11591          -0.11585          0.13241          1.36975          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1671 3.3256 3.1417 3.1917 3.29   3.2799 3.4439 3.4666 3.4483 3.4126   3.4556 3.4833 3.4074 3.5411 3.4113 3.3447 3.3903 3.4161 3.1226 3.2339   3.1655 3.1565 3.1552 3.2019 3.3722 3.4101 3.407  3.392  3.3773 3.3901   3.6007 3.6237 3.6082 3.6029 3.5702 3.5662 3.3252 3.4103 3.3578 3.3817   3.251  3.3028 3.3929 3.4139 3.4442 3.3469 3.3384 3.3841 3.3644 3.3839   3.3311 3.341  3.2759 3.4376]]
532                   2.52662         1.35975         0.47369         -0.2029          -0.16167          0.13738          1.4237          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.648  2.6549 2.6155 2.1272 2.9334 2.8674 2.7936 3.3338 2.8505 3.1558   2.8392 3.4629 2.7998 3.3911 3.1557 2.9305 2.9198 2.6009 2.8909 2.8232   2.7246 2.8834 3.0037 2.6451 2.9226 3.018  3.0881 3.0927 3.1792 3.1407   3.3097 3.2999 3.5969 3.4346 3.4758 3.5645 2.9168 2.8484 3.1019 3.3445   3.3235 3.2468 3.6049 3.1792 3.2253 3.1595 3.0877 3.1405 3.4345 3.5249   3.4001 3.1807 3.3024 3.5804]]
533                   2.37558         1.31462         0.45609         -0.13099          -0.0915          0.12779          1.33172          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.4915 3.3862 2.5641 2.9961 2.6874 3.2713 3.1917 3.0001 2.6998 2.6526   2.9458 2.757  3.3505 3.3831 3.1413 2.5775 3.0997 3.0998 2.877  2.9049   3.2111 2.9627 2.7739 2.8264 2.9476 3.084  3.4034 2.8806 3.0809 3.0973   3.5987 3.127  3.5834 3.1941 3.5533 3.5666 3.2036 2.7981 2.7801 3.33   2.9069 2.7845 3.2856 3.1495 3.2295 3.177  3.0573 3.4341 2.9857 3.2276   3.1412 3.5632 3.642  3.4498]]
534                   2.49589         1.35066         0.47686         -0.18827          -0.14872          0.13729          1.35462          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.3776 3.3163 2.1993 2.6663 3.214  2.5789 2.7482 3.027  2.8434 3.0217   3.2394 3.0533 3.1798 3.1029 2.9129 3.2357 2.7792 3.4676 2.8163 2.4262   2.579  2.7054 2.8295 3.1143 3.0335 3.4118 3.4047 3.1372 3.0114 2.9913   3.058  3.433  3.1623 3.4298 3.2457 3.1879 2.8924 3.3433 3.3667 3.318   3.2722 3.3215 2.9631 3.0629 3.3489 3.334  3.1456 3.3819 3.4684 3.5063   3.1504 3.3447 3.3616 3.5795]]
535                   2.58778         1.37716         0.48479         -0.23202          -0.20004          0.14046          1.36072          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.7062 3.0641 3.1602 3.2453 2.5243 2.6906 2.9175 3.1689 2.8659 3.2139   3.095  2.8316 3.1149 3.5851 3.0101 2.7895 3.1333 2.9851 2.7488 2.5867   2.7888 2.6247 2.7011 2.5907 2.9717 3.0268 2.994  3.3933 3.289  3.0073   3.1274 3.6289 3.5772 3.2986 3.6269 3.459  3.2568 3.3236 3.3328 2.8063   3.2831 3.3655 3.3943 3.4973 3.3613 3.3282 3.2292 3.3505 3.0756 3.3917   3.1738 3.3822 3.2647 3.3131]]
536                   2.36715         1.32922         0.50173         -0.12698          -0.12506          0.13368          1.31002          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9174 3.077  2.9198 2.9392 2.8082 2.9906 3.2735 3.3475 3.3572 3.2755   3.2686 3.2551 3.5521 3.3718 3.2783 3.4618 3.1326 3.5341 2.9028 3.0705   3.0219 3.0027 3.0477 2.8741 3.354  3.3894 3.3871 3.3771 3.3561 3.3681   3.5605 3.7439 3.497  3.7845 3.5908 3.4923 3.1278 3.5622 3.1204 3.0914   2.9751 3.4687 3.5751 3.5109 3.4274 3.4449 3.4459 3.5186 3.62   3.5558   3.5385 3.5635 3.4853 3.6274]]
537                   2.29702         1.32967         0.50441         -0.09359          -0.09352          0.13043          1.29463          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.125  3.0691 2.9638 2.8866 3.1174 3.1677 3.2045 3.4121 3.2372 3.2913   3.3109 3.1985 3.4256 3.4999 3.4755 3.3055 3.2326 3.3758 2.9817 3.1007   2.9605 3.0686 3.2673 3.2432 3.3561 3.4004 3.3831 3.3775 3.3636 3.3763   3.6301 3.6436 3.7435 3.6509 3.62   3.6572 3.3036 3.3737 3.3071 3.3646   3.5033 3.2984 3.4934 3.5319 3.6341 3.5272 3.4605 3.5211 3.6944 3.5328   3.6204 3.6217 3.4945 3.5959]]
538                   2.36188         1.33577         0.5093         -0.12447          -0.12445          0.13409          1.31815          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8926 3.2256 2.9687 3.1254 3.306  3.0187 3.2622 3.3534 3.3115 3.2714   3.2928 3.3248 3.3865 3.6327 3.524  3.3058 3.4558 3.2607 3.0049 3.1456   2.9653 3.0732 3.1398 2.9361 3.3512 3.3906 3.3906 3.3963 3.3582 3.3822   3.7281 3.7176 3.6737 3.7045 3.7223 3.5456 3.1597 3.543  3.2937 3.2881   3.4814 3.3034 3.4166 3.5515 3.6072 3.5912 3.5105 3.5767 3.5292 3.5993   3.5616 3.605  3.4954 3.7252]]
539                   2.3313         1.32258         0.49961         -0.10991          -0.10858          0.13169          1.32288          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8678 3.0346 2.9256 2.8167 3.0496 2.9942 3.241  3.2204 3.2573 3.3787   3.2924 3.2724 3.3464 3.3518 3.1451 3.2988 3.2611 3.4439 3.2047 3.1119   3.0344 3.2299 3.0678 2.9936 3.3591 3.3922 3.3939 3.3765 3.3715 3.3702   3.7582 3.7715 3.5774 3.7565 3.625  3.5613 3.294  3.3639 3.0603 3.4361   3.0764 3.3255 3.2922 3.4111 3.4733 3.5064 3.4876 3.5493 3.619  3.5003   3.5414 3.5165 3.567  3.6435]]
540                   2.35262         1.34831         0.50999         -0.12006          -0.12004          0.13269          1.33675          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2958 3.527  3.3006 3.3021 3.3965 3.49   3.5151 3.5278 3.5501 3.4815   3.5055 3.5763 3.4242 3.5344 3.407  3.3903 3.3879 3.4465 3.151  3.2016   3.2032 3.1621 3.1778 3.1903 3.3788 3.4172 3.4062 3.3981 3.3815 3.3859   3.5964 3.5614 3.5438 3.5667 3.5637 3.5379 3.247  3.4171 3.2769 3.3441   3.216  3.3305 3.3535 3.3321 3.343  3.2718 3.3078 3.3037 3.3361 3.3083   3.272  3.216  3.2307 3.3299]]
541                   2.36782         1.34996         0.51016         -0.1273          -0.12722          0.13341          1.37525          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2357 3.4247 3.3903 3.2735 3.3891 3.3412 3.5312 3.514  3.5488 3.5225   3.463  3.4829 3.3961 3.5247 3.4214 3.3663 3.404  3.4309 3.1805 3.2354   3.1574 3.1919 3.227  3.1495 3.3766 3.4108 3.4114 3.3955 3.3845 3.395   3.554  3.6152 3.5752 3.5669 3.5477 3.4853 3.2972 3.4177 3.3786 3.3895   3.2112 3.3497 3.324  3.3293 3.3719 3.2751 3.3    3.3474 3.2807 3.2966   3.1227 3.1967 3.2627 3.3198]]
542                   2.34486         1.34573         0.50928         -0.11636          -0.11635          0.13238          1.36255          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2358 3.4989 3.35   3.2833 3.3966 3.3283 3.5214 3.5492 3.479  3.4908   3.5033 3.4957 3.4199 3.56   3.5376 3.4002 3.4449 3.4075 3.1626 3.2517   3.197  3.1718 3.2294 3.1881 3.3761 3.4182 3.4195 3.4008 3.3832 3.3965   3.576  3.5883 3.5052 3.5924 3.5717 3.5241 3.3263 3.3951 3.3651 3.36   3.1899 3.3002 3.3192 3.3501 3.3975 3.2865 3.3253 3.3597 3.2817 3.2082   3.2026 3.2069 3.2898 3.3094]]
543                   2.3588         1.34853         0.51105         -0.123          -0.12296          0.13322          1.35935          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1799 3.2946 3.2838 3.2045 3.2338 3.3062 3.4199 3.4603 3.459  3.4346   3.475  3.4614 3.4121 3.5269 3.3495 3.3302 3.3776 3.4606 3.1329 3.1672   3.175  3.1469 3.1376 3.1132 3.3715 3.4095 3.4044 3.3938 3.3846 3.3941   3.6109 3.6106 3.6115 3.634  3.6105 3.5906 3.3118 3.441  3.3602 3.3585   3.2606 3.3506 3.3883 3.3973 3.4316 3.3521 3.3807 3.3715 3.3766 3.3766   3.3265 3.3365 3.3335 3.4508]]
544                   2.35571         1.34827         0.50995         -0.12153          -0.12143          0.13291          1.3394          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1789 3.3577 3.2265 3.2038 3.2066 3.3309 3.4361 3.4633 3.4522 3.4236   3.4561 3.4859 3.4067 3.4952 3.3564 3.3584 3.4119 3.4422 3.1372 3.1849   3.1653 3.1574 3.1478 3.0937 3.3747 3.4121 3.4054 3.3932 3.3796 3.3905   3.5977 3.612  3.5935 3.6452 3.5895 3.607  3.2804 3.3788 3.3475 3.3313   3.1915 3.3031 3.3875 3.4022 3.4796 3.3391 3.3471 3.3819 3.3956 3.3728   3.2577 3.3462 3.3306 3.429 ]]
545                   2.33426         1.34244         0.50721         -0.11132          -0.11122          0.13167          1.3205          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1936 3.3856 3.2112 3.2179 3.3425 3.2972 3.4785 3.4829 3.4423 3.4148   3.4198 3.4734 3.41   3.5641 3.3659 3.3681 3.3649 3.447  3.1001 3.1974   3.1989 3.1841 3.1396 3.139  3.3736 3.4099 3.4027 3.3917 3.3791 3.3922   3.5798 3.5533 3.6048 3.5463 3.6089 3.6005 3.2394 3.4299 3.2978 3.3432   3.2583 3.2672 3.3824 3.4133 3.3941 3.3257 3.3501 3.3982 3.3431 3.3604   3.3215 3.3043 3.3422 3.4255]]
546                   2.36396         1.35138         0.51099         -0.12546          -0.12537          0.13336          1.35575          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1941 3.3516 3.175  3.1984 3.2659 3.2459 3.4348 3.4853 3.4713 3.4285   3.4289 3.4589 3.4187 3.6017 3.3835 3.3481 3.372  3.4034 3.1177 3.1628   3.1379 3.1275 3.1384 3.1173 3.3729 3.4099 3.4052 3.3911 3.3783 3.3909   3.6062 3.6249 3.5777 3.6039 3.5847 3.5931 3.2931 3.4228 3.3094 3.3408   3.2552 3.3707 3.3907 3.4192 3.4541 3.362  3.3733 3.3926 3.3919 3.378   3.2864 3.3686 3.3006 3.4193]]
547                   2.62293         1.39743         0.49756         -0.24875          -0.22          0.14629          1.4303          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.121  2.4658 2.7808 2.358  2.1836 2.1291 2.7729 3.076  2.7371 2.8034   3.238  2.8369 3.1558 2.8261 2.6372 2.9881 3.6092 3.2154 3.1431 2.6691   2.9821 2.5216 2.6996 2.4467 3.1681 3.24   3.1919 3.173  3.1186 3.1563   3.3598 3.7831 3.4518 3.382  3.7161 3.6585 3.6926 3.1244 3.0907 3.0929   3.2438 3.1368 3.7781 3.6855 3.9471 3.393  3.4379 3.5939 3.2132 2.9762   3.3588 3.4036 4.406  4.0253]]
548                   2.41681         1.32102         0.45764         -0.15062          -0.10429          0.13346          1.32258          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[1.6674 2.7786 2.3034 2.5789 2.4199 2.7473 3.3017 2.7626 2.6429 2.7265   3.06   2.7809 3.0762 2.9371 3.0728 2.9928 3.2547 2.6713 2.7911 2.7863   2.9153 2.8903 2.6611 2.6214 3.0948 3.204  3.1972 3.1562 3.0751 3.1413   3.1729 3.0556 3.4328 3.3231 3.6673 3.6602 2.9355 2.8326 3.409  3.2356   2.6787 2.6511 3.092  3.6615 3.2342 3.4357 3.2192 3.4627 3.6016 4.2115   3.434  3.5742 3.792  3.739 ]]
549                   2.40709         1.31328         0.45648         -0.14599          -0.10272          0.13183          1.35227          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.2726 2.5858 2.515  2.1091 2.9516 2.2891 2.8922 2.8254 2.952  2.6499   2.9646 2.6275 2.9589 2.62   2.9044 2.7856 3.4472 3.4175 2.5881 2.9402   2.5662 2.5447 3.034  2.8035 3.1212 3.1888 3.1091 3.1339 3.0607 3.0802   3.3098 3.2449 3.7476 3.2164 3.4315 3.5841 4.0618 2.863  3.3114 2.4655   2.8997 3.1418 3.5534 3.5122 3.1823 3.5333 3.643  2.8964 3.3884 3.5341   4.1821 3.3291 3.7275 3.6884]]
550                   2.44676         1.33672         0.4719         -0.16488          -0.12615          0.1359          1.40215          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.5099 3.1312 2.2345 2.3383 2.3394 1.9903 3.2174 2.9395 2.8979 2.6949   3.0279 2.9727 3.061  3.5825 2.7299 3.284  3.4008 2.8932 2.595  2.5318   2.5865 2.9496 3.2176 2.6891 3.1967 3.1437 3.1721 3.1551 3.2061 3.0565   3.3653 3.41   3.4625 3.451  3.4391 3.2415 2.8623 3.1332 3.6103 3.0321   2.7634 2.5812 3.2047 3.6667 3.2788 3.3961 3.3943 3.327  3.5137 3.3395   3.7707 3.5372 3.5727 4.1664]]
551                   5.29158         1.79393         0.46048         -1.51927          -0.3237          0.37561          1.3666          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.9638 1.5797 1.6878 1.2395 1.133  0.8634 1.6242 2.2103 1.8526 1.1151   1.7523 1.326  1.7887 2.0582 1.5552 2.0631 0.3511 1.5176 1.4626 1.212   0.4599 1.6552 1.6501 0.914  1.671  1.546  2.253  2.2613 1.4359 2.4046   1.969  1.7995 1.7312 2.1433 2.3875 2.4995 1.8724 1.9462 2.146  2.1516   1.7256 2.7459 2.0358 2.5429 1.5615 1.3054 2.2086 2.4283 2.2338 1.8055   2.7078 2.534  2.7541 2.2511]]
552                   4.75679         1.75124         0.4552         -1.26466          -0.025          0.31087          1.6226          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.7894 1.112  2.0319 2.1608 1.229  1.7142 1.1163 1.7408 2.121  1.3577   1.9619 2.3243 1.5727 1.2737 1.3874 2.5344 2.1227 0.9523 1.458  1.9317   2.2938 1.9088 1.8543 1.9545 1.2121 1.8908 1.8182 2.0445 1.082  1.3996   2.343  1.3462 1.3378 1.4927 1.7723 2.2362 2.4639 2.3364 0.594  1.4373   1.9517 2.2903 1.6838 1.9152 2.1545 1.7952 1.7488 1.0994 2.7862 2.2795   1.6637 2.6621 1.4822 1.3067]]
553                   5.3486         1.84238         0.49619         -1.54642          -0.34563          0.36775          1.58845          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.3782 1.5605 1.4526 1.183  2.4672 1.475  2.5911 1.0603 1.419  1.5005   1.4829 1.8598 1.8545 1.3586 1.1165 1.8481 1.2912 0.8983 1.5797 1.5235   1.8311 0.9569 1.795  2.5067 1.9447 2.0852 2.0765 1.0451 1.778  2.5133   2.4752 2.0098 2.3657 3.014  0.8779 2.1148 1.8894 2.3472 1.9169 2.785   1.3692 1.6485 2.3199 2.1838 1.8327 2.2884 1.8344 1.3749 2.9633 2.8373   1.6805 1.1426 0.6323 1.5705]]
554                   5.61899         1.94561         0.53435         -1.67515          -0.31795          0.39597          1.62472          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.9784 1.1126 2.053  1.3339 1.943  1.816  1.3787 1.9064 1.1185 1.6805   1.4675 1.5442 1.6383 1.6489 1.9526 1.9971 0.9626 1.4936 1.4695 1.1723   0.9649 1.7488 0.6585 1.1765 1.9019 2.4992 2.1596 0.715  2.0591 1.6376   1.1338 2.2695 1.893  2.3841 2.3122 2.8251 1.6913 2.565  1.0686 1.7877   1.5256 0.9447 1.9343 0.928  2.4639 1.62   1.9477 2.563  1.8841 1.8305   1.426  3.275  1.2626 1.7684]]
555                   4.31825         1.70472         0.80927         -1.05588          -0.13989          0.23427          1.68812          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8554 4.2098 3.2487 4.0976 4.3222 4.752  4.4238 3.8256 4.5791 4.8171   4.07   4.4496 4.5359 4.6236 4.7193 5.2915 4.3053 4.1653 4.508  4.4073   5.0095 4.5956 4.5389 4.3496 4.6343 4.8124 4.8422 3.0484 5.0706 4.103   5.2398 5.5665 5.8219 5.3312 5.4142 4.7251 4.4124 4.8555 4.5542 4.2186   4.3074 5.2959 5.2613 5.0434 5.5716 5.2407 5.3925 5.0077 5.3067 6.3135   5.917  5.3008 6.1873 5.0721]]
556                   4.67924         1.73851         0.83737         -1.22774          -0.17708          0.24682          1.38025          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6307 4.1829 4.2331 4.1515 4.3052 3.9512 5.0059 4.2249 4.5141 4.3111   4.589  4.7082 4.9613 4.657  5.0697 5.1468 5.8227 5.011  4.5508 4.8462   5.0791 4.4302 3.9783 4.645  4.994  4.8625 2.7813 4.5047 4.924  4.9749   6.0789 5.8604 5.5778 5.1185 5.668  5.6969 4.5154 5.5415 5.6399 3.3521   4.2006 5.0796 5.3505 4.5577 5.1462 4.8463 5.0749 5.3564 5.4798 5.4808   5.716  4.9728 5.7892 5.7388]]
557                   4.97938         1.91138         0.86248         -1.37064          -0.39586          0.25712          1.88098          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8607 3.6614 3.7071 3.1605 4.0907 3.4969 4.1149 4.5059 4.967  4.3666   4.4541 4.7248 5.0748 4.2379 4.651  4.7774 4.4007 4.4058 3.6086 4.4485   2.7986 4.1738 4.2186 4.6082 4.9114 5.0634 4.7376 5.0727 5.0583 5.0267   5.8862 4.5172 5.514  4.0986 5.4645 5.7035 5.1162 4.8744 5.5568 5.2755   4.601  4.8197 4.9804 5.028  5.9539 5.6743 5.9284 5.1796 6.0192 5.8474   6.077  6.4097 5.3224 5.7024]]
558                   4.58947         1.78182         0.8297         -1.185          -0.28104          0.24387          1.5776          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.853  3.2162 4.0731 3.7926 3.1419 4.3321 4.8637 4.196  4.2966 4.3536   4.7407 3.6756 4.789  4.63   5.4654 4.8339 4.6562 4.5131 4.1351 4.5743   3.962  3.8306 4.5167 4.3482 5.0863 5.2739 4.8179 4.9726 4.3598 5.0979   5.0706 5.3911 5.7174 5.7516 5.4992 5.3259 3.979  4.3924 5.1754 4.3529   4.4758 5.1878 5.1081 4.8801 5.2411 5.4323 5.2903 5.4199 5.6526 5.3015   5.7552 6.2567 5.5118 5.5087]]
559                   2.41356         1.33047         0.48064         -0.14907          -0.12934          0.13487          1.2557          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.6088 2.6447 2.6639 2.968  2.647  2.892  2.8586 2.644  2.5576 2.8462   2.9671 2.9527 2.9349 2.5604 3.0949 3.4001 2.7414 3.0567 2.9778 2.4616   2.3467 2.8384 2.6011 2.9674 3.1937 3.2935 3.2216 3.3095 3.232  3.1787   3.9312 3.3164 3.4892 3.5967 3.5437 3.7579 3.6719 3.3518 2.8367 3.1601   3.2297 3.5536 3.4906 3.1561 3.3847 3.5358 3.2672 3.8154 3.7102 3.9907   3.8184 3.8546 4.1801 3.3705]]
560                   2.45356         1.33723         0.47617         -0.16812          -0.13678          0.13614          1.35695          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.392  1.9185 2.4233 2.4874 2.3978 2.3    2.5921 2.9275 2.8813 3.04   2.9806 2.6831 2.9724 3.7075 2.9655 2.9881 2.7094 3.1618 2.9833 3.1436   3.2688 2.4767 2.456  2.9697 3.1111 3.3082 3.2086 3.2483 3.2141 3.2607   3.5528 3.3204 3.4757 3.5854 4.0408 3.6237 2.7942 2.8638 3.6237 3.3564   3.0404 2.7813 3.4786 3.5552 3.3575 2.9945 3.6301 3.2238 3.9147 3.3359   4.1061 3.7485 3.6437 3.5882]]
561                   2.47573         1.35478         0.48849         -0.17867          -0.15385          0.13988          1.31248          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5697 2.5839 2.7381 1.9092 1.9547 2.3134 2.7729 3.0561 2.9076 2.8455   3.4784 2.9053 3.1751 2.5741 3.248  2.9955 2.7952 2.8169 2.7035 2.8897   2.9758 2.7882 2.6483 3.1889 3.2176 3.2433 3.2262 3.1949 3.2521 3.2464   3.643  3.5538 4.0334 3.5983 3.1281 3.7252 2.9266 3.0113 3.2413 3.5673   3.0293 2.8451 3.449  3.8356 3.3559 3.4139 3.5369 3.3434 3.956  3.9563   4.3976 3.6426 3.5845 3.3471]]
562                   2.48364         1.35114         0.49514         -0.18244          -0.16771          0.14081          1.42842          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0249 2.574  2.5237 2.0533 2.3944 2.702  2.6746 3.692  2.9321 2.8715   3.0248 2.8521 2.2427 3.1137 3.4263 2.9848 3.4803 2.9944 2.826  3.4101   2.7416 2.7385 2.8617 3.0432 3.1593 3.2848 3.2209 3.2347 3.2266 3.2428   3.5421 3.4293 3.9031 3.4954 3.5884 3.6139 3.0556 3.318  3.4349 3.5758   3.2541 2.9332 3.7632 3.5777 3.5735 3.217  3.4733 3.403  4.0563 2.8876   3.6601 3.9114 4.1836 3.7671]]
563                   2.20741         1.26908         0.52169         -0.05092          -0.03048          0.13222          1.24163          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[2.8103 2.7245 2.8349 2.7224 3.1445 2.629  3.4691 2.9386 3.2085 3.2992   2.1085 2.9591 3.3807 3.9031 4.7263 3.6955 3.6579 4.0338 3.4177 3.6739   3.1075 3.2546 3.2973 3.4718 3.4303 3.6023 3.6585 3.5519 3.3474 3.6439   3.782  3.4862 4.1637 4.2047 4.1388 4.0746 3.9018 3.8555 3.6519 3.7495   3.7327 3.9045 2.9996 3.1248 3.7103 4.0363 4.0455 3.9908 4.5366 4.4303   4.0954 4.0852 4.2793 4.1727]]
564                   2.80046         1.45443         0.62645         -0.33327          -0.16809          0.16584          1.40333          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.6466 3.934  3.2707 3.7114 3.1687 3.3782 4.0988 3.7051 3.7188 3.7774   3.4664 3.6887 4.1263 4.2518 2.9698 3.7719 4.3358 4.012  2.8518 3.3417   3.4002 3.7725 3.6563 3.6804 4.1935 3.8341 3.7393 3.7163 3.7614 3.8122   4.4499 4.2607 4.6714 4.1464 4.6015 4.2596 3.6009 4.127  3.5784 3.7366   3.9767 4.4724 4.1125 4.2995 4.3006 4.0985 4.4435 4.35   4.5322 4.9763   4.6321 4.901  4.21   4.9449]]
565                   0.4538         0.51777         0.19245         0.78395          0.78395          0.02887          0.4507          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.8561 3.7848 3.4132 3.7448 3.6138 3.7146 2.1618 2.2936 2.2735 2.1888   2.1013 2.2641 4.7893 5.1397 4.7675 4.7258 4.7065 4.7492 5.1005 5.6587   5.3191 4.917  5.3746 5.1362 2.4977 2.8834 2.8012 2.6529 2.4849 2.3738   1.611  1.7404 1.6555 1.8708 1.6193 1.6918 2.0681 2.2417 2.2024 2.1796   1.8914 2.1322 3.1957 2.9907 3.2428 2.8347 2.7905 2.9746 5.0212 5.0982   5.1053 4.8981 5.2005 5.0865]]
566                   0.50827         0.55751         0.20777         0.75802          0.75974          0.03131          0.48375          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.5192 4.0239 3.3671 3.5909 3.732  3.7971 2.0225 2.3965 2.2996 2.1662   2.0248 2.291  4.9466 5.2198 4.8406 4.6894 4.777  4.9703 5.0395 5.6008   5.4057 5.2206 5.3191 5.2152 2.5807 2.8118 2.7962 2.6592 2.6163 2.7046   1.6956 1.7515 1.707  1.8081 1.5969 1.714  2.1625 2.4911 2.2381 2.2778   2.0327 2.2854 3.1868 3.2281 3.3354 3.0248 3.028  2.8421 5.297  5.2677   4.576  5.2158 5.0631 5.4444]]
567                   2.47618         1.36654         0.56429         -0.17888          -0.15035          0.14715          1.19458          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3251 3.0454 2.7686 3.4469 2.5806 2.7991 3.0563 3.3527 3.131  2.0669   3.5331 3.3081 3.4293 3.8683 4.7094 3.8394 3.3875 3.6452 3.2225 3.4339   3.2456 2.9659 2.8875 3.3852 3.6023 3.6356 3.5495 3.5195 3.5965 3.4598   4.0473 4.1533 4.1391 4.1678 4.0914 4.2535 3.3241 3.9289 3.8341 3.9746   3.4928 4.282  4.3031 4.1201 3.1894 4.0236 2.9179 4.1257 4.261  4.326   4.537  4.4059 4.0754 4.1159]]
568                   2.6314         1.37675         0.60655         -0.25278          -0.07955          0.15777          1.15213          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[4.2238 3.3364 3.1571 2.9477 3.0102 2.8601 3.251  3.4963 3.0834 3.0962   3.5102 3.6505 4.0869 4.2924 4.2814 3.6361 4.197  3.6163 3.7322 3.6972   3.9566 3.3658 3.32   3.6894 3.7277 3.7439 3.9054 3.6989 3.7481 3.8346   4.7642 4.3682 4.469  3.9606 4.6003 4.5659 4.1978 4.2119 3.7394 3.8287   4.5268 4.7064 4.3507 4.284  4.2105 4.4002 3.8976 4.121  5.064  4.7286   4.9131 4.7513 5.2771 5.1504]]
569                   0.44222         0.50073         0.18521         0.78946          0.78946          0.02863          0.42955          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.4405 3.8043 3.5094 3.452  3.4582 3.6089 2.253  2.2835 2.2281 2.107   2.2102 2.2342 4.8522 4.8447 4.7494 4.6824 4.6447 4.7475 5.3274 5.6146   5.2657 5.4059 5.394  5.0952 2.5144 2.8901 2.7235 2.6445 2.2219 2.6446   1.6486 1.6973 1.6078 1.8202 1.6854 1.7268 2.14   2.4409 1.973  2.0708   2.0032 2.02   3.0614 3.0389 3.1153 2.8205 2.9774 3.055  4.8982 5.3159   5.1721 5.1777 5.088  5.2072]]
570                   0.48514         0.53936         0.2065         0.76903          0.77239          0.03113          0.42152          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.4894 3.9246 3.632  3.6224 3.6903 3.8586 2.2909 2.3987 2.2837 1.9312   2.2102 2.316  5.005  5.2457 4.8296 4.773  4.8261 4.7159 5.2849 5.5744   5.3581 5.3368 5.1567 5.1104 2.4235 2.8794 2.9089 2.7046 2.6028 2.8422   1.967  1.9053 1.9086 1.8296 1.8177 1.7245 2.1855 2.2748 2.3064 1.9719   2.0545 2.252  3.1664 3.2688 3.378  3.0092 2.85   3.1282 4.8212 5.2727   5.1938 5.1734 5.2054 5.3128]]
571                   0.44969         0.50829         0.18496         0.78591          0.78591          0.02812          0.42593          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3518 3.805  3.4036 3.4802 3.5819 3.6882 2.13   2.3097 2.1933 2.0753   2.1332 2.2373 4.8623 5.1018 4.7298 4.6143 4.7461 4.8536 5.2701 5.5336   5.3873 5.3471 5.381  5.2769 2.5564 2.8268 2.7651 2.6835 2.5442 2.6648   1.6369 1.6005 1.6076 1.5611 1.6557 1.5447 1.9954 2.2998 2.1181 2.1206   1.9651 2.1523 2.9686 2.9667 3.1874 2.8358 2.8951 3.0198 5.1972 5.2362   5.0816 5.1452 5.0945 5.3303]]
572                   6.89618         2.2053         0.73984         -2.2832          -1.71839          0.53594          2.039          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[1.6362 1.2405 1.4996 0.6314 1.0567 4.8224 5.4105 0.3661 0.687  4.2372   1.923  4.8705 5.114  1.7172 1.2485 3.4512 5.2765 0.4916 0.8957 1.3856   0.7242 5.1385 0.5534 1.015  4.043  0.7496 4.6361 1.9794 0.5969 4.3528   1.1317 5.5183 2.3486 0.1546 2.4792 5.5148 2.5839 5.347  1.059  1.924   5.1068 1.3693 1.0288 1.057  0.6307 1.071  0.6572 1.6168 1.1581 1.9753   0.9198 2.5182 3.7812 1.1481]]
573                   0.81413         0.7006         0.29222         0.6124          0.68427          0.05238          0.51902          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.879  4.3045 4.007  3.8931 3.1284 4.5539 2.3758 2.4951 2.6092 2.4367   3.0616 2.3002 5.1745 5.508  5.3679 4.6865 3.6008 5.2765 5.2022 5.4278   5.5834 5.7319 5.423  5.5709 2.63   3.3479 2.8323 2.9734 2.5498 2.805   2.2253 2.1667 3.5964 2.2038 2.3549 2.28   2.5076 2.7099 2.4449 2.6121   2.7594 3.5065 3.3889 3.6221 3.7291 3.3362 3.5792 3.4171 5.5302 5.3974   5.2975 5.3471 5.1832 5.7148]]
574                   0.86336         0.72161         0.31982         0.58896          0.70998          0.05904          0.5595          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.847  4.386  3.8836 3.9134 3.9943 4.2762 2.4052 2.8821 2.6259 2.4809   3.2689 2.4554 5.346  5.6326 5.2799 5.0246 4.9076 5.4052 5.461  5.8293   5.6085 5.7589 5.2328 5.3665 2.657  2.4883 2.8279 2.8741 2.8363 2.5335   2.8045 2.3328 2.6633 2.5887 3.8708 2.5688 3.0492 3.248  2.9831 2.8761   2.463  2.48   3.6426 3.5847 3.9396 3.6026 3.6086 3.5502 5.4084 5.498   5.3326 5.4057 5.3649 5.537 ]]
575                   0.45929         0.51344         0.19009         0.78134          0.78134          0.02948          0.46023          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4135 3.7136 3.4645 3.5296 3.5546 3.6489 2.1367 2.3127 2.1831 2.0908   2.1369 2.1996 4.8432 5.1426 4.7378 4.7068 4.7384 4.8905 5.2166 5.525   5.317  5.3367 5.3284 5.2476 2.4007 2.8582 2.7886 2.6496 2.5329 2.6579   1.608  1.6173 1.5896 1.6939 1.634  1.496  1.9623 2.4098 2.1363 2.0727   1.9453 2.1289 3.0289 3.0767 3.21   2.9032 2.8644 2.9362 5.1914 5.1629   5.0637 5.1528 5.0846 5.3215]]
576                   6.3127         2.09965         0.62362         -2.00542          -1.13977          0.48727          2.0896          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.6367 1.1023 4.6812 2.3052 2.0353 0.6225 3.6934 1.8365 3.1487 3.0816   1.1043 1.0042 2.251  4.0578 1.747  0.7808 1.5521 3.5409 0.8478 1.2463   1.9489 0.6197 0.5634 4.5734 0.9624 0.7555 1.7733 0.9418 1.0361 0.5503   1.1916 3.6287 1.5415 0.6484 0.9808 5.8884 3.9759 1.4192 4.2785 4.3268   0.7478 5.2664 0.6948 1.6498 1.7732 0.7655 1.1919 1.9549 0.6894 1.5229   1.8188 4.6167 1.009  2.2705]]
577                   0.76304         0.67662         0.27619         0.63672          0.70906          0.04794          0.51087          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7567 4.333  4.3103 4.1783 4.1654 4.1526 2.3265 2.5773 2.5707 2.2025   2.3895 2.6461 5.3026 5.4809 5.2044 5.2652 5.0722 5.174  5.1397 5.8853   5.6419 5.725  3.1988 5.497  3.3443 2.9517 2.98   2.912  2.6333 3.0346   2.2563 2.392  1.9145 2.4468 2.4    2.1338 2.738  2.8669 2.7653 2.5375   2.2895 2.3525 3.5144 3.7774 3.7998 3.5967 3.7262 3.6435 5.4592 5.3723   5.1787 5.3903 5.2167 5.8949]]
578                   0.74863         0.66516         0.29387         0.64358          0.75377          0.05188          0.51495          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.1597 4.4835 4.1311 4.1548 4.0991 4.2164 2.5637 2.7309 2.7543 2.4205   2.6586 2.5792 5.4109 5.4789 5.1241 5.2355 5.2711 4.8493 5.7352 5.9651   5.5226 5.8119 5.3323 5.4392 2.695  3.     3.0746 2.8852 2.6282 2.8348   2.1265 2.4418 3.052  2.6295 2.562  1.992  2.2909 2.905  2.5368 2.8733   2.8566 2.8942 3.6012 3.7595 3.7726 3.4445 3.4378 3.8219 5.4931 5.5387   5.2512 5.2073 5.5773 5.3335]]
579                   2.34687         1.28471         0.54582         -0.11732          -0.05579          0.14148          1.14405          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0283 3.8898 3.4201 3.4872 3.226  2.8565 3.5248 3.5898 3.567  3.1937   3.3029 3.1162 3.6985 3.7266 4.7343 3.9653 3.3937 3.9727 3.1023 3.4789   3.1079 3.1534 5.3384 2.9988 3.5697 3.6159 2.8029 3.4514 3.6148 3.5586   4.1198 4.1025 4.0956 4.0918 3.873  4.0709 3.7699 3.8681 3.9271 3.4711   3.3277 4.1904 4.1719 3.7799 4.2386 3.6148 4.0414 3.7865 4.4178 4.5924   4.3112 4.0201 4.2032 4.5087]]
580                   2.53444         1.35421         0.59169         -0.20662          -0.04658          0.15217          1.17353          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4859 4.2982 4.0493 3.5417 3.6483 3.3297 3.7795 3.6047 3.3075 3.727   3.4268 3.727  4.2549 4.2846 4.1771 3.7884 3.8671 3.9176 3.1923 3.7755   3.0486 3.6998 3.5083 3.9334 3.8906 3.956  3.8347 3.7921 3.7841 3.8575   4.4663 3.3517 4.2902 4.7172 4.2156 4.2085 4.6462 4.5804 3.5322 2.5593   3.9208 3.8042 3.8642 4.3116 4.115  4.2411 4.1825 3.9136 4.2278 4.7476   4.9019 4.6432 5.0648 4.9814]]
581                   0.5085         0.55054         0.20519         0.75791          0.75795          0.0329          0.48448          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4502 3.9067 3.4748 3.4335 3.5029 3.7255 2.3271 2.5677 2.093  2.0436   2.3446 2.1089 4.9092 5.0323 4.6796 4.6459 4.7867 4.8803 5.2229 5.5929   4.9451 5.2887 5.0279 5.1601 2.4211 2.8095 2.8871 2.7138 2.5657 2.6497   1.7263 1.77   1.7758 1.635  1.5978 1.5849 1.9621 2.7306 2.1323 2.223   2.0164 2.2459 3.1228 3.2196 3.1515 2.8426 2.8139 2.9914 4.9901 5.1718   4.9786 4.9478 5.0241 5.2947]]
582                   0.48628         0.54826         0.2109         0.76849          0.77483          0.03152          0.42183          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.5243 3.8986 3.6039 3.6325 3.7244 3.8001 2.1799 2.5814 2.3153 2.1294   2.2057 2.2969 4.9261 5.2513 4.838  4.6879 4.5831 4.9151 5.2191 5.2947   5.4379 5.4415 5.4635 5.1969 2.5586 2.9227 3.0359 2.7281 2.5959 2.7588   1.7457 1.9727 1.8696 1.7069 1.7938 1.7373 2.1806 2.4831 2.2505 2.2749   2.1311 2.2868 3.1913 3.2764 3.3361 3.0142 3.0724 3.1656 5.3813 5.301   5.2135 5.2382 5.1033 5.4236]]
583                   2.34756         1.34896         0.5368         -0.11765          -0.10403          0.13754          1.1777          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.7903 2.9889 3.0564 2.8911 3.083  2.7173 3.0917 2.2841 3.2395 3.1416   3.3716 3.1249 3.8521 3.7644 3.5238 3.0783 3.4897 3.8451 3.2236 3.3501   3.0797 3.4655 3.5138 3.0678 2.376  3.5946 3.598  3.4772 2.5421 3.4897   4.2313 3.9663 3.9923 3.9302 4.0027 4.1335 3.5477 3.4988 3.7137 3.5588   3.4598 3.3852 4.0246 4.1446 3.9152 3.9499 4.1915 4.0531 4.2606 4.2794   4.3482 4.1313 4.5133 4.4567]]
584                   2.81674         1.42367         0.62582         -0.34102          -0.1475          0.16547          1.2635          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3831 3.4087 3.2654 3.4894 3.6166 3.6714 3.6054 2.9216 3.4403 3.5618   3.3995 3.2307 4.0952 5.0674 4.0546 4.2057 4.2257 3.7986 3.3879 3.8729   3.6252 3.3914 3.2663 3.4436 3.7263 3.8081 3.8238 3.7356 3.7174 3.806   4.6841 4.5897 4.2469 4.991  4.1856 4.5974 4.2817 4.1342 4.2447 4.1506   3.8251 4.5183 4.2345 4.1935 4.5573 4.4114 4.1794 4.3275 4.6493 5.0539   4.3549 5.1285 4.8539 4.6554]]
585                   0.47147         0.52541         0.19193         0.77554          0.77554          0.02924          0.45672          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4409 3.8197 3.4486 3.4485 3.5731 3.6538 2.1625 2.3693 2.2227 2.1284   2.1206 2.0852 4.8425 5.2021 4.592  4.7021 4.7709 4.7824 5.1858 5.4834   5.2898 5.2885 5.3122 4.9692 2.3415 2.7398 2.5563 2.6661 2.3743 2.7299   1.7446 1.7508 1.966  1.7659 1.5831 1.8126 2.0424 2.3993 2.0832 2.0415   1.9426 2.1614 2.9646 3.0976 3.0414 3.0041 2.9487 3.1861 5.1889 5.2185   4.9773 5.0053 5.0342 5.3695]]
586                   0.48878         0.54092         0.20794         0.7673          0.77134          0.03196          0.48417          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.5937 3.9391 3.3393 3.6027 3.6206 3.7706 2.2516 2.3741 2.3203 2.1664   2.3737 2.2982 4.6607 5.2475 4.8717 4.8596 4.8184 4.9983 5.1986 5.4522   5.4442 5.3767 5.4235 5.2845 2.5057 2.8932 2.8341 2.5917 2.4353 2.6258   1.9705 1.972  1.7085 1.9022 1.6921 1.7404 2.1245 2.4124 2.3203 2.2326   1.8694 2.2214 3.3244 3.2052 3.3692 3.0419 3.0868 3.1615 5.0675 5.3739   5.1252 5.2087 4.9283 5.415 ]]
587                   0.43519         0.50256         0.18647         0.79281          0.79312          0.02842          0.42412          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4197 3.7662 3.4675 3.4713 3.5684 3.6582 2.1314 2.2544 2.237  2.0655   2.1909 2.2108 4.8648 5.1251 4.7316 4.6678 4.7368 4.8811 5.3884 3.6262   5.4149 5.3206 5.3501 5.2946 2.4893 2.8659 2.7951 2.7322 2.5321 2.6548   1.6137 1.6864 1.6385 1.5959 1.5586 1.5373 1.9858 2.3542 2.1209 2.1138   1.9232 2.1217 3.0355 3.0522 3.1783 2.8854 2.8704 3.0235 5.2012 5.2269   5.0852 5.1415 5.0738 5.3421]]
588                   0.81973         0.71705         0.2907         0.60973          0.69053          0.05135          0.59347          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7332 4.2441 4.0865 3.8543 4.7642 4.2965 2.4779 2.6204 2.3969 2.503   3.4333 2.5814 5.3647 5.5287 4.2468 5.1496 5.0467 5.3623 5.5657 5.7007   5.3248 5.7271 5.6919 5.0636 2.63   3.683  2.8079 2.5585 2.7814 2.715   2.3232 2.0105 2.1411 2.0206 3.4176 2.1327 2.248  2.8093 2.6554 2.3676   2.1477 2.0345 3.5868 3.8561 3.7436 3.8247 3.2788 3.5083 5.5754 5.6452   4.9881 5.5371 5.3088 5.8107]]
589                   0.79373         0.6873         0.29528         0.62211          0.72102          0.05264          0.60818          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.9005 4.3788 3.8977 3.9603 4.5469 4.1747 3.0603 2.917  2.6792 2.6032   2.5853 2.8034 5.4166 5.8035 5.2405 4.8988 5.2334 5.3418 5.585  5.6951   4.6557 5.6287 5.6201 5.6489 2.7178 3.1527 2.795  2.7842 2.8374 3.0005   2.1228 2.5113 1.9411 2.5519 2.5247 2.0492 2.3249 3.104  2.3574 2.5473   2.2826 2.8823 3.6447 3.9316 3.9743 3.6453 3.6984 3.6305 5.5845 5.302   5.0808 5.0592 5.5103 5.4546]]
590                   0.44726         0.50171         0.18517         0.78706          0.78731          0.0276          0.40805          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.277  3.8224 3.4957 3.5084 3.5223 3.6802 2.1551 2.2557 2.1702 2.0775   2.1387 2.2178 4.8762 5.1481 4.7349 4.6717 4.726  4.8832 5.2562 5.541   5.3249 5.3292 5.3337 5.1817 2.5085 2.8953 2.8213 2.6841 2.5644 2.7285   1.6057 1.6775 1.6148 1.6634 1.569  1.5191 2.0749 2.3433 2.1115 2.1224   3.0231 2.1493 2.96   3.0723 3.2132 2.8692 2.8649 2.975  5.1867 5.195   5.0482 5.0854 5.0702 5.3389]]
591                   6.07681         2.06495         0.60931         -1.89311          -1.02275          0.46143          1.77477          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[0.7009 0.5835 4.8321 1.3115 2.1668 1.2199 0.9927 4.4819 4.2802 1.5739   1.5518 4.677  1.8619 0.7199 3.5639 0.9063 1.0544 3.4614 2.4943 1.2849   1.2717 1.6316 0.6481 2.1136 4.4361 3.8199 1.5474 3.8985 1.4466 1.7931   1.117  1.2624 0.5051 1.9309 1.4499 0.6014 5.0237 0.7639 1.3761 4.7966   1.4898 0.7381 1.7465 2.0281 0.9046 0.8069 0.634  1.2099 0.6588 5.4026   1.127  1.2867 1.8003 4.668 ]]
592                   0.7132         0.63385         0.2758         0.66045          0.74555          0.04851          0.49977          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8454 4.219  3.9746 3.9931 4.3192 4.4721 2.7736 2.413  1.8571 2.396   2.6606 2.4531 5.2253 4.5813 5.022  5.055  5.4648 5.2785 5.6112 5.8821   5.7322 5.6326 5.7062 5.4884 2.8271 3.134  2.9187 2.9952 2.6321 2.8415   2.2509 1.9776 2.2022 3.988  2.0778 1.8544 2.4585 2.8381 2.4013 2.5667   2.6103 2.515  3.6873 3.7972 3.8504 3.465  3.7583 3.5206 5.5897 5.0068   5.381  5.2477 5.2487 5.798 ]]
593                   0.77062         0.69132         0.30234         0.63311          0.75465          0.05288          0.59105          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7275 4.1905 4.0598 4.0483 3.9276 4.2001 2.8458 2.8158 2.7716 2.3451   2.4421 2.5164 5.3536 5.5073 5.1345 5.0768 5.0065 5.3716 5.6852 5.7391   5.5353 5.7503 5.5657 5.4689 3.1812 3.0373 3.1975 2.6406 2.5964 2.7658   2.274  2.6681 2.2589 2.7419 2.3991 2.5436 3.4273 2.9711 2.7468 2.9777   2.6    2.6838 3.696  3.8876 3.9035 3.5803 3.6002 3.5092 5.4292 5.7031   5.5359 5.2387 5.2434 5.8263]]
594                   2.34647         1.3509         0.56809         -0.11713          -0.07174          0.14368          1.19992          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.8615 3.0662 3.0931 3.4607 2.7399 2.7058 3.2446 3.6263 3.5527 3.0868   3.4375 3.4764 3.8996 3.6502 3.4445 4.0513 3.7184 3.7655 5.279  3.3636   3.0719 3.1494 3.3329 3.4865 2.4813 3.6124 3.4893 3.5714 2.5253 3.5984   4.0116 3.8453 4.0787 4.2034 4.0918 3.996  3.9374 4.147  3.6207 3.5411   3.7579 3.9782 3.8885 4.0509 4.1048 3.9903 3.9545 3.9809 4.1692 4.0781   4.4522 4.4205 4.6455 4.5533]]
595                   2.72851         1.40322         0.61713         -0.29902          -0.1325          0.16403          1.18852          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.6552 3.2233 3.3044 3.675  2.9834 3.4644 3.4424 3.4063 3.5905 3.6558   3.208  3.7838 4.1289 3.9106 4.1024 4.1981 4.1825 4.1986 3.3816 3.0845   3.3912 2.3046 4.073  3.8661 3.6858 3.7824 3.8395 3.7528 3.7703 3.7424   4.5323 4.6216 4.3096 4.3244 4.8531 4.4971 3.8071 4.2873 3.5992 3.9269   3.674  4.0664 4.4806 4.3105 4.5933 4.509  4.1969 4.2262 4.8077 4.5407   4.8196 4.8511 4.8659 5.1146]]
596                   0.46501         0.54745         0.20634         0.77862          0.77862          0.03058          0.47043          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.4617 3.7562 3.5156 3.4446 3.4634 3.7368 2.1378 2.3259 2.0924 2.0707   2.0789 2.1618 4.7828 4.8309 4.465  4.6813 4.6486 4.8228 5.2753 5.4653   5.2721 5.4192 5.2237 5.1591 2.3571 2.7437 2.7014 2.3927 2.578  2.4784   1.8953 1.9843 1.8044 1.7898 1.6117 1.6258 2.028  2.4583 2.2616 2.3652   1.9855 2.1881 3.2207 3.1101 3.2662 2.8949 2.892  3.1478 5.1539 4.9656   5.0142 5.1305 5.0974 5.3604]]
597                   0.4908         0.54602         0.21176         0.76633          0.77205          0.03175          0.46105          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.5573 3.9167 3.6315 3.573  3.6894 3.8032 2.2607 2.4446 2.2779 2.156   1.9634 2.4214 4.6689 5.2726 4.8754 4.7182 4.7978 4.9937 5.2008 5.6469   5.4351 5.4059 5.2544 5.242  2.565  2.9195 2.8379 2.8709 2.6039 2.6948   1.8885 1.8805 1.8855 1.8748 1.7455 1.6806 2.1202 2.5359 2.2449 2.2425   2.0248 2.2944 3.1391 3.1894 3.3113 3.2025 3.0833 3.0432 5.346  5.3667   5.0154 5.1999 5.1565 5.4134]]
598                   2.25565         1.27494         0.52081         -0.07389          -0.04988          0.1344          1.14248          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.7444 2.7778 3.0585 2.8789 2.8368 3.2678 3.5017 3.3308 3.0245 2.0451   3.3374 3.5448 3.9313 4.2063 3.5052 3.7531 3.6017 3.3594 2.8369 3.6113   3.4581 3.12   3.2613 3.2382 3.5597 3.5663 3.4561 3.5243 3.4355 3.495   3.9594 4.1268 3.9374 4.0735 3.9426 4.0341 4.0513 3.4823 2.1265 3.1998   3.6308 4.0207 3.9481 3.1233 4.0353 3.9899 3.9559 3.9404 4.6011 5.107   5.0282 4.4124 4.5028 4.2956]]
599                   2.55943         1.39478         0.59477         -0.21852          -0.00541          0.15009          1.30813          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.7606 3.5356 3.6776 3.3778 3.7398 2.5422 3.4833 3.5928 3.7536 3.5726   3.6395 3.4924 4.1735 4.6895 4.0323 4.2186 3.8048 3.8596 3.6592 3.17   3.5845 3.8255 6.6331 3.6169 3.8496 3.8698 3.7848 3.9239 3.9727 3.811   4.4258 4.3153 4.3392 4.4711 4.6465 3.1252 4.373  2.4598 4.2881 4.9355   4.3101 3.8186 4.5338 4.2071 4.5354 4.6038 4.3729 4.4745 4.548  4.371   4.6593 4.7962 5.0609 4.4769]]
600                   0.44181         0.50761         0.18867         0.78966          0.78972          0.02815          0.44567          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4506 3.774  3.5314 3.5262 3.7163 3.6611 2.2041 2.2714 2.182  2.2364   2.1289 2.1207 4.3983 4.8133 4.771  4.6937 4.7845 4.8042 5.2056 5.4049   5.3835 5.3511 5.3687 5.1419 2.4805 2.8554 2.7771 2.659  2.4815 2.5808   1.5603 1.8011 1.6791 1.6994 1.7848 1.8705 1.9474 2.4552 2.1724 2.0803   2.3377 2.1893 3.1361 3.0737 3.3031 2.8624 2.8086 3.1657 4.9782 5.2406   5.0386 5.198  4.7223 5.4114]]
601                   0.47361         0.534         0.20584         0.77452          0.77975          0.03019          0.36158          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.5982 3.9686 3.6476 3.6899 3.6971 3.7923 2.2216 2.3909 2.296  2.2978   2.2307 2.3057 4.9912 5.2484 4.8498 4.5346 4.8614 4.9814 5.3998 5.4904   5.2746 5.3758 5.2914 5.2051 2.5336 2.5304 2.8019 2.5659 2.6003 2.4076   1.8489 1.8377 1.7902 1.9342 1.8586 1.6681 2.1768 2.5086 2.3543 2.298   2.0466 2.2559 3.1679 3.1767 3.3934 2.9752 3.0611 3.1853 5.3081 5.2839   5.1309 5.2889 5.1871 5.5086]]
602                   0.5113         0.54496         0.19582         0.75657          0.75686          0.03077          0.50205          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3934 3.8102 3.4412 3.4704 3.4751 3.6674 2.151  2.2455 2.2213 2.0567   2.1369 2.2085 4.916  5.1399 4.7338 4.6687 4.7554 4.8788 4.052  5.5684   5.3663 5.3219 5.3153 5.2215 2.5205 2.8552 2.8138 2.6529 2.4585 2.6553   1.5716 1.6314 1.5767 1.6634 1.5746 1.5255 1.9249 2.3301 2.1172 2.13   1.9418 2.1172 3.0289 3.0626 3.1963 2.874  2.8443 2.9968 5.2085 5.2042   5.0528 5.154  5.1099 5.341 ]]
603                   13147.11457         17.61702         7.31829         -6258.21331          -6157.81524          1.08946          1.93957          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.511000e+00 1.704600e+00 1.891400e+00 4.271900e+00 1.679000e+00   2.634000e-01 8.447064e+02 1.729500e+00 2.095400e+00 9.996000e-01   4.601000e+00 4.455200e+00 3.105000e-01 5.682000e-01 8.161000e-01   1.548200e+00 2.795900e+00 8.619000e-01 4.362000e+00 4.502000e-01   6.968000e-01 5.586900e+00 1.816800e+00 4.444000e-01 1.954100e+00   1.756000e+00 3.314000e-01 1.444900e+00 4.671300e+00 4.786100e+00   7.597700e+00 5.097400e+00 1.865700e+00 9.303000e-01 2.068300e+00   4.499000e-01 1.846200e+00 9.375000e-01 6.086900e+00 2.146900e+00   6.932000e-01 9.498000e-01 1.000900e+00 1.779700e+00 2.486900e+00   7.220000e-01 4.892100e+00 7.990000e-01 7.385000e-01 1.134000e+00   4.481300e+00 4.512700e+00 3.775200e+00 1.737300e+00]]
604                   0.6997         0.6382         0.2659         0.66688          0.74599          0.04466          0.50575          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8033 4.3874 3.996  3.975  3.9507 4.288  2.3882 2.6782 2.6749 2.3025   2.3899 2.5151 5.2354 5.7236 5.1884 5.0509 5.0183 5.2882 5.6134 5.9339   5.7162 5.6086 5.686  5.5808 2.5276 2.9195 2.68   2.9754 2.7517 2.7512   3.4186 2.0703 2.0964 2.2156 2.138  2.1667 2.3676 2.4939 2.7978 2.5355   2.3638 2.3984 3.5584 3.6747 3.7074 3.4247 3.4764 3.6427 5.2822 5.4964   5.4233 5.1683 5.4091 5.7537]]
605                   0.8061         0.71962         0.3011         0.61623          0.72254          0.05214          0.57872          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8444 4.1984 3.9712 3.7817 4.1813 4.1047 2.656  2.7118 2.59   2.3313   2.8011 2.639  5.4257 5.6485 5.2034 5.2494 5.1919 5.3822 5.428  5.7248   3.6106 5.7796 5.732  5.5454 2.9988 2.8351 2.9441 3.1074 2.7659 2.9777   2.424  2.689  2.8788 2.2866 2.1826 2.0839 2.4758 2.9324 2.4541 3.2501   2.5161 2.6739 3.6324 3.5871 3.9596 3.5732 3.6562 3.6632 5.7564 5.6696   5.4601 5.7602 5.3925 5.8652]]
606                   0.46218         0.52123         0.19249         0.77996          0.77996          0.02948          0.44023          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4117 3.7745 3.4256 3.4562 3.4976 3.662  2.1184 2.2843 2.2198 2.0707   2.1003 2.2391 4.8621 5.1422 4.7267 4.6662 4.7366 4.8541 5.2523 5.5138   5.3024 5.3345 5.4097 5.2326 2.4208 2.8781 2.8363 2.6906 2.5066 2.7015   1.6603 1.7176 1.6009 1.6932 1.5659 1.5339 1.995  2.3251 2.1325 2.1076   1.9593 2.1371 2.9819 3.0521 3.2054 2.8637 2.887  2.9966 5.1962 5.2029   5.0707 5.1626 5.0774 5.254 ]]
607                   0.7571         0.69219         0.28655         0.63955          0.72036          0.04825          0.54268          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8034 4.271  3.0693 4.3023 3.8969 4.4895 2.4159 2.6091 3.0898 2.3441   2.4634 3.1159 5.2647 5.8987 5.1815 4.8273 5.2178 4.2907 5.342  5.8607   5.5213 5.6368 5.6471 5.6676 2.8214 2.8496 3.1515 2.9986 2.9082 3.1201   2.0673 2.0635 2.072  2.0736 2.2221 3.4655 2.2619 2.8601 2.8537 2.2944   2.3744 2.5705 3.5901 3.6979 3.5149 3.7591 3.3919 3.7144 5.1446 5.5101   5.3767 5.6073 4.8895 5.4622]]
608                   0.73415         0.65617         0.28463         0.65048          0.74731          0.04926          0.54967          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.292  4.3734 4.0513 4.0568 4.1587 4.0385 2.4374 2.7204 2.8829 2.2896   2.5064 2.7411 5.4401 5.6638 5.2224 5.1776 4.9901 5.3726 5.5753 5.5778   5.6887 4.8818 5.4138 5.6351 2.861  3.0938 3.2484 2.668  2.6298 2.9838   2.2384 2.3428 2.2171 2.4249 2.1684 2.2256 2.4108 3.063  2.7162 2.8545   2.586  2.6738 3.6701 3.6937 3.819  3.5452 3.6917 3.5489 5.1469 5.8004   5.2937 5.2957 5.1073 5.8133]]
609                   0.4622         0.51604         0.18998         0.77995          0.77995          0.02919          0.43328          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4002 3.8    3.4668 3.4666 3.5333 3.6666 2.1336 2.2667 2.2    2.0667   2.1334 2.2    4.8666 5.1333 4.7334 4.6666 4.7333 4.8666 5.2666 5.5333   5.3333 5.3334 5.3332 5.2    2.4661 2.8667 2.7999 2.6666 2.5334 2.6664   1.6001 1.6668 1.6002 1.6666 1.6002 1.5335 2.0001 2.3331 2.1334 2.1334   1.9336 2.1336 3.     3.0666 3.2001 2.8667 2.8667 2.9999 5.2    5.2   5.0666 5.1333 5.0667 5.3332]]
610                   0.4622         0.51605         0.18999         0.77995          0.77995          0.0292          0.43337          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4667 3.4666 3.5334 3.6667 2.1335 2.2667 2.2    2.0667   2.1334 2.2    4.8667 5.1332 4.7332 4.6667 4.7333 4.8667 5.2667 5.5332   5.3333 5.3334 5.3334 5.2001 2.4667 2.8664 2.7999 2.6666 2.5334 2.6666   1.6    1.6668 1.6001 1.6667 1.5999 1.5333 2.     2.3335 2.1333 2.1333   1.9334 2.1333 3.0001 3.0667 3.2003 2.8667 2.8666 3.     5.1999 5.1999   5.0666 5.1333 5.0667 5.3333]]
611                   0.46221         0.51604         0.18999         0.77995          0.77995          0.02919          0.43337          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4668 3.4667 3.5334 3.6668 2.1334 2.2665 2.2001 2.0666   2.1334 2.2    4.8667 5.1332 4.7334 4.6666 4.7334 4.8665 5.2666 5.5331   5.3333 5.3333 5.3332 5.2    2.4666 2.8665 2.8001 2.6666 2.5332 2.6668   1.5999 1.6665 1.6001 1.6667 1.6006 1.5334 2.0001 2.3335 2.1334 2.1335   1.9334 2.1334 3.     3.0668 3.2    2.8667 2.8667 3.     5.1999 5.1999   5.0666 5.1333 5.0667 5.3335]]
612                   0.46222         0.51606         0.19         0.77994          0.77994          0.0292          0.43328          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8001 3.4666 3.4667 3.5334 3.6667 2.1334 2.2667 2.2001 2.0669   2.1334 2.2    4.8667 5.1333 4.7333 4.6666 4.7332 4.8666 5.2667 5.5332   5.3333 5.3332 5.3334 5.2    2.4667 2.8666 2.8    2.6666 2.5332 2.6665   1.5999 1.6668 1.5999 1.6667 1.6001 1.5334 2.     2.3335 2.1333 2.1334   1.9333 2.1334 3.     3.0666 3.2001 2.8669 2.8667 3.0001 5.2    5.2   5.0667 5.1333 5.0669 5.3332]]
613                   0.46223         0.51606         0.19         0.77993          0.77993          0.0292          0.43343          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4665 3.4667 3.5334 3.6669 2.1335 2.2666 2.2    2.0666   2.1335 2.1999 4.8666 5.1333 4.7334 4.6667 4.7334 4.8666 5.2665 5.5333   5.3333 5.3333 5.3332 5.1999 2.4665 2.8666 2.8    2.6666 2.5333 2.6667   1.6    1.6667 1.5999 1.6667 1.6    1.5333 2.0001 2.3334 2.1334 2.1334   1.9333 2.1333 2.9998 3.0668 3.1999 2.8666 2.8668 2.9998 5.1999 5.2   5.0667 5.1334 5.0667 5.3334]]
614                   0.46226         0.51607         0.18999         0.77992          0.77992          0.0292          0.43338          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8001 3.4666 3.4667 3.5332 3.6667 2.1335 2.2666 2.1999 2.0667   2.1336 2.2    4.8666 5.1335 4.7334 4.6666 4.7335 4.8666 5.2666 5.5333   5.3333 5.3333 5.3333 5.1997 2.4665 2.8665 2.7999 2.6666 2.5331 2.6663   1.6003 1.6667 1.6002 1.6668 1.6002 1.5333 1.9999 2.3333 2.1335 2.1335   1.9334 2.1333 2.9998 3.0667 3.2    2.8667 2.8665 3.0001 5.2    5.2   5.0665 5.1334 5.0666 5.3334]]
615                   0.46224         0.51607         0.19001         0.77993          0.77993          0.0292          0.43338          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4667 3.5333 3.6668 2.1336 2.2668 2.2001 2.0665   2.1332 2.2001 4.8667 5.1332 4.7333 4.6667 4.7334 4.8666 5.2666 5.5333   5.3333 5.3333 5.3333 5.2002 2.4666 2.8666 2.8    2.6665 2.5336 2.6665   1.6    1.6667 1.6    1.6666 1.6001 1.5333 2.0001 2.3341 2.1333 2.1335   1.9334 2.1334 3.0001 3.0667 3.2001 2.8667 2.8671 3.     5.2    5.2   5.0665 5.1332 5.0666 5.3334]]
616                   0.46224         0.51607         0.19         0.77993          0.77993          0.0292          0.43338          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4667 3.4667 3.5333 3.6668 2.1334 2.2669 2.2    2.0668   2.1336 2.2001 4.8666 5.1334 4.7333 4.6666 4.7333 4.8668 5.2665 5.5333   5.3332 5.3333 5.3334 5.2    2.4666 2.8667 2.8    2.6666 2.5334 2.6665   1.6001 1.6668 1.6001 1.6668 1.6001 1.5334 2.     2.3333 2.1335 2.1334   1.9334 2.1333 3.0001 3.0665 3.2001 2.8666 2.8666 2.9999 5.2    5.1999   5.0667 5.1333 5.0667 5.3333]]
617                   0.46227         0.51609         0.19         0.77992          0.77992          0.0292          0.43327          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4668 3.4667 3.5331 3.6666 2.1335 2.2666 2.2003 2.0667   2.1335 2.2012 4.8667 5.1333 4.7333 4.6665 4.7335 4.8666 5.2668 5.5333   5.3332 5.3334 5.3334 5.2    2.4642 2.8665 2.7998 2.6665 2.5337 2.6666   1.6001 1.6666 1.6001 1.6668 1.6    1.5335 2.     2.3332 2.1335 2.1334   1.9335 2.1333 2.9999 3.0667 3.2    2.8667 2.8666 3.     5.1998 5.2   5.0666 5.1333 5.0667 5.3329]]
618                   0.46222         0.51606         0.19         0.77994          0.77994          0.0292          0.43338          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8003 3.4667 3.4669 3.5334 3.6665 2.1335 2.2667 2.2001 2.0666   2.1334 2.2001 4.8665 5.1334 4.7333 4.6667 4.7333 4.8666 5.2665 5.5332   5.3333 5.3333 5.3333 5.1999 2.4669 2.8666 2.7999 2.6664 2.5332 2.6667   1.6001 1.6668 1.6    1.6668 1.6002 1.5334 1.9997 2.3332 2.1335 2.1334   1.9333 2.1334 2.9999 3.0668 3.1999 2.8667 2.8669 3.0001 5.2001 5.1999   5.0665 5.1334 5.0666 5.3333]]
619                   0.4622         0.51606         0.19         0.77995          0.77995          0.02919          0.43333          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4002 3.7999 3.4669 3.4668 3.5332 3.6666 2.1336 2.2666 2.2001 2.0667   2.1335 2.2    4.8667 5.1333 4.7333 4.6667 4.7333 4.8667 5.2666 5.5332   5.3332 5.3332 5.3333 5.1999 2.4667 2.8666 2.8001 2.6666 2.5332 2.6666   1.5997 1.6667 1.6    1.6667 1.6001 1.5334 1.9999 2.3333 2.1334 2.1336   1.9335 2.1334 2.9999 3.0666 3.2001 2.8668 2.8667 3.     5.2002 5.2   5.0667 5.1333 5.0666 5.3335]]
620                   0.46218         0.51602         0.18998         0.77996          0.77996          0.02919          0.43322          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4669 3.4666 3.5333 3.6666 2.1334 2.2666 2.2    2.0667   2.1333 2.2002 4.8665 5.1332 4.7332 4.6664 4.7333 4.8662 5.2668 5.5334   5.3333 5.3332 5.3335 5.1998 2.4665 2.8659 2.7999 2.6668 2.5331 2.6667   1.6003 1.6667 1.6002 1.6667 1.6001 1.5335 2.0001 2.3334 2.1333 2.1334   1.9334 2.1333 3.     3.0666 3.2    2.8667 2.8667 3.     5.2    5.1999   5.0667 5.1333 5.0666 5.3333]]
621                   0.46222         0.51606         0.19         0.77994          0.77994          0.0292          0.43338          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4667 3.4666 3.5333 3.6667 2.1337 2.2666 2.2002 2.0667   2.1333 2.2001 4.8667 5.1334 4.7335 4.6665 4.7333 4.8665 5.2665 5.5332   5.3332 5.3332 5.3333 5.1999 2.4664 2.8666 2.7998 2.6664 2.5334 2.6666   1.6    1.6667 1.6001 1.6668 1.6    1.5334 2.0001 2.3333 2.1333 2.1334   1.9333 2.1339 3.     3.0667 3.2    2.8668 2.8667 3.     5.2    5.2   5.0667 5.1334 5.0669 5.3333]]
622                   0.46223         0.51606         0.19         0.77994          0.77994          0.0292          0.43333          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4665 3.4668 3.5333 3.6668 2.1333 2.2667 2.2    2.0667   2.1333 2.2001 4.8665 5.1332 4.7333 4.6667 4.7332 4.8665 5.2666 5.5334   5.3331 5.3333 5.3333 5.1998 2.4666 2.8666 2.8    2.6667 2.5332 2.6667   1.6002 1.6667 1.6001 1.6668 1.6001 1.5334 1.9999 2.3334 2.1334 2.1334   1.9336 2.1335 3.     3.0667 3.2    2.8666 2.8666 2.9999 5.2    5.2   5.0666 5.1335 5.0666 5.3333]]
623                   0.46223         0.51608         0.19         0.77993          0.77993          0.0292          0.43338          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4667 3.4668 3.5334 3.6667 2.1334 2.2668 2.2    2.0667   2.1332 2.2    4.8666 5.1333 4.7332 4.6666 4.7331 4.8668 5.2664 5.5333   5.3333 5.3333 5.3333 5.1996 2.4665 2.8665 2.8    2.6665 2.5334 2.6665   1.6    1.6667 1.6    1.6667 1.6    1.5335 2.0001 2.3334 2.1333 2.1333   1.9334 2.1333 2.9996 3.0666 3.1999 2.8668 2.8666 3.0001 5.2    5.2   5.0666 5.1333 5.0668 5.3334]]
624                   0.46223         0.51607         0.19         0.77994          0.77994          0.02919          0.43323          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4667 3.4667 3.5334 3.6667 2.1334 2.2668 2.1999 2.0668   2.1334 2.1999 4.8668 5.1333 4.7333 4.6666 4.7332 4.8667 5.2667 5.5334   5.3333 5.3332 5.3333 5.1997 2.4666 2.8667 2.8    2.6664 2.5334 2.6667   1.6001 1.6669 1.6    1.6669 1.6001 1.5335 2.0001 2.3331 2.1335 2.1334   1.9333 2.1335 2.9999 3.0666 3.2    2.8666 2.8667 3.     5.1999 5.2   5.0667 5.1334 5.0666 5.3333]]
625                   0.46221         0.51604         0.18999         0.77995          0.77995          0.0292          0.43352          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4002 3.7998 3.4666 3.4667 3.5335 3.6666 2.1333 2.2667 2.2001 2.0669   2.1334 2.2    4.8665 5.1333 4.7333 4.6666 4.7333 4.8664 5.2666 5.5333   5.3333 5.3333 5.3334 5.2001 2.4665 2.8666 2.7999 2.6667 2.5334 2.6665   1.6    1.6668 1.6    1.6667 1.6    1.5331 2.0002 2.3334 2.1333 2.1334   1.9332 2.1335 3.     3.0668 3.2001 2.8666 2.8668 3.     5.1999 5.1999   5.0666 5.1334 5.0667 5.3333]]
626                   0.46224         0.51607         0.19         0.77993          0.77993          0.0292          0.43333          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4665 3.4666 3.5332 3.6665 2.1334 2.2667 2.2    2.0666   2.1334 2.2001 4.8667 5.1334 4.7334 4.6665 4.7334 4.8666 5.2666 5.5332   5.3333 5.3334 5.3334 5.1999 2.4666 2.8666 2.8    2.6666 2.5333 2.6666   1.6    1.6666 1.6    1.6667 1.6    1.5334 2.     2.3334 2.1334 2.1333   1.9334 2.1333 3.0001 3.0667 3.2001 2.8666 2.8667 3.     5.1999 5.2001   5.0666 5.1332 5.0666 5.3332]]
627                   0.46221         0.51604         0.18999         0.77995          0.77995          0.0292          0.43327          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4666 3.4667 3.5334 3.6666 2.1333 2.2668 2.2001 2.0667   2.1335 2.1999 4.8667 5.1333 4.7333 4.6667 4.7334 4.8666 5.2669 5.5334   5.3332 5.3332 5.3334 5.2002 2.4665 2.8666 2.8001 2.6667 2.5334 2.6666   1.6003 1.6667 1.6002 1.6666 1.6001 1.5335 2.     2.3336 2.1332 2.1334   1.9333 2.1333 3.0001 3.0667 3.1997 2.8667 2.8667 3.     5.2    5.2001   5.0667 5.1332 5.0663 5.3332]]
628                   0.4622         0.51605         0.18999         0.77995          0.77995          0.02919          0.43338          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4668 3.4666 3.5334 3.6667 2.1333 2.2666 2.2001 2.0668   2.1333 2.2004 4.8667 5.1332 4.7333 4.6667 4.7333 4.8666 5.2664 5.5332   5.3336 5.3333 5.3333 5.2    2.4667 2.8665 2.7997 2.6667 2.5334 2.6666   1.6    1.6666 1.6    1.6667 1.6001 1.5335 2.0001 2.3333 2.1334 2.1334   1.9334 2.1334 3.     3.0667 3.2004 2.8666 2.8667 2.9999 5.1999 5.2   5.0668 5.1333 5.0667 5.3334]]
629                   0.46223         0.51606         0.19         0.77994          0.77994          0.0292          0.43338          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8002 3.4667 3.4668 3.5333 3.6668 2.1333 2.2666 2.1999 2.0668   2.1332 2.2    4.8667 5.1333 4.7333 4.6667 4.7333 4.8666 5.2666 5.5331   5.3333 5.3335 5.3333 5.2    2.4667 2.8665 2.7999 2.6667 2.5332 2.6665   1.6001 1.6667 1.6    1.6667 1.6    1.5333 2.0001 2.3335 2.1329 2.1334   1.9334 2.1334 3.0002 3.0666 3.2003 2.8667 2.8666 3.     5.2    5.2   5.0666 5.1332 5.0668 5.3334]]
630                   0.46221         0.51604         0.18999         0.77994          0.77994          0.02919          0.43323          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.7999 3.4664 3.4668 3.5338 3.6667 2.1338 2.267  2.2    2.0668   2.1334 2.1998 4.8669 5.1333 4.7334 4.6668 4.7334 4.8667 5.2667 5.5333   5.3332 5.3333 5.3331 5.1998 2.4665 2.8665 2.8    2.6666 2.5332 2.6667   1.6    1.6666 1.6001 1.6668 1.6001 1.5335 2.     2.3334 2.1334 2.1334   1.9334 2.1334 3.     3.0666 3.1999 2.8668 2.8666 3.     5.1999 5.1999   5.0666 5.1333 5.0667 5.3333]]
631                   0.46221         0.51607         0.19         0.77994          0.77994          0.0292          0.43333          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4666 3.4667 3.5334 3.6668 2.1334 2.2665 2.2    2.0667   2.1334 2.2001 4.8667 5.1333 4.7333 4.6666 4.7333 4.8665 5.2666 5.5332   5.3331 5.3333 5.3335 5.2001 2.4667 2.8665 2.8    2.6662 2.533  2.6666   1.6    1.6668 1.6    1.6667 1.5999 1.5334 1.9999 2.3333 2.1333 2.1334   1.9334 2.1333 3.0001 3.0667 3.2003 2.8667 2.8667 3.0001 5.1999 5.2   5.0667 5.1332 5.0667 5.3333]]
632                   0.46225         0.51609         0.19         0.77993          0.77993          0.0292          0.43332          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8002 3.4666 3.4669 3.5333 3.6668 2.1334 2.2667 2.2003 2.0666   2.1333 2.2    4.8671 5.1333 4.7331 4.6663 4.7333 4.8665 5.2667 5.5332   5.3333 5.3331 5.3333 5.1998 2.4663 2.8667 2.7999 2.6666 2.533  2.6669   1.6    1.6667 1.6    1.6668 1.6001 1.5334 2.     2.3333 2.1335 2.1334   1.9337 2.1333 3.0001 3.0667 3.2001 2.8668 2.8667 3.0002 5.1999 5.1997   5.0667 5.1333 5.0667 5.333 ]]
633                   0.46221         0.51604         0.18998         0.77995          0.77995          0.02919          0.43333          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8001 3.4667 3.4666 3.5333 3.6667 2.1334 2.2667 2.2    2.0667   2.1335 2.2    4.8666 5.1333 4.7334 4.6666 4.7333 4.8664 5.2665 5.5333   5.3333 5.3334 5.3333 5.2    2.4668 2.8666 2.8    2.6667 2.5333 2.6666   1.6    1.6667 1.6    1.6667 1.6002 1.5335 2.0004 2.3333 2.1334 2.1332   1.9333 2.1333 2.9999 3.0666 3.2    2.8666 2.8666 3.     5.1999 5.2   5.0667 5.1332 5.0667 5.3333]]
634                   0.46221         0.51605         0.18999         0.77995          0.77995          0.02919          0.43333          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4667 3.4667 3.5333 3.6667 2.1333 2.2666 2.2    2.0668   2.1334 2.1999 4.8667 5.1333 4.7331 4.6666 4.7334 4.8666 5.2665 5.5333   5.3331 5.3333 5.3333 5.2001 2.4664 2.8662 2.8    2.6665 2.5333 2.6666   1.6    1.6668 1.6002 1.6668 1.6    1.5335 2.     2.3333 2.1333 2.1334   1.9333 2.1333 3.0001 3.0668 3.2001 2.8667 2.8667 3.     5.1999 5.2   5.0667 5.1334 5.0666 5.3332]]
635                   0.46221         0.51604         0.18999         0.77994          0.77994          0.02919          0.43332          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4668 3.4668 3.5334 3.6667 2.1335 2.2668 2.1999 2.0666   2.1334 2.2    4.8667 5.1332 4.7332 4.6666 4.7333 4.8666 5.2667 5.5332   5.3334 5.3333 5.3334 5.1999 2.4665 2.8666 2.8    2.6667 2.5334 2.6666   1.6    1.6666 1.6001 1.6667 1.6001 1.5336 2.     2.3334 2.1333 2.1334   1.9334 2.133  3.     3.0669 3.1999 2.8666 2.8666 3.0001 5.1999 5.2   5.0666 5.1333 5.0667 5.3332]]
636                   0.46222         0.51607         0.19         0.77994          0.77994          0.02919          0.43333          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8    3.4665 3.4667 3.5334 3.6668 2.1333 2.2666 2.2001 2.0666   2.1334 2.2001 4.8665 5.1333 4.7333 4.6667 4.7331 4.8664 5.2667 5.5334   5.3333 5.3331 5.3333 5.1999 2.4667 2.8663 2.7998 2.6665 2.5333 2.6667   1.6001 1.6669 1.6    1.6667 1.6003 1.5333 2.     2.3334 2.1334 2.1334   1.9335 2.1335 3.0002 3.0666 3.2    2.8666 2.8667 2.9999 5.2002 5.2   5.0665 5.1334 5.0665 5.3332]]
637                   0.46224         0.51606         0.18999         0.77993          0.77993          0.0292          0.43338          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5332 3.6668 2.1335 2.2666 2.2    2.0668   2.1335 2.2    4.8667 5.1333 4.7334 4.6667 4.7333 4.8667 5.2666 5.5332   5.3334 5.3336 5.3332 5.2001 2.4667 2.8668 2.7999 2.6667 2.5333 2.6667   1.6001 1.6667 1.5999 1.6667 1.6002 1.5333 2.0001 2.3332 2.1331 2.1333   1.9333 2.1331 2.9999 3.0666 3.2009 2.8667 2.8667 3.     5.2001 5.2   5.0666 5.1333 5.0665 5.3333]]
638                   0.46223         0.51607         0.19         0.77994          0.77994          0.0292          0.43327          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7998 3.4666 3.4667 3.5333 3.6666 2.1334 2.2668 2.2    2.0667   2.1334 2.2    4.8666 5.1333 4.7332 4.6667 4.7334 4.8666 5.2667 5.5333   5.3334 5.3334 5.3333 5.2    2.4665 2.8667 2.7999 2.6669 2.5332 2.6667   1.6    1.6669 1.6    1.6668 1.6001 1.5335 2.     2.3333 2.1333 2.1333   1.9333 2.1333 2.9999 3.0667 3.2001 2.8667 2.8666 3.0001 5.2    5.2001   5.0666 5.1331 5.0667 5.3334]]
639                   0.46227         0.51607         0.19         0.77992          0.77992          0.0292          0.43338          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8001 3.4666 3.467  3.5334 3.6667 2.1334 2.2666 2.2001 2.0668   2.1335 2.1999 4.8667 5.1334 4.7333 4.6667 4.7332 4.8667 5.2667 5.5333   5.3332 5.3333 5.3333 5.2    2.4664 2.8668 2.8001 2.6668 2.5334 2.6669   1.6002 1.6669 1.6001 1.6666 1.6    1.5332 1.9999 2.3336 2.1331 2.1334   1.9333 2.1335 3.0001 3.0666 3.2    2.8666 2.8667 3.0001 5.2    5.2001   5.0666 5.1333 5.0668 5.3334]]
640                   0.46226         0.51608         0.19         0.77992          0.77992          0.0292          0.43343          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8003 3.4666 3.4667 3.5334 3.6668 2.1336 2.2669 2.2005 2.0667   2.1334 2.2    4.8666 5.1335 4.7332 4.6666 4.7333 4.8664 5.2664 5.5334   5.3333 5.3333 5.3333 5.2    2.4666 2.8665 2.8    2.6665 2.5333 2.6667   1.6001 1.6668 1.6001 1.6667 1.5999 1.5334 2.     2.3332 2.1334 2.1333   1.9332 2.1333 3.0001 3.0666 3.2001 2.8667 2.8667 3.     5.2001 5.2001   5.0667 5.1332 5.0668 5.3333]]
641                   0.46224         0.51607         0.19         0.77993          0.77993          0.0292          0.43338          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8002 3.4666 3.4666 3.5334 3.6667 2.1332 2.2667 2.1998 2.0666   2.1334 2.2    4.8666 5.1333 4.7332 4.6666 4.7333 4.8666 5.2666 5.5332   5.3332 5.3333 5.3338 5.2    2.4665 2.8666 2.8001 2.6666 2.5332 2.6665   1.6002 1.6667 1.6001 1.6668 1.6    1.5333 2.0001 2.3334 2.1333 2.1333   1.9333 2.1333 2.9999 3.0667 3.1999 2.867  2.8666 3.0001 5.1998 5.1999   5.0666 5.1333 5.0667 5.3334]]
642                   0.46222         0.51606         0.19         0.77994          0.77994          0.0292          0.43332          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4666 3.4667 3.5334 3.6666 2.1333 2.2666 2.2    2.0666   2.1334 2.2    4.8668 5.1331 4.7333 4.6666 4.7333 4.8667 5.2666 5.5333   5.3333 5.3333 5.3329 5.2    2.4667 2.8666 2.8    2.6666 2.5335 2.6668   1.6002 1.6669 1.6004 1.6668 1.6001 1.5335 2.0002 2.3336 2.1334 2.1333   1.933  2.1333 3.0001 3.0668 3.2    2.8666 2.8667 3.0001 5.1998 5.2   5.0666 5.1333 5.0667 5.3333]]
643                   0.46224         0.51612         0.19002         0.77993          0.77993          0.0292          0.43333          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5334 3.6666 2.1331 2.2667 2.2001 2.0666   2.1298 2.1999 4.8666 5.1332 4.7336 4.6665 4.7333 4.8666 5.2666 5.5333   5.3333 5.3333 5.3332 5.1998 2.4663 2.8667 2.7999 2.6666 2.5333 2.6667   1.6003 1.6667 1.6    1.6667 1.5999 1.5334 2.0003 2.3333 2.1333 2.1334   1.9334 2.1334 2.9999 3.0667 3.2001 2.8669 2.8668 3.0001 5.1999 5.2001   5.0666 5.1334 5.0666 5.3333]]
644                   0.46223         0.51608         0.19         0.77993          0.77993          0.0292          0.43347          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4667 3.5332 3.6668 2.1331 2.2667 2.2003 2.0667   2.1334 2.2    4.8666 5.1332 4.7334 4.6666 4.7333 4.8667 5.2666 5.5332   5.3333 5.3334 5.3332 5.2001 2.4663 2.8666 2.8001 2.6666 2.5331 2.6666   1.6001 1.6667 1.6    1.6668 1.6001 1.5333 2.0001 2.3334 2.1333 2.1334   1.9334 2.1333 3.0001 3.0669 3.1999 2.8668 2.8667 3.     5.2    5.2   5.0667 5.1333 5.0666 5.3334]]
645                   0.46223         0.51606         0.18999         0.77994          0.77994          0.0292          0.43327          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4666 3.5333 3.6667 2.1333 2.2666 2.1998 2.0667   2.1334 2.2    4.8668 5.1334 4.7332 4.6666 4.7332 4.8666 5.2667 5.5334   5.3333 5.3334 5.3332 5.2    2.4665 2.8666 2.7999 2.6664 2.5332 2.6666   1.6001 1.6668 1.6    1.6668 1.6001 1.5335 2.0001 2.3334 2.1334 2.1334   1.9334 2.1334 2.9999 3.0667 3.1999 2.8668 2.8667 3.     5.1999 5.2   5.0666 5.1334 5.0667 5.3332]]
646                   0.46225         0.51609         0.19001         0.77993          0.77993          0.0292          0.43338          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4668 3.4666 3.5334 3.6668 2.1335 2.2666 2.2001 2.0667   2.1334 2.2001 4.8667 5.1334 4.7334 4.6667 4.7333 4.8667 5.2666 5.5334   5.3332 5.333  5.3334 5.2001 2.4665 2.8666 2.7998 2.6666 2.5333 2.6664   1.6    1.6669 1.6    1.6668 1.6    1.5333 2.     2.3334 2.1334 2.1335   1.9333 2.1334 3.     3.0667 3.2001 2.8667 2.8666 3.     5.2    5.2   5.0667 5.1334 5.0666 5.3337]]
647                   0.46221         0.51607         0.19         0.77994          0.77994          0.02919          0.43343          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4667 3.4666 3.5334 3.6667 2.1334 2.2667 2.2    2.0668   2.1333 2.1999 4.8666 5.1332 4.7332 4.6668 4.7333 4.8666 5.2664 5.5335   5.3335 5.3333 5.3332 5.2002 2.4666 2.8668 2.8    2.6665 2.5332 2.6666   1.6    1.6666 1.6001 1.6666 1.6    1.5334 2.     2.3331 2.1334 2.1334   1.9334 2.1344 3.0001 3.0668 3.2001 2.8666 2.8669 3.     5.2    5.2   5.0667 5.1333 5.0666 5.3333]]
648                   0.46226         0.51609         0.19001         0.77992          0.77992          0.0292          0.43347          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.8001 3.4666 3.4667 3.5334 3.6668 2.1334 2.2669 2.2002 2.0668   2.1333 2.2001 4.8666 5.1334 4.7335 4.6666 4.7332 4.8668 5.2667 5.5333   5.3333 5.3334 5.3333 5.2    2.4668 2.8669 2.8    2.6668 2.5331 2.6667   1.6    1.6668 1.6    1.6667 1.6001 1.5333 2.     2.3334 2.1334 2.1334   1.9333 2.1333 2.9998 3.0669 3.1999 2.8667 2.8667 3.     5.2    5.2001   5.0667 5.1333 5.0667 5.3333]]
649                   0.46221         0.51607         0.19         0.77994          0.77994          0.02919          0.43333          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4666 3.4666 3.5334 3.6668 2.1333 2.2666 2.2002 2.0666   2.1333 2.2001 4.8665 5.1332 4.7332 4.6666 4.7331 4.8666 5.2665 5.5333   5.3333 5.3334 5.3335 5.2    2.4669 2.8667 2.8    2.6667 2.5333 2.6666   1.6    1.6667 1.6    1.6668 1.6    1.5335 2.0001 2.3334 2.1332 2.1334   1.9335 2.1334 3.0003 3.0667 3.2001 2.8667 2.8669 3.     5.1999 5.2   5.0665 5.1333 5.0666 5.3333]]
650                   0.46221         0.51606         0.18999         0.77995          0.77995          0.02919          0.43333          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4667 3.4668 3.5333 3.6667 2.1334 2.2669 2.2002 2.067   2.1333 2.2001 4.8667 5.1332 4.7333 4.6666 4.7332 4.8667 5.2667 5.5332   5.3333 5.3333 5.3332 5.1998 2.4668 2.8666 2.8    2.6667 2.5331 2.6667   1.5999 1.6667 1.6002 1.6667 1.6003 1.5333 1.9999 2.3333 2.1334 2.1335   1.9334 2.1332 3.0002 3.0665 3.1999 2.8669 2.8666 2.9999 5.2001 5.1999   5.0666 5.1332 5.0668 5.3333]]
651                   0.46228         0.51608         0.19         0.77991          0.77991          0.0292          0.43347          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8    3.4667 3.4666 3.5332 3.6667 2.1333 2.2667 2.2    2.0668   2.1333 2.2    4.8666 5.1333 4.7333 4.6665 4.7333 4.8666 5.2666 5.5333   5.3334 5.3333 5.3333 5.2    2.4664 2.8667 2.7999 2.6669 2.533  2.6667   1.6002 1.6667 1.6    1.6666 1.6001 1.5332 2.     2.3333 2.1333 2.1334   1.9332 2.1334 3.0002 3.0668 3.2002 2.8667 2.8664 3.     5.1999 5.1999   5.0667 5.1334 5.0667 5.3334]]
652                   0.46221         0.51606         0.18999         0.77995          0.77995          0.02919          0.43333          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4004 3.8001 3.4667 3.4667 3.5334 3.6667 2.1328 2.2668 2.2    2.0668   2.1333 2.2002 4.8665 5.1332 4.7333 4.6667 4.7334 4.8666 5.2665 5.5334   5.3334 5.3333 5.3333 5.1999 2.4667 2.8664 2.8    2.6665 2.5332 2.6664   1.6001 1.6667 1.6001 1.6666 1.6    1.5335 2.     2.3333 2.1333 2.1331   1.9332 2.1333 3.     3.0666 3.2    2.8667 2.8667 2.9998 5.2001 5.2   5.0666 5.1331 5.0666 5.3334]]
653                   0.46224         0.51608         0.19         0.77993          0.77993          0.0292          0.43328          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4666 3.5333 3.6668 2.1335 2.2667 2.2    2.0668   2.1333 2.2002 4.8666 5.1333 4.7331 4.6666 4.7332 4.8668 5.2666 5.5333   5.3334 5.3334 5.3334 5.2    2.4667 2.8664 2.7999 2.6666 2.533  2.6666   1.6    1.6667 1.6    1.6669 1.6    1.5335 2.     2.3334 2.1334 2.1334   1.9333 2.1333 3.0003 3.0667 3.2001 2.8665 2.8667 3.0001 5.1999 5.2   5.0667 5.1334 5.0666 5.3334]]
654                   0.46222         0.51605         0.18999         0.77994          0.77994          0.02919          0.43342          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7999 3.4667 3.4668 3.5334 3.6667 2.1334 2.2668 2.2001 2.0669   2.1336 2.1999 4.8667 5.1335 4.7334 4.6666 4.7333 4.8666 5.2667 5.5334   5.3334 5.3333 5.3333 5.1999 2.4666 2.8664 2.8    2.6666 2.5333 2.6666   1.5999 1.6668 1.6001 1.6666 1.5998 1.5334 1.9999 2.3333 2.1335 2.1332   1.9334 2.1334 3.     3.0669 3.1999 2.8667 2.8667 3.     5.1997 5.1999   5.0666 5.1334 5.0665 5.3332]]
655                   0.4622         0.51605         0.18999         0.77995          0.77995          0.02919          0.43328          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8001 3.4668 3.4667 3.5335 3.6667 2.1334 2.2666 2.2002 2.0667   2.1333 2.2    4.8666 5.1332 4.7333 4.6666 4.7333 4.8668 5.2666 5.5332   5.3333 5.3332 5.3333 5.2    2.4664 2.8667 2.8    2.6666 2.5333 2.6666   1.6001 1.6667 1.6001 1.6666 1.6001 1.5335 2.     2.3333 2.1335 2.1333   1.9336 2.1333 3.0003 3.0666 3.1999 2.8668 2.8667 3.     5.2001 5.2   5.0667 5.1332 5.0667 5.3334]]
656                   0.46224         0.51607         0.18999         0.77993          0.77993          0.0292          0.43343          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4665 3.5333 3.6667 2.1334 2.2666 2.2    2.0666   2.1334 2.2    4.8667 5.1333 4.7333 4.6666 4.7333 4.8667 5.2663 5.5333   5.3333 5.3334 5.3333 5.1999 2.4666 2.8667 2.7997 2.6667 2.533  2.6666   1.6001 1.6667 1.6    1.6668 1.6001 1.5335 2.0001 2.3333 2.1334 2.1334   1.9333 2.1334 3.     3.0668 3.2    2.8666 2.8667 2.9999 5.2    5.2   5.0669 5.1333 5.0667 5.3334]]
657                   2.39053         1.36614         0.56874         -0.13811          -0.07795          0.14323          1.31092          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.4024 3.1492 3.0496 3.118  3.2683 2.9492 3.6131 3.4843 3.4961 3.4631   3.5544 3.4148 3.8591 3.7936 3.8327 3.8334 3.8904 3.8689 3.3444 3.429   3.4544 3.4885 3.3952 3.2649 3.7031 3.7374 3.7566 3.7245 3.741  3.7607   3.8677 4.0802 4.0794 3.9554 4.0046 4.0659 3.756  4.024  3.7592 3.671   3.7939 3.6574 3.9524 4.221  4.0304 3.898  4.0886 4.1866 4.0299 4.1574   4.3246 4.1174 4.0762 4.2249]]
658                   2.40745         1.35449         0.56909         -0.14616          -0.08421          0.14461          1.3368          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.2606 3.0557 3.3257 3.3898 3.1843 3.118  3.4516 3.7514 3.3795 3.5142   3.6312 3.438  3.6172 3.7909 3.8568 3.8321 3.6398 3.6866 3.2956 3.3845   3.3625 3.3863 3.536  3.4197 3.6423 3.7409 3.7484 3.6796 3.6642 3.8263   4.0755 4.0849 4.1379 3.9229 4.0993 4.0085 3.6173 4.03   3.8991 3.7007   3.6731 3.9373 3.9877 4.2514 3.8296 3.8518 3.8927 3.8546 4.3695 4.4753   4.3244 4.002  4.3134 4.1976]]
659                   2.39877         1.36495         0.56893         -0.14203          -0.08176          0.14383          1.31048          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.1589 3.5784 3.3048 3.3109 3.2716 3.4472 3.4883 3.4753 3.7099 3.4941   3.3921 3.3759 3.5311 3.5799 3.5487 3.7748 3.9394 3.5427 3.2388 3.7389   3.349  3.6495 3.3244 3.4142 3.76   3.7795 3.7981 3.6906 3.6631 3.7901   4.2089 4.0834 3.917  3.9902 3.903  3.9572 3.5754 3.9723 3.7387 3.6379   3.7502 3.8729 4.0073 4.1064 3.9123 4.0666 3.8473 3.8911 4.107  4.1496   4.1962 4.3194 4.2478 4.3024]]
660                   2.46617         1.3888         0.57192         -0.17412          -0.13205          0.14587          1.30433          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.2534 3.1298 3.3515 2.8963 3.1517 3.5322 3.5862 3.4022 3.491  3.2583   3.3338 3.3558 3.6738 3.9668 3.8391 3.5758 3.5629 3.7577 3.2796 3.583   3.3619 3.408  3.3861 3.4039 3.6685 3.6981 3.8248 3.6366 3.7203 3.733   4.0743 4.2413 3.9315 4.0756 4.014  3.977  3.6811 4.0704 3.5897 3.7798   3.5008 3.8129 3.9389 4.0326 3.8519 3.8248 3.9502 3.8397 4.1111 3.9012   3.8434 4.103  3.9065 3.8452]]
661                   2.33034         1.33217         0.50866         -0.10945          -0.10929          0.13288          1.3304          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1718 3.3836 2.8938 2.8751 3.3481 2.769  3.1599 3.2139 3.3876 3.1071   3.3561 3.1751 3.2248 3.3625 3.5395 3.33   3.4159 3.1988 3.079  3.2222   3.0339 3.1384 2.8925 2.8918 3.3824 3.362  3.3322 3.3455 3.3153 3.3541   3.7022 3.6363 3.6254 3.5958 3.6944 3.4545 3.3874 3.7019 3.2793 3.5678   3.3717 3.5108 3.5869 3.3784 3.5246 3.4532 3.4052 3.5751 3.7586 3.6714   3.6758 3.7491 3.6554 3.4374]]
662                   2.2298         1.29209         0.48564         -0.06159          -0.06016          0.12582          1.27748          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9797 3.2582 2.9783 2.8201 3.3036 2.8979 3.024  3.1437 3.0742 3.106   3.1744 3.1585 3.3582 3.4144 3.0842 3.1048 3.1445 3.4517 3.1274 3.1363   3.1337 3.233  3.1377 3.0186 3.3241 3.3431 3.3472 3.314  3.3487 3.3369   3.5727 3.5461 3.5942 3.7325 3.5229 3.5992 3.3028 3.3531 2.9661 3.3867   3.2824 3.3214 3.5614 3.5475 3.5538 3.5623 3.3977 3.5203 3.7535 3.5155   3.7301 3.7031 3.6589 3.7452]]
663                   2.26577         1.31993         0.50059         -0.07871          -0.07844          0.12889          1.30148          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8031 3.1946 2.9231 2.996  3.1123 2.9055 3.2351 3.3401 3.1534 3.1078   3.1218 3.3029 3.3666 3.4473 3.4201 3.264  3.4626 3.2144 3.1903 3.1844   3.1238 3.0689 3.096  3.032  3.3287 3.3833 3.3447 3.3619 3.3303 3.3572   3.5992 3.6308 3.6562 3.6182 3.5728 3.5405 3.6246 3.4498 3.0982 3.5013   3.2565 3.3189 3.6101 3.6746 3.5903 3.3584 3.3284 3.5663 3.7022 3.8581   3.6447 3.7413 3.4965 3.7638]]
664                   2.26705         1.31497         0.49798         -0.07932          -0.07891          0.12875          1.30708          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0862 3.1019 3.0484 2.8249 3.0179 2.989  3.1152 3.3286 3.1582 3.1826   3.2538 3.1612 3.3704 3.2668 3.4396 3.4189 3.2546 3.3514 3.0208 3.0444   3.1458 3.1064 3.0992 2.9513 3.3415 3.3408 3.3277 3.3905 3.3268 3.3412   3.5693 3.6418 3.6933 3.5488 3.7343 3.6963 3.6065 3.3984 3.3658 3.2989   3.2997 3.3832 3.5565 3.5941 3.4552 3.5227 3.4231 3.505  3.5626 3.6085   3.6963 3.5725 3.8265 3.724 ]]
665                   0.47111         0.52611         0.19205         0.77571          0.77588          0.0296          0.44607          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4021 3.7883 3.6007 3.469  3.5144 3.6573 2.3012 2.2933 2.207  2.0354   2.1539 2.1996 5.2917 5.1167 4.7243 4.6611 4.7093 4.953  5.2666 5.5577   5.349  5.318  5.3537 5.2007 2.495  2.869  2.8165 2.6743 2.4874 2.6533   1.6309 1.6979 1.5886 1.6736 1.685  1.5267 2.005  2.343  2.1637 2.1246   1.9252 2.1434 3.009  3.0855 3.2074 2.8581 2.8808 2.9967 5.2722 5.1889   5.0744 5.1108 5.053  5.3315]]
666                   0.54083         0.55363         0.20992         0.74252          0.74274          0.03496          0.4952          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4081 3.7736 3.4598 3.4428 3.5283 3.9435 2.1313 2.2801 2.2149 2.4909   2.1325 2.2004 4.8655 5.1358 4.7116 4.6608 4.7257 4.9391 4.8984 5.5518   4.6093 5.3158 5.3408 5.1998 2.4855 2.862  2.64   2.6672 2.5136 2.6779   1.8681 1.7264 1.6412 1.6606 1.6572 1.5498 2.0218 3.2525 2.1181 2.1309   1.9105 2.1281 2.9928 3.0717 3.2241 2.9936 2.8919 2.9994 5.1936 5.3995   5.0684 5.1359 5.0667 5.3398]]
667                   0.46253         0.52221         0.19265         0.77979          0.77982          0.02945          0.49258          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3806 3.7914 3.4685 3.4673 3.5292 3.6617 2.142  2.2564 2.1885 2.0524   2.1327 2.2114 4.8557 5.1246 4.7369 4.6554 4.7787 4.8718 5.2722 5.5513   5.3405 5.3333 5.2376 5.1988 2.4301 2.8702 2.7729 2.663  2.5407 2.1336   1.5938 1.6491 1.6106 1.8052 1.6025 1.5273 1.9976 2.3246 2.1305 1.9852   1.9265 2.124  3.0057 3.0798 3.169  3.1542 2.8795 3.0054 5.1977 5.1967   5.0625 5.1323 5.0637 5.3706]]
668                   0.47347         0.52616         0.19206         0.77458          0.77459          0.02944          0.43523          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.399  3.7877 3.4511 3.3319 3.5189 3.6572 2.1566 2.2654 2.1883 2.0688   2.1171 2.2003 4.8708 5.1301 4.7227 4.681  4.7082 4.8659 5.2493 5.5946   5.3314 5.3365 5.135  5.1753 2.5232 2.8757 2.781  2.6567 2.5381 2.6333   1.6081 1.6786 1.6059 1.717  1.5534 1.5469 2.0015 2.3326 2.0048 2.1328   1.9331 2.108  3.0233 3.0551 3.2005 2.8616 2.8862 3.0192 5.2046 5.2068   5.0799 5.1316 5.0771 5.5255]]
669                   0.48952         0.5498         0.2063         0.76695          0.76759          0.03106          0.51095          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.7251 3.9837 3.5423 3.6585 3.5655 4.1144 2.3712 2.3215 2.2982 2.095   2.2409 2.4293 4.7811 5.0518 4.6564 4.4808 4.6043 4.7236 5.1317 5.4888   5.325  5.2293 5.0487 5.102  2.5136 2.7793 2.7898 2.7111 2.4511 2.5477   1.7116 1.9377 1.7422 1.8369 2.0869 2.3227 2.0663 2.3623 2.1987 2.118   1.9733 2.2497 2.9468 3.185  3.1136 2.9602 2.7679 2.7427 5.1723 5.0835   5.0083 5.0121 5.0907 5.2104]]
670                   0.5078         0.5524         0.20074         0.75824          0.75825          0.03136          0.4465          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4881 3.9076 3.569  3.5446 3.5834 3.6551 2.1067 2.4058 2.1756 2.2597   2.1324 2.3183 4.6097 5.0931 4.1758 4.5756 4.6823 4.8066 5.1451 5.4406   5.1578 5.369  5.2812 5.0543 2.1673 2.7631 2.6991 2.5869 2.307  2.4958   1.7199 1.8021 1.7557 1.7838 1.6872 1.7359 2.2185 2.3418 2.121  2.2198   1.9481 2.1554 3.4327 3.1115 3.2216 2.8909 2.8813 3.1373 5.2169 5.1988   4.8731 5.231  4.9337 5.259 ]]
671                   0.46874         0.53534         0.19986         0.77684          0.77684          0.02989          0.41967          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3806 3.8534 3.7297 3.5354 3.4233 3.7915 2.1098 2.4823 2.2522 2.0852   2.1293 2.2024 4.8122 5.0279 4.4442 4.6449 4.5668 4.7934 5.2612 5.4126   5.2523 5.2621 5.2873 5.1601 2.4289 2.7418 2.6392 2.6206 2.6725 2.6114   2.0045 1.7672 1.7492 1.8991 1.7335 1.694  2.0385 2.3416 2.1634 2.3616   1.9185 2.1341 3.0801 2.9288 3.2185 2.8818 2.9377 3.0599 5.0244 4.8542   5.0425 4.9674 4.9169 5.2905]]
672                   0.49851         0.541         0.19945         0.76266          0.76267          0.03122          0.46142          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4421 3.8269 3.4946 3.7267 3.4948 3.9861 2.174  2.4018 2.2441 2.1552   2.214  2.2342 4.7602 5.0898 4.7126 4.5427 4.515  4.772  5.0905 5.5306   5.1242 5.278  5.2912 5.2026 2.3771 2.9352 2.5604 2.7438 2.4491 2.5017   1.7526 1.8132 1.6878 1.7763 1.765  1.6729 2.0611 2.412  2.1199 2.1233   1.9084 2.1796 2.9483 2.9723 3.2842 2.8594 2.902  3.0517 4.8425 5.1083   4.9625 5.048  4.9621 5.3691]]
673                   2.19365         1.3031         0.49978         -0.04438          -0.04399          0.12596          1.31813          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9592 3.1614 2.9521 3.1609 3.0805 3.1646 3.4471 3.1581 3.3071 3.1148   3.425  3.2069 3.5107 3.5017 3.3113 3.5602 3.1226 3.3375 3.2421 3.1397   3.2673 3.2684 3.2572 3.1352 3.4241 3.4483 3.3306 3.441  3.4648 3.3245   3.5804 3.5823 3.5246 3.8026 3.5876 3.5399 3.3477 3.433  3.2439 3.414   3.4027 3.4584 3.6636 3.6303 3.6695 3.711  3.4669 3.5347 3.6445 3.7087   3.8168 3.6373 3.7578 3.8272]]
674                   2.23734         1.31304         0.506         -0.06518          -0.06503          0.12866          1.28063          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.8135 4.057  2.889  2.9039 3.0087 2.9854 3.2084 3.1628 3.3969 3.4357   3.2022 3.2734 3.3835 3.4965 3.3446 3.3268 3.5389 3.4977 3.2469 3.1705   3.2773 3.1894 3.2803 3.1452 3.4069 3.3831 3.3598 3.351  3.3326 3.4877   3.6439 3.6633 3.6995 3.7113 3.5298 3.3667 3.1706 3.6538 3.0349 3.2781   3.3227 3.6921 3.5338 3.4469 3.5337 3.4145 3.4852 3.4922 3.7326 3.7481   3.8308 3.7444 3.6283 3.6921]]
675                   2.16415         1.28701         0.49985         -0.03033          -0.02905          0.1257          1.3038          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9973 3.0504 3.171  2.9116 2.8439 2.8866 3.4173 3.2698 3.2939 3.1791   3.2004 3.4421 3.7498 3.4975 4.4242 3.6246 3.2357 3.4572 3.126  3.1886   3.1498 3.3846 3.0042 3.2198 3.4174 3.3963 3.3934 3.5073 3.5042 3.3512   3.8404 3.6802 3.4475 3.6195 3.6261 3.5019 3.2078 3.4805 3.4957 3.4493   3.5734 3.3667 3.5391 3.7053 3.6683 3.5429 3.5402 3.4423 3.6863 3.9113   3.6757 3.6611 3.6417 3.8636]]
676                   2.34508         1.34815         0.51459         -0.11647          -0.1164          0.13374          1.38797          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9038 3.3986 3.291  2.8447 2.948  3.2334 3.2982 3.3668 3.301  3.3175   3.3051 3.2164 3.2025 3.4653 3.3214 3.2472 3.3285 3.3516 3.0238 3.1836   3.2757 3.2055 2.8581 3.2845 3.4423 3.3945 3.4688 3.4289 3.3651 3.3626   3.7265 3.7157 3.5888 3.5974 3.5061 3.7054 3.4404 3.499  3.505  3.5026   3.2532 3.5274 3.6549 3.4486 3.5751 3.4824 3.4983 3.5483 3.6536 3.702   3.6369 3.5095 3.6491 3.7394]]
677                   2.28887         1.32088         0.502         -0.08971          -0.08915          0.13036          1.34313          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9399 2.9728 2.7333 2.9759 2.9229 2.8802 3.0855 3.32   3.206  3.1773   3.3309 3.2632 3.4971 3.383  3.236  3.2828 3.3705 3.3108 3.1685 3.1368   3.0671 3.0054 3.1736 3.044  3.3139 3.3904 3.3304 3.3461 3.2981 3.3792   3.6381 3.4629 3.5769 3.754  3.6077 3.7491 3.1557 3.5079 3.4393 3.565   3.3245 3.3767 3.4543 3.4817 3.5258 3.5036 3.3384 3.6002 3.6177 3.7308   3.7529 3.7702 3.5794 3.7606]]
678                   2.25454         1.30297         0.49628         -0.07337          -0.07326          0.12827          1.26308          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9638 3.1042 3.1088 3.1485 2.9134 3.0906 3.3118 3.3451 3.2428 3.1672   3.2682 3.2315 3.4051 3.4059 3.2788 3.2468 3.2734 3.3718 3.0785 3.3437   3.1242 3.2528 2.9907 3.0088 3.3417 3.389  3.3253 3.3625 3.3274 3.3632   3.5106 3.643  3.5957 3.5797 3.6225 3.6669 3.3627 3.5356 3.2458 3.382   3.2365 3.3381 3.5411 3.527  3.5056 3.4543 3.539  3.5509 3.7354 3.7763   3.6395 3.6452 3.6129 3.843 ]]
679                   2.22974         1.28965         0.48683         -0.06156          -0.06024          0.12628          1.28025          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3004 3.0465 2.8623 2.9645 3.1555 2.9912 2.9846 3.1985 3.1024 3.175   3.2643 3.2213 3.1739 3.3064 3.1699 3.3014 3.2684 3.4273 3.063  3.0764   3.1551 3.0916 2.9268 3.1763 3.3347 3.4368 3.4001 3.3418 3.3556 3.3495   3.481  3.5029 3.6785 3.7056 3.4989 3.6385 2.9571 3.3702 3.307  3.2679   3.1383 3.4667 3.5476 3.4389 3.5878 3.4383 3.3984 3.6012 3.6938 3.7074   3.792  3.7554 3.4921 3.7342]]
680                   2.27663         1.32377         0.50264         -0.08388          -0.08386          0.12956          1.3383          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8281 3.1992 2.9979 2.9547 2.979  3.1693 3.1575 3.2245 3.272  3.3217   3.2159 3.3055 3.5476 3.607  3.3771 3.3455 3.3058 3.4137 3.0576 3.2118   3.096  3.0874 3.0232 3.1082 3.3106 3.3549 3.3252 3.3629 3.3546 3.3898   3.5526 3.6676 3.5375 3.7917 3.5416 3.6646 3.2394 3.3308 3.4251 3.4658   3.3248 3.4396 3.5503 3.6536 3.661  3.4128 3.5769 3.4519 3.5283 3.6486   3.6412 3.7304 3.7391 3.8196]]
681                   0.46186         0.51824         0.19078         0.78011          0.78011          0.02926          0.43533          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4072 3.7955 3.464  3.4687 3.5351 3.6687 2.1123 2.2774 2.2005 2.0603   2.1239 2.2093 4.8837 5.1411 4.7337 4.6731 4.7549 4.8657 5.2764 5.5558   5.3555 5.3571 5.3342 5.1993 2.4757 2.8704 2.8232 2.6705 2.5373 2.6894   1.5912 1.6612 1.6076 1.6574 1.6044 1.5196 2.0006 2.3327 2.126  2.1302   1.9252 2.1353 3.0165 3.0567 3.2011 2.8761 2.86   2.9922 5.2082 5.1947   5.0524 5.1234 5.0463 5.2545]]
682                   0.46491         0.5198         0.19129         0.77866          0.77866          0.02926          0.43397          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4004 3.8026 3.4856 3.4548 3.5168 3.6546 2.1281 2.2739 2.2183 2.1048   2.1248 2.1893 4.8729 5.1339 4.7339 4.5736 4.726  4.8909 5.2785 5.5283   5.3399 5.3497 5.3194 5.1988 2.473  2.8817 2.7965 2.6757 2.5512 2.6084   1.578  1.6633 1.6113 1.7047 1.6006 1.5235 2.0015 2.3313 2.1368 2.1363   1.9439 2.1058 2.9986 3.0581 3.201  2.8721 2.8722 2.9965 5.2043 5.1998   5.0788 5.1383 5.07   5.3495]]
683                   0.45894         0.51543         0.1892         0.7815          0.7815          0.02882          0.41417          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3988 3.785  3.4403 3.4605 3.5326 3.6738 2.131  2.2521 2.2015 2.0712   2.1287 2.2009 4.8643 5.1532 4.7331 4.6759 4.729  4.8418 5.286  5.5396   5.3564 5.3291 5.3318 5.208  2.4692 2.8144 2.7645 2.6756 2.516  2.6944   1.6007 1.6529 1.5924 1.6562 1.5908 1.5795 2.0103 2.3326 2.1354 2.1387   1.9352 2.1516 3.0068 3.0745 3.2022 2.85   2.8696 3.0108 5.2086 5.1954   5.0654 5.1343 5.0843 5.3373]]
684                   0.46171         0.51772         0.19037         0.78018          0.78018          0.02915          0.43207          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3887 3.7886 3.4782 3.4644 3.5354 3.654  2.1218 2.2589 2.2008 2.0709   2.108  2.1982 4.8678 5.1313 4.7484 4.6593 4.7321 4.8724 5.2896 5.5348   5.3648 5.3584 5.3407 5.1509 2.4945 2.8778 2.8248 2.6444 2.5159 2.6431   1.6303 1.6695 1.6141 1.676  1.5898 1.5244 1.9899 2.3251 2.1354 2.1313   1.9391 2.1186 2.9869 3.0552 3.201  2.8623 2.8997 2.9917 5.2006 5.2045   5.0729 5.1454 5.0753 5.3337]]
685                   0.48364         0.54491         0.20027         0.76975          0.76977          0.03044          0.57178          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.5153 3.7828 3.4467 3.6226 3.5821 3.7122 2.2793 2.3653 2.2742 2.0764   2.1855 2.3947 4.7021 5.0481 4.5549 4.5678 4.5758 4.5849 5.029  5.4248   5.2548 4.6877 5.3199 5.103  2.4328 2.6325 2.8701 2.5723 2.5221 2.7842   1.8046 1.7437 1.6348 1.9296 1.7112 1.8773 2.0326 2.4647 2.1641 2.1899   1.9712 2.1824 3.1105 3.0571 3.3198 2.9323 2.9278 3.014  5.1445 5.1463   4.9668 4.8179 5.0041 5.1963]]
686                   0.50268         0.55214         0.20801         0.76068          0.76075          0.03214          0.55232          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4787 4.039  3.3285 3.4956 3.6065 3.8287 2.1571 2.335  2.238  2.1052   2.2607 2.2533 4.5427 5.1037 4.6591 4.6362 4.5882 4.7239 5.1235 5.5208   5.1919 5.1674 5.24   4.9921 2.3932 2.6821 2.8602 2.8062 2.4887 2.5992   1.7796 1.9001 2.0468 1.9512 1.7888 1.7802 2.0178 2.4922 2.1367 2.1532   1.9509 2.2499 3.0317 3.0546 3.2355 2.9677 2.9699 3.0479 5.0689 5.1762   4.9624 5.0925 4.958  5.0651]]
687                   0.4951         0.54576         0.20701         0.76429          0.76429          0.03256          0.47108          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4492 3.8318 3.5538 3.5824 3.604  3.8694 2.1842 2.3439 2.2544 2.1434   2.3063 2.225  4.451  5.0755 4.6583 4.5775 4.5854 4.7569 5.0804 5.3575   5.2944 5.1972 5.1885 4.9986 2.3648 2.7221 2.7584 2.5381 2.6073 2.5373   1.749  2.2271 1.7139 1.8293 1.7252 1.5692 2.067  2.6301 2.1515 2.1943   1.9426 2.1527 3.0841 3.1023 3.2099 2.9446 2.8645 2.9451 5.093  5.1916   4.9488 5.0796 5.0052 5.1577]]
688                   0.47006         0.53268         0.19665         0.77621          0.77636          0.02953          0.54588          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4072 3.8685 3.3691 3.4619 3.5514 3.6325 2.259  2.36   2.1991 2.113   2.243  2.3717 4.7595 5.0124 4.5655 4.3112 4.5763 4.6555 5.0546 5.1291   5.3083 5.33   5.0585 5.103  2.4266 2.7909 2.5755 2.5836 2.5005 2.6006   1.721  1.7689 1.8788 1.9271 1.7442 1.694  2.014  2.3522 2.2027 2.2286   2.0319 2.1766 3.0352 3.1042 3.2005 2.977  2.9805 3.0111 5.1065 5.1945   4.9753 5.0765 4.9103 5.2183]]
689                   2.74525         1.35896         0.4285         -0.30699          -0.13752          0.14707          1.22272          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4837 2.4983 1.87   2.6908 2.5649 2.3435 2.8649 2.6279 2.4737 2.6155   2.7027 2.9262 2.5839 2.9732 2.6263 2.6136 2.8317 2.8133 2.7344 2.5888   2.8056 2.7134 2.7277 1.3536 2.8578 2.8393 2.8974 2.8665 2.9072 2.2749   3.1403 3.1615 3.3842 2.1887 3.0903 3.3377 2.8485 2.4884 2.8605 3.2728   2.5606 3.0173 2.7443 3.1063 2.9896 3.17   2.8817 2.846  3.4236 2.6347   3.3144 3.2986 3.1634 2.8547]]
690                   2.70668         1.35487         0.42306         -0.28862          -0.08078          0.14144          1.09933          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.2827 2.5102 2.2366 2.451  2.5698 2.4616 2.6609 2.7518 2.8162 2.0422   2.8709 2.7589 2.7841 2.743  2.5472 2.786  2.1353 3.0094 2.6323 2.7174   2.4601 2.4975 2.5223 2.7062 2.0802 2.9488 2.8493 2.5227 2.8056 2.7441   2.5439 3.1103 2.7222 3.0603 3.103  3.1018 2.8199 2.4415 3.0016 2.7103   3.0116 2.6827 2.8883 2.4225 2.855  2.8973 3.3162 2.3819 3.3076 3.1895   3.0256 2.7281 3.0118 2.7503]]
691                   2.69761         1.31562         0.4142         -0.28431          -0.09985          0.14048          1.14          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.7982 2.4482 2.4982 2.5178 2.0409 2.4468 2.7103 2.3218 2.0392 2.7456   2.8649 2.7678 2.9073 2.5221 2.6042 2.4847 2.5267 3.0205 2.6713 2.5041   2.6353 2.4447 2.5252 2.4486 2.749  2.6974 2.7742 2.6265 2.6433 2.7579   2.5635 3.2053 2.9242 2.7535 3.166  3.2563 2.8807 3.1337 3.2092 2.817   2.8171 2.42   3.0946 2.7604 3.0708 3.0942 3.1148 2.8526 3.3218 3.2192   3.0664 2.9443 2.3408 3.2857]]
692                   2.73144         1.32762         0.42121         -0.30041          -0.12156          0.14447          1.23292          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4297 2.5078 2.3573 2.3688 2.3801 2.3695 2.5977 2.6589 2.5945 2.6617   2.5265 2.5787 2.8464 2.6275 3.1489 2.0147 2.229  2.7289 2.4981 2.5854   2.725  2.6122 2.1244 2.5774 2.7716 2.9683 2.7537 2.9403 2.7949 2.8041   3.3371 3.2685 3.0102 3.103  2.8784 3.1026 2.885  2.7821 3.2541 2.5175   2.6556 2.8645 3.036  2.4824 2.261  3.1684 3.0953 3.0665 3.0477 3.4864   2.909  3.1124 3.2217 3.2419]]
693                   10.36632         2.87922         0.82212         -3.9353          0.01145          1.20123          2.5749          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.6325 0.4868 0.1343 0.0567 0.3919 0.26   0.721  0.4195 0.3444 0.0563   0.5195 0.3769 0.0132 0.7939 0.1561 0.6241 0.8238 1.1902 0.2982 0.5809   0.7958 0.6522 0.8545 0.7981 0.1225 0.9399 0.6614 0.534  1.0393 0.9622   0.474  0.2316 0.6691 0.7636 0.3719 0.4045 0.3543 0.1681 0.3114 0.9122   0.4747 0.1999 0.1708 0.3834 0.4007 0.3964 0.1927 0.8092 0.3475 0.998   0.2688 0.3621 0.7032 0.5805]]
694                   2.48358         1.38485         0.5521         -0.18241          -0.17348          0.14502          1.40818          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.8529 3.1769 2.9694 2.7198 2.9476 2.9886 3.4984 3.4707 3.1807 3.1414   3.7643 3.3854 3.542  3.5568 3.2305 3.5394 3.271  3.8036 3.5712 3.2762   3.0823 3.0019 3.0538 3.0648 3.4876 3.6063 3.6394 3.6796 3.4824 3.5681   3.4262 3.8933 3.6263 4.3543 3.9605 3.8579 3.573  3.8175 3.7699 3.7547   3.5162 3.8134 3.6212 3.5847 3.5977 3.5647 3.4349 3.7718 4.3442 3.4714   4.0309 3.7721 4.4242 3.5285]]
695                   2.46316         1.38793         0.556         -0.17269          -0.1574          0.14408          1.30698          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.9959 2.8995 3.0074 2.8228 2.748  3.4183 3.2572 3.4204 3.3851 3.1837   3.2929 3.2867 3.4823 3.2702 3.5028 3.5179 3.3811 3.7002 3.5897 3.1066   3.1036 2.9294 3.1163 3.3314 3.3107 3.5985 3.3845 3.5495 4.057  4.1817   3.8513 3.7568 4.1581 3.9046 4.0251 3.8438 3.2754 3.9418 3.5864 3.3992   3.5558 3.9594 3.5764 3.6611 4.1623 3.5637 3.7607 4.3127 3.889  3.9234   4.3654 4.5412 3.6863 3.8124]]
696                   2.24719         1.31188         0.53368         -0.06986          -0.0536          0.13358          1.28565          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1244 3.3629 2.9124 2.9961 3.2175 3.2734 3.349  3.2182 3.2927 3.2856   3.3798 3.5685 3.3153 3.8413 3.9648 4.0094 3.4029 3.6376 3.0077 3.2799   3.6733 3.2127 3.471  3.6893 3.4154 3.3603 3.6318 3.6424 3.5084 3.3019   3.6913 3.7391 4.6753 3.7524 3.7438 3.431  3.6848 4.1101 3.8777 3.4787   3.3208 3.2786 3.7202 3.5636 3.8153 3.4877 3.5501 3.5128 3.5733 4.0548   3.6351 4.7175 4.0204 3.8683]]
697                   2.28947         1.31333         0.52563         -0.09          -0.07008          0.13367          1.21203          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3097 3.5841 3.3102 3.4493 3.0372 3.0018 3.4155 3.8917 3.584  3.2717   3.1033 3.1637 3.9805 3.3524 3.2402 3.1106 3.5356 3.7934 3.1203 3.2932   3.7645 3.288  3.4297 3.2908 3.4577 3.3556 3.5034 3.4348 3.9008 3.3878   4.0436 3.681  3.733  3.6497 3.5589 3.7135 3.5277 3.5065 3.3401 3.8864   3.4553 3.4634 3.9356 3.7634 4.5092 4.0318 3.8199 3.7462 3.8267 4.2447   4.2323 3.7346 3.65   4.2967]]
698                   2.42138         1.30689         0.44407         -0.1528          -0.07995          0.12997          1.35297          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.2204 2.5498 2.3412 2.6106 2.4673 2.509  2.6178 2.6656 2.7386 2.7082   2.6905 2.7804 2.7782 3.053  2.8723 3.3829 2.7659 3.0742 2.7996 2.7976   2.5806 2.7626 2.8571 2.9719 2.9521 3.0238 2.9749 3.016  2.9826 3.1066   3.2493 3.3294 3.0718 3.2879 3.1082 3.6654 3.0482 3.1292 2.7557 2.9431   2.8504 3.041  3.287  3.395  3.3867 3.147  3.335  3.4879 3.1191 3.6512   3.1757 3.466  3.0366 3.9261]]
699                   2.46385         1.31687         0.4452         -0.17302          -0.09342          0.1319          1.24965          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.258  2.4702 2.7413 2.5583 2.4743 2.64   2.8915 2.8104 2.6553 2.8496   2.7574 2.8255 2.7252 3.0166 2.5712 3.0499 2.8034 2.9644 2.715  2.6214   2.6862 2.745  2.8818 2.8501 2.9374 3.072  2.9878 2.9593 2.9921 2.854   3.1748 3.1943 3.3592 3.1763 3.111  3.2406 3.1713 3.1797 3.3066 2.9676   2.9896 3.0429 3.5631 3.034  3.0476 3.3249 3.0897 3.1468 3.4441 3.253   3.1468 3.6937 3.1993 3.365 ]]
700                   2.44958         1.30613         0.43836         -0.16622          -0.08247          0.13123          1.22562          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5427 2.6674 2.7009 2.3337 2.6025 2.7235 2.7046 2.6758 2.8498 2.8252   2.9046 2.7113 2.8404 3.0654 3.0565 2.8022 2.9283 3.0425 2.669  2.8421   1.9543 2.8038 2.7887 2.7421 3.0547 3.0644 3.0829 2.9836 2.9544 2.9079   3.1327 3.2577 3.1661 3.2467 3.0508 3.1491 3.0418 3.0096 3.1233 2.7926   2.8753 3.1721 3.2313 3.3301 3.095  3.2977 3.0396 3.0986 3.45   3.4072   3.4414 3.404  3.3267 3.0542]]
701                   2.32043         1.28002         0.43051         -0.10473          -0.03142          0.12283          1.28577          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4431 2.6254 2.6695 2.6728 2.7882 2.6308 2.914  2.9162 2.8683 2.8449   2.867  2.78   3.0659 2.8964 3.2406 2.7055 3.1008 2.9548 2.8387 2.7649   2.6944 2.7471 2.7853 2.5854 2.9779 3.0807 3.0764 3.0941 2.9982 2.9798   3.097  3.1926 3.0352 3.2333 3.3012 3.2193 2.7423 2.695  3.0144 2.7469   3.0774 3.0229 3.0774 3.1194 3.322  3.1177 3.149  3.3554 3.6398 3.3532   3.4025 3.3915 3.2988 3.2647]]
702                   2.59518         1.43394         0.60896         -0.23554          -0.12878          0.1555          1.43008          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1013 3.2838 3.4945 3.2738 3.0827 3.1393 3.5674 3.8113 3.7423 3.5981   3.6243 3.7848 3.8281 3.6992 3.8053 3.8156 3.7719 3.896  3.4268 3.5111   3.5943 3.7275 3.6546 3.7667 3.9797 4.0106 3.825  3.9536 3.9564 3.9703   4.2501 4.1488 4.1542 4.0303 4.1634 4.211  4.0357 4.0967 3.9422 3.9108   3.9163 4.0929 4.031  4.1578 4.1854 4.2074 3.9074 4.1146 4.0921 4.4105   4.0838 4.2979 4.0847 4.0167]]
703                   2.49758         1.38251         0.53318         -0.18908          -0.16493          0.14203          1.3618          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.5029 3.3341 3.4842 3.4724 3.084  3.1676 4.0685 4.1601 3.6372 3.8104   4.3189 3.7375 4.3773 4.5835 3.4213 3.7689 3.5809 3.9422 4.2223 3.8435   4.0858 3.2998 2.1152 2.7657 4.0557 4.1659 3.5504 3.7464 4.1765 3.1045   3.1431 3.6588 2.8146 3.9243 3.4713 3.3437 3.5902 2.3799 4.069  3.8721   2.4948 3.2003 3.5735 4.1646 3.9279 4.1425 2.9221 3.8488 4.1145 3.4911   3.7609 3.8803 2.4646 3.9918]]
704                   2.19072         1.28115         0.4924         -0.04298          -0.04148          0.12513          1.25343          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1251 3.3738 3.2625 3.2392 3.2791 3.3578 3.4858 3.5111 3.4927 3.4703   3.5025 3.479  3.3719 5.1118 4.5502 3.6924 3.3167 3.8047 3.1816 3.2583   3.2147 3.1951 3.2101 3.1831 3.438  3.4769 3.467  2.7104 3.4415 3.4583   3.5605 3.5732 3.5845 3.5775 3.5616 3.5489 3.2471 3.3881 3.3175 2.57   3.2203 3.3066 3.3595 3.3918 3.2121 3.3275 3.3222 3.347  3.2997 3.3276   3.273  5.1387 3.2049 3.3732]]
705                   0.53001         0.58014         0.20248         0.74767          0.75151          0.0318          0.53707          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1989 3.6184 3.2949 3.3401 3.4839 3.5221 2.1443 2.2399 2.1446 2.0347   2.0646 2.1842 4.564  5.1493 4.5384 4.6954 4.499  4.6723 5.2126 5.3637   5.1978 5.1949 5.4899 5.0665 2.3662 3.0306 2.6745 2.9054 2.7813 2.7683   1.4721 1.8053 1.5128 1.6037 1.7904 1.675  1.8089 2.16   2.0542 2.0443   1.7856 2.0667 2.8419 3.2255 3.0565 2.9982 2.8217 3.4273 3.4176 5.2415   4.8691 4.8563 4.8412 5.0004]]
706                   2.58368         1.41744         0.59929         -0.23007          -0.13209          0.15388          1.4139          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2645 2.9211 3.3223 3.4627 3.5427 3.0958 3.7171 3.7596 3.707  3.7406   3.9189 3.6343 3.8795 4.133  3.6556 3.7186 3.7034 3.6397 3.6403 3.573   3.46   3.5753 3.5977 3.5044 4.0139 4.0472 3.9658 4.0085 3.8706 3.901   4.0501 4.327  4.1803 4.3776 4.0949 4.2889 3.7095 3.8243 3.8249 3.8654   3.6208 3.6761 4.042  4.1022 4.0527 4.0653 3.9983 3.9849 4.3594 4.3048   4.2744 3.9929 4.0419 4.1312]]
707                   2.44805         1.39675         0.56156         -0.16549          -0.13424          0.14545          1.47495          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[2.9735 3.2351 3.5464 3.5466 3.0877 4.0652 3.9766 3.6716 3.8157 3.0612   3.8172 4.1553 3.7753 3.996  4.1365 4.0713 3.5864 3.3343 3.3427 3.6442   3.5489 3.2332 3.4923 3.8946 4.091  2.9787 3.3696 4.2206 4.0553 2.8601   3.3313 4.0252 4.0727 3.6836 4.2342 4.1363 4.1327 3.6988 3.3767 3.6978   3.6514 3.971  3.8899 2.706  3.4427 3.8987 1.6495 3.6451 3.8881 3.0236   4.0179 3.5827 3.8771 4.286 ]]
708                   2.36951         1.35485         0.51117         -0.1281          -0.12802          0.1334          1.33485          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2177 3.3876 3.2515 3.2446 3.2765 3.3586 3.4646 3.5274 3.4997 3.4638   3.503  3.505  3.3487 3.4847 3.309  3.2706 3.3057 3.4096 3.1851 3.2588   3.2096 3.2209 3.2117 3.1672 3.4188 3.4578 3.4612 3.4428 3.447  3.4473   3.5585 3.567  3.572  3.5913 3.5626 3.5615 3.2443 3.3784 3.3394 3.3121   3.2516 3.3303 3.3651 3.3603 3.415  3.3176 3.3404 3.3674 3.3118 3.2957   3.288  3.2735 3.2221 3.3771]]
709                   0.50879         0.5597         0.20307         0.75777          0.75851          0.03249          0.4915          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1655 3.6402 3.2933 3.3576 3.4351 3.7061 2.0556 2.2023 2.1582 2.0431   2.1742 2.3841 4.8973 5.1683 4.7211 4.4252 4.5106 4.9107 5.126  5.3969   5.1823 5.4492 5.1802 5.0835 2.3276 3.1049 2.7336 2.8135 2.4451 2.5903   1.8055 1.4333 1.7323 1.761  1.4582 1.3469 1.8432 2.2941 2.0364 2.2918   1.8588 2.1167 3.4365 3.0475 3.0193 2.8019 2.8652 2.9602 4.9893 5.0329   5.1172 5.2496 5.2193 5.1441]]
710                   0.80988         0.65533         0.25386         0.61443          0.61681          0.04971          0.49423          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4063 3.9405 3.4714 3.4557 3.6368 3.6539 2.12   2.2251 2.128  1.8869   3.2371 2.2867 4.8976 5.1847 3.4828 4.6712 4.8838 4.8336 5.2068 5.6057   5.3305 5.4898 5.3812 5.2269 2.3793 2.8978 2.7837 2.6819 2.4684 2.6696   1.6095 1.6589 3.4743 1.6252 1.6134 1.597  1.9985 3.3686 2.1501 3.5395   3.0124 2.1416 2.9626 3.0526 3.1849 2.8117 2.8524 2.9923 5.1343 5.24   3.3317 5.1266 5.0272 5.458 ]]
711                   2.7866         1.37859         0.47849         -0.32667          -0.31931          0.15524          1.21877          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.323  5.0884 2.4803 2.7532 3.3986 3.1997 3.8455 2.1609 3.1974 3.3138   2.9777 4.0415 4.3747 4.2866 1.5418 2.5083 3.1328 3.9762 4.4218 3.3214   4.7912 4.276  2.3214 1.5809 3.1635 3.7187 4.1791 2.073  4.0348 1.8708   2.4352 4.378  2.0049 2.2291 3.0533 3.0113 3.9068 2.2733 3.6155 3.0065   3.7811 3.7957 3.0807 2.8172 3.0074 2.36   4.4343 4.3233 2.5903 3.3111   4.3225 3.9151 2.7507 2.1953]]
712                   2.30771         1.29149         0.48607         -0.09868          -0.09858          0.12918          1.19947          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1015 3.4405 3.9209 2.6829 3.4265 3.7504 3.317  3.9607 3.1671 3.0437   3.5908 4.1747 4.0849 5.0142 4.5545 3.745  4.4633 3.2995 3.1107 3.3908   3.707  3.0458 3.1817 2.5197 4.0047 3.4785 2.5482 2.993  2.788  3.5652   3.4702 3.5533 4.2595 3.6209 2.1515 3.2962 3.3471 3.3422 2.5545 3.3681   2.2888 2.4663 2.8531 3.4733 3.472  2.9892 3.4967 3.3898 2.7091 3.1354   3.5494 3.3922 3.1445 3.4919]]
713                   1.82367         1.02683         0.35405         0.13177          0.161          0.099          0.83752          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.0877 3.4553 3.5344 2.5169 3.6717 2.7228 2.8023 2.7788 2.8985 2.8572   2.1981 2.     4.6115 4.5351 3.9297 2.6235 2.6519 2.7047 4.9443 2.6022   3.6678 2.531  5.6242 2.5246 4.0044 2.8815 2.6859 2.1407 2.6831 2.734   2.8063 3.0006 2.8175 2.9473 2.8493 2.8712 1.9724 2.352  1.9704 3.8972   2.6456 2.6657 2.7233 2.9294 3.143  2.8248 2.8335 2.6867 4.8857 4.798   2.6772 4.9003 2.6588 4.8256]]
714                   0.71578         0.62365         0.22524         0.65923          0.66054          0.04215          0.44867          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4016 3.8478 3.49   3.4552 3.5676 3.6535 2.1256 2.0986 2.1873 2.0526   1.9704 2.0424 4.9382 5.1767 3.0416 4.7649 4.9018 4.8848 5.3058 3.074   3.0052 5.34   5.2684 5.1948 2.5043 2.8649 3.6305 3.3941 3.2104 2.656   1.5438 1.6752 3.0912 1.6266 1.5973 1.5346 1.9669 2.346  2.1341 2.1764   1.9255 2.1228 2.9408 3.0885 3.0938 3.0814 2.8664 3.0099 5.2387 5.0612   5.0889 5.1    5.1061 5.3622]]
715                   2.50349         1.33707         0.47916         -0.19189          -0.158          0.14101          1.18708          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.0481 2.5401 2.8566 3.8172 3.833  2.5103 1.937  1.893  4.     3.6598   2.9819 3.7103 3.6498 2.2337 4.3193 4.6658 3.7486 2.8024 2.6497 2.4712   3.7812 4.4999 3.3598 2.9002 3.8732 2.2527 3.605  3.5728 2.3553 1.7181   3.7654 3.7056 4.1108 3.0575 3.9228 2.9554 4.3152 3.5122 2.6637 2.1709   4.4345 2.2003 2.4878 3.4501 2.3778 2.4359 1.7065 2.8443 3.5093 2.5748   3.0242 2.4415 2.6272 2.72  ]]
716                   2.05134         1.18149         0.42984         0.02338          0.02591          0.11346          1.0758          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6233 4.0018 3.4028 3.3678 3.3092 2.5998 3.567  2.1424 3.4884 3.5758   4.0981 2.1841 3.8673 3.6067 3.0047 2.9206 3.2946 3.524  3.4961 5.2315   2.4446 3.2789 3.3123 3.6369 3.3334 3.5833 3.4456 2.8475 2.4835 3.0623   3.2853 1.4654 2.9907 3.0737 4.1373 2.4734 1.7421 3.327  3.2068 3.5607   3.4208 3.2752 2.7687 2.9054 3.5528 3.2914 4.0877 3.3342 3.5599 3.4154   2.4509 5.0335 5.311  3.3244]]
717                   2.20077         1.20289         0.39894         -0.04776          0.02549          0.11778          0.99028          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.7315 3.3879 2.4789 2.6173 3.0747 2.6963 2.8718 2.927  2.2753 2.6777   2.6572 2.7937 2.7516 2.7605 2.7038 4.7812 2.5923 4.5477 2.5918 2.6215   2.644  3.7583 2.477  2.469  2.7652 4.0289 2.8129 4.0229 2.8473 2.7765   2.8772 2.9527 2.8805 2.9558 2.9368 2.926  1.9576 2.3471 2.076  2.6123   3.8378 2.5103 2.7345 3.4487 2.7623 3.0768 2.9688 2.7746 2.5844 5.1987   4.546  3.9696 2.773  2.636 ]]
718                   2.57136         1.43571         0.60589         -0.2242          -0.11654          0.15392          1.447          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.254  3.433  3.4479 3.0251 3.3039 3.5598 3.8406 3.9177 3.7981 3.8833   3.6326 3.6387 3.7482 3.7572 3.4765 3.8548 3.8529 3.9742 3.6863 3.6891   3.4839 3.8501 3.6058 3.5815 3.9634 4.0018 4.0436 3.9039 3.9567 3.9596   4.1116 4.2739 4.1655 4.204  4.1486 4.0507 3.9421 3.7843 3.8888 3.8544   3.8799 3.5804 4.141  4.1031 4.0739 4.0567 4.0454 4.0089 4.1769 4.2673   3.8682 4.2907 4.2091 4.0953]]
719                   2.64943         1.42671         0.57794         -0.26137          -0.21565          0.1555          1.37372          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.8863 3.6596 3.5142 3.9193 3.5478 3.7512 4.473  4.1941 3.9837 3.5057   2.8849 3.5461 4.0854 3.6291 1.9592 3.5037 4.1707 3.8384 3.6497 3.6233   3.7762 3.7939 3.8453 3.791  3.6398 4.1596 4.0486 4.0535 3.7669 3.3749   3.7824 4.222  4.0299 4.0481 3.9808 3.7585 3.6252 3.1917 4.0823 3.7223   3.7122 3.0895 4.1121 3.9961 3.1154 3.8906 3.1501 4.1644 3.8714 3.6394   4.3179 3.1235 3.4751 2.724 ]]
720                   2.19485         1.28753         0.49921         -0.04495          -0.04353          0.12711          1.3005          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2127 3.4133 3.2444 3.2865 3.2785 3.3674 3.487  3.5239 3.4992 3.4871   3.4753 3.5039 3.391  3.4848 3.2928 4.7874 3.3211 3.3365 3.2014 3.262   5.3347 3.2072 3.2079 3.1798 3.4316 3.4731 3.4613 3.437  3.4244 3.4529   3.5686 3.573  3.5674 3.6049 3.5605 3.5496 3.2489 3.3955 3.2982 3.3364   3.1989 3.3028 3.3782 3.3979 3.401  3.3201 3.3301 3.3615 3.2974 3.2902   3.2658 3.3048 3.2626 3.3302]]
721                   0.45186         0.51186         0.1906         0.78487          0.78507          0.0292          0.46308          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1836 3.8324 3.5393 3.5559 3.5839 3.5491 2.3816 2.3056 2.2841 2.4806   2.328  2.5587 4.9013 4.9733 4.7444 4.6234 4.7499 4.8746 5.1169 5.3634   5.155  5.1899 5.1913 5.3193 2.3291 2.7248 2.9678 2.8874 2.7404 2.629   1.6533 1.8079 1.4802 1.8378 1.82   1.6123 2.0268 2.2226 2.1654 2.068   1.7587 2.11   3.0322 2.9493 3.2135 3.078  3.04   2.9523 4.9851 5.0741   4.8957 5.2473 5.2012 5.4599]]
722                   2.58457         1.42388         0.60303         -0.23049          -0.12475          0.15457          1.34785          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0866 3.578  3.5922 3.1963 3.3383 3.5954 3.6484 3.7307 3.7646 3.4966   3.6723 3.7506 4.0569 3.9416 3.887  3.8818 3.5665 3.7301 3.6798 3.6767   3.4506 3.5763 3.6023 3.3023 3.9056 3.9933 3.9421 4.0234 3.9183 3.9345   4.1227 4.2881 4.1857 4.3019 4.159  4.1193 3.5686 3.7732 3.94   3.7282   3.7188 3.894  4.156  4.1465 4.2142 3.9353 4.0264 3.9955 4.3487 4.1752   4.3905 4.1951 4.0752 4.1376]]
723                   2.64753         1.43182         0.56321         -0.26046          -0.23478          0.15073          1.34743          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4824 4.3523 3.3992 3.0373 3.7695 3.4107 3.8423 3.4089 4.0624 3.7961   3.6664 3.8299 3.5226 4.1062 3.1483 3.4955 3.9247 4.0556 3.2567 5.4893   3.2245 4.1462 3.2514 3.2054 3.6733 4.0491 4.1148 3.7893 3.7475 3.8054   3.9478 3.6089 4.0994 2.9011 4.4788 4.2481 2.6255 3.647  3.0111 3.0344   1.6382 3.0802 3.0061 3.7766 3.391  3.5158 4.2075 4.2449 3.8857 3.2625   3.3007 2.9647 3.6357 3.6328]]
724                   2.18086         1.29766         0.4904         -0.03829          -0.03823          0.12405          1.32705          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2332 3.9156 3.2824 3.2421 3.3092 3.3485 3.4872 3.519  3.4834 3.4644   3.4991 3.4851 3.3961 3.5082 3.9577 3.2998 4.165  4.7495 3.1897 3.2601   3.8539 3.211  3.223  3.179  3.4457 3.4692 3.477  3.4277 1.9677 3.4454   3.5713 3.5755 3.5791 2.1673 3.5518 3.553  3.2877 3.4116 3.3359 3.2903   3.2252 3.3182 3.3692 3.3838 3.4287 3.3249 3.3352 3.3432 3.2875 3.2897   3.2578 3.2629 3.2639 3.3598]]
725                   0.55633         0.56612         0.19873         0.73514          0.73934          0.03278          0.49385          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4204 3.5773 3.5322 3.5396 3.2885 3.5199 2.0935 2.5951 2.5599 2.3161   2.141  2.1323 4.6351 4.9378 4.7709 4.6576 4.4939 4.6096 5.1346 5.3471   5.4503 3.1201 5.2165 5.0718 2.2667 3.0106 2.6525 2.5519 2.4291 2.8722   1.5555 1.7157 1.3917 1.4106 1.4509 1.6518 2.0737 2.1982 2.0094 2.012   1.9805 1.9958 2.9409 3.1881 3.1002 2.7783 2.8114 2.9365 5.0608 4.974   4.9527 5.2458 4.8176 5.3998]]
726                   0.74089         0.65286         0.24157         0.64727          0.64738          0.04407          0.5899          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.385  3.8014 3.4928 3.5333 3.5195 3.6731 2.0338 2.2988 2.1722 2.051   2.1139 3.6829 4.8976 5.2623 4.7692 4.7766 4.7073 5.0438 3.3251 5.5544   5.3385 5.3351 5.3463 5.186  2.4858 2.821  2.7831 2.7464 2.5542 2.6723   1.5914 1.5846 1.4404 1.6769 3.642  1.5064 1.995  2.3585 2.1574 2.1249   1.9421 2.0886 3.0134 3.5778 3.1926 2.8258 3.3456 2.9677 5.185  3.4545   5.0419 5.0264 5.0447 5.3387]]
727                   3.49802         1.56323         0.56261         -0.66537          -0.63505          0.19444          1.34052          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.5982 2.6262 2.6615 3.9361 2.4424 2.1142 3.5403 2.9124 2.4461 2.0459   3.1235 3.354  2.7932 4.0058 2.5794 3.0663 1.7273 1.9921 2.6642 3.6427   2.4915 3.8986 3.3482 1.9202 3.6563 3.2832 2.8983 2.9453 2.2203 3.8286   2.7362 3.9789 3.9537 5.263  2.4611 3.4378 2.0166 3.8909 4.3511 2.3868   2.927  3.1323 4.4071 2.1801 4.48   4.9458 3.8994 4.1057 2.6231 2.4287   3.832  3.9908 2.1781 2.6705]]
728                   2.23078         1.24454         0.46261         -0.06206          -0.06087          0.1255          1.0663          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3682 3.6597 2.3611 2.9131 3.0436 3.7134 3.9977 4.0881 2.3818 3.5522   3.2832 3.8681 3.4326 3.5933 3.0878 3.7937 3.4235 3.2602 2.5619 2.6625   3.7539 3.8469 3.6309 2.8732 4.0488 2.3717 4.2785 3.3862 2.2991 3.3774   3.8429 3.4073 3.7678 3.4275 2.036  2.6355 3.5696 3.2461 2.886  3.4045   3.1344 2.0179 3.2877 3.0638 3.0457 3.3431 3.1733 3.1473 4.9219 5.0707   4.052  3.9683 2.305  3.31  ]]
729                   1.85145         1.09947         0.36944         0.11854          0.19378          0.10243          0.97608          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.5908 3.6748 2.7113 2.7132 2.6337 2.7023 2.8564 2.9475 2.8711 1.9235   2.7477 2.3107 2.7318 2.8607 4.422  4.6475 4.2167 3.9005 4.7035 4.2436   5.6296 2.5075 2.6042 2.5661 2.1404 2.7737 2.8663 2.7356 2.3276 2.0342   1.8419 1.7832 2.9115 2.9745 2.0514 4.1743 2.5159 2.7547 2.6396 2.5616   1.8225 3.8691 3.1455 2.7586 2.7394 2.6187 2.8053 2.7484 4.011  2.6888   2.7223 2.6679 5.0569 2.7419]]
730                   0.56969         0.56979         0.21248         0.72878          0.72879          0.03581          0.50008          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5147 3.3165 3.4656 3.5171 3.5365 3.7464 2.1929 2.2855 2.154  1.9   2.1509 2.0902 4.9395 5.1286 4.8131 4.8008 4.7351 4.8649 5.2779 5.5377   5.2857 5.1649 5.3396 5.2077 2.4707 2.8725 2.8975 2.6965 3.1745 2.6881   1.4394 1.6212 1.6106 1.6377 3.141  1.3142 2.0061 2.3436 2.7484 2.1121   1.9001 2.1173 2.9782 3.0378 3.1984 2.8513 2.9024 3.0059 5.2026 5.1973   3.3874 5.0286 5.1494 5.2903]]
731                   2.70766         1.33677         0.46312         -0.28909          -0.26429          0.14888          1.25565          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.6498 3.7489 3.1035 3.1851 3.9269 4.395  2.8223 4.2089 1.9581 3.9988   2.5112 3.1021 2.8409 2.541  4.4992 4.113  3.4707 2.3486 1.6972 4.4721   3.0976 3.1795 2.2581 3.6723 2.9087 2.2771 3.3468 3.057  3.3299 4.3889   2.6355 2.5479 1.6901 2.4059 4.2968 3.2528 2.2468 4.1316 3.8594 2.3872   1.9443 2.2694 4.441  4.1117 3.0947 3.4651 3.5745 3.2168 3.7415 1.8152   4.0924 2.386  2.6613 2.964 ]]
732                   2.2052         1.24152         0.46362         -0.04987          -0.04896          0.12302          1.18108          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1425 3.4965 3.0702 3.6059 3.1383 3.2452 3.3283 2.838  3.4003 2.4157   3.673  3.5856 3.2589 2.8267 3.3578 2.7202 3.4262 4.7397 3.4103 5.6801   2.4462 3.8835 3.5613 3.1418 2.3049 3.3073 3.5762 3.9919 3.0867 3.5669   3.4014 3.3295 3.643  3.8904 1.45   2.0744 3.1757 4.0008 2.6234 1.7066   3.3485 2.6111 3.4777 3.8265 3.3893 2.7405 3.2865 3.6444 4.002  4.5059   2.7978 3.9791 3.3628 4.8054]]
733                   1.56123         0.93846         0.32883         0.25671          0.28064          0.08669          0.74853          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.5475 2.7619 3.1612 3.1378 3.0942 2.6068 1.8419 2.8242 2.061  3.9187   2.7868 2.7023 4.2642 2.7251 2.6618 3.9104 4.6568 2.6193 2.5386 5.262   4.9234 5.3989 5.5173 2.6776 2.7882 2.8523 2.847  2.6864 2.7873 2.7921   1.6007 2.8745 1.7616 2.9318 2.9069 2.9451 2.5696 2.7005 3.9661 2.6849   2.0983 2.6095 2.7657 2.9114 2.8053 4.0259 2.8719 2.7119 5.0538 2.8449   4.8576 5.3644 2.5928 2.7538]]
734                   2.49616         1.40503         0.59285         -0.1884          -0.09578          0.14989          1.41117          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1016 3.2797 3.2236 3.5368 3.044  3.4457 3.7614 3.6069 3.4347 3.5377   3.7276 3.7229 3.9793 3.9198 3.7728 3.9769 3.7183 3.822  3.6113 3.4785   3.6217 3.4015 3.5041 3.4949 3.9286 3.9497 3.9    3.8966 3.8895 3.9423   4.2318 4.1697 4.2153 4.025  4.2046 4.2347 3.8477 3.979  3.7421 3.6487   3.8944 3.5426 3.889  4.1376 4.0807 4.0923 3.849  4.1172 4.3274 4.1024   4.2824 4.1843 4.1874 4.2684]]
735                   2.87278         1.44404         0.57159         -0.3677          -0.35145          0.16578          1.54412          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.5125 3.7381 3.7059 3.5883 3.7539 2.9692 4.0281 2.4834 3.9152 3.4929   3.8203 2.0033 3.7095 3.7437 3.3171 1.7127 3.774  2.9921 2.5264 3.8875   3.634  3.4829 3.1456 3.7385 2.304  4.2654 4.0063 3.6016 3.9155 2.7432   3.2505 4.353  3.6165 3.7934 4.0599 4.2263 4.1164 3.9974 3.9734 3.5289   3.7463 4.3763 3.893  2.2437 3.6565 4.106  4.0756 4.0301 3.8523 4.5706   3.9052 3.6705 3.4587 2.6308]]
736                   2.19821         1.27818         0.47495         -0.04655          -0.04317          0.12276          1.29183          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2594 3.3972 3.2492 3.253  2.7723 3.4304 3.4775 3.5108 3.5072 3.4866   3.4909 3.5066 3.387  3.4908 3.3431 3.3191 4.4609 3.3547 3.203  3.2522   3.2119 3.2162 3.2279 3.1784 3.4232 3.4583 3.4434 3.4426 3.4254 2.5845   3.5625 3.5984 1.8214 3.5767 3.5568 1.8173 3.2674 3.3968 3.304  3.3329   3.2196 3.3452 3.3725 3.3741 3.4145 2.9982 3.3381 3.3618 3.3233 3.2737   3.2395 3.3101 3.2439 3.3106]]
737                   0.52065         0.5606         0.1984         0.75212          0.75362          0.03181          0.49348          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.434  3.6061 3.182  3.5596 3.3484 3.7184 2.4547 2.3579 2.1691 1.9785   2.092  2.242  4.7959 5.0143 4.7183 4.4342 4.471  4.6808 5.1201 5.3919   5.463  5.2216 5.1782 5.079  2.3887 2.7435 2.5849 2.8017 2.7066 2.4528   1.7134 1.447  1.3744 1.4182 1.684  1.6893 1.96   2.1876 1.9714 3.3765   1.8475 2.0202 2.8816 2.9861 3.3668 2.7026 2.748  2.8724 5.0008 4.9172   4.8095 4.9756 4.9017 5.397 ]]
738                   2.55543         1.44167         0.60323         -0.21662          -0.12528          0.15269          1.3855          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0583 3.5489 3.4295 3.0966 3.2362 3.4376 3.6611 3.5829 3.6687 3.6982   3.8439 3.6979 3.3652 4.0904 3.6878 3.7415 3.6955 3.9173 3.7442 3.4349   3.6237 3.6387 3.6173 3.6346 3.9206 3.9039 3.9245 3.8465 3.8849 3.8504   4.1545 4.2553 4.0831 3.9794 4.3687 4.0401 3.6759 3.8693 3.9387 3.7894   3.984  3.7951 3.9603 4.107  4.1341 3.9551 4.1374 3.963  4.2108 3.8808   4.336  4.1347 3.9489 4.1349]]
739                   2.87336         1.45698         0.56996         -0.36798          -0.34672          0.16298          1.5214          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.8595 2.7853 4.2241 3.4537 3.4888 3.7751 3.935  4.3014 4.4637 3.2267   3.6142 3.7445 3.2956 3.8015 3.6696 4.0726 3.3114 3.942  3.0931 3.8137   3.4523 3.5661 3.7423 3.8132 3.4542 3.7594 4.0836 2.8414 3.9028 3.7676   3.6762 4.4442 4.3239 3.514  3.9524 4.4973 3.7905 2.4595 3.7467 3.2559   3.9862 3.6518 3.9052 4.0309 3.5833 3.3749 2.7699 2.663  2.7647 3.9579   1.9203 3.5821 2.2827 3.6906]]
740                   1.94005         1.22389         0.48375         0.07636          0.08211          0.11667          1.26643          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2134 3.3766 3.2644 3.2437 3.3416 3.3298 3.508  3.5179 3.4892 3.4666   3.4383 3.3486 3.3588 4.5899 3.328  3.9445 4.986  3.3812 5.2635 3.2285   3.2153 3.2073 3.2136 5.4706 2.9246 3.4749 2.5691 3.4314 3.4264 3.4494   3.5323 3.5808 3.5704 3.5865 3.5585 3.5486 3.2347 3.3754 3.2763 3.2994   3.2078 3.3067 3.3584 3.3808 3.4051 3.3451 3.3259 3.3749 3.2634 3.2643   3.2691 3.9796 3.2127 3.3442]]
741                   0.52734         0.56839         0.20347         0.74894          0.75059          0.03244          0.50338          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4598 3.4793 3.4934 3.5135 3.4074 3.6968 2.4221 2.2155 2.1293 2.2297   2.1164 2.6296 4.6103 4.9623 4.6044 4.4323 4.704  4.6854 5.1119 5.6612   5.4697 5.1872 5.2047 5.3371 2.379  3.053  2.68   2.8455 2.7433 2.4713   1.7511 1.7646 1.4612 1.5204 1.7526 1.3655 2.01   2.4476 1.9714 2.0219   2.0106 2.2624 3.2762 2.8677 3.0546 2.6832 2.7218 3.1038 5.2431 3.2082   5.1665 4.923  4.8686 5.0929]]
742                   0.69581         0.62412         0.22023         0.66873          0.67043          0.04019          0.435          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4592 3.8765 3.5857 3.5767 3.5431 3.617  2.0222 2.23   2.0053 2.0382   2.0853 2.009  5.0451 5.1401 4.7069 4.8331 3.2229 3.0223 5.2901 5.5489   5.3557 5.355  5.3224 5.1944 2.5402 2.8412 3.4809 3.0103 2.5363 2.6618   1.6589 1.6471 1.5726 1.6927 1.458  1.5533 2.0082 2.341  2.142  3.0935   1.8954 2.1611 3.0181 3.056  3.1564 2.9515 3.334  2.9759 2.9512 5.0951   5.049  5.117  5.0398 5.3234]]
743                   3.26401         1.53512         0.56803         -0.55396          -0.55392          0.187          1.49248          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.6129 4.799  2.2479 4.0726 4.1339 3.1321 4.0775 2.6646 3.9999 2.967   4.2847 3.6289 3.1807 3.6589 3.7852 1.9898 2.7276 1.7479 3.4124 2.4521   4.0647 2.3065 1.8118 4.6517 3.2345 3.9602 4.0518 2.4529 3.2601 3.0546   3.611  4.0979 3.6486 3.5321 3.0059 2.5981 3.9352 3.744  4.0779 3.499   4.2058 3.2296 2.5078 3.1096 2.9097 2.5302 4.2549 3.1407 3.6626 3.3365   2.1682 6.7668 2.7149 3.4302]]
744                   2.0355         1.18379         0.42441         0.03092          0.03096          0.11013          1.12792          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1523 3.5657 3.161  2.5683 3.7865 3.9478 3.7294 3.6887 3.3701 2.8769   3.3097 3.5755 3.6487 3.5619 3.4367 2.5946 3.1952 2.8048 4.96   5.5167   3.2759 3.1202 5.0339 2.9802 4.1962 2.6261 3.2872 3.8546 3.8964 3.9128   2.8372 2.1657 1.7708 3.7628 2.5288 1.8009 2.7606 3.3262 3.8075 2.3529   4.1293 2.3996 3.063  3.3611 3.8951 2.8052 3.7898 3.4008 4.249  3.2511   2.9324 4.2068 3.05   3.9015]]
745                   2.0746         1.10576         0.35525         0.01231          0.12262          0.10876          0.81952          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.6334 3.6309 3.3024 2.5698 2.6378 2.7957 1.6697 1.8711 2.6534 2.4484   2.7054 2.0405 3.3007 2.7989 2.6733 2.7159 3.8269 2.714  5.4579 2.6092   2.4785 5.4314 2.3819 2.6163 2.7727 2.4598 2.5069 3.1618 2.2732 2.6578   4.1482 1.8436 2.9671 2.8268 1.4258 2.8459 2.6089 2.6244 2.1651 3.9747   2.5865 2.5563 3.3898 2.9346 2.7876 2.5803 2.6916 2.7156 4.0471 2.7352   2.576  2.664  5.0989 4.0834]]
746                   1.04495         0.74874         0.27907         0.50251          0.50257          0.06106          0.56015          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4295 3.8247 3.5464 3.5631 3.5959 3.7644 2.1221 2.1744 2.2193 2.0336   2.0857 2.2455 4.8177 5.2216 4.8146 4.7931 4.7044 5.0255 5.2836 5.5307   2.9023 5.3054 2.9438 5.2279 2.5245 2.8386 2.7744 2.6868 2.5286 2.6326   3.5869 1.6747 1.5898 3.7509 1.5746 1.5275 2.0389 2.3471 3.8015 2.1345   1.9456 2.1301 2.9862 2.9918 3.1731 2.802  2.8744 2.9939 5.1984 5.214   5.0651 5.1338 2.9164 5.4573]]
747                   2.60117         1.33209         0.4779         -0.23839          -0.23836          0.13645          1.22007          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.1232 1.9481 3.9678 3.7198 5.2977 5.3743 2.6145 2.5673 4.007  3.249   3.1878 3.7845 2.995  3.9173 2.9029 2.7405 3.204  4.8513 2.1827 4.1789   3.9825 3.8797 3.9188 3.0902 2.3358 2.6698 2.2891 4.3578 5.637  3.6292   3.2321 4.689  2.0643 3.7851 2.3452 2.3563 2.7215 2.4958 4.5276 2.2346   3.7662 4.4816 2.9748 2.0094 3.2144 2.7501 2.6966 4.172  4.5444 3.1948   4.5144 3.5691 3.0556 3.1076]]
748                   2.27035         1.2704         0.48737         -0.08089          -0.08068          0.13126          1.261          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1675 3.895  3.2214 3.6463 3.3852 3.6723 3.3641 3.4429 2.8573 3.9458   3.5762 3.4224 3.3715 3.6138 4.4449 4.5479 2.7639 3.847  3.89   3.3636   3.1439 3.2541 3.2824 2.4717 1.7979 3.5331 3.3694 3.5098 3.3198 2.7277   1.763  3.7202 3.7596 3.5123 3.5521 3.7075 2.4114 4.0698 1.7534 2.465   3.3126 3.4026 3.5068 3.4984 4.0012 3.4679 3.2178 2.4377 3.4809 2.8904   3.9108 3.3944 3.5823 4.8666]]
749                   1.96396         1.02653         0.33274         0.06498          0.17962          0.10198          0.66208          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.5795 2.6777 3.8373 3.2531 2.7186 2.6699 2.7076 2.8339 1.8101 2.9101   1.8524 2.0207 2.7374 3.9265 3.4102 2.7192 2.6756 2.6241 4.1708 2.6895   2.653  4.9678 2.5648 2.5521 2.7243 2.3699 2.1444 2.6699 2.7408 2.3164   2.9415 4.1081 1.5755 2.8895 2.8284 1.527  2.029  2.5466 2.3153 2.6865   2.6382 1.9823 2.7146 2.7705 2.7586 2.7439 3.9139 2.7513 5.1689 5.2785   2.7404 3.9567 2.6722 4.1031]]
750                   0.4623         0.51608         0.19         0.7799          0.7799          0.0292          0.43342          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.8    3.4666 3.4665 3.5334 3.6666 2.1335 2.267  2.1999 2.0667   2.1339 2.2005 4.8665 5.1335 4.7332 4.6665 4.7327 4.8665 5.2671 5.5334   5.3334 5.3332 5.3334 5.2002 2.4666 2.8667 2.8    2.6665 2.533  2.6667   1.6001 1.6664 1.6001 1.6669 1.5999 1.5334 2.     2.3335 2.1331 2.1333   1.9333 2.1335 3.     3.0669 3.2001 2.8667 2.8664 2.9999 5.1999 5.1998   5.0666 5.1334 5.0666 5.3333]]
751                   0.46231         0.51612         0.19001         0.7799          0.7799          0.0292          0.43322          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4665 3.4664 3.5335 3.6664 2.1328 2.2667 2.2002 2.0667   2.1338 2.2    4.8667 5.1336 4.7334 4.6667 4.7325 4.8664 5.2669 5.5331   5.3334 5.3334 5.3334 5.2    2.4665 2.8668 2.8002 2.6664 2.533  2.6664   1.6002 1.6671 1.6005 1.6668 1.6002 1.5336 2.0003 2.3332 2.1337 2.1336   1.9332 2.1334 2.9998 3.0667 3.2004 2.8665 2.866  2.9999 5.1998 5.2001   5.0666 5.1332 5.0666 5.3332]]
752                   0.4622         0.51606         0.19         0.77995          0.77995          0.02919          0.43313          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4669 3.4666 3.5332 3.6666 2.133  2.2667 2.2001 2.0669   2.1334 2.2005 4.8665 5.1332 4.7334 4.6662 4.7332 4.8663 5.2666 5.5334   5.3333 5.3335 5.3334 5.2001 2.4674 2.8665 2.8    2.6667 2.5334 2.6665   1.5999 1.6672 1.5999 1.667  1.6001 1.5338 2.0001 2.3334 2.1333 2.1333   1.9331 2.1332 3.0002 3.0666 3.2002 2.8666 2.8666 3.0001 5.1996 5.1999   5.0668 5.1334 5.0664 5.3331]]
753                   0.46221         0.51606         0.18999         0.77995          0.77995          0.0292          0.43342          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8005 3.4665 3.4666 3.5332 3.6662 2.1338 2.2672 2.2002 2.0669   2.1339 2.2001 4.8667 5.1323 4.7334 4.6664 4.7331 4.8669 5.2667 5.5334   5.3335 5.3333 5.3334 5.2001 2.4666 2.8666 2.8002 2.6667 2.5334 2.6668   1.6001 1.6667 1.6006 1.6668 1.6002 1.5335 1.9999 2.3334 2.1334 2.1333   1.9333 2.1333 2.9998 3.067  3.2002 2.8667 2.8671 3.0002 5.1999 5.2   5.0667 5.133  5.0666 5.3334]]
754                   0.46229         0.51613         0.19003         0.77991          0.77991          0.0292          0.43333          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4665 3.4665 3.5332 3.667  2.1336 2.2667 2.2006 2.0668   2.134  2.2008 4.8665 5.1332 4.7334 4.667  4.7333 4.8666 5.2666 5.5334   5.3335 5.3333 5.3338 5.1999 2.4662 2.8667 2.8    2.6667 2.5335 2.6666   1.6002 1.667  1.5998 1.6667 1.6    1.5334 1.9999 2.3336 2.1336 2.1334   1.9335 2.1334 3.0001 3.0665 3.2005 2.8669 2.8665 2.9996 5.2001 5.2001   5.0664 5.1335 5.066  5.3333]]
755                   0.46223         0.51605         0.18999         0.77994          0.77994          0.0292          0.43282          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7996 3.4665 3.4664 3.5333 3.6663 2.1342 2.2675 2.2002 2.0664   2.1341 2.2    4.8666 5.1332 4.7331 4.6662 4.7331 4.8665 5.2669 5.5334   5.3331 5.3333 5.3335 5.2006 2.4666 2.8666 2.8001 2.6666 2.5332 2.6666   1.6003 1.6664 1.5995 1.6665 1.6002 1.5343 1.9999 2.3335 2.1332 2.1333   1.9333 2.1332 2.9999 3.0666 3.2003 2.8668 2.8665 3.0009 5.1998 5.2001   5.0666 5.1329 5.0667 5.3334]]
756                   0.46222         0.51609         0.19         0.77994          0.77994          0.02919          0.43357          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7998 3.4664 3.466  3.5335 3.6666 2.1338 2.2668 2.2005 2.0667   2.1339 2.2006 4.8662 5.1329 4.733  4.6662 4.7333 4.8673 5.2672 5.5333   5.3332 5.3333 5.3335 5.2    2.4665 2.8665 2.8    2.6667 2.5335 2.6669   1.5999 1.6668 1.6002 1.6667 1.6005 1.5333 2.     2.3333 2.1339 2.1334   1.9335 2.1334 3.     3.0671 3.1997 2.8668 2.8666 3.0001 5.2    5.2001   5.0661 5.1333 5.0666 5.3334]]
757                   0.46225         0.51606         0.19         0.77993          0.77993          0.0292          0.43313          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7997 3.4668 3.4667 3.5331 3.6665 2.1344 2.2669 2.2005 2.0678   2.1331 2.2009 4.8659 5.1336 4.7331 4.6662 4.7332 4.8666 5.2666 5.5334   5.3334 5.3332 5.3336 5.2001 2.4665 2.8667 2.8001 2.6667 2.5331 2.6665   1.5996 1.6666 1.6001 1.6669 1.6007 1.5338 2.     2.3337 2.1333 2.1334   1.9332 2.1334 3.0002 3.0666 3.2001 2.8667 2.8668 2.9998 5.1997 5.1997   5.0665 5.1335 5.0664 5.3332]]
758                   0.46221         0.51609         0.19001         0.77995          0.77995          0.0292          0.43342          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.7993 3.4668 3.4666 3.5335 3.6666 2.1336 2.2669 2.2007 2.0668   2.1335 2.2002 4.8665 5.133  4.7336 4.6666 4.733  4.8665 5.2667 5.5334   5.3332 5.3333 5.3334 5.2    2.4667 2.8667 2.8008 2.6667 2.5332 2.6661   1.5995 1.667  1.6006 1.6669 1.6006 1.5332 1.9999 2.3329 2.1334 2.1334   1.9333 2.1334 3.0003 3.0667 3.1999 2.8664 2.8663 3.0002 5.1999 5.2001   5.0666 5.1333 5.0665 5.3333]]
759                   0.46223         0.51607         0.19         0.77994          0.77994          0.0292          0.43328          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7994 3.4664 3.4669 3.5333 3.6664 2.1334 2.2679 2.2003 2.0669   2.1336 2.2002 4.8666 5.1331 4.7332 4.6664 4.7331 4.8663 5.2664 5.5329   5.3334 5.3333 5.3335 5.1999 2.4668 2.8666 2.8002 2.6664 2.5324 2.6665   1.6002 1.6667 1.6001 1.6668 1.6009 1.5337 2.     2.3335 2.1333 2.1335   1.9333 2.1334 3.     3.0668 3.2    2.8669 2.8666 3.0001 5.2003 5.1998   5.0665 5.1336 5.0667 5.3335]]
760                   0.4623         0.51611         0.19002         0.7799          0.7799          0.0292          0.43343          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.467  3.4666 3.5333 3.6668 2.1344 2.2669 2.2    2.067   2.1334 2.2002 4.8663 5.133  4.7332 4.666  4.733  4.866  5.2665 5.5332   5.3333 5.3333 5.3333 5.2001 2.4665 2.8676 2.8007 2.6663 2.5331 2.6667   1.5997 1.6667 1.5999 1.6668 1.5995 1.5333 2.     2.3332 2.1333 2.1334   1.9331 2.1333 3.0008 3.0667 3.2002 2.8667 2.8667 3.0001 5.1999 5.2   5.0669 5.1333 5.0661 5.3333]]
761                   0.46225         0.51608         0.19         0.77993          0.77993          0.0292          0.43303          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4001 3.8    3.4664 3.4663 3.5333 3.6669 2.1335 2.267  2.2002 2.0672   2.1337 2.2001 4.8669 5.1331 4.7331 4.6664 4.7334 4.8666 5.2665 5.5334   5.3333 5.3333 5.3337 5.2002 2.4665 2.8664 2.8002 2.6663 2.5327 2.6664   1.6004 1.6668 1.5999 1.6667 1.6003 1.5341 2.0001 2.3333 2.1335 2.1335   1.9331 2.1332 3.0002 3.0666 3.2001 2.8667 2.8669 3.     5.1998 5.2   5.0662 5.1337 5.0667 5.3334]]
762                   0.46226         0.51614         0.19003         0.77992          0.77992          0.0292          0.43362          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.8    3.4665 3.4665 3.5331 3.6669 2.1336 2.2665 2.2006 2.0668   2.1331 2.2001 4.8661 5.1333 4.7332 4.6666 4.7332 4.8663 5.2665 5.5335   5.333  5.3334 5.3333 5.2    2.4668 2.8668 2.7997 2.6666 2.5334 2.6666   1.5998 1.6674 1.5994 1.6667 1.5999 1.5334 2.0001 2.3334 2.1332 2.1332   1.9337 2.1334 3.0001 3.0673 3.1999 2.8671 2.8667 3.     5.2001 5.2016   5.0661 5.1333 5.0664 5.3333]]
763                   0.46226         0.51606         0.18999         0.77992          0.77992          0.0292          0.43322          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8    3.4667 3.4664 3.5331 3.6664 2.1339 2.2671 2.2002 2.0666   2.134  2.2009 4.8665 5.133  4.7332 4.666  4.7331 4.8664 5.2671 5.5339   5.3332 5.3334 5.333  5.2    2.4667 2.8665 2.7998 2.6663 2.5333 2.6667   1.6005 1.6669 1.6009 1.6667 1.6004 1.5334 1.9998 2.3336 2.1334 2.1334   1.9333 2.1333 3.     3.0665 3.2    2.8665 2.8666 2.9999 5.1999 5.1998   5.0667 5.1334 5.0664 5.3331]]
764                   0.46225         0.51611         0.19002         0.77993          0.77993          0.0292          0.43322          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7998 3.466  3.4665 3.533  3.6669 2.1335 2.267  2.2    2.067   2.1334 2.2005 4.8667 5.1332 4.7332 4.6665 4.7334 4.8664 5.267  5.5333   5.3334 5.3334 5.3334 5.1999 2.4669 2.8666 2.7998 2.6665 2.5333 2.6666   1.6002 1.6669 1.5994 1.6676 1.6    1.5338 2.0001 2.3334 2.1333 2.1333   1.9334 2.1334 3.     3.0669 3.2002 2.8666 2.8667 3.0001 5.2004 5.1999   5.0666 5.1333 5.0665 5.3335]]
765                   0.46223         0.51603         0.18998         0.77994          0.77994          0.0292          0.43318          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7999 3.4667 3.4666 3.5335 3.6663 2.1336 2.2676 2.1996 2.0672   2.133  2.2003 4.8665 5.1332 4.7331 4.6665 4.7333 4.8661 5.2666 5.5334   5.3335 5.3334 5.3334 5.2003 2.4664 2.8669 2.8001 2.6665 2.5332 2.6666   1.6007 1.667  1.5999 1.6658 1.6002 1.5337 2.0002 2.3336 2.1336 2.133   1.9334 2.1332 3.     3.0666 3.1999 2.8668 2.8668 2.9999 5.2    5.1998   5.0657 5.1334 5.0669 5.3335]]
766                   0.46214         0.51598         0.18997         0.77998          0.77998          0.02919          0.43333          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4003 3.7997 3.4668 3.4667 3.533  3.6663 2.1339 2.2669 2.2007 2.0675   2.1341 2.2001 4.8665 5.1332 4.7334 4.6671 4.7332 4.8663 5.2665 5.5332   5.3333 5.3328 5.3335 5.2001 2.4667 2.8665 2.7999 2.6669 2.5331 2.6667   1.6005 1.6663 1.6001 1.6667 1.6003 1.5335 2.0001 2.3338 2.1328 2.1332   1.9333 2.133  2.9995 3.0668 3.2003 2.8668 2.8668 2.9999 5.1998 5.2001   5.0667 5.1334 5.0667 5.3334]]
767                   0.46221         0.51606         0.18999         0.77995          0.77995          0.0292          0.43317          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.7999 3.4666 3.4667 3.5332 3.6663 2.1337 2.2667 2.2004 2.0669   2.1337 2.2004 4.8665 5.1326 4.7329 4.6665 4.7331 4.8666 5.2666 5.5335   5.3335 5.3334 5.3333 5.2001 2.4656 2.8663 2.8002 2.6665 2.5334 2.6666   1.6    1.6669 1.6003 1.6666 1.6    1.5338 1.9999 2.3333 2.1333 2.1334   1.9334 2.1334 3.0005 3.0668 3.1999 2.8665 2.8667 3.     5.2001 5.1993   5.0668 5.1332 5.0666 5.3333]]
768                   0.46219         0.51606         0.18999         0.77996          0.77996          0.02919          0.43337          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.7999 3.4671 3.4669 3.533  3.6667 2.1336 2.2662 2.2002 2.0666   2.1334 2.2003 4.8663 5.1329 4.7331 4.6664 4.7331 4.8665 5.2666 5.5336   5.3333 5.3337 5.3336 5.1999 2.4665 2.8665 2.8001 2.6665 2.5336 2.6673   1.6002 1.6669 1.5998 1.6666 1.6007 1.5334 1.9999 2.3332 2.1333 2.1333   1.933  2.1332 3.0002 3.0668 3.1997 2.8666 2.8667 3.     5.2003 5.2   5.0668 5.1332 5.0667 5.3332]]
769                   0.46227         0.51611         0.19001         0.77992          0.77992          0.0292          0.43357          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3995 3.7999 3.4664 3.4667 3.533  3.6662 2.1337 2.2673 2.2006 2.0662   2.1333 2.2003 4.8663 5.133  4.733  4.6664 4.7334 4.8665 5.2667 5.5334   5.3332 5.3334 5.3334 5.2002 2.4666 2.8666 2.8002 2.6668 2.5334 2.6667   1.5998 1.6669 1.6001 1.6668 1.6007 1.533  2.     2.333  2.1331 2.1333   1.9331 2.1333 2.9998 3.0668 3.2    2.8663 2.8663 3.0001 5.1998 5.2001   5.0666 5.1333 5.0665 5.3333]]
770                   0.46219         0.51603         0.18999         0.77996          0.77996          0.02919          0.43352          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4665 3.4664 3.5332 3.6667 2.1328 2.2673 2.1997 2.067   2.1335 2.2005 4.8665 5.1331 4.7332 4.6673 4.7334 4.8662 5.2665 5.5335   5.3333 5.3332 5.3333 5.2004 2.4665 2.8668 2.8    2.6666 2.5333 2.6667   1.6003 1.6668 1.6003 1.6669 1.6003 1.5332 2.0002 2.3331 2.1326 2.1336   1.9337 2.1335 3.     3.0669 3.2    2.8666 2.8665 2.9998 5.1996 5.2   5.0667 5.1333 5.0668 5.3331]]
771                   0.46223         0.51608         0.18999         0.77994          0.77994          0.02919          0.43327          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3991 3.7999 3.4664 3.4666 3.5332 3.6666 2.1338 2.2673 2.2003 2.0672   2.1336 2.2004 4.8665 5.1332 4.7332 4.6665 4.7333 4.8667 5.2665 5.5331   5.3334 5.333  5.3333 5.1999 2.4666 2.8664 2.8001 2.6666 2.5334 2.6665   1.6003 1.6666 1.6002 1.6667 1.6003 1.5338 2.     2.3332 2.1334 2.1336   1.9332 2.1335 3.     3.067  3.2    2.8671 2.8664 3.0003 5.2002 5.1999   5.0667 5.1332 5.0666 5.3331]]
772                   0.46218         0.51604         0.18999         0.77996          0.77996          0.02919          0.43343          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.7999 3.4664 3.4665 3.5336 3.6664 2.1342 2.267  2.2004 2.0675   2.1335 2.2013 4.8661 5.1331 4.7333 4.6663 4.7334 4.8665 5.2665 5.5333   5.3333 5.3332 5.3333 5.2002 2.4665 2.8668 2.7999 2.6667 2.5338 2.666   1.5999 1.6668 1.6002 1.6667 1.6    1.5333 2.     2.3329 2.1329 2.1331   1.9335 2.1332 3.0003 3.0668 3.1998 2.8666 2.8667 3.0002 5.2001 5.1997   5.0663 5.1334 5.0664 5.3333]]
773                   0.46226         0.51608         0.19         0.77992          0.77992          0.0292          0.43382          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4669 3.467  3.5333 3.6664 2.1333 2.2669 2.2    2.0668   2.1341 2.2    4.8662 5.1329 4.7333 4.6661 4.7331 4.8663 5.2667 5.5335   5.3338 5.3335 5.3332 5.2001 2.4667 2.8673 2.8    2.6669 2.5332 2.6667   1.6001 1.6663 1.5997 1.667  1.6004 1.5326 2.     2.333  2.1332 2.1333   1.9334 2.1332 2.9997 3.0669 3.2003 2.8665 2.8665 3.0001 5.1998 5.1998   5.0664 5.1328 5.0662 5.3332]]
774                   0.46223         0.51606         0.19         0.77994          0.77994          0.0292          0.43323          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.8001 3.4663 3.4668 3.5331 3.6665 2.1336 2.2673 2.2004 2.0667   2.1335 2.2007 4.8665 5.1332 4.7329 4.6664 4.7333 4.8662 5.2667 5.5332   5.3331 5.3334 5.3334 5.1999 2.4671 2.8665 2.7998 2.6667 2.5333 2.6667   1.6003 1.6668 1.6003 1.667  1.6003 1.5335 2.0001 2.3333 2.1334 2.1333   1.9331 2.133  3.0002 3.0663 3.2001 2.8666 2.867  2.9999 5.1999 5.2001   5.0667 5.1332 5.0666 5.3333]]
775                   0.4622         0.51607         0.18999         0.77995          0.77995          0.02919          0.43347          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.7992 3.4666 3.4665 3.5332 3.667  2.1337 2.2673 2.2006 2.0673   2.134  2.2002 4.8662 5.1331 4.7332 4.6661 4.7334 4.8665 5.2666 5.5329   5.3332 5.3331 5.3334 5.2    2.4667 2.8667 2.7998 2.6664 2.5327 2.6666   1.6    1.6669 1.6    1.6672 1.6006 1.5335 2.     2.3331 2.1332 2.1333   1.9332 2.1333 3.     3.0671 3.1997 2.8666 2.8664 3.0003 5.1999 5.1998   5.0666 5.1332 5.0666 5.3332]]
776                   0.46213         0.516         0.18997         0.77998          0.77998          0.02919          0.43327          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4003 3.8    3.4666 3.4668 3.5334 3.6663 2.1339 2.2669 2.2003 2.0673   2.1341 2.2003 4.8666 5.1331 4.733  4.6664 4.7332 4.8664 5.2668 5.5335   5.3329 5.3334 5.3333 5.2002 2.4666 2.8661 2.8001 2.6666 2.5335 2.6666   1.6003 1.6666 1.5998 1.6667 1.6003 1.5334 2.0003 2.3332 2.1334 2.1333   1.9335 2.1334 2.9997 3.0666 3.1999 2.8667 2.8667 3.     5.2    5.1998   5.0667 5.1334 5.0665 5.3333]]
777                   0.46214         0.51599         0.18996         0.77998          0.77998          0.02919          0.43283          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.7999 3.4664 3.4667 3.5333 3.6669 2.1339 2.2661 2.2    2.0665   2.1338 2.2002 4.8667 5.1327 4.7334 4.6665 4.7329 4.8665 5.2668 5.5333   5.3334 5.3331 5.3334 5.2002 2.4666 2.8666 2.8    2.6667 2.5328 2.6665   1.6001 1.6663 1.6003 1.6668 1.6001 1.5342 1.9999 2.3335 2.1333 2.1332   1.9334 2.1331 2.9999 3.0665 3.2001 2.8673 2.8668 2.9997 5.1999 5.2   5.0666 5.1334 5.067  5.333 ]]
778                   0.46214         0.51597         0.18995         0.77998          0.77998          0.02919          0.43353          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7997 3.4668 3.4666 3.5335 3.6665 2.134  2.2665 2.1999 2.0673   2.1341 2.2005 4.8666 5.1331 4.7328 4.667  4.7334 4.8666 5.2662 5.5331   5.3333 5.3333 5.3335 5.2001 2.4666 2.8667 2.8001 2.6666 2.5327 2.6666   1.6002 1.6666 1.6007 1.6669 1.6005 1.5334 2.     2.3332 2.1333 2.1329   1.9332 2.133  3.     3.0668 3.1998 2.8666 2.8668 3.     5.1999 5.1998   5.0667 5.1331 5.0667 5.3331]]
779                   0.46223         0.51612         0.19002         0.77994          0.77994          0.0292          0.43343          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.7994 3.466  3.4663 3.5333 3.6665 2.1332 2.2675 2.2004 2.0672   2.1334 2.201  4.8667 5.1332 4.7334 4.6666 4.7325 4.8663 5.2667 5.5335   5.3334 5.3335 5.333  5.2004 2.4664 2.8667 2.7996 2.6667 2.5335 2.667   1.5996 1.667  1.6002 1.667  1.6004 1.5331 2.0001 2.3334 2.1335 2.1335   1.9333 2.1334 2.9999 3.0665 3.1999 2.8666 2.8671 3.0002 5.2    5.1997   5.0663 5.133  5.0668 5.3334]]
780                   0.4622         0.51606         0.18999         0.77995          0.77995          0.02919          0.43318          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3999 3.8002 3.4666 3.4667 3.5333 3.6666 2.1339 2.2671 2.1999 2.0672   2.1334 2.2007 4.8665 5.1331 4.7331 4.6668 4.7332 4.8666 5.2667 5.5333   5.3334 5.3336 5.3332 5.2    2.4666 2.8666 2.7998 2.6664 2.5336 2.6667   1.6002 1.6668 1.5997 1.6665 1.6002 1.5336 2.0001 2.3333 2.1336 2.1333   1.9334 2.1334 3.     3.0665 3.2001 2.8666 2.8667 3.     5.2    5.2002   5.0663 5.1327 5.0668 5.3332]]
781                   0.46221         0.51608         0.19         0.77995          0.77995          0.0292          0.43347          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7993 3.4665 3.4664 3.5333 3.6666 2.1338 2.2673 2.2009 2.0667   2.1338 2.2005 4.8664 5.1332 4.7334 4.6668 4.733  4.867  5.2665 5.5335   5.3333 5.3337 5.3335 5.2001 2.4667 2.8665 2.8    2.6669 2.5336 2.6666   1.6    1.6669 1.6003 1.6664 1.6003 1.5334 1.9999 2.3338 2.1333 2.1333   1.9338 2.1332 3.0001 3.067  3.1999 2.8666 2.8667 2.9999 5.2003 5.2001   5.0667 5.1333 5.0664 5.3334]]
782                   0.46229         0.51606         0.19001         0.77991          0.77991          0.0292          0.43342          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4662 3.4667 3.5338 3.6664 2.1336 2.2677 2.2004 2.0668   2.1336 2.2005 4.8662 5.1333 4.7331 4.6658 4.7334 4.8664 5.2671 5.5333   5.3333 5.3333 5.3333 5.1996 2.4667 2.8672 2.8    2.6666 2.5334 2.6665   1.6    1.6667 1.6004 1.6669 1.6003 1.5334 2.     2.3334 2.1332 2.1335   1.9334 2.1331 3.     3.0669 3.1999 2.8666 2.8665 3.     5.2    5.2   5.0667 5.1335 5.0671 5.3331]]
783                   0.46216         0.51603         0.18998         0.77997          0.77997          0.02919          0.43357          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4004 3.7997 3.4665 3.4664 3.5329 3.6667 2.1338 2.267  2.1999 2.068   2.1338 2.2008 4.8663 5.1331 4.7334 4.6667 4.7332 4.8666 5.2665 5.5332   5.3336 5.3333 5.3334 5.1999 2.4666 2.8666 2.7995 2.6665 2.5332 2.6663   1.5999 1.6664 1.6003 1.6665 1.5998 1.5333 1.9995 2.3334 2.1333 2.1331   1.9336 2.1332 2.9999 3.0671 3.1999 2.8666 2.8667 2.9999 5.1998 5.2001   5.0668 5.1334 5.0666 5.3336]]
784                   0.46212         0.516         0.18997         0.77999          0.77999          0.02919          0.43322          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8    3.4665 3.4664 3.5331 3.6665 2.1338 2.2661 2.2004 2.0672   2.1339 2.2002 4.8668 5.1329 4.7331 4.6668 4.7332 4.8663 5.2669 5.5335   5.3334 5.3333 5.3334 5.2001 2.4668 2.8663 2.7999 2.6665 2.5334 2.6666   1.5999 1.6668 1.5999 1.667  1.6001 1.5335 2.     2.3328 2.1332 2.1333   1.9334 2.1333 3.     3.0666 3.2001 2.8666 2.8669 3.     5.1999 5.2001   5.0668 5.1333 5.0666 5.3331]]
785                   0.46225         0.51605         0.18998         0.77993          0.77993          0.0292          0.43317          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3997 3.8    3.4665 3.4665 3.533  3.6671 2.1336 2.2668 2.1997 2.0667   2.1336 2.1999 4.8664 5.1331 4.7327 4.6658 4.7333 4.8665 5.2673 5.5333   5.3333 5.3331 5.3332 5.1998 2.4664 2.8667 2.8    2.6666 2.5334 2.6666   1.5999 1.6666 1.6001 1.6663 1.6004 1.5336 2.     2.3334 2.1334 2.1334   1.9335 2.1334 3.0001 3.0666 3.1996 2.8667 2.8664 3.0001 5.2    5.1994   5.0666 5.1334 5.0666 5.3333]]
786                   0.46232         0.51621         0.19005         0.77989          0.77989          0.0292          0.43357          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.7998 3.4665 3.4662 3.5326 3.6665 2.133  2.2671 2.2009 2.0664   2.1333 2.2012 4.8663 5.1334 4.7331 4.6663 4.7329 4.8662 5.2669 5.5333   5.3334 5.3332 5.3334 5.2001 2.4665 2.8666 2.7998 2.6665 2.5332 2.6669   1.5999 1.6668 1.5997 1.667  1.5998 1.5335 1.9998 2.3333 2.1332 2.1336   1.9335 2.1335 3.0002 3.0673 3.1999 2.8665 2.8666 3.0002 5.2002 5.1998   5.0663 5.1331 5.0657 5.3334]]
787                   0.46227         0.5161         0.19001         0.77992          0.77992          0.0292          0.43377          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8003 3.4669 3.4666 3.5331 3.6668 2.1335 2.2667 2.2001 2.0668   2.1343 2.2006 4.8665 5.1331 4.7329 4.6668 4.7332 4.8665 5.2666 5.5333   5.3334 5.3333 5.3333 5.1999 2.467  2.867  2.8002 2.6667 2.5332 2.6663   1.6004 1.6666 1.6001 1.6667 1.5998 1.5326 1.9999 2.3333 2.1331 2.1335   1.9334 2.1334 3.0002 3.0668 3.2002 2.8667 2.8669 2.9997 5.1998 5.2   5.0664 5.1332 5.0663 5.3336]]
788                   0.46231         0.51613         0.19003         0.7799          0.7799          0.0292          0.43323          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4001 3.8002 3.4664 3.466  3.5335 3.6664 2.1334 2.2673 2.2006 2.0677   2.1336 2.2007 4.8662 5.1332 4.7328 4.6664 4.7327 4.8663 5.2667 5.5334   5.3333 5.3329 5.3334 5.2001 2.4669 2.8673 2.8    2.6667 2.5333 2.6665   1.6001 1.6668 1.5992 1.6668 1.6    1.5335 2.0001 2.3332 2.1329 2.1334   1.9329 2.1335 3.     3.0666 3.2002 2.8665 2.8664 2.9995 5.2    5.1999   5.0665 5.1335 5.0666 5.3333]]
789                   0.46214         0.51604         0.18998         0.77998          0.77998          0.02919          0.43323          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3995 3.7999 3.4668 3.4668 3.5326 3.6667 2.1347 2.2672 2.2002 2.0675   2.1328 2.2003 4.8666 5.1329 4.7332 4.6668 4.733  4.8666 5.2665 5.5333   5.3332 5.3334 5.3334 5.2    2.4665 2.8663 2.7993 2.6671 2.5333 2.6665   1.5997 1.6664 1.6    1.6664 1.6003 1.5337 2.     2.3333 2.1331 2.1334   1.9333 2.1334 3.0001 3.0667 3.1997 2.8668 2.8668 2.9994 5.1999 5.2   5.0665 5.1334 5.0666 5.3333]]
790                   0.46219         0.516         0.18997         0.77995          0.77995          0.02919          0.43357          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3998 3.8002 3.4666 3.4663 3.5333 3.6666 2.134  2.2667 2.2001 2.0668   2.1335 2.1997 4.8657 5.1332 4.7336 4.6667 4.7329 4.8664 5.2667 5.5333   5.3332 5.3334 5.3335 5.2001 2.4663 2.8662 2.8    2.6667 2.5333 2.6664   1.6004 1.6666 1.6007 1.6666 1.5998 1.5331 2.     2.3334 2.1333 2.1332   1.9333 2.1331 3.0001 3.0669 3.2    2.8666 2.8671 3.     5.2001 5.1999   5.0661 5.1334 5.0667 5.3326]]
791                   0.46218         0.51607         0.19         0.77996          0.77996          0.02919          0.43343          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4667 3.4666 3.5334 3.6663 2.1335 2.2667 2.2005 2.0676   2.1336 2.2004 4.8663 5.1329 4.7333 4.6664 4.7333 4.8664 5.2664 5.5335   5.334  5.3333 5.3334 5.2002 2.4665 2.8659 2.8004 2.6664 2.5333 2.6666   1.5997 1.667  1.6    1.6666 1.6001 1.5334 1.9998 2.3333 2.1334 2.1334   1.9335 2.1334 3.     3.0667 3.1999 2.8667 2.8668 2.9999 5.1998 5.2001   5.0664 5.133  5.0664 5.3335]]
792                   0.46233         0.51612         0.19001         0.77989          0.77989          0.0292          0.43327          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3999 3.8    3.4667 3.4667 3.5333 3.6665 2.1331 2.267  2.2005 2.0673   2.1336 2.2004 4.8662 5.1342 4.7333 4.6665 4.733  4.8666 5.2666 5.5332   5.3333 5.3334 5.3334 5.1998 2.4663 2.8661 2.8    2.6663 2.5333 2.6666   1.6    1.6666 1.6003 1.6674 1.6002 1.5337 2.0001 2.3331 2.1336 2.1334   1.9332 2.1332 2.9999 3.0669 3.2008 2.866  2.8669 3.     5.2    5.1999   5.0666 5.133  5.0667 5.3334]]
793                   0.46222         0.51606         0.18999         0.77994          0.77994          0.0292          0.43362          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.7999 3.4667 3.4667 3.5328 3.6666 2.1337 2.2676 2.2001 2.0669   2.1339 2.2002 4.8663 5.1331 4.7328 4.6666 4.7332 4.8664 5.2666 5.5335   5.3332 5.3331 5.3335 5.2002 2.4667 2.8661 2.8004 2.6667 2.5333 2.6666   1.6006 1.6667 1.6    1.6671 1.6007 1.5334 2.     2.3334 2.1333 2.1334   1.9334 2.1333 2.9999 3.0673 3.2002 2.8667 2.8669 2.9997 5.2    5.1997   5.0668 5.1334 5.0664 5.3333]]
794                   0.46217         0.51607         0.19         0.77996          0.77996          0.02919          0.43323          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4006 3.8    3.4668 3.4663 3.5332 3.6663 2.1338 2.2673 2.2007 2.0667   2.1338 2.2014 4.8663 5.1329 4.7332 4.6666 4.7329 4.8664 5.2664 5.5333   5.3332 5.3334 5.3332 5.2005 2.4665 2.8666 2.7999 2.6668 2.5334 2.6669   1.6001 1.6666 1.5997 1.6667 1.6004 1.5338 1.9998 2.3332 2.1335 2.1332   1.9334 2.1334 2.9999 3.0666 3.2    2.8665 2.8667 3.     5.1999 5.2005   5.0666 5.1332 5.0665 5.3329]]
795                   0.46222         0.51609         0.19001         0.77994          0.77994          0.0292          0.43332          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.7998 3.4661 3.4666 3.5332 3.6665 2.1333 2.2669 2.1999 2.0663   2.134  2.2004 4.8666 5.1331 4.7332 4.6665 4.7331 4.8667 5.2668 5.5333   5.3329 5.3334 5.3335 5.2003 2.466  2.8666 2.8001 2.667  2.5331 2.6667   1.5993 1.6668 1.5998 1.6667 1.5999 1.5335 1.9998 2.333  2.1334 2.133   1.9332 2.1334 3.0001 3.0668 3.1999 2.8668 2.867  3.     5.1998 5.2   5.0668 5.1332 5.0668 5.3331]]
796                   0.46223         0.51605         0.18999         0.77994          0.77994          0.0292          0.43338          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3998 3.7999 3.4667 3.4668 3.5329 3.6665 2.1335 2.2665 2.1998 2.0665   2.1339 2.2002 4.8661 5.1334 4.7328 4.6665 4.7331 4.8665 5.2666 5.5333   5.3336 5.3335 5.3333 5.2004 2.4662 2.8669 2.7999 2.6665 2.5345 2.6665   1.6001 1.6662 1.6002 1.6674 1.6    1.5333 2.0002 2.3334 2.1328 2.1334   1.9334 2.1332 3.0004 3.0667 3.2001 2.8668 2.8664 3.     5.2001 5.1998   5.0665 5.1331 5.0661 5.3332]]
797                   0.46228         0.5161         0.19001         0.77991          0.77991          0.0292          0.43327          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4    3.8001 3.4666 3.4667 3.5333 3.6664 2.1333 2.2674 2.2    2.067   2.1334 2.2009 4.8667 5.1333 4.7332 4.6662 4.7329 4.8668 5.2669 5.5333   5.3333 5.3334 5.3334 5.2001 2.4665 2.8667 2.8003 2.6667 2.5333 2.6666   1.6004 1.6671 1.6005 1.6668 1.6001 1.5333 2.     2.3333 2.1332 2.1332   1.9333 2.1334 3.     3.0665 3.2001 2.8666 2.8666 3.0003 5.2001 5.2   5.0666 5.1334 5.0664 5.333 ]]
798                   2.61015         1.42785         0.61025         -0.24267          -0.09686          0.15607          1.41178          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.5949 3.0828 3.4053 3.6278 3.4705 3.6897 3.6839 3.7706 3.7817 3.6989   3.6921 3.6451 4.1091 3.9598 4.0341 3.8535 3.99   4.072  3.4598 3.8408   3.5751 3.7003 3.3928 3.5816 4.0581 4.0745 4.0095 4.1923 3.9683 4.0724   4.2652 4.1052 4.0747 4.2519 4.0832 4.3144 4.2115 3.962  3.803  3.8947   3.899  4.2189 4.3657 4.0845 4.125  4.0689 4.2101 4.0751 4.2915 4.272   4.1096 4.2185 4.1242 4.4346]]
799                   2.58629         1.42849         0.60848         -0.23131          -0.09775          0.15493          1.3794          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.2396 3.5958 3.4966 3.2988 3.317  3.5617 3.9334 3.8633 3.5081 3.6733   3.6571 3.8015 3.7844 4.0291 4.0234 3.71   3.9598 4.0314 3.4681 3.7944   3.6428 3.7374 3.5889 3.575  4.051  4.0141 4.0463 3.9674 4.0057 4.0341   4.3099 4.1214 4.3757 4.2584 4.259  4.2602 4.1344 3.6952 3.6755 3.7031   3.734  3.854  4.2434 4.1274 4.2134 4.0532 4.0412 4.0686 4.2458 4.3884   4.2814 4.2821 4.2378 4.2948]]
800                   2.65365         1.45798         0.6211         -0.26338          -0.1252          0.15865          1.4157          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.3326 3.3557 3.3143 3.2602 3.559  3.3969 3.8784 3.7535 3.749  3.6335   3.7691 3.9116 3.7963 4.0161 3.8418 3.8683 4.1606 3.7723 3.6783 3.6363   3.7806 3.6386 3.6435 3.7026 3.9047 4.1256 4.0127 4.0741 4.0101 4.0118   4.165  4.281  4.2193 4.2044 4.257  4.2912 4.0322 3.8158 4.0874 4.023   3.9548 3.9443 4.1552 4.0877 4.2404 4.1952 4.1842 4.1702 4.0542 4.2299   4.2563 4.0167 4.1208 4.1834]]
801                   2.58579         1.43564         0.61227         -0.23107          -0.1027          0.15544          1.38368          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.25   3.6909 3.3039 3.4927 3.3997 3.3775 3.8813 3.6639 3.7756 3.6407   3.7663 3.6104 3.751  4.0203 3.957  3.9093 3.692  3.8137 3.7245 3.5608   3.7397 3.6283 3.6619 3.5937 3.9384 4.0162 4.0215 4.0265 3.9508 4.0284   4.3303 4.1432 3.9993 4.2038 4.016  4.1972 3.8563 4.0493 3.9854 3.8036   4.0316 4.0343 4.1463 4.0577 4.2617 3.962  4.1107 4.1846 4.3619 4.0944   4.3652 4.3186 4.0845 4.2215]]
802                   2.34853         1.33913         0.50386         -0.11811          -0.11735          0.13242          1.38315          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8655 3.0588 2.9075 2.8075 3.0462 3.0353 3.2287 3.2517 3.3838 3.1875   3.2462 3.3189 3.3973 3.4349 3.4543 3.358  3.1988 3.0967 3.1065 3.1902   3.138  3.1192 3.1192 3.0879 3.4174 3.4673 3.4131 3.4154 3.413  3.4383   3.643  3.6861 3.6852 3.6136 3.7075 3.646  3.2598 3.2301 3.4918 3.1209   3.2352 3.4399 3.4702 3.4982 3.5046 3.3834 3.5563 3.5488 3.6754 3.6175   3.4984 3.5374 3.2311 3.6176]]
803                   2.28486         1.31821         0.49572         -0.0878          -0.08729          0.12871          1.35165          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4113 2.9577 2.9297 2.9663 3.0784 3.0881 3.2141 3.3426 3.3315 3.1979   3.3291 3.2347 3.2908 3.5267 3.3243 3.3744 3.1204 3.2745 3.2649 3.2981   2.9895 3.1465 3.0109 3.2111 3.385  3.4319 3.4538 3.4032 3.4347 3.446   3.7661 3.6186 3.5585 3.5315 3.6124 3.5526 3.1438 3.268  3.1783 3.3966   3.2283 3.1596 3.5519 3.5272 3.5925 3.5939 3.5604 3.632  3.6282 3.3879   3.5473 3.4918 3.3726 3.5349]]
804                   2.36971         1.34684         0.50457         -0.1282          -0.12687          0.13322          1.3573          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8875 2.9784 2.931  3.0446 2.8491 3.2046 3.2676 3.4141 3.2569 3.2351   3.2661 3.2794 3.3841 3.2236 3.2485 3.0582 3.0682 3.2647 3.2034 3.2298   3.051  3.0506 3.0516 3.0608 3.4074 3.4549 3.4237 3.4308 3.399  3.4408   3.5761 3.5527 3.6643 3.5928 3.6703 3.5081 3.3394 3.3638 3.3403 3.1278   3.4274 3.3743 3.5916 3.4855 3.6157 3.5407 3.4588 3.3261 3.5993 3.5316   3.5115 3.3347 3.6176 3.6031]]
805                   2.28231         1.3198         0.49572         -0.08659          -0.08584          0.12877          1.3869          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9011 3.0108 2.9972 3.1565 2.8729 2.9731 3.294  3.223  3.3659 3.2158   3.1952 3.3393 3.2265 3.3436 3.2885 3.2641 3.2289 3.3419 3.0508 3.0511   3.2488 3.1129 2.9316 3.3047 3.4276 3.4606 3.4156 3.3937 3.4312 3.4329   3.6905 3.4453 3.6622 3.5274 3.6403 3.6729 3.2915 3.2022 3.3323 3.5699   3.2663 3.0985 3.5572 3.3932 3.6366 3.5515 3.5174 3.4604 3.5921 3.5545   3.597  3.6041 3.5409 3.6303]]
806                   2.16408         1.26023         0.48452         -0.0303          -0.03014          0.12426          1.25133          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3522 3.7724 3.3102 3.4689 3.3567 3.3859 3.5154 3.5266 3.5431 2.057   2.1709 3.5521 4.8388 3.4988 3.349  4.6275 4.7273 3.4109 3.2123 5.5309   3.2322 3.2293 3.2246 2.9673 3.3949 3.435  2.8216 3.4139 3.4058 3.4165   3.5525 3.5562 3.5148 3.5371 3.5506 3.5035 3.2442 3.4053 3.3553 3.3387   2.4016 3.3334 3.329  3.0684 3.2469 3.305  2.8907 3.3265 3.2415 3.2586   3.2092 3.2342 3.2114 3.29  ]]
807                   1.98641         1.17653         0.44883         0.05429          0.05509          0.11288          1.19227          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3085 3.4416 3.4109 3.3562 3.524  3.3976 3.5317 3.5498 3.5112 3.4971   3.5198 3.5078 4.8345 3.4875 4.6773 3.3046 4.7134 3.4181 3.1965 5.5314   5.3605 3.229  3.2259 3.1953 3.4096 3.4305 3.433  3.4124 2.5282 2.6306   3.515  1.7232 3.5362 3.5692 3.543  1.4931 3.297  3.411  3.3293 3.3329   3.2566 3.344  3.0103 3.191  3.3828 3.2971 3.3043 3.3214 3.2453 3.2419   3.2222 3.2104 3.2219 3.3124]]
808                   2.25863         1.30069         0.50375         -0.07531          -0.07155          0.12984          1.31895          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3023 3.7802 3.319  3.3412 3.353  3.4036 3.5123 3.5594 3.5317 3.5054   3.4914 3.5409 3.3784 3.4995 3.345  3.333  4.7374 4.8197 3.2234 5.5328   3.2163 3.243  3.2271 3.2056 2.5746 3.4439 3.4302 3.4065 2.5806 3.413   3.5319 3.5733 3.5328 3.5462 3.5367 3.5404 3.2905 3.4306 3.3055 3.3324   3.2001 3.38   3.0083 3.3493 3.5614 3.3126 3.3057 3.0513 3.2894 5.1447   3.2449 3.2264 3.2384 3.2849]]
809                   2.14225         1.25377         0.47397         -0.0199          -0.01988          0.1209          1.23562          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2677 3.4704 3.3223 3.3219 3.3574 3.3946 3.4982 2.22   3.5163 3.4769   3.5061 3.5343 3.3971 3.4937 3.3566 4.6696 3.3017 4.8534 3.2511 5.535   3.2361 3.2457 3.2389 3.2039 3.4009 3.4394 3.4321 2.6457 3.4048 3.434   3.5225 3.5199 3.5409 3.5649 3.5267 3.5145 1.9989 3.3951 3.3304 2.6223   3.2642 3.3066 3.3389 3.3406 3.3874 3.3025 3.2849 3.3166 3.2731 3.2481   3.2176 3.2369 3.2062 3.3458]]
810                   2.36583         1.3528         0.51027         -0.12635          -0.12617          0.13323          1.3298          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1723 3.3185 3.1718 3.1895 3.2172 3.2975 3.435  3.4889 3.443  3.4108   3.4184 3.4436 3.363  3.5059 3.308  3.2822 3.2606 3.3537 3.1651 3.2223   3.1735 3.1641 3.1913 3.127  3.4255 3.4524 3.4421 3.4296 3.4338 3.4331   3.5596 3.5781 3.5692 3.5855 3.5894 3.5613 3.3111 3.4385 3.3065 3.3359   3.2187 3.3237 3.4255 3.4034 3.4344 3.3887 3.3815 3.4134 3.3262 3.3385   3.2958 3.3493 3.328  3.4269]]
811                   2.35063         1.35229         0.51067         -0.11911          -0.11903          0.13257          1.3603          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1801 3.3506 3.1963 3.1572 3.1694 3.2705 3.4453 3.4691 3.4196 3.4317   3.4366 3.4388 3.4106 3.4457 3.317  3.2898 3.2963 3.3503 3.2155 3.255   3.1643 3.2042 3.2336 3.1907 3.4111 3.4448 3.4395 3.4427 3.421  3.4435   3.5669 3.556  3.5837 3.5774 3.6035 3.5483 3.3225 3.4172 3.3708 3.3119   3.3022 3.3498 3.4122 3.4354 3.4733 3.3858 3.3279 3.4256 3.3292 3.3586   3.2867 3.3435 3.2757 3.4503]]
812                   2.32925         1.34537         0.50881         -0.10894          -0.1089          0.13154          1.29145          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1538 3.3256 3.1808 3.1954 3.1861 3.2742 3.428  3.466  3.4464 3.4154   3.4728 3.4918 3.4255 3.5205 3.3174 3.2823 3.364  3.4088 3.2053 3.2586   3.1695 3.1987 3.2386 3.1964 3.4176 3.4609 3.4577 3.4699 3.4317 3.4547   3.564  3.5938 3.5843 3.6003 3.5451 3.5988 3.289  3.4063 3.2652 3.2632   3.2914 3.3177 3.401  3.4302 3.4188 3.371  3.4    3.4113 3.3704 3.3595   3.2794 3.3779 3.3457 3.4101]]
813                   2.34062         1.34599         0.50891         -0.11435          -0.11427          0.13208          1.3445          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.162  3.315  3.2237 3.1801 3.209  3.2602 3.4391 3.4637 3.4317 3.4369   3.4589 3.4407 3.3979 3.4955 3.3198 3.3188 3.3066 3.382  3.2057 3.2435   3.2109 3.2431 3.207  3.136  3.4086 3.456  3.4532 3.4468 3.4281 3.4346   3.6132 3.5955 3.5852 3.595  3.5663 3.5773 3.2253 3.3832 3.3494 3.3273   3.2315 3.3396 3.3739 3.4243 3.4399 3.3777 3.3661 3.4139 3.3448 3.3664   3.3026 3.3511 3.3121 3.4091]]
814                   2.36952         1.35876         0.51867         -0.12811          -0.12796          0.13481          1.38885          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.0962 2.9747 2.8589 2.9676 2.9459 2.9102 3.3234 3.3771 3.3354 3.5062   3.1976 3.5042 3.2428 3.1904 3.1341 3.2027 3.4982 3.2093 3.2052 3.2021   3.325  3.0695 3.3085 3.0548 3.429  3.5218 3.5455 3.525  3.5184 3.6049   3.64   3.7687 3.6298 3.8712 3.5405 3.6993 3.4207 3.267  3.4123 3.3654   3.3655 3.4524 3.5161 3.6258 3.6412 3.5072 3.5801 3.6807 3.708  3.6899   3.6042 3.6536 3.4392 3.7586]]
815                   2.30243         1.33656         0.51585         -0.09617          -0.09534          0.13217          1.31223          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.1853 3.2676 2.9054 3.218  2.8071 3.0483 3.3069 3.4508 3.3237 3.5303   3.1963 3.1984 3.4112 3.3777 3.177  3.3718 3.3978 3.3659 3.2633 3.2317   3.1754 3.2294 3.2682 3.3317 3.4316 3.4837 3.5003 3.5603 3.4942 3.49   3.6285 3.7478 3.6909 3.7114 3.6293 3.7856 3.3206 3.4626 3.3574 3.5867   3.0779 3.4729 3.6423 3.7554 3.5735 3.4958 3.5719 3.5386 3.5807 3.8018   3.5865 3.6365 3.6018 3.6565]]
816                   2.39173         1.36188         0.52537         -0.13868          -0.13768          0.13697          1.43325          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.0452 3.1094 2.9933 2.9607 2.8844 2.9232 3.3216 3.4886 3.2817 3.2629   3.2466 3.4548 3.3454 3.4318 3.6486 3.1109 3.2896 3.2797 3.1862 3.2075   3.0453 3.2815 3.0766 3.3201 3.5416 3.4807 3.6691 3.5324 3.4656 3.5659   3.7529 3.576  3.8984 3.7782 3.6582 3.6967 3.4215 3.4911 3.5081 3.5245   3.3899 3.4801 3.6247 3.6794 3.6302 3.6563 3.525  3.587  3.5883 3.5133   3.4535 3.7812 3.7467 3.7291]]
817                   2.25487         1.32318         0.5083         -0.07352          -0.07211          0.12912          1.26938          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.1333 3.1171 3.1125 3.1575 3.0132 2.9541 3.185  3.3007 3.3687 3.2994   3.4668 3.127  3.5225 3.5476 3.4126 3.3971 3.4044 3.4104 3.0549 3.3056   3.0972 3.1013 3.2522 3.2273 3.465  3.4756 3.5443 3.4906 3.5542 3.536   3.6584 3.7277 3.6391 3.5749 3.5708 3.7142 3.4233 3.3819 3.4417 3.5781   3.4659 3.2825 3.7728 3.6297 3.6579 3.5324 3.7624 3.5677 3.7019 3.7954   3.6508 3.7717 3.54   3.7303]]
818                   2.33381         1.33414         0.49798         -0.11111          -0.10943          0.13103          1.3336          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8026 3.0275 2.8347 3.1183 2.9383 3.0193 3.3104 3.3755 3.2417 3.2046   3.269  3.3121 3.0832 3.3913 3.3657 3.2346 3.1263 3.3779 3.0926 3.1502   3.1863 3.0438 3.089  2.9366 3.3959 3.4587 3.4311 3.4242 3.4087 3.4408   3.5886 3.6136 3.6328 3.6096 3.5489 3.5529 3.4027 3.1905 3.0537 3.3551   3.2616 3.1767 3.4445 3.5112 3.6332 3.5436 3.3695 3.5288 3.5805 3.55   3.618  3.4996 3.4678 3.6374]]
819                   2.20189         1.31103         0.49325         -0.0483          -0.04802          0.12471          1.3202          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9518 2.9853 2.9367 2.9268 2.9849 2.9195 3.2873 3.269  3.3069 3.2727   3.35   3.3319 3.3683 3.4321 3.4082 3.5502 3.2154 3.1784 3.2208 3.3123   3.3435 3.1359 3.2907 3.1705 3.4094 3.4398 3.4457 3.4438 3.4306 3.4258   3.4365 3.7222 3.6734 3.4939 3.5051 3.665  3.3976 3.13   3.3085 3.2019   3.3774 3.1905 3.5808 3.4773 3.5814 3.4979 3.5178 3.5816 3.5723 3.6102   3.4774 3.5198 3.5958 3.5007]]
820                   2.28331         1.32913         0.49897         -0.08706          -0.08625          0.1289          1.35815          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9178 3.1987 2.9691 2.8441 2.9528 3.1707 3.2839 3.3377 3.2497 3.2266   3.2457 3.2398 3.2679 3.1539 3.4572 3.2953 3.3257 3.1272 3.0996 3.2112   3.1338 3.1469 3.0898 3.1904 3.4355 3.4324 3.4202 3.4353 3.4064 3.4335   3.673  3.6412 3.661  3.3823 3.5431 3.5573 3.2435 3.314  3.1527 3.3715   3.2072 3.3029 3.6274 3.6146 3.5806 3.5696 3.5327 3.4826 3.5167 3.6552   3.4015 3.5838 3.5725 3.5456]]
821                   2.33933         1.32845         0.50229         -0.11373          -0.11315          0.13214          1.30417          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0124 3.1398 2.8519 3.1496 2.933  2.9749 3.2411 3.2728 3.2133 3.2442   3.222  3.2874 3.4388 3.492  3.2868 3.2452 3.2025 3.4965 3.0411 3.1437   3.2368 2.9581 3.0645 3.0758 3.4108 3.4366 3.4353 3.4256 3.4333 3.4191   3.6757 3.7341 3.7043 3.5248 3.6893 3.6111 3.2028 3.452  3.1214 3.3373   3.1793 3.3661 3.4129 3.5792 3.5218 3.5445 3.5598 3.5545 3.6559 3.246   3.5187 3.6049 3.556  3.6513]]
822                   2.02879         1.22468         0.45837         0.03411          0.03412          0.11408          1.24973          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3121 3.4823 3.3065 3.371  3.5324 3.6667 3.5106 3.5467 3.5254 3.5   3.5048 3.5186 3.3876 3.4748 4.7356 3.3264 3.3416 3.3875 3.1985 3.2718   5.3278 3.1991 3.9336 3.1999 3.3915 3.4355 3.4451 3.4072 3.3932 3.4238   3.5694 3.5745 3.5269 3.5405 2.037  3.5392 1.9637 2.3314 3.3213 3.3147   3.2269 3.3359 3.3378 3.3559 3.2204 3.3005 3.2998 3.3218 3.2563 3.2598   3.1851 3.2458 3.2193 3.3022]]
823                   2.11517         1.24105         0.45122         -0.00701          0.00039          0.11634          1.22777          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3215 3.7972 3.3309 3.4657 3.493  3.422  3.5087 3.5576 3.5465 3.4687   3.4871 2.1553 3.3865 3.5083 3.3362 3.3136 4.7272 3.3735 3.2093 3.2809   3.224  3.2297 3.2165 3.2084 3.4006 3.4309 3.4383 3.4235 3.4054 3.4317   3.5364 1.646  3.531  3.5634 3.525  1.5683 3.245  3.3731 2.124  3.3204   1.9117 3.314  3.3118 3.3548 3.3737 2.884  3.3077 3.3426 3.2936 3.3072   3.2144 3.2432 3.2127 3.332 ]]
824                   1.88123         1.11536         0.42181         0.10436          0.10449          0.10673          1.10515          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2771 3.4743 3.4565 3.3197 3.3642 3.4087 2.1232 3.5387 3.541  3.5016   3.5205 2.144  3.391  3.498  3.3576 3.2964 4.7388 3.3996 3.2147 3.264   5.339  3.2086 3.2127 3.202  3.413  3.4571 3.4428 3.4164 3.4219 2.6466   3.5317 3.5383 1.6121 3.5531 1.6011 3.5026 3.271  3.3843 3.3414 3.3324   3.2531 3.2944 3.3295 3.3482 3.3862 3.3015 3.3167 2.9997 3.2784 3.2837   3.2338 3.2537 5.0159 5.2414]]
825                   1.94714         1.15657         0.43727         0.07299          0.07299          0.11035          1.07425          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3427 3.4238 3.3411 3.3501 3.3429 3.654  3.5062 3.5415 2.1906 3.4986   3.5111 3.5217 3.4041 3.48   4.7295 3.3006 4.7124 3.3722 3.2283 3.2753   3.2555 3.2116 3.2326 3.185  3.4021 3.4442 3.4265 3.4106 3.4191 3.4012   1.5872 3.5486 3.5375 3.5333 1.608  3.5202 3.2501 3.4223 3.3116 3.3467   3.262  3.3442 3.3897 3.1009 3.379  2.8771 2.9318 3.0365 5.2041 5.198   3.2298 3.22   3.2294 3.3233]]
826                   2.33056         1.34632         0.50917         -0.10956          -0.10948          0.13169          1.39415          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1304 3.3201 3.2324 3.1851 3.2032 3.31   3.4563 3.4705 3.451  3.4178   3.4612 3.4764 3.3513 3.4624 3.4046 3.2981 3.3185 3.3375 3.2438 3.2623   3.1812 3.1612 3.2373 3.1889 3.4305 3.4398 3.4449 3.4247 3.4296 3.4559   3.5859 3.5828 3.5441 3.5425 3.5159 3.5355 3.2473 3.4534 3.3701 3.3017   3.2239 3.4182 3.4089 3.4155 3.4383 3.3429 3.3526 3.3949 3.3408 3.3524   3.317  3.3465 3.381  3.3655]]
827                   2.34513         1.34962         0.50913         -0.11649          -0.11641          0.13214          1.35868          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1561 3.3155 3.1898 3.2266 3.2473 3.2882 3.4611 3.4544 3.4764 3.4233   3.4495 3.442  3.4282 3.4283 3.3129 3.2962 3.3488 3.3245 3.1935 3.2822   3.2219 3.1844 3.2017 3.2148 3.4187 3.4599 3.4609 3.449  3.437  3.4314   3.5654 3.5849 3.5637 3.6033 3.5665 3.6033 3.2994 3.3296 3.3278 3.2944   3.3137 3.3752 3.4246 3.4176 3.4561 3.3248 3.3606 3.3876 3.3183 3.3787   3.2589 3.3292 3.2586 3.4006]]
828                   2.3362         1.34401         0.50753         -0.11224          -0.11209          0.13176          1.35148          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1799 3.3317 3.1821 3.1765 3.2146 3.2555 3.4235 3.4673 3.4315 3.4228   3.4295 3.4352 3.4688 3.3902 3.3083 3.3239 3.3129 3.3284 3.1761 3.2353   3.159  3.2123 3.1714 3.1962 3.4126 3.4673 3.4394 3.4436 3.4257 3.4427   3.5422 3.6024 3.5109 3.5976 3.5852 3.5675 3.3016 3.4035 3.2845 3.3647   3.2781 3.3155 3.4248 3.4205 3.407  3.3635 3.3828 3.3962 3.349  3.3977   3.2873 3.2868 3.3481 3.4249]]
829                   2.36195         1.35454         0.51134         -0.1245          -0.12441          0.13313          1.36025          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1482 3.3505 3.184  3.2019 3.2318 3.2842 3.4712 3.4897 3.4519 3.4708   3.4259 3.438  3.3561 3.4417 3.2943 3.2751 3.2715 3.4006 3.1499 3.2361   3.1915 3.1522 3.2802 3.1516 3.4309 3.4615 3.4583 3.4328 3.4316 3.4358   3.5751 3.618  3.5763 3.5604 3.5713 3.5275 3.3692 3.4044 3.3547 3.3658   3.317  3.2883 3.3653 3.4418 3.4336 3.3445 3.3383 3.3835 3.3469 3.3793   3.3041 3.3436 3.3144 3.3905]]
830                   2.44265         1.33132         0.45549         -0.16292          -0.09443          0.13105          1.25737          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.5268 2.5123 2.5606 2.7507 2.5907 2.1576 2.8351 2.9321 2.8223 2.8893   2.9793 2.9491 2.9    3.0393 2.7999 2.9194 2.9905 2.8513 2.7929 3.0172   2.722  2.6118 2.9479 2.9231 3.0555 3.1036 3.0944 3.115  3.1388 3.1726   3.2734 3.2084 3.279  3.1816 3.1027 3.0202 3.2391 3.2874 3.0941 3.3177   3.0698 2.8826 3.1485 3.1153 3.1562 3.2565 2.9805 3.2569 3.2412 3.2656   3.2304 3.3536 3.2252 3.2978]]
831                   2.45425         1.33752         0.45783         -0.16844          -0.10437          0.13184          1.2931          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4819 2.6033 2.5838 2.8501 2.4392 2.6501 3.0222 2.9878 2.9841 2.9999   2.8713 2.8443 2.8842 3.0798 2.9346 2.8078 2.734  2.7452 2.8887 2.7598   2.8788 2.616  2.8469 2.9911 3.0683 3.169  3.0759 3.1392 3.0451 3.1445   3.1613 3.2656 3.2359 3.2957 3.1868 3.2683 3.1015 3.154  3.0501 3.0575   3.0809 2.8335 3.2044 3.2183 3.3179 3.2287 2.9341 3.2685 3.5123 3.2028   3.2371 3.4106 3.2045 3.2999]]
832                   2.32342         1.30414         0.44608         -0.10616          -0.04799          0.12428          1.3088          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.5011 2.7375 2.7124 2.67   2.8644 2.3303 2.9438 2.924  3.05   2.7651   2.8278 2.852  3.1233 3.1033 3.0525 2.9654 2.9528 2.9209 2.7994 2.7177   2.6441 2.8715 2.8895 2.9373 3.0694 3.1327 3.1868 3.093  3.0893 3.1394   3.2676 3.2412 3.37   3.1497 3.1864 3.3389 3.1472 2.8679 2.9793 2.8384   2.8605 2.7551 3.2947 3.353  3.3803 3.2962 3.0738 3.2859 3.2557 3.1713   3.5243 3.4318 3.447  3.4088]]
833                   2.41455         1.33107         0.45528         -0.14954          -0.09023          0.1292          1.25865          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6486 2.7771 2.8039 2.5851 2.7947 2.2514 2.989  2.8338 2.823  2.7968   2.8162 3.1138 3.0082 2.8519 2.6901 3.0926 3.0351 3.0707 2.8175 2.7786   2.6947 2.838  2.7109 2.7569 3.1429 3.1246 3.1476 3.1945 3.1011 3.1057   3.2309 3.3193 3.2925 3.2543 3.3826 3.3271 3.2288 2.8802 3.0453 2.8768   3.2451 2.9411 3.1237 3.3081 3.3212 3.196  3.2824 3.2428 3.3039 3.2559   3.3577 3.2847 3.3612 3.1496]]
834                   6.14841         1.98434         0.4987         -1.9272          -0.12307          0.44179          1.46653          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.7938 1.0684 1.2195 1.101  0.6554 1.7428 1.2877 1.0741 1.4518 1.3651   1.831  1.1981 1.3257 1.3269 1.1833 0.7236 1.8759 1.4759 1.1808 1.2469   1.4169 1.6453 1.4013 1.065  1.4402 1.6841 1.7288 1.1822 1.7658 1.8049   1.3534 1.4829 1.7094 1.7937 1.7259 1.1938 1.3995 1.2882 1.2601 1.8922   1.5514 1.2437 1.5835 1.6216 1.7961 1.8362 1.3851 1.625  1.7159 2.3762   1.0437 1.5477 1.552  1.3078]]
835                   5.97612         1.9816         0.51018         -1.84517          -0.07126          0.42305          1.70047          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.2023 1.1822 1.2707 0.7178 1.5471 1.2947 1.8388 0.5086 1.1409 1.2736   1.0465 1.0808 1.1485 1.6377 1.2077 1.2871 1.5808 1.0855 1.3295 1.758   1.3082 0.9832 1.5783 1.5161 1.7024 1.5101 1.782  1.8351 1.3346 1.4905   1.8101 1.2407 1.032  1.4474 2.0553 1.9174 2.3019 1.7394 1.5936 1.4043   1.2626 1.4558 1.7311 1.4439 1.3883 1.4608 1.8943 1.3611 1.5515 1.3851   2.2798 1.803  1.246  1.4466]]
836                   6.37011         2.07282         0.53593         -2.03275          -0.12991          0.4663          1.675          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.2041 1.1741 0.7838 1.0167 1.5169 1.2237 1.1283 1.247  1.7986 1.7358   1.1106 1.6555 1.0141 1.8015 1.8226 1.0902 1.2396 1.3858 1.7309 0.6843   1.3581 0.8861 1.3157 1.3291 1.3302 1.4768 1.2395 1.2529 1.5216 1.267   1.3136 2.1664 2.3393 1.5811 1.6555 1.1234 1.1019 1.2344 1.4526 1.2819   1.4695 0.9501 1.4185 1.9631 1.4149 1.4264 1.3483 1.2315 1.2623 1.6278   1.3242 1.286  1.5186 1.8775]]
837                   6.16551         1.98695         0.50015         -1.93534          -0.1168          0.44056          1.63667          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.7385 1.1155 1.7293 1.9135 1.2757 1.2298 1.4974 1.3758 1.2313 2.083   1.1632 1.5081 0.9017 1.164  1.6929 1.463  1.2606 0.9454 1.3316 0.976   0.7712 1.4759 1.269  1.2259 1.6423 1.3868 1.7621 1.3054 1.8105 1.9574   2.0832 1.0949 1.2996 1.2528 1.7674 1.3615 1.3886 1.3612 1.7095 0.9541   1.6456 1.8898 1.2495 1.3557 1.2818 1.7639 1.8182 1.5188 1.6648 1.5559   1.3487 1.5908 1.1101 1.859 ]]
838                   4.19881         1.69724         0.80086         -0.99901          -0.06418          0.23156          1.69495          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.1416 4.0443 4.2011 4.0137 4.2985 4.5009 4.5742 4.6169 4.6654 4.7911   5.1687 4.5193 4.7381 4.686  4.9633 5.098  4.9524 4.7445 4.0686 4.6738   4.6857 4.4936 4.8722 4.7851 5.0653 4.4985 4.68   4.6309 4.9561 4.8534   5.0771 4.7089 5.2454 5.0053 4.9064 5.3125 4.3456 4.553  5.4184 4.8007   4.8362 4.7632 4.893  4.8163 4.9574 5.3844 5.0224 5.275  5.2203 5.5163   5.0462 4.8479 5.0541 4.348 ]]
839                   4.3504         1.7424         0.81981         -1.07118          -0.09194          0.23748          1.60948          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6543 4.5288 4.0565 4.32   4.23   4.2853 4.5264 5.0221 4.1519 4.5879   4.4606 4.8022 4.9625 4.9256 4.8707 4.6184 4.9612 4.9954 4.3099 4.6779   4.6661 5.1114 4.3391 4.4214 4.8722 4.8399 5.2422 4.3389 4.7277 4.6263   4.9336 5.2946 4.6741 4.2992 4.9956 5.0297 4.8855 5.025  4.8612 5.3872   4.6267 4.8191 4.7974 5.3418 5.5447 5.1044 5.1431 5.3047 5.2896 5.6145   5.1622 5.1097 5.4534 5.2821]]
840                   4.6594         1.82307         0.85334         -1.2183          -0.19476          0.25015          1.86925          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.033  4.2755 4.5797 4.0342 4.4369 4.4499 4.4933 4.6335 4.9306 4.6482   4.8378 4.8042 4.5867 4.8063 5.1908 4.6234 4.8535 5.0087 4.541  4.511   4.2026 4.1256 4.7956 4.7775 4.9803 4.7643 5.0254 4.7266 5.2117 5.0137   5.3826 5.1324 5.399  5.1638 4.8606 5.1724 4.7225 5.0037 5.067  4.836   5.0568 4.9385 4.9185 5.1824 5.5171 4.9842 5.5268 4.7892 4.4502 5.5714   4.9759 4.6586 5.2179 5.4148]]
841                   4.57998         1.76301         0.83991         -1.18048          -0.15318          0.24703          1.71742          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8067 4.2988 4.2256 4.3764 4.5572 4.3635 4.9973 5.2355 4.5265 4.5602   4.2658 4.6479 4.9158 4.6445 5.1979 5.1456 4.8466 4.5007 4.6475 5.0185   4.476  4.0634 4.3601 4.4587 4.8576 4.3477 4.9029 4.9817 4.4163 4.854   5.0135 5.542  5.4701 5.3324 5.7713 5.1153 4.6757 4.7262 5.1457 4.4372   5.0738 4.9601 5.2766 4.9404 5.1549 4.9991 4.8614 5.1887 5.0933 5.3319   5.3837 5.3513 5.5068 5.1414]]
842                   2.37178         1.315         0.46367         -0.12918          -0.0979          0.12864          1.23165          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5969 2.5238 2.6902 2.8753 2.8439 2.971  2.9073 3.2187 2.9478 3.1269   3.2086 3.0492 2.8724 2.8944 2.9869 2.7137 3.1361 3.0068 3.0146 3.2229   2.896  3.0099 2.8377 3.0356 3.1728 3.2248 3.1992 3.2112 3.2337 3.2389   3.5745 3.4733 3.3815 3.3991 3.3592 3.3373 3.2245 2.929  3.0844 3.0224   2.9396 3.0503 3.3289 3.2924 3.2641 3.2452 3.4128 3.3402 3.4529 3.3691   3.2226 3.5909 3.1209 3.5426]]
843                   2.34507         1.31711         0.4658         -0.11646          -0.08208          0.12818          1.33922          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3908 2.7834 2.4776 2.5473 2.7067 2.6177 3.01   2.904  2.8194 2.9245   3.0351 2.8233 2.9868 3.2332 3.0592 3.0621 3.0026 3.2243 2.9946 2.9648   2.894  2.95   3.0994 2.9984 3.2057 3.247  3.2027 3.2148 3.2486 3.2052   3.4737 3.3696 3.3357 3.4043 3.5422 3.3708 3.1545 3.1176 3.053  3.2065   2.9402 3.2607 3.1913 3.3987 3.3099 3.2244 3.3442 3.2814 3.5614 3.4086   3.4197 3.5241 3.2343 3.1946]]
844                   2.33875         1.3159         0.46742         -0.11346          -0.07973          0.1282          1.29093          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9952 2.8422 2.7146 2.4052 2.298  2.6764 2.9286 2.9856 2.8578 2.8461   2.7784 3.2686 3.3702 3.2113 3.1141 3.1184 3.287  2.9301 2.9776 2.7853   2.8263 3.0026 3.0405 2.835  3.185  3.2167 3.2484 3.1861 3.1871 3.2156   3.4587 3.5552 3.2915 3.3493 3.4047 3.2147 3.1192 3.3166 3.0602 3.0359   3.0882 3.0056 3.5725 3.2242 3.2627 3.4299 3.1968 3.3429 3.3244 3.3301   3.4569 3.3217 3.4176 3.1801]]
845                   2.33982         1.308         0.46411         -0.11397          -0.0834          0.12748          1.3072          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.6769 2.9827 2.6604 2.6731 2.6242 2.7355 2.7896 2.845  2.97   2.9926   2.9903 3.2875 3.1759 3.1984 3.0472 3.0917 3.0218 3.027  2.864  3.0657   2.9969 2.9667 2.8484 2.9285 3.195  3.2442 3.2154 3.2359 3.2191 3.1423   3.2242 3.3018 3.471  3.4709 3.5773 3.3323 3.0078 3.1547 3.1083 3.1029   2.9741 2.8537 3.2439 3.4139 3.5709 3.3323 3.4098 3.2784 3.4441 3.3319   3.2546 3.5295 3.4877 3.3952]]
846                   2.20426         1.31053         0.49892         -0.04943          -0.04908          0.12541          1.39845          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.3924 3.4069 3.3815 3.3849 3.4761 3.4413 3.425  3.4447 3.3963 3.3774   3.4137 3.4771 3.4346 3.4269 3.3304 3.3151 3.3414 3.3561 3.3316 3.3569   3.3519 3.3647 3.3411 3.3581 3.464  3.4715 3.4821 3.4304 3.3511 3.4426   3.502  3.4621 3.5017 3.4052 3.49   3.4006 3.5343 3.4439 3.415  3.4072   3.4891 3.4322 3.4063 3.4393 3.3929 3.3747 3.3647 3.4099 3.33   3.4051   3.3601 3.4121 3.4044 3.3849]]
847                   2.50399         1.40826         0.60773         -0.19213          -0.00022          0.1523          1.44998          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.8084 4.0324 4.0271 4.1617 4.0996 4.1242 4.1108 3.7677 3.966  3.8781   4.0101 3.955  3.8302 4.1049 3.9839 4.0963 3.7764 3.9844 4.1192 4.2137   4.0285 4.1169 4.0387 4.0295 3.9353 4.1413 3.9056 4.0624 3.7181 4.0904   4.2374 4.1432 4.0755 4.0413 4.1305 3.8931 4.1429 3.661  4.0567 4.1103   4.0307 3.817  4.0038 4.1649 3.9356 4.1269 4.0537 4.1169 3.9199 3.8943   4.0477 4.0317 4.0851 4.1144]]
848                   2.18171         1.2995         0.4879         -0.03869          -0.03836          0.12298          1.3789          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.3351 3.3642 3.3498 3.3326 3.3325 3.3444 3.3859 3.3843 3.3846 3.3526   3.3775 3.3825 3.3201 3.3604 3.3282 3.3131 3.3104 3.3269 3.3081 3.3258   3.326  3.3211 3.3103 3.3082 3.3525 3.3854 3.3793 3.3743 3.3689 3.3634   3.4019 3.4051 3.387  3.4019 3.3979 3.3915 3.3829 3.384  3.3736 3.3785   3.3601 3.3859 3.3811 3.3678 3.3909 3.3301 3.3596 3.3759 3.3344 3.3261   3.3096 3.3372 3.3242 3.3454]]
849                   2.18363         1.29895         0.48979         -0.03961          -0.03952          0.12342          1.38585          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.3898 3.3786 3.3498 3.3506 3.3414 3.3596 3.3772 3.389  3.384  3.3761   3.4242 3.3851 3.3391 3.3665 3.3319 3.3134 3.3219 3.3424 3.315  3.3374   3.3277 3.3167 3.314  3.3617 3.3534 3.3907 3.4335 3.3742 3.3615 3.3724   3.3972 3.396  3.3916 3.4017 3.4025 3.4383 3.4128 3.4507 3.3866 3.3894   3.3716 3.3916 3.3683 3.3799 3.3916 3.4026 3.4031 3.3614 3.3334 3.3773   3.3184 3.3217 3.3173 3.3474]]
850                   2.19704         1.30919         0.49887         -0.04599          -0.04559          0.12511          1.3943          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.377  3.4603 3.3618 3.499  3.4068 3.4221 3.5414 3.4184 3.4591 3.3952   3.415  3.3911 3.3753 3.4064 3.3476 3.4205 3.3592 3.3601 3.3756 3.4028   3.3452 3.3503 3.345  3.3097 3.3749 3.473  3.4239 3.4617 3.3967 3.5019   3.3982 3.4491 3.4792 3.4748 3.4245 3.5388 3.3716 3.4516 3.4752 3.3758   3.3791 3.3975 3.4933 3.3987 3.4769 3.402  3.3628 3.3828 3.3418 3.3904   3.4032 3.3509 3.3927 3.449 ]]
851                   2.46673         1.39452         0.60518         -0.17439          0.02745          0.15098          1.45978          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.9579 3.9967 4.1375 4.0598 3.9731 3.9857 4.2092 4.0646 4.1184 4.1742   4.079  3.9907 4.1509 4.1589 3.9341 4.0216 4.1201 4.0519 4.1751 3.9944   4.0892 4.0156 4.142  4.171  4.1374 4.0136 4.1174 4.2177 3.9904 4.1157   4.117  3.8136 3.8532 3.899  4.0911 3.9787 3.9929 3.8884 4.0943 3.8736   4.1688 3.9548 3.7395 4.1372 3.9255 3.9764 3.8866 3.968  3.9206 4.0622   4.0401 3.9877 4.0601 4.0336]]
852                   2.18318         1.29978         0.48831         -0.03939          -0.03909          0.12311          1.38125          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3269 3.3811 3.3266 3.3324 3.3356 3.3606 3.3678 3.4014 3.3705 3.3596   3.3788 3.3785 3.3381 3.3584 3.3096 3.3169 3.3163 3.348  3.3009 3.3263   3.3223 3.3066 3.3166 3.3118 3.3624 3.3934 3.3977 3.3554 3.3642 3.3778   3.3928 3.4077 3.3876 3.3924 3.3927 3.3877 3.3779 3.3986 3.3886 3.384   3.3634 3.3918 3.3692 3.3642 3.3943 3.3443 3.3518 3.3747 3.3192 3.3464   3.331  3.3355 3.321  3.3451]]
853                   2.17582         1.2968         0.48985         -0.03588          -0.03583          0.12318          1.388          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3776 3.3706 3.3436 3.3918 3.3883 3.3582 3.3711 3.3893 3.3918 3.3677   3.3741 3.3811 3.3295 3.3673 3.3176 3.3643 3.3261 3.3301 3.3095 3.3346   3.369  3.3232 3.3656 3.3048 3.3578 3.385  3.4283 3.3744 3.3557 3.3729   3.3917 3.4444 3.3976 3.3987 3.436  3.3927 3.3677 3.4478 3.3858 3.424   3.3699 3.4328 3.3692 3.3768 3.3902 3.3508 3.3935 3.4125 3.3381 3.3386   3.3686 3.3266 3.3687 3.3462]]
854                   2.47167         1.40513         0.57355         -0.17674          -0.12747          0.1456          1.42957          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.808  3.2569 3.6892 3.4183 3.5773 3.9226 3.3142 3.3254 3.8842 3.8456   4.0144 3.9509 3.3118 3.8355 3.9522 3.8165 3.4837 3.7512 3.9355 3.9107   3.5239 3.7988 3.7677 3.1577 3.9332 3.9951 3.7937 3.8066 3.8457 3.2727   3.9318 3.7903 3.9838 3.9099 3.9709 3.876  3.911  3.9175 3.3443 3.6819   3.7365 3.4218 3.8968 3.8513 4.0263 3.2309 3.491  4.0442 3.1881 3.5081   3.3455 3.896  3.8736 3.3117]]
855                   2.34861         1.27875         0.44068         -0.11815          -0.07702          0.1283          1.19007          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.1956 3.9255 2.4161 3.3178 3.3172 3.5562 2.4057 3.1351 3.3777 3.7772   2.178  3.2243 3.8305 3.7584 2.8366 3.4054 2.0696 3.7646 3.7656 3.1775   3.2557 3.8099 3.2496 2.2293 3.2064 2.3201 3.3913 3.3176 3.798  2.3778   2.0619 2.4658 3.665  2.593  3.1726 3.5174 3.022  3.6395 3.6222 2.7455   3.1019 3.0169 3.3349 2.2362 2.9778 3.3017 2.2352 2.1468 3.5392 2.9065   2.3747 3.8017 3.4746 3.4511]]
856                   2.18293         1.30191         0.4925         -0.03927          -0.03927          0.12371          1.4069          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3577 3.3955 3.361  3.3622 3.369  3.3801 3.3988 3.4146 3.4099 3.3931   3.4001 3.4063 3.3587 3.3857 3.3497 3.3405 3.3465 3.3594 3.3348 3.3602   3.3407 3.3405 3.3393 3.3282 3.3774 3.4152 3.4089 3.3963 3.3837 3.3963   3.4213 3.4268 3.4218 3.4285 3.421  3.4134 3.3909 3.4272 3.409  3.4075   3.3875 3.4048 3.3942 3.4003 3.4117 3.3802 3.3815 3.3932 3.3522 3.3582   3.3459 3.3487 3.3425 3.3723]]
857                   2.23753         1.29951         0.4652         -0.06527          -0.04836          0.12188          1.2207          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1439 3.1971 3.1126 3.142  3.0895 3.2599 3.1968 3.1902 3.2429 3.1838   3.2268 3.2108 3.188  3.198  3.154  3.1546 3.0892 3.1622 3.096  3.2443   3.1971 3.0698 3.1195 3.1327 3.1703 3.1735 3.2377 3.2143 3.1455 3.1925   3.2107 3.2258 3.1618 3.2781 3.2486 3.6107 3.2543 3.2129 3.178  3.2191   3.2039 3.2223 3.2067 3.1812 3.2168 3.1536 3.1472 3.1743 3.5356 3.094   3.1463 3.1302 3.1264 3.2152]]
858                   2.39172         1.3676         0.56291         -0.13868          -0.09174          0.14214          1.38013          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4877 3.9638 3.8877 3.2929 3.8999 3.2197 3.9956 3.855  4.0292 3.4789   3.7505 3.7959 3.8464 3.9085 3.2596 3.7064 3.7701 3.7401 3.6962 3.2482   3.2209 3.8387 3.8265 3.7024 3.7233 3.8182 3.1584 3.5965 3.2124 3.8657   4.0538 3.7885 3.8278 3.9288 3.8429 3.7066 3.7385 3.8997 3.8438 3.874   3.9893 3.3128 3.5776 3.7397 3.3431 3.7134 3.4788 3.8302 3.7576 3.7269   3.8453 3.3901 3.9796 3.6382]]
859                   2.29519         1.23471         0.40362         -0.09272          -0.03354          0.12048          1.07977          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7138 3.3718 2.3514 3.3033 3.0227 2.9152 3.3026 3.5618 2.281  3.4013   2.8641 3.3724 3.251  3.1227 3.5407 2.4773 3.7592 2.7667 2.26   2.3619   3.1438 2.0828 3.6517 2.3304 3.8204 2.2393 3.3724 2.0314 3.9311 3.7352   3.5133 2.4394 3.1002 2.3701 2.9169 2.4772 2.8224 2.5034 2.4394 2.9946   3.2345 2.3757 2.8016 3.4951 3.5096 3.7064 3.0892 2.6307 3.909  3.3121   3.7828 3.1393 3.0269 2.6996]]
860                   2.18286         1.30196         0.49256         -0.03924          -0.03924          0.12372          1.406          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3543 3.3945 3.3626 3.364  3.3687 3.3819 3.4049 3.4147 3.4064 3.3939   3.3993 3.4047 3.3608 3.3832 3.3445 3.3407 3.3489 3.3614 3.3335 3.3584   3.3398 3.3404 3.3408 3.3296 3.3774 3.4152 3.4089 3.3963 3.3837 3.3963   3.4219 3.4265 3.4205 3.4279 3.4213 3.4133 3.3943 3.4295 3.4076 3.409   3.3899 3.4056 3.3926 3.4003 3.4138 3.3788 3.3807 3.3929 3.3586 3.359   3.3421 3.3529 3.3438 3.3699]]
861                   2.27607         1.30816         0.47114         -0.08361          -0.06836          0.12431          1.21063          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1505 3.2072 3.1041 3.1612 3.1594 3.1554 3.5467 3.1714 3.2079 3.203   3.178  3.2143 3.1547 3.2305 3.1524 3.0995 3.0906 3.1701 3.1443 3.2323   3.1829 3.1249 3.1756 3.1537 3.2028 3.1805 3.2134 3.2077 3.6668 3.2366   3.2234 3.1854 3.2666 3.2848 3.1383 3.2801 3.2602 3.6116 3.1658 3.2009   3.1291 3.1966 3.1856 3.241  3.1702 3.1998 3.1543 3.2255 3.1081 3.1266   3.1175 3.1604 3.1304 3.1599]]
862                   2.19855         1.30833         0.49935         -0.04671          -0.04635          0.12537          1.4209          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3689 3.3758 3.3949 3.4293 3.3973 3.4632 3.4247 3.443  3.4994 3.4079   3.4288 3.4016 3.3408 3.3667 3.3568 3.3397 3.3136 3.3717 3.3864 3.4731   3.313  3.4127 3.3549 3.3788 3.3792 3.4402 3.507  3.3715 3.3769 3.4443   3.4178 3.4073 3.4329 3.5239 3.4999 3.4739 3.4781 3.4832 3.469  3.3991   3.4133 3.4818 3.3967 3.3956 3.4402 3.3744 3.4131 3.4074 3.33   3.3364   3.3716 3.4191 3.4612 3.3708]]
863                   2.56723         1.42223         0.61821         -0.22223          -0.00849          0.15587          1.41373          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[4.0945 4.0494 4.1228 3.9239 4.0873 4.1298 4.1733 4.1114 3.8934 4.1692   4.0825 4.0977 4.0177 4.0136 4.1387 3.7569 4.0283 4.0683 4.0389 4.1433   4.1264 3.9539 4.1378 4.0697 4.1014 4.1838 4.106  4.1016 4.1121 4.0592   3.7297 4.1115 4.2087 3.7874 4.1942 3.9104 3.9737 4.1203 4.1532 3.7675   4.0966 3.8106 4.0561 4.1352 4.1638 4.1167 4.2088 4.019  4.0976 3.8639   4.0711 4.0409 4.0396 4.0793]]
864                   2.18233         1.29934         0.48827         -0.03899          -0.03873          0.12307          1.37755          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3263 3.378  3.3412 3.3581 3.3483 3.3495 3.3849 3.391  3.3777 3.3768   3.3656 3.3775 3.3348 3.367  3.324  3.3155 3.3084 3.3215 3.3184 3.3431   3.3209 3.3184 3.3193 3.3028 3.3528 3.3845 3.3776 3.379  3.3667 3.3785   3.3975 3.3925 3.4055 3.4056 3.3971 3.387  3.3708 3.4025 3.3887 3.3924   3.3652 3.3713 3.3804 3.3825 3.3908 3.3637 3.3593 3.3743 3.345  3.3336   3.3236 3.327  3.3188 3.3357]]
865                   2.18426         1.29914         0.49019         -0.03991          -0.03984          0.1235          1.38285          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3836 3.3773 3.3863 3.3371 3.3482 3.3655 3.423  3.3855 3.3855 3.3671   3.3699 3.3823 3.3322 3.3628 3.3186 3.3134 3.3678 3.3417 3.3144 3.3828   3.32   3.3663 3.3194 3.3059 3.355  3.3906 3.3796 3.4197 3.3689 3.3758   3.3999 3.405  3.444  3.3985 3.3898 3.3908 3.367  3.4462 3.3834 3.4338   3.3659 3.4363 3.3689 3.3795 3.427  3.3976 3.3566 3.3711 3.3305 3.374   3.3251 3.3239 3.3254 3.3479]]
866                   2.16438         1.30084         0.49538         -0.03044          -0.03012          0.12339          1.396          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4027 3.3855 3.3602 3.341  3.4158 3.3535 3.4546 3.393  3.4609 3.4216   3.4531 3.3962 3.3629 3.4411 3.3939 3.3577 3.4836 3.3733 3.3245 3.3782   3.4557 3.3479 3.4329 3.3404 3.4008 3.4884 3.3813 3.4403 3.3945 3.4343   3.4206 3.4681 3.454  3.4136 3.4524 3.4697 3.4593 3.4145 3.3958 3.4082   3.4562 3.4441 3.4224 3.3975 3.4863 3.3685 3.3993 3.3645 3.3862 3.3793   3.3702 3.462  3.326  3.3839]]
867                   2.57802         1.41768         0.61904         -0.22737          -0.0289          0.15684          1.41055          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[4.0482 3.8524 3.933  3.9229 4.0045 3.8102 4.2204 4.152  3.9994 3.8818   3.7377 4.0917 3.9434 4.0774 4.076  3.7805 4.0232 4.0949 4.0833 4.0653   4.1498 3.8449 4.1327 4.0409 4.1099 4.1395 3.9335 4.0421 4.0629 4.0834   4.0512 4.2208 4.1311 3.9166 3.9919 4.1992 4.1989 4.166  4.0225 4.029   3.9813 4.0977 3.9052 4.1585 3.97   4.0593 4.1335 3.9457 4.061  4.0631   4.0318 3.9838 4.0507 3.8262]]
868                   2.17829         1.29776         0.48756         -0.03706          -0.03676          0.12284          1.38065          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3362 3.3648 3.3285 3.3385 3.3519 3.3574 3.3788 3.3905 3.3712 3.359   3.378  3.3819 3.3348 3.3693 3.3293 3.321  3.3347 3.3396 3.3191 3.3343   3.3067 3.3105 3.3177 3.3015 3.3494 3.3836 3.3798 3.3553 3.3585 3.3667   3.3983 3.4081 3.3994 3.386  3.3995 3.3871 3.3715 3.3973 3.3902 3.3815   3.3626 3.3863 3.3545 3.375  3.3825 3.3463 3.3552 3.377  3.3297 3.3347   3.3293 3.318  3.3242 3.3483]]
869                   2.18115         1.30013         0.49049         -0.03842          -0.03838          0.12336          1.38885          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.344  3.3798 3.3471 3.3428 3.3532 3.3582 3.3781 3.3915 3.384  3.3736   3.3789 3.4329 3.3855 3.3588 3.3615 3.3154 3.3267 3.3856 3.3121 3.3446   3.3248 3.3142 3.3233 3.3572 3.3508 3.4392 3.3891 3.3826 3.3557 3.4238   3.399  3.3967 3.3884 3.4415 3.3967 3.3934 3.373  3.4126 3.4341 3.3961   3.4063 3.3886 3.3637 3.4213 3.3928 3.3629 3.4023 3.4087 3.3422 3.3805   3.3227 3.3304 3.3165 3.3522]]
870                   2.3254         1.35759         0.54627         -0.1071          -0.06899          0.13645          1.4513          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4371 3.6219 3.8404 3.2611 3.9248 3.9463 3.9576 3.9897 3.5228 3.7663   3.9026 4.0072 3.8126 3.2814 3.2449 3.7266 3.5547 3.7131 3.6907 3.9079   3.5347 3.2398 3.2263 3.5533 3.8128 3.842  3.8305 3.8663 3.432  3.7551   3.2775 3.6922 3.4606 3.864  4.1167 3.2653 3.3943 3.3688 3.4273 3.4938   3.8965 3.9714 3.9202 3.7117 3.4753 3.2337 3.463  3.7805 3.8801 3.8982   3.8741 3.719  3.733  3.8252]]
871                   2.55568         1.32919         0.45403         -0.21673          -0.17939          0.13708          1.08623          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8863 3.8551 3.3934 3.0724 3.1414 4.0064 2.0922 2.9127 2.2511 3.5508   3.4554 2.2347 3.4135 3.5143 3.0019 3.1909 2.3655 3.6593 2.153  3.3065   3.1623 3.1476 2.4042 2.7821 3.7577 3.3506 3.6377 2.3936 3.9905 2.1211   4.023  3.4691 2.2976 3.5858 3.3549 3.0504 3.497  2.3446 3.2949 2.6065   3.7364 2.3146 2.8873 3.6649 3.5702 2.2531 2.6818 2.3504 3.6951 2.859   3.7085 3.59   2.1529 3.3518]]
872                   2.1821         1.30176         0.49243         -0.03888          -0.03888          0.12367          1.40655          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3555 3.3943 3.3619 3.36   3.3702 3.3801 3.3998 3.4133 3.4064 3.3934   3.4021 3.409  3.3621 3.3846 3.3462 3.3413 3.3451 3.3603 3.3332 3.3586   3.3414 3.3397 3.3399 3.3277 3.3774 3.4152 3.4089 3.3963 3.3837 3.3963   3.421  3.4264 3.4207 3.4282 3.4212 3.4155 3.3928 3.4246 3.4051 3.4075   3.39   3.4067 3.3928 3.3994 3.4137 3.3815 3.382  3.3946 3.3574 3.3566   3.3469 3.3525 3.3477 3.3703]]
873                   2.21744         1.30069         0.46848         -0.0557          -0.04357          0.1213          1.2275          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2456 3.2049 3.1121 3.1825 3.2255 3.1613 3.2475 3.2321 3.2681 3.2258   3.2472 3.2441 3.1711 3.2516 3.213  3.2163 3.2113 3.2326 3.1274 3.2114   3.1551 3.1043 3.0715 3.2124 3.1086 3.1459 3.2485 3.1813 3.1923 3.5552   3.1918 3.238  3.2097 3.223  3.2592 3.2109 3.5463 3.275  3.1893 3.1415   3.2447 3.6429 3.2521 3.1074 3.186  3.119  3.19   3.2617 3.1003 3.5509   3.1761 3.1471 3.1699 3.2061]]
874                   2.35855         1.37179         0.56029         -0.12288          -0.05974          0.13991          1.52707          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5232 3.5077 3.8237 3.9185 3.4744 3.8128 3.9689 3.6716 3.6185 3.525   3.9769 3.626  3.755  3.9299 3.5455 3.863  3.5092 3.4336 3.8915 3.7816   3.6879 3.1838 3.8538 3.8571 4.0305 3.9116 3.6479 3.7483 3.6347 3.8956   3.7253 3.9416 3.7751 3.8774 3.847  3.9321 3.687  3.3002 3.9133 3.9357   3.8529 3.9124 3.7027 3.9804 3.541  3.783  3.5669 3.9915 3.6653 3.9224   3.319  3.8202 3.8255 3.9065]]
875                   2.53807         1.31735         0.43342         -0.20835          -0.14493          0.1364          1.23712          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.2915 3.8125 4.0412 3.5075 3.7876 3.5731 2.9239 2.6924 2.3148 3.6228   3.5282 3.5488 2.143  2.8089 3.908  2.1859 3.7535 3.7361 2.996  3.809   3.7724 2.4393 3.2257 2.2673 2.3873 2.3662 3.6195 3.6678 2.2358 2.9588   2.3143 2.7401 3.0579 2.9273 2.409  2.1171 3.8219 2.9461 3.3983 3.025   3.4024 3.3842 2.831  2.6166 3.0462 2.3054 2.8019 2.6137 3.3703 3.592   3.2844 2.1923 2.3608 2.4751]]
876                   2.18189         1.30168         0.49243         -0.03878          -0.03878          0.12366          1.4065          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3571 3.3951 3.3615 3.3618 3.3705 3.3825 3.3986 3.4121 3.4053 3.3933   3.3992 3.408  3.358  3.3853 3.3459 3.3404 3.3453 3.3611 3.3317 3.3603   3.3413 3.3387 3.3418 3.3285 3.3774 3.4152 3.4089 3.3963 3.3837 3.3964   3.4202 3.4273 3.4195 3.4263 3.4222 3.4144 3.3938 3.4297 3.4075 3.4072   3.3887 3.4058 3.3933 3.3995 3.4098 3.3808 3.3793 3.3956 3.359  3.3603   3.3465 3.3529 3.3464 3.3699]]
877                   2.20959         1.2928         0.4662         -0.05197          -0.04088          0.12092          1.24025          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1543 3.6416 3.1234 3.1965 3.1926 3.2762 3.1224 3.1552 3.2356 3.2313   3.2291 3.2143 3.1602 3.1687 3.0551 3.0859 3.1754 3.2205 3.1377 3.2268   3.1283 3.5848 3.1021 3.1193 3.1384 3.159  3.6517 3.1943 3.2163 3.1739   3.2127 3.2611 3.2011 3.2762 3.1312 3.0965 3.1759 3.2483 3.2613 3.2239   3.2401 3.1968 3.1692 3.6348 3.2449 3.1981 3.5143 3.2607 3.1502 3.1783   3.1457 3.5842 3.1601 3.191 ]]
878                   2.19384         1.3088         0.50034         -0.04447          -0.04404          0.1253          1.41605          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3687 3.4971 3.3674 3.3901 3.355  3.3793 3.4155 3.5453 3.4426 3.435   3.3885 3.3863 3.3649 3.382  3.3709 3.3166 3.4747 3.3322 3.4169 3.4544   3.3246 3.3641 3.3594 3.439  3.4298 3.4415 3.5137 3.4011 3.4127 3.451   3.4088 3.43   3.4237 3.4916 3.4453 3.4418 3.4234 3.5571 3.3992 3.4329   3.4546 3.4385 3.4293 3.3818 3.4632 3.4105 3.3594 3.4307 3.3637 3.325   3.3818 3.4152 3.3585 3.392 ]]
879                   2.51424         1.39957         0.60929         -0.19701          -0.00649          0.15341          1.36953          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[4.0704 3.9963 3.9962 4.1862 4.002  4.0818 4.1484 3.8388 3.9786 3.814   3.8032 3.8837 3.8507 3.8721 4.0598 3.7443 4.0391 4.1346 4.1067 4.077   3.6721 4.09   3.9971 3.974  4.1363 4.1449 4.1533 4.0695 3.9199 3.8   4.0557 4.0866 3.981  4.17   3.8435 4.0584 4.0702 4.1181 3.9378 4.0931   3.923  3.896  4.1341 3.9595 4.1056 4.0746 4.1229 4.076  3.9895 4.0649   4.0478 4.1326 4.1651 4.0795]]
880                   2.17714         1.2966         0.48714         -0.03651          -0.03621          0.12276          1.37645          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3397 3.3623 3.3502 3.343  3.3446 3.3483 3.3861 3.3899 3.3771 3.3671   3.3685 3.3758 3.317  3.3481 3.3385 3.3068 3.3183 3.3301 3.2909 3.3307   3.3091 3.3204 3.321  3.3142 3.3662 3.388  3.3965 3.3707 3.3645 3.3721   3.3873 3.4008 3.3759 3.4116 3.3895 3.3824 3.3697 3.399  3.3587 3.3897   3.3765 3.3856 3.3677 3.3664 3.3807 3.348  3.364  3.3674 3.3429 3.3399   3.328  3.3346 3.3188 3.357 ]]
881                   2.18615         1.30262         0.49188         -0.0408          -0.04076          0.12373          1.3864          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3354 3.3784 3.3515 3.3841 3.347  3.3621 3.3787 3.3871 3.389  3.3705   3.3758 3.3817 3.3326 3.3576 3.3734 3.363  3.3167 3.3831 3.3576 3.34   3.3613 3.3195 3.3182 3.3105 3.3484 3.3923 3.3838 3.3763 3.4085 3.4232   3.3992 3.4482 3.4431 3.3985 3.3932 3.3907 3.3673 3.4552 3.4407 3.389   3.3694 3.4283 3.4101 3.4222 3.4337 3.3581 3.356  3.3632 3.3373 3.3285   3.3241 3.3284 3.3168 3.3505]]
882                   2.18657         1.30577         0.49708         -0.041          -0.04073          0.12449          1.40435          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3429 3.3995 3.346  3.3756 3.386  3.4003 3.42   3.3819 3.4441 3.3831   3.4087 3.443  3.3613 3.4916 3.3686 3.4042 3.3206 3.349  3.3258 3.477   3.3274 3.3635 3.3618 3.3122 3.3668 3.4295 3.3781 3.4262 3.3674 3.4293   3.4528 3.4945 3.4115 3.5156 3.4326 3.432  3.3971 3.4385 3.4181 3.5021   3.5307 3.3906 3.3869 3.4536 3.4527 3.4765 3.416  3.3897 3.4417 3.3978   3.3832 3.408  3.4001 3.3448]]
883                   2.61391         1.43263         0.62493         -0.24446          -0.03043          0.15858          1.32793          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[4.0478 4.0455 4.1145 4.0925 4.0709 3.9535 4.1405 4.0243 4.0852 4.053   4.1104 4.1109 3.9382 3.9281 4.1224 4.0395 4.154  4.0467 3.9307 3.7745   4.0314 4.1087 4.0104 4.0473 3.8883 3.9194 4.2466 3.9688 4.1665 3.8203   3.9488 4.2463 4.1239 4.0214 4.1993 3.843  3.957  4.1046 4.1614 4.1838   4.1901 4.0776 4.1788 4.1651 3.9349 4.0728 4.1901 4.1127 4.1258 4.001   4.0357 4.0004 3.9281 4.0796]]
884                   2.18188         1.29982         0.48824         -0.03877          -0.03847          0.12303          1.3772          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3159 3.3682 3.3379 3.3504 3.3318 3.3612 3.3836 3.3747 3.3788 3.3659   3.3784 3.3737 3.3324 3.3616 3.3225 3.3193 3.3271 3.3328 3.3096 3.3194   3.3187 3.3203 3.3234 3.2988 3.3439 3.3923 3.3972 3.3688 3.373  3.3706   3.392  3.4036 3.3865 3.4008 3.3929 3.3895 3.3797 3.4045 3.3782 3.3955   3.3657 3.385  3.3677 3.3693 3.3762 3.3534 3.3507 3.3809 3.3288 3.3347   3.3174 3.3328 3.3173 3.3529]]
885                   2.17979         1.30043         0.49019         -0.03778          -0.0377          0.12325          1.3876          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3352 3.3759 3.3379 3.3434 3.3464 3.3633 3.3819 3.3875 3.3811 3.3711   3.4205 3.4296 3.3408 3.3611 3.3293 3.3195 3.3266 3.3361 3.3102 3.3385   3.3672 3.3696 3.3223 3.3087 3.357  3.3884 3.3886 3.3785 3.3554 3.418   3.4421 3.3981 3.3957 3.4017 3.4362 3.3866 3.3775 3.4012 3.3915 3.3899   3.3694 3.4258 3.375  3.4199 3.3907 3.3606 3.3984 3.3732 3.3363 3.3329   3.3669 3.3203 3.3681 3.3466]]
886                   2.4482         1.3762         0.57185         -0.16556          -0.09818          0.14555          1.49502          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.9385 3.7351 3.9675 3.9177 3.7673 3.5412 3.8119 3.9234 3.7804 3.3022   3.9263 3.5087 3.2384 3.2208 3.7186 3.7332 3.879  3.6249 3.6438 3.8519   3.7616 3.6677 3.6181 3.7988 3.8536 4.0032 3.9604 3.634  3.5978 3.9763   3.8262 3.797  3.9429 3.546  3.9985 4.0251 3.9554 3.859  3.8094 3.9572   3.9882 3.7571 3.9256 3.9108 4.0031 3.4278 3.7683 3.5898 3.8678 3.4276   3.5434 3.852  3.6814 3.6197]]
887                   2.60923         1.3616         0.48592         -0.24223          -0.2077          0.1469          1.10662          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4215 2.7373 2.9319 2.4247 2.471  2.1696 2.5014 2.2566 3.4833 2.1304   3.0021 3.331  3.7418 3.2028 2.6322 3.2724 4.0379 3.5455 2.1854 3.4574   3.3471 2.1514 4.0468 3.9436 2.5746 3.9038 3.5139 3.4687 3.6878 3.342   3.1052 3.5982 4.0224 3.1569 3.2716 2.4777 3.3605 3.5388 2.022  2.9791   2.2477 2.9613 3.5291 3.3348 4.1742 3.0751 3.8793 3.5195 3.9323 2.2239   3.0888 2.9466 2.5927 2.1704]]
888                   2.18352         1.30223         0.49259         -0.03955          -0.03955          0.12374          1.40785          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3546 3.3965 3.3625 3.3611 3.3683 3.3838 3.4024 3.4108 3.4083 3.3933   3.3998 3.4049 3.3588 3.3869 3.3439 3.3382 3.3475 3.3585 3.3344 3.3594   3.3391 3.3405 3.34   3.3263 3.3775 3.4152 3.4088 3.3963 3.3837 3.3963   3.4211 3.4278 3.4209 3.4264 3.4199 3.4145 3.395  3.4287 3.4074 3.4084   3.3892 3.4083 3.3912 3.4002 3.4135 3.3777 3.3814 3.392  3.3582 3.3581   3.3411 3.3534 3.3461 3.3711]]
889                   2.2141         1.2895         0.46563         -0.05411          -0.04177          0.1214          1.1866          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1663 3.1979 3.1417 3.1959 3.1757 3.1453 3.174  3.2432 3.1439 3.1571   3.6226 3.1742 3.0974 3.1834 3.1931 3.0535 3.6076 3.1419 3.1391 3.596   3.1456 3.0783 3.1055 3.1118 3.1076 3.2654 3.2202 3.1223 3.6114 3.1684   3.2926 3.197  3.6666 3.2174 3.2653 3.1696 3.2354 3.2575 3.199  3.1619   3.2383 3.1617 3.2158 3.1983 3.2073 3.1835 3.2076 3.2067 3.1056 3.1238   3.1628 3.0647 3.5236 3.2246]]
890                   2.26395         1.33467         0.54732         -0.07785          -0.02636          0.13515          1.42882          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.689  3.9984 3.5239 3.2712 3.6191 3.3392 3.3151 3.7756 3.8068 3.8815   3.9591 3.3339 3.9123 3.3192 3.9112 3.875  3.6471 3.8766 3.877  3.7923   3.7056 3.5247 3.9586 3.6165 3.9291 3.6723 3.7994 3.9153 3.9175 3.8743   3.8071 3.5427 3.5512 3.9161 3.4787 3.4355 3.9043 3.8418 3.807  3.8605   3.9867 3.8667 3.8689 3.6915 3.61   3.7975 3.8591 3.2386 3.6753 3.5032   3.8582 3.3345 3.4553 3.8967]]
891                   2.61918         1.32329         0.42681         -0.24697          -0.18816          0.13929          1.19107          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9088 2.3624 4.0345 3.2985 3.6179 2.371  2.2879 3.7755 3.2039 3.7647   2.72   2.608  2.3081 3.6179 2.3224 3.2252 3.654  3.7465 2.3147 2.3662   3.5843 3.7346 3.4139 2.024  3.6072 3.7004 2.2123 3.2138 3.0005 3.8449   3.5252 2.4429 3.1629 2.7752 2.2159 2.5254 3.5585 2.0273 3.5844 2.5825   4.2101 2.9023 3.9021 3.0029 3.2789 2.6658 2.3297 3.8181 2.533  2.0875   2.2837 3.66   3.6428 2.127 ]]
892                   2.18225         1.30176         0.49239         -0.03895          -0.03895          0.12367          1.4057          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3548 3.3923 3.3633 3.363  3.3692 3.3817 3.3989 3.4142 3.406  3.3955   3.3985 3.4054 3.3587 3.3844 3.3454 3.3389 3.346  3.3594 3.3324 3.3607   3.338  3.3401 3.3413 3.3283 3.3774 3.4152 3.4089 3.3963 3.3837 3.3963   3.4205 3.4283 3.4203 3.4266 3.4203 3.4147 3.394  3.4257 3.4044 3.4092   3.3897 3.4064 3.3923 3.3992 3.4112 3.3776 3.3802 3.3937 3.3561 3.3578   3.3459 3.3549 3.3445 3.3713]]
893                   2.20308         1.28765         0.4591         -0.04886          -0.0325          0.11957          1.20012          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1185 3.2651 3.1458 3.1283 3.1587 3.1544 3.2405 3.1538 3.1327 3.2841   3.1874 3.2309 3.2148 3.2292 3.1685 3.1293 3.115  3.1979 3.1579 3.1792   3.2108 3.1417 3.1928 3.1225 3.5738 3.1292 3.1845 3.1427 3.1025 3.2366   3.259  3.215  3.1527 3.2443 3.2434 3.1227 3.1958 3.2094 3.1854 3.2199   3.6363 3.1554 3.2016 3.2054 3.2399 3.2173 3.1654 3.2661 3.1278 3.1742   3.1647 3.0899 3.1574 3.1773]]
894                   1.56169         1.02157         0.37244         0.2565          0.25678          0.08637          0.96843          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3649 3.4025 3.3717 3.3712 3.3769 3.39   3.4028 3.4153 3.4082 3.3965   3.4023 3.4086 3.3587 3.3835 3.3453 3.3396 3.3454 3.3582 3.3401 3.3649   5.3325 3.3455 5.3325 5.2003 3.3774 3.415  3.4088 3.3962 3.3836 3.3962   1.6002 1.6692 3.415  1.6676 1.6015 1.5312 3.3961 3.4278 3.4091 3.4084   3.3903 3.4088 3.3901 3.3962 3.4096 3.3767 3.3774 3.3892 5.1999 3.3516   3.3393 3.3472 3.3404 3.3646]]
895                   1.61263         1.0447         0.40105         0.23224          0.23229          0.09457          0.96868          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3647 3.4023 3.4663 3.371  3.3779 3.3901 3.4024 3.4148 3.4087 3.3965   3.4021 3.4087 3.359  3.3835 3.3445 3.3393 3.3458 3.3589 5.266  3.3646   3.3463 5.3321 5.3337 5.1985 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   1.5994 3.4212 1.6006 3.4215 1.5998 1.5344 3.3965 3.4276 3.4082 3.4088   3.3903 3.4083 3.3902 3.3965 3.4085 3.3776 3.3773 3.3899 3.3525 3.3523   3.3395 3.3459 3.3394 3.3654]]
896                   1.59836         1.07114         0.42016         0.23904          0.24382          0.09637          1.01905          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.364  3.4021 3.3709 3.3721 3.3772 3.3902 3.4032 3.4152 3.4091 3.3965   3.4022 3.4088 3.3592 3.3829 3.3458 3.3391 3.3467 3.3589 5.2669 3.3647   5.3321 3.3459 5.3332 5.1993 3.3774 3.415  3.4088 3.3962 3.3836 3.3962   1.5995 3.4219 3.4147 1.6665 3.4152 3.4084 3.3966 3.4274 3.4081 3.4081   3.3906 3.4089 3.3903 3.3958 3.4085 3.3773 2.8677 3.3899 3.3523 3.3527   5.067  3.3451 3.3397 3.3649]]
897                   1.85795         1.16196         0.45394         0.11545          0.1181          0.10964          1.18882          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3651 3.4031 3.3707 3.3704 3.3769 3.3903 3.4023 3.4154 3.4087 3.3965   3.4024 3.4091 3.3585 3.3841 3.3451 3.3393 3.3454 3.3588 3.3397 3.3649   5.3328 3.3464 5.3329 5.1997 3.3774 3.4151 3.4087 3.3962 3.3837 3.3962   3.4153 3.422  1.5999 3.4217 3.4151 3.4092 3.3968 3.4278 3.4087 3.4089   3.3899 3.4086 3.3897 3.3955 3.409  3.3772 3.3776 3.3901 3.3528 3.3527   3.3395 3.3463 3.3398 3.3647]]
898                   1.6554         1.0749         0.43286         0.21188          0.21821          0.10148          1.01855          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3645 3.4016 3.371  3.3709 3.3778 3.39   3.4025 3.4155 3.4088 3.3961   3.4025 3.4082 3.3582 3.5463 3.3451 3.339  3.3454 3.3581 5.2667 3.3646   5.3327 5.3336 5.3335 5.2016 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4152 3.4216 1.6009 3.4212 3.415  1.5338 3.3962 3.4276 3.4088 3.4086   3.3908 3.4083 3.3899 3.396  3.4083 3.377  3.378  3.3896 3.3523 3.3521   3.3396 3.3458 3.3401 3.3649]]
899                   1.49914         1.0132         0.39021         0.28628          0.28709          0.0889          0.96818          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3643 3.4027 3.3714 3.372  3.3776 3.3899 3.4026 3.4154 3.4093 3.3965   3.4033 3.4088 3.3589 3.3829 3.3455 3.3399 3.3456 3.3586 5.2653 3.3652   5.3314 3.3461 5.3333 5.199  3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   1.6014 1.6665 3.415  3.4213 1.6004 1.5317 3.3963 3.4283 3.4089 3.4094   3.3893 3.4087 3.3901 3.3957 3.4089 3.377  3.377  3.3908 3.3514 3.3529   3.3393 3.3461 5.0671 3.3651]]
900                   1.61794         1.0728         0.4051         0.22971          0.2312          0.09292          1.01895          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3654 3.4026 3.3718 3.3714 3.3781 3.3903 3.4023 2.2676 3.4086 3.3956   3.4026 3.4093 3.3584 3.3841 3.3466 3.3399 3.3455 3.359  5.2664 3.3644   5.3327 5.3334 3.3459 5.2    3.3774 3.4151 3.4088 3.3962 3.3836 3.3961   3.4147 1.6663 3.4154 1.6671 3.4156 3.4085 3.3962 3.4278 3.4089 3.4082   3.3902 3.4083 3.3894 3.3966 3.4089 3.378  3.377  3.3899 3.3516 3.3515   3.2462 3.346  3.3387 3.3653]]
901                   1.45727         0.98145         0.35277         0.30621          0.30773          0.0802          0.88412          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3653 3.4019 3.3709 3.3713 3.378  3.3905 3.4023 3.4152 3.4085 3.3964   3.4025 3.409  3.3591 3.3851 3.3462 3.3389 3.346  3.3588 5.2672 3.3646   5.3323 5.333  3.3461 5.1998 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   1.5999 1.6682 1.6002 1.6656 1.6003 1.5337 3.3975 3.4277 3.409  3.409   3.3893 3.4083 3.3903 3.3958 3.4089 3.3779 3.3775 3.3898 3.3521 3.3526   3.3393 3.346  3.3397 3.365 ]]
902                   1.59133         1.03798         0.38836         0.24239          0.24252          0.09017          0.96858          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.365  3.4027 3.3713 3.4666 3.533  3.3893 3.4026 3.4148 3.4088 3.3961   3.4029 3.4088 3.3594 3.3832 3.3463 3.339  3.3459 3.3589 3.3401 3.3647   5.3334 5.3334 5.3331 5.2006 3.3774 3.4151 3.4097 3.3962 3.3836 3.3962   1.6007 1.6682 3.4153 1.6686 3.4152 1.5345 3.3956 3.4287 3.41   3.4084   3.3906 3.4097 3.3899 3.3967 3.4086 3.3775 3.3774 3.3894 3.353  3.3526   3.3401 3.3467 3.3388 3.3648]]
903                   1.62498         1.06247         0.40449         0.22636          0.22729          0.09433          1.0187          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3644 3.4025 3.3706 3.3714 3.3778 3.3901 3.4025 3.4152 3.4086 3.3964   3.4018 3.4084 3.3585 3.3829 3.3461 3.3396 3.3463 3.359  5.2666 3.3645   5.3337 5.3317 3.346  5.2    3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.5992 3.4207 3.4148 1.6643 1.6    3.4089 3.3963 3.427  3.4083 3.4087   3.3899 3.4086 3.3902 3.3959 3.409  3.3766 3.3771 3.3899 3.3518 3.3526   3.3402 3.3457 3.3391 3.3654]]
904                   1.48698         0.99962         0.36539         0.29207          0.29257          0.0831          0.88437          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3655 3.4017 3.4669 3.3708 3.3776 3.39   3.4026 3.4151 3.409  3.396   3.4019 3.4086 3.3585 3.3839 3.3458 3.3394 3.3453 3.3583 5.2654 3.3648   5.3329 5.3327 3.3461 5.2001 3.3774 3.4151 2.8009 3.3962 3.3837 3.3962   1.6001 1.6667 3.4144 1.6667 1.6001 1.5337 3.3968 3.4276 3.4081 3.4093   3.3898 3.4096 3.3897 3.397  3.4094 3.3769 3.3771 3.3898 3.352  3.3525   3.3398 3.3458 3.3393 3.365 ]]
905                   1.74407         1.1121         0.40457         0.16967          0.17075          0.0963          1.06952          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3647 3.4025 3.371  3.4673 3.3773 3.3913 3.4033 2.2666 3.4089 3.3965   3.4032 3.4083 3.3586 3.3831 3.3462 3.3393 3.3455 3.3583 3.3397 3.3645   5.3335 3.3467 3.3456 5.1995 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.4152 1.6661 1.5996 3.4215 1.6021 3.4091 3.3966 3.4281 3.4089 3.4091   3.39   3.4093 3.39   3.3966 3.4087 3.3775 3.3771 3.3902 3.352  3.3525   3.3392 3.3457 3.339  3.3638]]
906                   1.52822         1.02807         0.39832         0.27243          0.27538          0.09095          0.96823          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4003 3.4027 3.4666 3.3713 3.3774 3.3896 3.4019 3.4156 3.4085 3.3959   3.4026 3.4091 3.3588 3.384  3.3459 3.339  3.3471 3.3597 5.2677 3.3647   3.3462 5.3331 5.3325 5.2025 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.5995 1.6686 1.6013 3.4214 3.4151 3.4088 3.3957 3.4281 3.4095 3.4088   3.3899 3.4092 3.3899 3.3964 3.4082 3.3772 3.3776 3.3896 3.3521 3.3522   5.0652 3.3459 3.3396 3.3655]]
907                   1.42961         0.96401         0.35866         0.31938          0.31982          0.08094          0.76472          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3645 3.4019 3.3711 3.3716 3.378  3.3899 2.1332 3.4151 3.4087 3.3963   3.4026 3.4089 3.3594 3.383  3.3459 3.3392 3.3459 3.3585 5.265  5.5321   5.3336 5.3333 5.3349 5.2002 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.599  1.6659 1.6    1.6674 3.4153 1.5343 3.3961 3.4288 3.4086 3.4093   3.3893 3.4089 3.3902 3.3963 3.4088 3.3773 3.3772 3.3904 3.3529 3.3519   3.3389 3.3461 3.3402 3.3647]]
908                   1.78708         1.10799         0.4128         0.14919          0.15008          0.09956          1.06962          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3648 3.4029 3.4662 3.3705 3.3769 3.3899 3.403  3.4149 3.4093 3.3963   3.4028 3.409  3.3589 3.3834 3.346  3.3391 3.3455 3.3581 3.3395 5.5341   5.3337 5.3328 5.3333 3.3331 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.6004 1.6645 3.4152 3.4213 1.603  3.4086 3.3969 3.4276 3.4091 3.4095   3.3896 3.4086 3.3905 3.3958 3.409  2.8671 3.3774 3.3898 3.3528 3.3516   3.3391 3.3455 3.34   3.3649]]
909                   1.61907         1.04472         0.38614         0.22918          0.22923          0.09034          0.96918          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.4003 3.4034 3.371  3.3711 3.3769 3.39   3.4026 3.415  3.4091 3.3958   3.4031 3.4086 3.3576 5.1327 3.3461 3.3404 3.3464 3.3579 3.3399 3.364   5.3348 5.3345 5.3329 5.199  3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   1.5993 1.6669 1.5998 3.4216 1.6012 1.5337 3.3963 3.4284 3.4093 3.4083   3.3899 3.4083 3.3903 3.396  3.4086 3.3772 3.3778 3.3903 3.3522 3.352   3.3387 3.3459 3.3394 3.3643]]
910                   1.55697         1.03211         0.38227         0.25874          0.25874          0.08822          0.96828          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3647 3.4025 3.3702 3.3715 3.3776 3.39   3.402  3.4147 3.4085 3.3964   3.4029 3.409  3.3582 3.3841 3.3456 3.3401 3.3468 3.3589 5.2657 5.5328   5.3329 5.3338 3.3458 5.1989 3.3774 3.415  3.4088 3.3962 2.5339 3.3962   1.5996 1.6672 1.6006 3.4214 1.6018 1.5328 3.3961 3.4272 3.4097 3.4091   3.3896 3.4081 3.3902 3.396  3.4087 3.377  3.3774 3.3904 3.3519 3.353   3.3394 3.3463 3.3393 3.3654]]
911                   1.54328         1.01829         0.38744         0.26526          0.26677          0.08907          0.96888          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3645 3.4028 3.3702 3.3712 3.3781 3.3898 3.4022 3.4149 3.4084 3.3959   3.4021 2.2    3.3584 5.1335 3.3458 3.3396 3.3459 3.3585 5.2687 3.3642   5.3352 5.3329 5.3326 5.2006 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4148 1.6675 1.5997 3.4211 1.6007 1.534  3.3956 3.4281 3.4089 3.4092   3.3899 3.4087 3.3903 3.396  3.4082 3.3772 3.3773 3.3896 3.3528 3.3523   3.3395 3.3458 3.3393 3.3644]]
912                   1.52701         1.02552         0.38867         0.273          0.27349          0.08882          0.96843          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3649 3.4027 3.371  3.3702 3.3768 3.3903 3.4024 3.4152 3.494  3.3957   3.4026 3.4086 3.3579 3.3835 3.3456 3.3406 3.3457 3.3587 5.2659 3.3649   5.3326 5.3333 5.3327 5.1996 2.4657 3.4151 3.4088 3.3962 3.3836 3.3962   1.5971 1.6657 3.4151 1.6666 3.4151 1.5331 3.3957 3.4272 3.4088 3.409   3.3905 3.4095 3.39   3.3964 3.4091 3.3774 3.3771 3.3898 3.352  3.3523   3.34   3.3462 3.339  3.3649]]
913                   1.66523         1.08809         0.43504         0.2072          0.21766          0.10112          1.06892          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3652 3.402  3.3713 3.3705 3.3771 3.3906 3.403  3.4146 3.4091 3.3959   3.4025 3.4084 3.3586 3.3831 3.3453 3.3396 3.3463 3.3581 5.2677 3.3653   5.3352 5.335  5.3333 5.1994 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.4143 3.4214 3.4152 1.6676 3.4155 3.4081 3.3966 3.4283 3.4083 3.4087   3.3901 3.4085 3.3897 3.3962 3.4093 3.3773 3.3774 3.3896 3.3516 3.3525   3.3394 3.3459 3.339  3.365 ]]
914                   1.50833         1.02193         0.38802         0.2819          0.28386          0.08752          0.96823          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.365  3.4029 3.3717 3.4663 3.3775 3.3897 3.4028 3.4155 3.4086 3.3958   3.4024 3.4088 3.3588 3.3831 3.3465 3.3395 3.3458 3.3586 5.2676 3.3652   5.3329 5.3336 5.3329 5.1998 3.3774 2.8665 3.4087 3.3961 3.3836 3.3962   3.4154 1.6667 3.4148 1.6674 1.5998 3.409  3.3965 3.4279 3.409  3.4098   3.3901 3.4076 3.39   3.3962 3.4093 2.8667 3.3774 3.3902 3.3521 3.3509   3.3394 3.3459 3.3397 3.3657]]
915                   1.58507         1.0437         0.40859         0.24536          0.25223          0.09422          1.0189          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3647 3.4032 3.3709 3.371  3.3776 3.39   3.4027 3.4147 3.409  3.3963   3.4025 3.409  3.3588 3.3832 3.3458 3.3401 3.3459 3.3586 5.2664 5.534   5.3338 5.3337 5.3341 5.2003 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4154 3.4213 3.4149 1.6666 1.6001 1.5329 3.3962 3.4276 3.4089 3.4089   3.3889 3.4086 3.39   3.3965 3.4088 3.3776 3.3774 3.3898 3.3528 3.3525   3.3398 3.3461 3.3401 3.3655]]
916                   1.5706         1.0289         0.37954         0.25225          0.25233          0.08782          0.96878          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3642 3.4021 3.3713 3.3704 3.3782 3.3897 3.4024 3.4152 3.4085 3.396   3.4027 3.4092 3.3588 3.3823 3.3457 3.34   3.3461 3.3583 3.3398 3.3652   5.3323 5.3326 5.3331 5.1996 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.6003 1.6665 3.4147 1.6669 1.6    3.4087 3.3946 3.4266 3.409  3.409   3.3901 3.4085 3.3908 3.3962 3.4088 3.377  3.3767 3.3898 3.3518 3.3522   3.34   3.3453 3.3396 3.3649]]
917                   1.46135         0.98099         0.36367         0.30426          0.30453          0.08258          0.88482          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3644 3.4027 3.3714 3.3707 3.3765 3.3891 3.4026 3.415  2.2026 3.3962   3.4026 3.408  3.3583 3.3841 3.346  3.3393 3.3456 3.3581 5.2675 3.3641   3.3453 5.3335 5.3333 5.1992 3.3774 3.415  3.4088 3.3962 3.3837 3.3962   1.6007 1.6643 1.6003 1.6685 3.415  3.4094 3.3964 3.4286 3.4085 3.4093   3.3898 3.4099 3.3901 3.396  3.4089 3.377  3.3772 3.39   5.1998 3.3513   3.3397 3.3463 3.3399 3.3645]]
918                   1.50477         1.01251         0.36828         0.28359          0.28405          0.08314          0.95078          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3996 3.4027 3.3717 3.3714 3.3779 3.3907 3.4027 2.2684 3.4081 3.396   3.4027 3.409  3.3576 3.3832 3.3463 3.3397 3.3467 3.3583 5.2644 5.5337   5.3341 5.3339 3.3456 5.1986 3.3774 3.4151 3.4088 3.3961 3.3836 3.3962   1.5997 1.6668 1.5996 1.6662 3.4154 3.4083 3.3964 3.4279 3.4085 3.4074   3.3895 3.4087 3.3898 3.3962 3.4087 3.3772 3.3774 3.39   3.3514 3.3522   3.3391 3.3462 3.3393 3.3655]]
919                   1.75057         1.12841         0.42855         0.16657          0.16958          0.10087          1.13343          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4006 3.4031 3.467  3.3712 3.3766 3.3899 3.4025 3.4147 3.4084 3.3962   3.4022 3.4088 3.359  3.3831 3.3461 3.3398 3.3467 3.3582 5.2669 5.5317   3.3459 3.3457 5.331  5.1994 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4152 3.4213 1.6016 1.667  3.4146 3.4085 3.3968 3.4276 3.4084 3.4091   3.3899 3.4094 3.3898 3.3968 3.1971 3.3772 3.3773 3.3898 3.3522 3.3522   3.3402 3.3452 3.3392 3.3645]]
920                   1.57814         1.04992         0.39321         0.24866          0.24921          0.0901          0.96838          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3653 3.4022 3.3714 3.3715 3.3778 3.3897 3.4022 3.415  3.4085 3.3957   3.4025 3.4086 3.3577 3.3841 3.3459 3.3396 3.3462 3.358  5.2676 3.3649   5.3328 3.3453 5.3347 5.2003 3.3774 3.4151 2.8011 3.3962 3.3836 3.3962   3.4148 1.6673 1.5998 1.6666 3.4151 3.4083 3.3968 3.4269 3.4086 3.4085   3.3907 3.4077 3.39   3.3963 3.4087 3.3772 3.3777 3.3903 3.3524 3.3517   3.3395 3.3453 3.3391 3.365 ]]
921                   1.66748         1.07943         0.39643         0.20613          0.20643          0.09293          1.01915          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3643 3.4023 3.3714 3.3711 3.3776 3.3899 3.4024 3.4154 3.4085 3.396   3.4025 3.4083 3.3586 3.3842 3.3462 3.3401 3.3455 3.3585 3.3394 3.3645   3.3463 5.3315 5.3342 5.1991 3.3774 3.415  3.4088 3.3962 3.3836 3.3962   3.4149 1.6667 1.5996 1.6669 3.4153 1.5339 3.396  3.4272 3.4087 3.4088   3.3895 3.4088 3.3896 3.3961 3.4087 3.3772 3.3772 3.3902 3.3523 3.3525   3.3394 3.3469 3.3403 3.364 ]]
922                   1.6387         1.03369         0.39062         0.21983          0.22053          0.09291          1.0184          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3654 3.4022 3.3704 3.3702 3.3778 3.3901 3.4025 3.4151 3.4089 3.3963   3.4019 3.4089 3.3577 3.3847 3.3455 3.3392 3.3463 3.3587 5.2665 5.5339   5.3335 5.3335 5.3333 3.3334 3.3774 3.4151 3.4088 2.6666 3.3837 3.3962   1.5996 3.4215 1.6006 1.6662 3.415  1.5321 3.3969 3.4274 3.409  3.4084   3.3901 3.4086 3.3902 3.396  3.4092 3.3781 3.3772 3.3897 3.3514 3.353   3.3402 3.3456 3.3398 3.3651]]
923                   1.51606         1.00339         0.38647         0.27822          0.27986          0.08906          0.96833          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.365  3.4024 3.3724 3.3708 3.3771 3.3897 3.4023 3.4149 3.4093 3.3963   3.4025 2.2    3.3576 3.3845 3.3462 3.3404 3.3463 3.3579 5.2672 3.3645   5.3328 5.3334 5.3335 5.1994 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   1.6017 1.6701 1.6003 3.4215 3.4161 3.4088 3.3953 3.4265 3.4087 3.4087   3.3895 3.4092 3.3901 3.3963 3.409  3.3776 3.3772 3.3904 3.3522 3.352   3.3397 3.3452 3.3402 3.365 ]]
924                   1.67521         1.0713         0.3931         0.20245          0.20256          0.09301          1.06872          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3641 3.4025 3.3706 3.3711 3.3779 3.3894 3.4027 3.4149 3.409  3.3963   3.4016 3.4088 3.359  3.3843 3.346  3.3389 3.3458 3.3599 3.3395 5.5333   5.3325 3.3465 5.3334 5.2001 3.3774 3.4151 3.4087 3.3962 3.3836 3.3962   1.6003 1.6659 1.6006 3.4214 1.5999 3.4089 3.3952 3.4269 3.4094 3.4085   3.3903 3.4089 3.3903 3.3962 3.4092 3.377  3.3773 3.3888 3.3529 3.3515   3.3389 3.3462 3.3399 3.3653]]
925                   1.64263         1.0721         0.4262         0.21796          0.22251          0.09974          1.01875          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3651 3.4032 3.3702 3.3719 3.3776 3.3894 3.402  3.4154 3.4088 3.3964   3.4028 3.4086 3.3585 3.3829 3.3457 3.3398 3.3468 3.3579 5.2668 3.3645   5.3327 5.3333 5.3332 5.2004 3.3773 3.4151 3.4087 3.3962 2.5334 3.3962   1.6002 3.4218 3.4152 3.4217 1.6006 3.4086 3.3959 3.4282 3.4093 3.4097   3.3897 3.4087 3.3906 3.3967 3.4087 3.3774 3.3776 3.39   3.3534 3.3527   3.3395 3.3467 3.3391 3.3648]]
926                   1.90498         1.17         0.44238         0.09306          0.09407          0.10816          1.25407          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4    3.4024 3.3708 3.3713 3.3778 3.3897 3.4022 3.4158 3.4084 3.3964   3.4028 3.4085 3.3583 3.3825 3.3451 3.3398 3.3459 3.3585 5.2665 5.5333   3.3458 5.3337 3.3459 3.3333 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   1.6007 3.4208 3.4154 3.4215 1.6008 3.4087 3.3958 3.427  3.4085 3.4083   3.3896 3.4091 3.39   3.3969 3.4088 3.3775 3.3766 3.3901 3.3524 3.3528   3.3393 3.3453 3.3395 3.365 ]]
927                   1.77964         1.13974         0.41916         0.15273          0.15279          0.09957          1.13477          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.4006 3.4016 3.3711 3.3712 3.3764 3.3898 3.4027 3.4146 3.4085 3.3959   3.4033 3.4088 3.3587 3.3837 3.3452 3.3396 3.3454 3.3584 5.2669 5.5329   3.3462 3.3459 3.3462 5.2005 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4151 3.4216 1.602  1.6671 1.601  3.4089 3.3959 3.4274 3.4081 3.4091   3.39   3.4094 3.3901 3.3959 3.4093 3.3769 3.3774 3.3901 3.3519 3.3518   3.3394 3.3453 3.34   3.365 ]]
928                   1.37371         0.94789         0.36007         0.34599          0.34727          0.07995          0.76482          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3653 3.4027 3.3712 3.3704 3.3768 3.6667 3.4026 3.4151 3.4089 3.3963   3.403  3.4088 3.3576 3.3839 3.3459 3.3391 3.3469 3.3597 5.2665 3.3646   5.3327 5.3317 5.3322 5.2006 3.3773 3.415  3.4088 3.3962 3.3836 3.3962   1.5997 1.6666 3.4153 1.6655 1.6004 1.5327 3.3961 3.4276 3.4093 3.409   3.3896 3.4094 3.3905 3.3969 3.4085 3.3774 3.3778 3.3897 3.3527 3.3524   3.3396 5.1328 3.3398 3.3651]]
929                   1.56809         1.04192         0.38968         0.25345          0.25352          0.08949          0.96838          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3649 3.4024 3.4662 3.3708 3.3777 3.3906 3.402  3.4154 3.4089 3.3965   3.4025 3.4085 3.3589 3.3833 3.3459 3.3401 3.3457 3.3585 5.2666 3.365   5.3321 3.3455 5.3334 5.1999 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.4146 1.6663 1.6011 1.6675 3.4155 1.5336 3.3959 3.4277 3.4084 3.4088   3.3903 3.4094 3.3896 3.3964 3.4086 3.3772 3.3776 3.3898 3.3533 3.3529   3.3395 3.3457 3.3411 3.365 ]]
930                   1.73968         1.11331         0.40253         0.17176          0.17342          0.09551          1.06852          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3642 3.4016 3.3716 3.3703 3.5338 3.3888 3.4026 3.4149 3.409  3.3957   3.4021 3.4088 3.3591 3.3835 3.3451 3.3392 3.3453 3.3587 3.3402 3.3645   3.3453 3.346  5.3332 5.1996 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4149 1.6666 1.5996 1.6673 3.4148 1.5328 3.3962 3.4278 3.4086 3.4083   3.3894 3.4089 3.39   3.3958 3.409  3.3782 3.3777 3.3898 3.3523 3.3529   3.3391 3.345  3.3397 3.365 ]]
931                   1.58239         1.05773         0.39433         0.24664          0.24665          0.09038          0.96883          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3644 3.4027 3.3703 3.3709 3.3765 3.3897 3.4028 3.4155 3.4086 3.396   3.4028 3.4097 3.3587 3.3832 3.3456 3.3397 3.3462 3.3578 5.2659 3.3646   5.3345 5.3331 3.3456 5.1991 3.3774 3.4151 3.4088 3.3962 2.5322 3.3962   3.4152 1.667  3.4147 1.6666 1.6007 1.5343 3.3956 3.4278 3.4093 3.4085   3.3905 3.4089 3.3899 3.3961 3.4091 3.378  3.3775 3.3899 3.3527 3.3523   3.3397 3.346  3.3395 3.3648]]
932                   1.54307         1.01645         0.37766         0.26536          0.26551          0.08735          0.96828          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3649 3.4025 3.3709 3.4663 3.3769 3.3895 3.4025 3.4152 3.4085 3.3955   3.4023 3.4087 3.358  3.3844 3.3464 3.3404 3.3466 3.3577 5.2667 5.5341   5.3321 3.3462 5.3331 5.1995 3.3774 3.4151 3.4087 3.3962 3.3837 3.3962   1.6009 1.6655 1.5997 3.4213 1.5996 1.5336 3.3958 3.4277 3.4084 3.4092   3.3909 3.4084 3.3898 3.3964 3.4089 3.3774 3.3774 3.3896 3.3523 3.3521   3.3395 3.3459 3.34   3.3652]]
933                   1.82798         1.14596         0.4209         0.12971          0.13052          0.10164          1.06942          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3647 3.402  3.3712 3.4672 3.3773 3.3896 3.4029 3.4153 3.409  3.3969   3.4026 3.4088 3.359  3.3838 3.346  3.3395 3.3456 3.3584 5.2673 3.3648   5.3326 3.3461 3.3461 3.3334 3.3774 3.4151 3.4088 3.3962 2.5342 3.3962   1.6011 1.6671 1.6    3.4212 3.4147 3.4085 3.3956 3.4282 3.409  3.4074   3.3885 3.4086 3.3897 3.396  3.4091 3.3776 3.377  3.39   3.3513 3.3525   3.3393 3.3455 3.3391 3.3649]]
934                   1.60286         1.06114         0.39882         0.2369          0.23787          0.0918          1.019          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3646 3.4029 3.371  3.3707 3.3769 3.3899 3.4024 3.4145 3.4086 3.3961   3.4027 3.4085 3.3579 3.3832 3.3464 3.34   3.346  3.3583 5.2684 3.365   3.3458 5.3319 5.3341 5.1996 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.4152 1.6669 3.415  1.666  1.6009 3.4087 3.3961 3.4269 3.4086 3.4084   3.3902 3.4084 3.3901 3.3965 3.4088 3.3772 3.3777 3.3898 3.352  3.3525   3.3392 3.3459 3.3407 3.3644]]
935                   1.60326         1.0613         0.39891         0.2367          0.23767          0.09182          1.0189          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3652 3.4031 3.3706 3.3706 3.377  3.3893 3.4023 3.4151 3.4088 3.3962   3.4026 3.4084 3.3588 3.3839 3.3453 3.3401 3.3452 3.3585 5.2662 3.3645   5.3325 3.3458 5.3327 5.1991 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.415  1.6686 3.4153 1.6668 1.599  3.4089 3.3961 3.4277 3.4091 3.4086   3.3889 3.4087 3.3897 3.3966 3.4084 3.3777 3.3771 3.3893 3.3518 3.3527   3.3392 3.3462 3.339  3.365 ]]
936                   1.57137         1.03167         0.40435         0.25188          0.25619          0.09369          0.96898          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.3649 3.4027 3.3711 3.3701 3.5332 3.3903 3.4029 3.4148 3.4086 3.397   3.4024 2.1994 3.3586 3.3837 3.3458 3.3396 3.3457 3.3585 5.2663 3.3652   5.3337 5.335  5.3335 5.1995 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.6013 3.421  3.4152 1.6672 3.4146 3.4088 3.3958 3.4275 3.4089 3.4088   3.39   3.4091 3.3897 3.3962 3.4086 3.3772 3.3769 3.3902 3.3525 3.3519   3.34   3.3462 3.3398 3.3638]]
937                   1.60681         1.04834         0.37139         0.23501          0.23536          0.08636          1.0188          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.365  3.4022 3.3705 3.3712 3.377  3.3894 3.4029 3.4159 3.4089 3.396   3.4027 3.4093 3.3588 3.3837 3.3464 3.3406 3.3464 3.3587 3.3399 5.533   5.3329 3.346  5.3337 5.2    3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   1.6002 1.6685 1.6    1.6673 1.6001 3.4083 3.3962 3.4275 3.409  3.4092   3.3894 3.4089 3.3899 3.3964 3.4088 3.3776 2.8673 3.3901 3.3523 3.3519   3.34   3.3459 3.3397 3.3646]]
938                   1.82743         1.13816         0.41819         0.12998          0.13006          0.10098          1.13477          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3645 3.4032 3.3715 3.372  3.3774 3.3896 3.4025 3.4151 3.4092 3.3959   3.4026 3.4086 3.3583 3.3839 3.3452 3.3398 3.3461 3.3588 5.2668 5.533   5.3335 3.3461 3.3462 3.3336 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   1.5993 3.4217 1.6005 1.6674 3.4155 3.4089 3.397  3.4262 3.4087 3.4091   3.3898 3.4091 3.3892 3.3961 3.4091 3.3774 3.3775 3.3896 3.353  3.3523   3.3392 3.3456 3.3396 3.3657]]
939                   1.39134         0.94161         0.34488         0.3376          0.33804          0.07749          0.80095          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3657 3.4027 3.3717 3.3716 3.3771 3.39   3.4029 3.4151 3.4091 3.3963   3.4024 3.4087 3.3581 3.3843 3.3461 3.3393 3.3464 3.3584 5.2653 5.5325   5.3339 5.3335 5.3329 5.2005 3.3773 3.4151 2.8024 2.6675 3.3837 3.3961   1.6021 1.6673 1.5999 1.6672 1.601  3.4091 3.3965 3.4275 3.4088 3.4091   3.3902 3.4077 3.3903 3.3966 3.4082 3.3772 3.3777 3.3896 3.3526 3.3523   3.3394 3.3464 3.3399 3.3649]]
940                   1.82996         1.12094         0.39569         0.12877          0.13494          0.09728          1.06937          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3652 3.4027 3.4677 3.3708 3.3773 3.3899 3.4027 3.4153 3.4098 2.0675   3.4023 3.4082 3.3584 3.3839 3.3466 3.3401 3.3461 3.3584 3.3396 5.5309   5.3328 3.3457 3.3463 3.333  3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   1.6015 1.6672 1.6001 3.421  1.6    1.5343 3.396  3.4274 3.4087 3.4089   3.3899 3.4085 3.3893 3.3963 3.4095 3.3775 3.3774 3.3899 3.354  3.3521   3.3393 3.3463 3.3397 3.3657]]
941                   1.60484         1.06741         0.40581         0.23595          0.23669          0.09373          1.01895          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.3641 3.402  3.3719 3.3716 3.3775 3.3903 3.4026 3.4144 3.4086 3.3964   3.4024 3.4084 3.3592 3.3828 3.3463 3.3396 3.3459 3.3581 5.2663 3.3645   3.3453 5.336  3.3455 5.2006 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   1.6    1.6663 3.4155 3.4216 1.5999 3.409  3.3964 3.4273 3.4094 3.4094   3.3901 3.4088 3.3903 3.3964 3.4083 3.3773 3.3777 3.3904 3.352  3.3522   3.3394 3.3459 5.0666 3.3648]]
942                   2.59246         1.43439         0.61712         -0.23424          -0.06439          0.15644          1.40908          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.8585 4.0572 4.0104 3.9358 3.9461 4.015  4.0074 4.0823 4.1264 3.9695   3.9773 3.9054 3.8879 3.9024 3.9484 3.9493 3.8929 3.7988 3.8355 3.9876   3.9442 3.9171 3.8353 3.8287 4.0067 4.0213 3.7959 3.8961 4.1271 4.0253   3.9775 4.065  4.0077 4.1122 4.1325 4.0542 4.0686 4.0797 4.0446 4.0328   3.9432 3.9355 4.0895 3.9117 4.0169 4.0323 4.1123 4.0344 4.1429 3.8323   4.0392 3.993  3.9646 3.8066]]
943                   2.5364         1.40791         0.60878         -0.20755          -0.03862          0.15391          1.41173          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[4.0132 4.0283 3.8371 4.017  3.9772 3.9402 4.021  4.0216 3.8807 3.8934   4.0111 3.9544 3.9346 3.9258 3.9796 4.1084 3.994  3.9118 3.8733 4.0802   3.9358 3.8252 3.8181 3.7919 3.8984 4.0224 4.0642 3.8786 3.954  3.9328   4.0521 4.0155 3.9077 4.066  4.0878 4.123  4.0926 4.0828 4.0371 3.8417   4.0064 4.1205 4.028  3.9357 3.9153 4.0138 4.016  4.0005 3.9837 3.9926   4.0146 3.9673 4.0136 3.9949]]
944                   2.51968         1.40223         0.60586         -0.19959          -0.03441          0.153          1.39513          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[4.0241 3.8382 3.9941 4.0205 3.9345 4.0156 4.1341 4.0758 4.088  4.0415   4.0893 3.995  3.9737 3.8764 3.8237 3.9098 4.0835 3.9631 3.9398 3.9303   3.9533 3.8742 3.9231 3.8768 3.8803 4.0389 3.9823 4.009  4.0519 3.888   3.9274 4.0585 4.0006 3.9776 4.0185 3.9627 3.7897 4.027  3.9358 4.0092   3.9578 3.8922 4.0435 3.9579 4.0817 3.9773 3.8865 3.9674 3.9098 3.9233   3.9815 3.9904 4.0751 3.8941]]
945                   2.563         1.42348         0.6118         -0.22022          -0.05596          0.15483          1.45033          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.9978 4.1211 3.9424 3.8945 3.8622 3.9563 4.0845 4.0738 4.1412 3.9848   3.99   4.1595 3.8927 3.9954 3.8294 3.9551 3.9522 3.9843 3.8697 3.7738   4.0344 3.881  3.9514 3.8846 3.9674 4.0082 3.9018 3.9189 3.9306 3.9934   4.0817 4.0006 3.8918 3.8711 4.0939 3.9974 4.115  4.033  3.971  3.98   3.8287 4.0318 3.968  4.008  3.982  4.0878 3.9723 3.9567 3.8061 3.9269   4.1145 3.8687 3.9142 3.9515]]
946                   2.18355         1.29578         0.48326         -0.03957          -0.03832          0.12245          1.3575          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.315  3.35   3.3189 3.319  3.3281 3.3404 3.3522 3.3642 3.3583 3.3465   3.3515 3.3562 3.3076 3.3306 3.2935 3.2873 3.2934 3.3062 3.2909 3.3133   3.2963 3.2943 3.2949 3.2808 3.3257 3.3647 3.3577 3.3478 3.3338 3.345   3.3647 3.3702 3.3621 3.3699 3.3647 3.3573 3.3453 3.3778 3.3568 3.3588   3.3371 3.356  3.3396 3.345  3.3592 3.3261 3.3257 3.3387 3.3023 3.2981   3.2894 3.2942 3.2881 3.313 ]]
947                   2.18349         1.29567         0.48327         -0.03954          -0.03831          0.12245          1.35848          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3126 3.3515 3.3195 3.3212 3.3263 3.3397 3.352  3.3638 3.3582 3.3444   3.3527 3.359  3.3063 3.3328 3.2943 3.288  3.2949 3.3079 3.2868 3.3161   3.2952 3.2966 3.2961 3.283  3.3264 3.3654 3.3566 3.3432 3.3345 3.3464   3.3645 3.3722 3.3671 3.372  3.3628 3.3596 3.3452 3.3742 3.3593 3.3582   3.338  3.3568 3.3385 3.3438 3.3596 3.3266 3.3265 3.3388 3.3013 3.3008   3.2889 3.2948 3.288  3.3141]]
948                   2.18301         1.29569         0.48324         -0.03931          -0.03808          0.12242          1.35745          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.313  3.3524 3.3183 3.3189 3.3273 3.3417 3.3498 3.3645 3.3571 3.3466   3.3515 3.3611 3.3108 3.3323 3.2957 3.2915 3.2964 3.3072 3.29   3.314   3.2956 3.2943 3.293  3.2799 3.3245 3.3636 3.3569 3.3444 3.3325 3.3481   3.3645 3.3693 3.363  3.3694 3.3617 3.3611 3.3469 3.3768 3.3588 3.3578   3.3376 3.3566 3.3403 3.3438 3.3589 3.3265 3.3268 3.3379 3.2995 3.301   3.2891 3.2946 3.2882 3.3138]]
949                   2.18367         1.29583         0.48326         -0.03962          -0.03837          0.12245          1.35855          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3115 3.352  3.3207 3.3185 3.3287 3.3393 3.3511 3.3629 3.3597 3.3455   3.3494 3.3559 3.3068 3.3326 3.2929 3.2884 3.2945 3.3054 3.2898 3.3142   3.2939 3.2958 3.2942 3.2818 3.3231 3.3636 3.3579 3.3447 3.3349 3.344   3.3641 3.3697 3.3646 3.3705 3.3625 3.3585 3.3446 3.3768 3.3602 3.3594   3.3404 3.3586 3.3393 3.3459 3.3566 3.3264 3.3253 3.3384 3.2989 3.301   3.2881 3.2959 3.2877 3.3136]]
950                   2.22295         1.31853         0.49882         -0.05832          -0.05809          0.12581          1.35918          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3822 3.419  3.3912 3.324  3.5161 3.3361 3.4204 3.4332 3.4298 3.4141   3.4206 3.3546 3.3097 3.4    3.366  3.2862 3.2946 3.3777 3.2828 3.307   3.2953 3.2898 3.3642 3.3511 3.3257 3.4327 3.4273 3.4108 3.5146 3.5474   3.3601 3.3679 3.4335 3.6014 3.3538 3.4287 3.5194 3.4441 3.4267 3.43   3.5404 3.3504 3.5403 3.5572 3.3614 3.3956 3.5596 3.525  3.3002 3.3679   3.286  3.5056 3.2861 3.5025]]
951                   2.18159         1.29983         0.49151         -0.03864          -0.0386          0.12355          1.35485          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.384  3.4223 3.4996 3.3863 3.3174 3.3394 3.354  3.4346 3.3506 3.3334   3.4216 3.3559 3.376  3.34   3.2932 3.3014 3.2894 3.3778 3.3576 3.3829   3.3657 3.3669 3.2926 3.4793 3.3185 3.4332 3.4292 3.4144 3.3414 3.415   3.434  3.3607 3.4309 3.4392 3.3635 3.4274 3.4176 3.3716 3.4271 3.427   3.4095 3.5674 3.4058 3.553  3.3538 3.3954 3.5391 3.5409 3.3045 3.5176   3.2889 3.2903 3.2815 3.3841]]
952                   2.17867         1.30092         0.49347         -0.03724          -0.03713          0.12367          1.36023          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3852 3.422  3.3872 3.5281 3.3231 3.411  3.344  3.3622 3.3531 3.4106   3.4176 3.3512 3.3085 3.5161 3.5034 3.3577 3.2858 3.5107 3.3592 3.3091   3.3639 3.365  3.3664 3.3498 3.3173 3.4341 3.4264 3.4139 3.3279 3.3485   3.581  3.4421 3.3687 3.3659 3.3571 3.4256 3.3458 3.4466 3.3623 3.4232   3.4029 3.5591 3.5403 3.4176 3.5553 3.5161 3.3949 3.4104 3.346  3.372   3.2878 3.3631 3.2856 3.3846]]
953                   2.18955         1.30164         0.49469         -0.04243          -0.0424          0.12444          1.3601          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3125 3.3519 3.3857 3.3907 3.3918 3.4092 3.4192 3.5879 3.3606 3.4149   3.3504 3.4282 3.309  3.404  3.2944 3.3566 3.2962 3.4992 3.2832 3.3825   3.3651 3.3601 3.3672 3.3527 3.3952 3.4352 3.5464 3.4168 3.322  3.416   3.4346 3.4409 3.435  3.4389 3.4351 3.4298 3.3427 3.4495 3.3526 3.4222   3.4082 3.4274 3.3337 3.4147 3.3596 3.321  3.3173 3.3362 3.5221 3.3691   3.3574 3.3589 3.3552 3.3815]]
954                   2.18066         1.30115         0.49202         -0.03819          -0.03819          0.12355          1.40755          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3644 3.4021 3.3704 3.3702 3.3765 3.3887 3.4025 3.4143 3.4083 3.3949   3.4006 3.4076 3.3578 3.383  3.3452 3.3382 3.3441 3.3569 3.3389 3.3639   3.3448 3.3447 3.3451 3.3331 3.3764 3.4143 3.408  3.3953 3.3828 3.3954   3.4145 3.4208 3.4146 3.4202 3.4148 3.4078 3.396  3.4272 3.408  3.407   3.3884 3.4083 3.3891 3.3954 3.4075 3.3763 3.3761 3.3892 3.3511 3.3511   3.3382 3.3445 3.3396 3.3637]]
955                   2.18057         1.30116         0.49201         -0.03815          -0.03815          0.12354          1.40775          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3635 3.4011 3.3704 3.3694 3.3758 3.3901 3.4014 3.4139 3.4081 3.3953   3.4021 3.4079 3.3577 3.3825 3.3445 3.3384 3.3452 3.3574 3.3385 3.364   3.345  3.3445 3.3447 3.3324 3.3764 3.4141 3.4081 3.3951 3.3826 3.3955   3.4142 3.4203 3.4143 3.4203 3.4141 3.4076 3.3949 3.427  3.4079 3.4073   3.3894 3.4082 3.3887 3.3952 3.408  3.3766 3.3765 3.3905 3.3512 3.3518   3.3388 3.3455 3.3386 3.3629]]
956                   2.18041         1.30108         0.49198         -0.03807          -0.03807          0.12354          1.4076          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3638 3.4019 3.3699 3.3697 3.3766 3.3881 3.4016 3.4139 3.4071 3.3947   3.4019 3.408  3.3573 3.3823 3.3448 3.3387 3.3449 3.357  3.339  3.3643   3.3452 3.3448 3.3448 3.3332 3.3767 3.4143 3.4078 3.3955 3.3829 3.3952   3.4133 3.4209 3.4144 3.4207 3.4142 3.4076 3.3952 3.4263 3.4076 3.4082   3.3894 3.4081 3.3898 3.3959 3.4077 3.3766 3.3769 3.3896 3.3513 3.3511   3.3383 3.3449 3.3386 3.3642]]
957                   2.18036         1.30104         0.49199         -0.03805          -0.03805          0.12354          1.4076          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3655 3.4019 3.3705 3.3703 3.3772 3.389  3.402  3.4142 3.4087 3.3952   3.4022 3.4082 3.358  3.3829 3.3453 3.339  3.3449 3.3576 3.3386 3.3647   3.3446 3.3449 3.3452 3.3322 3.3766 3.414  3.4079 3.3952 3.3828 3.3953   3.4146 3.42   3.4144 3.4211 3.4148 3.4082 3.3953 3.4261 3.4083 3.4078   3.389  3.407  3.3888 3.3953 3.4074 3.3767 3.3762 3.3894 3.3513 3.3517   3.3395 3.3444 3.3389 3.3637]]
958                   2.29686         1.34736         0.55164         -0.09351          -0.04618          0.13691          1.52745          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.6556 3.762  3.7036 3.6236 3.6571 3.7373 3.7076 3.7455 3.741  3.7297   3.7313 3.6621 3.7078 3.7225 3.6846 3.6823 3.6277 3.6682 3.5824 3.6669   3.7071 3.6477 3.6389 3.6299 3.6354 3.7212 3.7112 3.7555 3.6812 3.7373   3.692  3.8083 3.7592 3.7531 3.6866 3.7271 3.6354 3.7988 3.698  3.6845   3.6728 3.821  3.7306 3.6205 3.7428 3.764  3.7871 3.6983 3.6147 3.6648   3.6709 3.6418 3.692  3.6653]]
959                   2.30923         1.34686         0.55189         -0.0994          -0.05383          0.13754          1.5207          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.6486 3.72   3.6682 3.6787 3.6035 3.6878 3.6308 3.6993 3.7407 3.6868   3.7498 3.7547 3.7093 3.6758 3.6312 3.6134 3.5628 3.6518 3.6093 3.6068   3.6453 3.7084 3.6319 3.6841 3.7586 3.7497 3.7721 3.704  3.6505 3.7316   3.7943 3.8356 3.7113 3.7923 3.7001 3.7321 3.6735 3.7699 3.7006 3.7087   3.6728 3.7498 3.6306 3.7678 3.7254 3.6983 3.6433 3.677  3.7374 3.6622   3.6542 3.6749 3.6156 3.6808]]
960                   2.28782         1.34633         0.5506         -0.08921          -0.04352          0.13642          1.55215          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.6249 3.748  3.7095 3.5712 3.6399 3.7357 3.7592 3.7243 3.6805 3.7526   3.797  3.6668 3.6825 3.663  3.6623 3.7581 3.6204 3.6435 3.6958 3.6581   3.6472 3.598  3.6927 3.5886 3.6074 3.7549 3.7497 3.7166 3.7033 3.6927   3.6984 3.772  3.7938 3.7053 3.8006 3.6873 3.6935 3.7502 3.7018 3.6963   3.6974 3.7298 3.6779 3.6839 3.6898 3.7235 3.7169 3.6864 3.6588 3.6509   3.656  3.6639 3.7105 3.607 ]]
961                   2.2642         1.33446         0.5442         -0.07796          -0.03474          0.13478          1.50672          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.7105 3.6991 3.7054 3.6969 3.6904 3.6581 3.6722 3.784  3.7088 3.7444   3.671  3.7776 3.6129 3.7123 3.6604 3.6454 3.6506 3.7157 3.6144 3.6844   3.7214 3.604  3.6233 3.6572 3.7094 3.6825 3.7179 3.6785 3.6327 3.6616   3.7474 3.6825 3.6562 3.7181 3.6975 3.7001 3.6722 3.7076 3.7336 3.669   3.8021 3.7352 3.6931 3.7066 3.665  3.6411 3.6922 3.6871 3.6601 3.5985   3.6757 3.6677 3.5662 3.66  ]]
962                   2.18204         1.29553         0.48365         -0.03885          -0.03776          0.12245          1.3592          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.319  3.3555 3.3231 3.3253 3.3301 3.3403 3.3544 3.3663 3.3599 3.347   3.3536 3.359  3.3128 3.3357 3.2996 3.292  3.2964 3.3117 3.2906 3.3164   3.2992 3.2964 3.2999 3.2842 3.3273 3.3674 3.3594 3.3469 3.3349 3.3482   3.3661 3.3748 3.3689 3.3735 3.367  3.3618 3.3474 3.3809 3.3624 3.3577   3.3423 3.3601 3.3427 3.3473 3.3611 3.3284 3.3296 3.3433 3.3063 3.3038   3.292  3.3    3.2915 3.3184]]
963                   2.18325         1.29614         0.48383         -0.03943          -0.03834          0.12251          1.3592          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.32   3.3536 3.3223 3.3225 3.3293 3.3419 3.3555 3.3692 3.3594 3.3524   3.3547 3.3628 3.3111 3.3346 3.2955 3.2929 3.296  3.3104 3.2911 3.3168   3.2991 3.2984 3.2962 3.286  3.3283 3.3656 3.359  3.3494 3.3367 3.3493   3.3647 3.3742 3.3665 3.3733 3.3674 3.3587 3.3471 3.3815 3.361  3.3616   3.3442 3.3625 3.342  3.3522 3.3598 3.3285 3.3305 3.3433 3.3071 3.3019   3.2924 3.297  3.2905 3.3155]]
964                   2.18244         1.29573         0.48373         -0.03904          -0.03796          0.12247          1.36075          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3174 3.3537 3.3254 3.3244 3.3326 3.3436 3.3555 3.3655 3.3619 3.3497   3.3559 3.3626 3.3116 3.3347 3.2958 3.292  3.2998 3.3102 3.2935 3.3166   3.2972 3.2995 3.2982 3.2874 3.3289 3.3659 3.3613 3.3483 3.3362 3.348   3.3673 3.3731 3.3675 3.3739 3.3677 3.3588 3.3466 3.3813 3.3612 3.3614   3.3435 3.3608 3.3416 3.3455 3.3607 3.3299 3.3286 3.3431 3.3014 3.3063   3.2923 3.2971 3.2904 3.3173]]
965                   2.18326         1.2961         0.48378         -0.03943          -0.03833          0.1225          1.35995          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3176 3.3553 3.3235 3.3239 3.3298 3.3405 3.3552 3.3707 3.3597 3.3483   3.3548 3.3605 3.3107 3.3342 3.2972 3.2924 3.2975 3.3103 3.2912 3.3154   3.2979 3.2977 3.2965 3.2846 3.3278 3.3664 3.3602 3.3487 3.3361 3.3477   3.365  3.3715 3.3636 3.3748 3.3682 3.3616 3.3487 3.3794 3.361  3.3596   3.3445 3.3627 3.3447 3.3465 3.3629 3.3284 3.3278 3.3423 3.3013 3.3046   3.2902 3.2976 3.2936 3.315 ]]
966                   2.18622         1.30304         0.4922         -0.04084          -0.04083          0.12376          1.40475          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3844 3.3397 3.3907 3.3629 3.3701 3.3822 3.3974 3.4077 3.4046 3.3892   3.4089 3.4299 3.3772 3.4013 3.3428 3.3578 3.3657 3.3015 3.3585 3.384   3.2907 3.3416 3.3385 3.3281 3.3084 3.4354 3.4273 3.3889 3.4039 3.3931   3.4102 3.4166 3.3637 3.4441 3.408  3.4039 3.3899 3.4228 3.418  3.4049   3.3989 3.4049 3.4115 3.3412 3.4283 3.3724 3.3698 3.3824 3.3731 3.2972   3.2849 3.3399 3.335  3.386 ]]
967                   2.18088         1.30297         0.49304         -0.0383          -0.03829          0.12367          1.39205          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.31   3.3948 3.3651 3.3796 3.3677 3.4088 3.4232 3.4138 3.3833 3.3297   3.4223 3.4294 3.3775 3.3322 3.3402 3.3328 3.357  3.3551 3.3341 3.3599   3.339  3.3483 3.3646 3.3527 3.3238 3.4345 3.4039 3.3902 3.3843 3.3924   3.4082 3.4415 3.4109 3.4261 3.4084 3.4008 3.4185 3.4474 3.4297 3.402   3.3774 3.3552 3.4099 3.4151 3.4163 3.3584 3.324  3.4093 3.3447 3.3455   3.333  3.3645 3.3598 3.391 ]]
968                   2.17249         1.29863         0.49079         -0.0343          -0.0343          0.12308          1.39365          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3572 3.395  3.3162 3.3638 3.3973 3.3861 3.3976 3.412  3.4043 3.4148   3.3964 3.4301 3.3795 3.3773 3.3648 3.3518 3.2913 3.3524 3.3368 3.3766   3.3494 3.3675 3.3649 3.3553 3.392  3.4346 3.3843 3.3903 3.3765 3.415   3.407  3.3653 3.4342 3.4174 3.4351 3.4033 3.4162 3.4237 3.403  3.404   3.3991 3.4268 3.4104 3.3297 3.3381 3.3959 3.3728 3.3824 3.3725 3.3455   3.3358 3.2903 3.3626 3.3586]]
969                   2.18649         1.30232         0.49239         -0.04097          -0.04096          0.12383          1.4267          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3603 3.4203 3.363  3.3915 3.3703 3.408  3.3955 3.4208 3.4035 3.3919   3.3951 3.427  3.3636 3.4055 3.3401 3.285  3.3676 3.3533 3.3615 3.3619   3.34   3.3646 3.3499 3.3274 3.3746 3.4178 3.4264 3.3882 3.3184 3.3889   3.4087 3.4164 3.4088 3.371  3.4114 3.4289 3.3963 3.434  3.4274 3.4308   3.3406 3.4271 3.3872 3.4154 3.4283 3.32   3.3714 3.3371 3.3766 3.3469   3.3324 3.3422 3.2997 3.3843]]
970                   2.1804         1.30118         0.49209         -0.03807          -0.03807          0.12355          1.408          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.365  3.4027 3.3706 3.3705 3.376  3.3896 3.4017 3.4148 3.408  3.3954   3.4026 3.408  3.3582 3.3836 3.3454 3.3393 3.3468 3.3582 3.3388 3.3645   3.3458 3.3455 3.3456 3.3326 3.3768 3.4146 3.4085 3.3958 3.3833 3.3957   3.4148 3.4212 3.4143 3.4205 3.4144 3.4085 3.3965 3.4273 3.4092 3.4094   3.3895 3.408  3.3897 3.3959 3.4081 3.3767 3.377  3.3896 3.3515 3.3515   3.3395 3.3454 3.3397 3.3635]]
971                   2.18022         1.30107         0.49203         -0.03798          -0.03798          0.12354          1.4082          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3643 3.4009 3.3706 3.3703 3.3771 3.3887 3.4018 3.4148 3.4083 3.3953   3.4025 3.4082 3.3578 3.3837 3.3453 3.3388 3.3462 3.3583 3.3396 3.3644   3.3449 3.3456 3.346  3.3326 3.377  3.4146 3.4084 3.3958 3.3831 3.3958   3.4147 3.421  3.4142 3.4209 3.4144 3.4082 3.3956 3.4261 3.4079 3.4087   3.3899 3.4085 3.3894 3.3958 3.4082 3.377  3.3768 3.3896 3.3518 3.3511   3.3389 3.346  3.3395 3.3639]]
972                   2.18064         1.3012         0.49209         -0.03818          -0.03818          0.12356          1.4082          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3645 3.402  3.3701 3.3705 3.3769 3.389  3.4021 3.4146 3.408  3.3958   3.4017 3.4089 3.3577 3.3828 3.346  3.3389 3.3452 3.3579 3.3386 3.3645   3.346  3.3453 3.3453 3.3328 3.3767 3.4147 3.4084 3.3959 3.3833 3.3958   3.4146 3.4209 3.4147 3.4204 3.4146 3.4084 3.3955 3.4275 3.4088 3.408   3.3894 3.4095 3.3897 3.3958 3.4089 3.3761 3.3773 3.3891 3.3516 3.3505   3.3394 3.3457 3.3392 3.3641]]
973                   2.18043         1.30116         0.4921         -0.03808          -0.03808          0.12355          1.4084          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3641 3.4015 3.3704 3.3698 3.3768 3.3897 3.4024 3.415  3.4085 3.396   3.4019 3.4088 3.3578 3.3833 3.3463 3.3395 3.3454 3.3576 3.3393 3.3644   3.3453 3.3461 3.3455 3.3333 3.3769 3.4148 3.4084 3.3958 3.3832 3.3957   3.4149 3.4211 3.4152 3.42   3.4144 3.4084 3.3948 3.4282 3.4084 3.4087   3.3898 3.4085 3.3887 3.3959 3.4082 3.3769 3.3766 3.3898 3.3508 3.3516   3.3397 3.3463 3.339  3.3646]]
974                   2.3842         1.29008         0.42307         -0.13509          -0.03308          0.12326          1.0807          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.8813 2.9629 2.9239 2.9147 2.8993 2.9365 2.9383 2.947  2.9342 2.893   2.9538 2.9263 2.8953 2.9167 2.8892 2.9033 2.9031 2.8895 2.8573 2.9142   2.9087 2.891  2.8701 2.857  2.8745 2.9716 2.9622 2.9334 2.9431 2.9563   2.9609 2.981  2.926  2.962  2.9468 2.9655 2.9361 2.9195 2.9466 2.9226   2.9053 2.9554 2.9117 2.9422 2.9236 2.9082 2.9208 2.9125 2.8788 2.8998   2.9044 2.8899 2.9065 2.8964]]
975                   2.39709         1.29129         0.42409         -0.14123          -0.0405          0.12409          1.08465          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.9072 2.9542 2.8983 2.9324 2.912  2.9344 2.951  2.9666 2.9244 2.9468   2.9425 2.9451 2.8948 2.932  2.8847 2.8708 2.8895 2.8995 2.8842 2.9115   2.8791 2.8892 2.8859 2.8624 2.8993 2.9616 2.897  2.9518 2.9192 2.9126   2.9525 2.978  2.9754 2.9706 2.9492 2.9647 2.9372 2.9559 2.9651 2.9374   2.9117 2.9512 2.9384 2.9149 2.9731 2.9289 2.9271 2.9649 2.8867 2.8913   2.8841 2.8683 2.8868 2.8747]]
976                   2.39651         1.29424         0.42544         -0.14095          -0.04164          0.12413          1.0932          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.8873 2.959  2.9075 2.9061 2.9236 2.9219 2.938  2.9849 2.9545 2.9425   2.9737 2.9306 2.909  2.951  2.8675 2.8901 2.8842 2.8887 2.8788 2.9084   2.8874 2.8602 2.9005 2.8835 2.9361 2.967  2.9252 2.9174 2.9241 2.948   2.974  2.9394 2.9653 2.9631 2.9207 2.9628 2.9779 2.9764 2.9587 2.9799   2.9246 2.9713 2.9496 2.9656 2.9498 2.9094 2.8925 2.9263 2.8734 2.8819   2.916  2.8674 2.8973 2.9027]]
977                   2.3902         1.29054         0.42339         -0.13795          -0.03606          0.12363          1.1069          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.8813 2.9751 2.8838 2.9024 2.9382 2.8998 2.9687 2.961  2.9297 2.9262   2.9735 2.954  2.9433 2.9289 2.9202 2.8976 2.8815 2.8987 2.8749 2.8974   2.8989 2.8461 2.9188 2.8833 2.9055 2.945  2.9335 2.9307 2.9334 2.9666   2.9385 2.9821 2.9486 2.9296 2.9399 2.9303 2.887  2.9632 2.9465 2.9731   2.918  2.9298 2.934  2.9113 2.9431 2.8925 2.9204 2.9443 2.8367 2.8773   2.8629 2.908  2.8698 2.9   ]]
978                   7.47203         2.25729         0.58151         -2.55736          -0.15688          0.61727          2.05487          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.9553 1.307  1.349  1.3344 1.1514 0.2668 1.6257 1.4912 1.3876 0.7828   0.8699 1.501  0.4469 1.3527 1.0732 0.9881 0.6654 1.2255 0.8605 1.1304   1.4463 0.978  1.1581 1.0556 1.238  1.3533 1.3433 0.618  0.847  0.6056   1.0305 1.3325 1.1202 1.1578 1.6308 1.0386 1.7521 1.3194 1.2287 1.1946   0.9802 1.2335 1.6025 1.1412 0.9545 1.2238 0.8711 1.6002 1.0199 1.2757   0.9098 0.959  1.2848 1.1426]]
979                   7.17998         2.23793         0.58492         -2.41832          -0.04639          0.57188          1.85463          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.7186 1.0199 0.9489 0.9675 1.1022 1.2111 1.5195 1.3817 1.1244 1.2888   1.1528 1.4319 1.3658 1.2539 1.2647 1.4    1.313  1.2307 1.4744 0.8033   1.0961 0.8878 0.7595 0.9725 1.0925 1.6175 1.1082 0.7995 0.6543 1.0147   1.66   0.7607 0.8249 1.0373 1.0267 0.6628 1.2223 1.1583 1.0129 1.5544   1.2289 0.925  1.389  1.298  1.3575 1.2139 1.3834 1.1579 1.1788 1.5167   0.7743 1.1406 1.1886 1.4867]]
980                   7.21771         2.26126         0.60091         -2.43628          -0.03806          0.58974          2.09108          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.3805 1.3165 1.2884 1.0835 0.849  1.4998 1.4353 0.5225 0.9061 1.0768   1.6683 0.8832 0.7129 1.5841 1.2808 1.0859 0.8292 1.4929 0.9598 1.2569   1.6245 0.6555 1.1081 1.39   1.3954 1.0947 0.8661 1.0597 1.0942 1.2027   0.902  1.4267 1.4988 1.1632 1.1488 1.2138 0.4895 1.3618 0.3871 1.7254   0.4176 0.6943 1.4618 1.5611 1.2035 0.9233 1.2411 0.995  1.3585 1.3115   0.835  1.1717 1.0235 1.3508]]
981                   7.13635         2.25927         0.60191         -2.39755          -0.0144          0.57711          2.04573          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.5454 1.0624 0.8444 0.9574 1.0681 1.3402 0.7639 1.2641 1.3591 1.2251   0.993  1.4243 1.1178 1.1565 0.7734 1.8587 1.193  1.4069 0.8762 0.792   1.3749 1.2255 1.4909 1.6616 1.0501 0.8826 0.8457 0.5328 0.8438 1.1736   1.1355 0.4704 1.6664 1.1236 1.6052 1.2686 1.0598 1.5923 1.0202 1.2844   1.0424 1.2807 1.1373 0.7422 1.2521 1.3214 1.2892 1.2248 1.4928 0.925   0.7596 0.921  1.2762 0.8561]]
982                   4.84241         1.86333         0.87147         -1.30542          -0.11862          0.25721          1.8387          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.7439 4.8001 5.4101 4.5385 4.7242 5.1537 4.7246 5.1772 5.0429 4.7506   5.2277 4.9233 5.1139 5.0661 4.9185 4.8325 5.0225 5.0189 4.6256 5.0075   4.7815 4.7783 4.7678 4.9706 4.8647 4.8792 4.9384 4.9599 4.8574 4.6905   5.2914 4.435  5.3712 4.8572 5.1368 5.1152 5.1143 5.1837 4.9461 5.2953   4.7955 5.0342 4.8819 5.3074 5.2508 5.2725 5.0401 5.2778 4.818  4.8831   5.1065 4.9181 4.5632 4.7196]]
983                   4.70729         1.81778         0.85928         -1.24109          -0.04035          0.25277          1.8645          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.7593 5.1682 4.9978 4.8995 4.5796 4.9372 4.8241 4.564  4.7846 4.731   4.8896 5.0863 4.8371 4.7684 4.8621 4.8947 5.0975 5.0098 5.0316 5.1075   4.7641 4.9413 4.7205 5.2378 5.075  5.4874 5.0087 4.9279 5.0957 4.7061   5.0196 5.1482 4.972  4.9649 4.6428 4.8815 4.8607 5.0428 4.9168 5.1823   4.7918 5.228  5.2299 5.1266 5.4292 4.766  4.8499 5.4183 5.1343 4.9833   5.2077 4.7551 4.9699 5.1085]]
984                   4.66486         1.8087         0.85491         -1.22089          -0.08667          0.25161          1.90835          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.9958 4.8429 5.098  4.6715 4.67   4.8286 4.9409 4.967  5.0715 4.7687   4.7454 5.173  5.0218 4.4897 4.752  4.9198 4.7038 4.8033 5.1039 4.9478   5.0283 4.9867 4.9708 5.0212 4.9265 5.0942 5.3306 4.9295 4.7379 5.1633   4.8927 5.0133 4.9812 5.2545 4.8524 5.0784 4.9366 4.8102 5.0896 4.9343   5.1487 5.1256 5.0103 4.762  5.1539 4.7215 4.7844 4.9881 4.8321 4.8907   4.4712 4.8582 4.9673 4.7536]]
985                   5.03726         1.90017         0.88994         -1.39819          -0.16953          0.26496          1.76923          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.8898 5.492  5.0517 4.8502 4.8887 4.8821 4.9179 4.8943 5.2578 5.4622   4.9011 5.0939 4.9704 4.8547 4.6312 4.5939 4.7868 4.9472 4.5371 5.2445   4.718  4.8057 5.3074 4.8205 4.7938 5.7199 4.917  5.0934 5.0694 5.0686   5.1499 5.1935 5.0023 4.9626 4.9078 5.1965 5.1691 5.1533 5.029  5.2721   4.7184 5.1281 5.0719 4.8899 4.8137 5.0108 4.889  4.8024 5.1546 4.7314   4.966  5.0925 4.746  4.9037]]
986                   2.29326         1.28362         0.43898         -0.0918          -0.03708          0.12123          1.0823          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0347 3.0658 3.0473 3.0155 3.0232 3.0507 3.0661 3.0734 3.0582 3.0459   3.0388 3.0727 3.0406 3.0479 3.0077 2.9888 3.0127 3.0341 3.0082 3.0287   3.0334 3.0138 3.0106 2.995  3.0309 3.0814 3.0625 3.0451 3.0409 3.057   3.0653 3.1325 3.0595 3.1083 3.0651 3.061  3.0479 3.0863 3.0793 3.0853   3.0351 3.0524 3.0614 3.0527 3.0736 3.0251 3.0525 3.0541 3.0044 3.0046   3.0049 3.0092 2.9913 3.0157]]
987                   2.30288         1.28357         0.438         -0.09638          -0.03993          0.12157          1.0712          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0217 3.0457 3.0378 3.0402 3.05   3.0477 3.0488 3.0927 3.0736 3.0579   3.0725 3.0397 3.0116 3.038  3.0021 2.9765 2.9909 3.0199 2.9996 3.0407   3.0245 2.9913 2.9809 2.9871 3.0206 3.0761 3.0388 3.0474 3.0434 3.059   3.0931 3.0681 3.0724 3.1004 3.0803 3.0688 3.0311 3.0888 3.0565 3.0552   3.0593 3.0618 3.0236 3.0415 3.0475 3.0512 3.0625 3.0446 3.0259 2.9696   2.9945 2.9852 3.0013 3.013 ]]
988                   2.29887         1.28479         0.43869         -0.09447          -0.03843          0.12143          1.078          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0296 3.0892 3.044  3.0424 3.0283 3.024  3.0592 3.0672 3.0367 3.0494   3.0538 3.0627 3.0132 3.0309 3.0113 3.0096 3.0163 2.9971 2.9667 3.0359   2.9894 2.9869 3.013  3.0165 3.0307 3.0476 3.0568 3.0339 3.0571 3.0528   3.1027 3.0729 3.0786 3.0964 3.093  3.0677 3.0782 3.092  3.0502 3.0544   3.0483 3.0763 3.0415 3.0569 3.0797 3.0224 3.0113 3.0372 3.031  3.0154   2.9846 3.002  3.0024 2.9929]]
989                   2.29405         1.28283         0.43749         -0.09217          -0.03523          0.12106          1.0697          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0534 3.0632 3.0256 3.037  3.0216 3.0562 3.0543 3.0918 3.0515 3.0532   3.0517 3.0431 3.0046 3.0211 3.0042 2.9985 3.0089 3.0294 2.9723 3.0094   3.0185 2.9947 2.9985 2.9962 3.0257 3.0593 3.058  3.053  3.0411 3.033   3.0573 3.0953 3.0657 3.0957 3.0821 3.0665 3.0572 3.0731 3.0349 3.0729   3.0365 3.0388 3.0337 3.0418 3.0498 3.0341 3.0261 3.0619 3.0181 3.01   2.998  3.0189 2.9875 3.0054]]
990                   2.56496         1.40856         0.58325         -0.22115          -0.16596          0.15188          1.3066          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.2717 2.9468 2.8688 2.7519 2.7512 2.9035 3.1505 3.6506 3.4757 3.4705   3.4541 3.4155 3.9259 3.4752 3.7347 4.0323 3.6161 3.6448 2.9876 3.5247   3.3087 3.3537 3.5813 3.4738 3.7457 3.8775 3.791  3.881  3.3594 3.9204   4.5157 4.3696 4.1551 4.1426 4.1084 3.9907 3.7019 3.5145 3.8655 3.7407   3.824  3.8734 4.0686 4.1281 4.0499 4.1778 4.2203 4.121  4.3687 3.2498   4.3072 4.3051 4.5341 4.3763]]
991                   3.35615         1.5512         0.54541         -0.59783          -0.5448          0.18893          1.40248          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[2.3928 3.5868 2.6581 1.7965 4.1179 3.4581 3.2008 3.2303 2.7534 2.9162   2.4134 2.7    2.2847 2.958  4.0113 2.8776 4.0061 3.3998 3.2741 3.6453   3.3496 2.5857 2.6685 2.5416 2.6781 3.4663 4.1548 2.582  2.3192 3.5779   4.4761 2.8153 2.8828 2.7964 4.3301 4.5201 1.762  4.0679 4.0018 3.5801   3.7909 2.5796 3.3819 3.0739 2.2681 3.2245 2.1809 3.3972 1.6896 2.1739   1.9409 2.5258 3.2934 2.2865]]
992                   2.35224         1.34781         0.5098         -0.11988          -0.1198          0.13271          1.34          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.2176 3.3857 3.2479 3.2317 3.2706 3.3181 3.4616 3.4981 3.4805 3.4543   3.4664 3.4781 3.4402 3.5487 3.3757 3.3602 3.3618 3.4309 3.1496 3.215   3.173  3.1579 3.1687 3.1398 3.3757 3.4139 3.4064 3.3941 3.382  3.3933   3.5849 3.6163 3.5914 3.5911 3.5791 3.5657 3.2559 3.415  3.3489 3.3311   3.2474 3.3255 3.3631 3.38   3.4059 3.3276 3.3262 3.36   3.3438 3.3369   3.2891 3.3053 3.2816 3.4005]]
993                   2.37366         1.36433         0.53295         -0.13007          -0.12396          0.13663          1.46825          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.3333 3.4803 3.3483 3.3448 3.3872 3.4665 3.6077 3.6228 3.6001 3.5724   3.5889 3.6038 3.5543 3.6764 3.5128 3.4924 3.515  3.5559 3.2687 3.3257   3.2733 3.2705 3.2875 3.2371 3.5014 3.5405 3.5214 3.5171 3.4968 3.5172   3.7408 3.7365 3.7196 3.7437 3.711  3.7131 3.395  3.5315 3.4527 3.4644   3.3666 3.4721 3.4913 3.5093 3.553  3.4665 3.4654 3.4845 3.4561 3.4725   3.4246 3.4471 3.42   3.5292]]
994                   2.55644         1.39019         0.58189         -0.21709          -0.1266          0.15159          1.2029          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[2.8295 3.0555 3.298  3.1156 3.2674 3.3593 3.4625 3.7874 3.5287 3.2327   3.5005 3.3001 3.6862 4.0994 3.9636 3.3418 3.5444 4.3156 3.426  3.6462   3.215  3.195  3.1977 3.2933 3.6946 3.8228 3.7669 3.7789 3.7588 3.7236   4.2009 4.2806 4.3051 4.3153 4.1739 4.3078 3.594  3.349  3.9196 3.604   3.8314 4.1307 4.2261 4.3164 3.9485 4.2366 4.1818 4.1797 4.7999 4.4056   4.7642 4.6244 4.6403 4.6667]]
995                   2.78927         1.40029         0.50318         -0.32794          -0.30867          0.15274          1.14472          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[2.62   2.2939 2.9168 2.6835 2.6147 2.2392 2.9695 4.7158 2.8055 3.5491   3.0298 2.8053 3.5143 4.7406 2.1457 4.5246 4.353  2.6912 3.0147 3.8346   2.5569 3.9955 2.7339 4.0231 2.8674 2.4028 4.392  4.1577 2.3702 2.6884   2.5515 3.0923 3.6558 2.7348 1.9083 4.1208 2.243  4.4423 3.5944 2.0846   4.0679 4.2631 4.1174 2.876  2.739  2.5193 4.2034 2.7324 2.1898 3.0584   3.0956 2.3018 2.9436 4.0156]]
996                   2.35476         1.34885         0.50996         -0.12108          -0.121          0.13281          1.339          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2218 3.3651 3.2433 3.251  3.2461 3.331  3.4644 3.5054 3.4893 3.454   3.4648 3.4859 3.452  3.5417 3.3588 3.3471 3.3933 3.4327 3.1399 3.2204   3.1749 3.169  3.158  3.1286 3.3757 3.4136 3.407  3.394  3.3794 3.3941   3.5771 3.5881 3.5888 3.5998 3.5814 3.5766 3.2735 3.4097 3.3463 3.3309   3.2539 3.3317 3.3605 3.386  3.4154 3.3185 3.3356 3.3558 3.3395 3.3275   3.2762 3.3107 3.285  3.3885]]
997                   2.36391         1.36066         0.53157         -0.12543          -0.11932          0.13611          1.4699          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3229 3.5017 3.3679 3.3573 3.3955 3.4297 3.5781 3.6239 3.6065 3.5752   3.5883 3.6014 3.5528 3.6726 3.5153 3.5041 3.4916 3.5641 3.2473 3.3557   3.2811 3.2997 3.2857 3.2613 3.5104 3.5413 3.5321 3.5108 3.4919 3.5233   3.7281 3.7207 3.7203 3.723  3.7144 3.6845 3.41   3.5422 3.4337 3.4685   3.3689 3.4713 3.509  3.5234 3.5283 3.4732 3.4613 3.4747 3.4658 3.4988   3.4133 3.4373 3.4078 3.5187]]
998                   2.4158         1.35691         0.51547         -0.15014          -0.15007          0.13641          1.3087          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1891 3.2839 3.353  3.5353 3.2223 3.3325 3.5859 3.4354 3.5002 3.5117   3.3121 3.4515 3.6646 3.4933 2.7964 3.2852 3.5491 3.5085 3.1379 3.2531   2.9573 3.3555 3.3129 3.1531 3.3768 3.4503 3.3598 3.4748 3.2406 3.577   3.9139 3.6826 3.603  3.5203 3.5396 3.6512 2.9848 3.5571 3.2151 3.2891   3.4006 3.3283 3.2671 3.4292 3.5581 3.1307 3.1905 3.2662 3.2911 3.4507   3.2335 3.4585 3.1475 3.2415]]
999                   2.41573         1.36976         0.5263         -0.1501          -0.13313          0.1366          1.26985          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5939 3.7512 3.7069 3.6597 3.7052 3.722  3.902  3.8347 3.2314 3.0496   3.9202 3.8966 2.9519 4.0719 3.8198 2.9774 3.767  4.0849 3.5682 3.6026   2.6185 3.6267 3.5396 3.5469 2.7966 3.9443 3.9311 3.8562 3.8998 3.867   3.9744 4.0715 2.8736 2.5899 4.2485 2.8125 3.814  2.909  3.4894 3.7347   3.7149 2.5416 3.8919 3.9498 3.5622 2.7487 3.8041 3.8499 3.8599 3.9125   3.8336 3.7612 2.4991 3.9725]]
1000                   2.70149         1.45058         0.60938         -0.28615          -0.15292          0.15907          1.54253          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5813 3.9027 3.6317 3.6355 3.7548 3.6789 3.9031 3.9123 3.8726 4.0483   3.9373 3.9637 4.1824 4.1755 3.9924 3.9779 3.82   4.1181 3.7392 3.7641   3.6914 3.8109 3.6067 3.7964 4.0756 4.0777 4.0497 4.0878 3.902  4.0927   4.1297 4.4338 4.3895 2.3631 4.4281 4.3068 3.8773 4.0947 3.6598 3.9022   3.8026 3.8882 4.2637 4.2293 3.9708 3.8222 4.156  3.9111 3.9712 2.2638   4.0865 4.1904 3.9241 4.385 ]]
1001                   2.32498         1.33882         0.50837         -0.1069          -0.10687          0.13143          1.34888          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2432 3.4017 3.3663 3.2389 3.2777 3.4302 3.4644 3.3436 3.4206 3.2868   3.4525 3.3491 3.318  3.4656 3.571  3.4543 3.1607 3.2594 3.1171 3.2655   3.2227 3.3446 3.0344 3.2605 3.3898 3.7839 3.2673 3.4178 3.3008 3.4376   3.528  3.6119 3.5032 3.6432 3.6338 3.5125 3.1742 3.5126 2.8838 3.4667   3.7771 3.155  3.3837 3.6868 3.4754 3.4796 3.3159 3.5562 3.4067 3.419   3.4172 3.4    3.0972 3.7017]]
1002                   2.74934         1.39853         0.56274         -0.30893          -0.29822          0.15834          1.32562          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5853 3.6629 3.6278 3.6828 2.849  3.619  3.7518 3.9297 3.9381 3.9106   3.655  3.8632 3.9118 3.166  3.5451 3.8667 3.5586 3.9909 2.6134 3.6307   3.3384 3.5351 3.6177 2.4369 3.0073 2.8536 3.864  3.887  2.7629 2.8677   3.7674 4.1935 4.0448 4.2152 3.1675 4.0471 3.7314 4.026  2.7374 3.8492   3.658  3.7939 2.71   2.3698 4.0225 3.7973 3.9558 2.8572 2.6738 4.0432   2.5819 4.2907 3.5555 4.1472]]
1003                   2.68094         1.44407         0.6138         -0.27637          -0.18246          0.16076          1.4213          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6973 2.4882 3.5878 3.7095 3.748  3.8368 4.0264 4.0093 3.985  3.9114   4.1127 4.1204 4.2666 2.3283 4.1206 3.9135 4.0713 4.1017 3.5842 3.8647   3.6724 3.6303 3.6056 3.7434 4.0976 4.0668 3.9499 4.0113 4.1291 4.1463   2.412  4.2309 4.3276 4.3605 4.0647 4.2252 3.5592 4.1632 3.8453 4.0265   2.2979 4.0078 4.0558 4.0601 4.3302 2.4102 4.1338 4.2062 4.2263 4.3493   4.2175 4.2518 4.1209 2.2306]]
1004                   2.53918         1.40219         0.58465         -0.20888          -0.14133          0.15121          1.17532          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1357 2.7942 2.847  3.1696 3.1651 3.431  3.392  3.5394 3.5165 3.6741   3.4603 3.3894 3.595  3.7357 3.6607 3.9919 3.8799 3.6091 3.2567 3.4293   3.2195 3.36   2.9881 3.2279 3.8021 3.8827 3.7741 3.7376 3.7718 3.7817   4.1613 4.3019 4.0394 4.2718 4.1431 4.3186 3.6627 3.9024 3.5362 3.7339   3.6642 3.6916 4.1076 3.994  4.2465 4.3445 3.8877 3.9476 4.3038 4.1546   4.6916 4.6066 4.3523 4.725 ]]
1005                   2.77105         1.38855         0.49288         -0.31927          -0.30303          0.14801          1.22103          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.7388 2.5786 3.3412 3.7791 2.5396 4.6576 3.8673 3.6969 2.6455 3.0302   2.6896 3.6164 3.899  2.8952 2.2461 2.9676 2.8253 3.0517 3.5786 2.7274   4.2356 2.5864 2.4572 3.0434 3.1969 2.4665 2.7405 4.5367 4.0307 2.4303   2.4211 4.7018 4.5503 3.4027 2.8894 2.8037 3.4477 2.6133 4.6915 2.7728   2.711  2.3086 3.1048 4.4428 2.7971 2.8583 3.33   2.7163 2.9666 3.0646   2.7096 4.114  4.0544 2.125 ]]
1006                   2.34372         1.34549         0.50888         -0.11582          -0.11575          0.13225          1.3273          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2214 3.3868 3.2434 3.249  3.2709 3.3169 3.4687 3.5011 3.4837 3.4521   3.4662 3.4752 3.435  3.5378 3.3844 3.3562 3.4001 3.4336 3.1715 3.2126   3.1663 3.1707 3.1747 3.143  3.3751 3.4124 3.4062 3.3946 3.3817 3.3953   3.5816 3.5983 3.5867 3.5985 3.5686 3.5685 3.271  3.4042 3.3202 3.3222   3.257  3.3324 3.3457 3.3764 3.4137 3.3349 3.3312 3.368  3.3354 3.3456   3.2786 3.3035 3.2767 3.3883]]
1007                   2.3487         1.35619         0.52938         -0.11819          -0.11251          0.1352          1.4503          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3445 3.4888 3.3657 3.3536 3.3918 3.4525 3.5783 3.6147 3.6278 3.5618   3.5845 3.6083 3.5907 3.6566 3.5378 3.4887 3.5048 3.5586 3.2633 3.3326   3.2984 3.2881 3.2808 3.2412 3.4986 3.5493 3.5275 3.5154 3.5173 3.5181   3.6964 3.7187 3.7028 3.7281 3.718  3.7013 3.404  3.5525 3.4349 3.4657   3.3887 3.1911 3.483  3.5249 3.558  3.4703 3.4399 3.4979 3.4803 3.4461   3.4349 3.4317 3.4234 3.5335]]
1008                   2.67351         1.4408         0.60865         -0.27283          -0.18674          0.15853          1.29927          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.128  3.4613 3.3377 3.283  2.4144 3.4058 3.58   3.4499 3.3102 3.6879   3.8198 3.5686 3.6648 3.8601 3.6994 4.007  3.6143 4.0295 3.5677 3.1818   3.5561 3.2573 3.3507 3.3949 3.7881 3.8375 3.8372 3.7687 3.8305 3.856   4.3523 4.4883 4.4415 4.2546 4.6169 4.29   3.2581 3.9424 3.7434 3.7158   3.7688 3.9238 4.6122 3.955  3.9543 3.9979 3.8455 4.1605 4.196  4.1927   4.4455 4.5041 4.2022 4.2194]]
1009                   2.36659         1.28648         0.48163         -0.12671          -0.12601          0.13473          1.10672          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.6674 4.1688 3.7579 3.7011 2.8926 3.3203 3.0923 2.3306 3.0236 3.3398   3.0764 2.8563 1.8468 2.1286 4.1381 3.1422 3.9158 4.5531 4.2204 2.9298   3.7661 2.7956 3.2709 3.6881 4.0879 3.5122 2.4046 3.6524 2.7077 4.0864   3.469  4.247  4.1955 4.4005 2.4501 2.2799 4.0452 3.3851 2.4962 1.7836   4.1703 2.9928 2.423  4.0873 3.0846 3.7451 4.2052 3.8265 2.4248 4.2058   2.3207 4.2045 3.6054 2.4721]]
1010                   2.34714         1.3462         0.50923         -0.11745          -0.11738          0.13244          1.33635          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2114 3.3896 3.2359 3.2523 3.271  3.3065 3.4712 3.4971 3.4721 3.4436   3.4658 3.4808 3.4373 3.5425 3.3926 3.3506 3.3886 3.4556 3.1602 3.2286   3.1701 3.1603 3.1644 3.1405 3.3763 3.4133 3.4067 3.3941 3.3805 3.3939   3.5876 3.5998 3.5839 3.5955 3.5783 3.5766 3.2732 3.408  3.3435 3.3292   3.2304 3.323  3.3653 3.3822 3.4121 3.3286 3.3266 3.3651 3.3433 3.347   3.2804 3.3047 3.283  3.3742]]
1011                   2.36109         1.3593         0.53088         -0.12409          -0.11847          0.13592          1.45635          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3256 3.3016 3.3456 3.3478 3.3912 3.4484 3.5891 3.6214 3.5918 3.5656   3.5707 3.6151 3.562  3.6593 3.5125 3.4778 3.5161 3.5668 3.2637 3.3158   3.2829 3.2933 3.2889 3.2563 3.4935 3.5289 3.5278 3.506  3.495  3.5331   3.7351 3.7174 3.7337 3.7294 3.7469 3.6996 3.415  3.5421 3.4464 3.4549   3.3593 3.4578 3.4899 3.5118 3.5455 3.4633 3.4475 3.4961 3.4752 3.4718   3.4034 3.4425 3.421  3.5349]]
1012                   2.34475         1.33529         0.50608         -0.11631          -0.1163          0.13234          1.35143          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4577 3.5991 3.2243 3.3562 3.4259 3.2102 3.6398 3.6829 3.4737 3.557   3.447  3.3013 3.6371 3.733  3.5946 3.1723 3.4073 3.5258 3.2076 3.1773   3.0138 3.3199 3.1965 3.2975 3.41   3.2549 3.4803 3.3284 3.55   3.26   3.399  3.3833 3.5739 3.6768 3.503  3.6976 2.9713 3.4877 3.4891 3.3964   3.1651 3.3027 3.0995 3.3966 3.4557 3.3147 3.3612 3.4317 3.4731 3.1451   3.3108 3.3076 3.0107 3.161 ]]
1013                   2.596         1.35461         0.53857         -0.23593          -0.23047          0.14839          1.26608          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6379 3.7526 3.6321 3.6424 3.6507 3.5472 2.7256 3.199  3.6579 3.9431   3.0744 3.8865 3.8888 2.8142 3.5331 3.2113 3.8589 2.8044 3.299  3.6199   3.5593 3.5306 2.4872 2.7579 2.6784 3.0055 3.8878 3.8949 3.8839 2.9507   4.2104 4.0221 4.0611 4.1852 4.1246 3.1249 3.6429 3.8561 3.8986 3.7996   2.8481 2.6495 2.7269 3.9224 2.8857 3.8902 3.7833 2.7881 3.9858 3.7864   3.8966 3.4664 2.8425 4.0367]]
1014                   2.59728         1.43379         0.59407         -0.23654          -0.12278          0.15182          1.45088          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7542 3.7296 3.6738 3.8131 3.6561 3.7507 3.8822 4.1428 4.0718 4.0876   3.9157 3.9527 4.0783 4.2013 3.8392 3.9643 3.8525 3.9576 3.7289 2.2879   3.7385 3.6729 3.5727 3.7217 4.0585 3.8726 3.8346 4.0455 3.9359 3.9866   2.3323 4.4789 4.3453 2.364  4.3169 4.2721 3.8775 4.0603 3.9667 3.8627   3.7    4.0137 4.2361 4.014  4.1534 4.1618 4.1199 4.1671 3.9098 4.0862   3.6851 4.1257 4.1143 3.9201]]
1015                   2.49431         1.36534         0.51514         -0.18752          -0.18746          0.1398          1.2821          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.0673 3.2354 3.3188 3.4686 3.3666 3.6142 3.2635 3.5319 3.6038 3.3932   3.5255 3.2749 3.4526 3.6525 3.4854 3.2997 3.4051 3.4674 2.5396 3.226   3.2952 3.2278 3.032  2.9998 3.2757 3.3548 3.3835 3.3928 3.3605 3.3372   4.1073 3.4894 3.7045 3.5656 3.842  3.3819 3.3452 3.4255 3.4593 3.4449   3.3448 3.2893 3.4072 3.2575 3.2586 3.5457 3.5258 3.3135 3.2589 3.4712   3.2292 3.2588 2.9257 3.3558]]
1016                   2.5283         1.37181         0.55762         -0.2037          -0.16909          0.14732          1.45772          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6403 2.6974 3.5757 3.7316 2.6697 3.6888 3.9145 2.9433 3.9727 2.6986   3.9004 3.1729 3.8826 4.0675 3.772  3.8371 3.9054 3.8409 3.5399 3.3793   3.5525 3.3434 2.6808 2.8404 3.8042 3.317  3.8444 3.8504 3.8665 3.9122   3.882  4.0781 3.9865 4.0397 4.1257 4.0609 3.7944 3.8816 3.8648 3.7859   3.8091 3.9423 3.8833 2.6631 3.5861 3.7957 3.8173 3.6683 4.1928 3.5125   3.799  3.7906 3.4368 3.9883]]
1017                   2.86721         1.48716         0.60364         -0.36505          -0.30556          0.16624          1.49738          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5246 3.7694 3.5709 2.3872 3.7547 3.8152 3.9236 4.1917 4.1107 3.9193   4.0976 3.9065 4.171  4.3295 3.8107 3.7539 3.9222 3.8028 3.5403 2.3569   3.5011 2.262  3.8308 3.7166 3.9863 2.4725 4.1325 4.0691 4.1229 4.1589   2.4704 4.4619 4.0134 4.3415 4.384  2.5701 2.3466 4.0195 3.7088 4.079   3.967  4.004  4.1799 3.7623 4.1978 3.8059 3.9902 3.8951 3.9358 2.3004   4.134  3.9064 3.9498 4.4193]]
1018                   2.6433         1.43847         0.59899         -0.25845          -0.17261          0.1554          1.3192          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.042  3.4779 3.0702 3.2468 3.083  2.7431 3.5461 3.1962 3.1538 4.0742   3.8709 3.5323 4.0092 3.8097 3.9884 3.7291 3.9444 3.7964 3.3396 3.443   3.209  3.4936 3.1798 3.1084 3.4306 3.6001 3.8026 3.7585 3.8087 3.8517   4.2808 4.0153 3.6347 4.4567 4.4676 4.4426 3.8593 3.8442 4.0869 4.134   3.8725 3.7872 4.1276 4.2417 4.0475 4.2477 4.2011 4.2348 4.5421 4.5803   4.3732 4.4536 3.8198 4.5048]]
1019                   3.50554         1.55546         0.53195         -0.66895          -0.62792          0.1913          1.39622          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[1.9801 3.9268 4.195  3.094  3.3246 3.0949 2.7672 2.7414 3.3414 2.8624   4.2691 3.446  2.6452 3.5614 4.215  2.8438 3.127  4.2734 2.6515 3.6845   2.4486 2.3938 2.6345 2.3903 2.6116 4.5891 3.6011 4.0217 2.6779 2.3092   3.4698 2.5685 2.7187 2.8638 2.6849 4.7508 4.1948 3.3285 4.1208 2.5062   2.968  3.7567 4.4374 2.6063 2.5857 2.6292 2.3181 2.3334 2.1295 2.6498   2.1552 1.8559 1.8531 3.6055]]
1020                   2.34403         1.34605         0.50886         -0.11597          -0.11588          0.13223          1.33005          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2245 3.3686 3.2368 3.2486 3.2658 3.3203 3.4613 3.496  3.488  3.4552   3.4604 3.4822 3.4424 3.5378 3.38   3.3556 3.381  3.4292 3.157  3.215   3.1847 3.1646 3.1789 3.1546 3.3737 3.4126 3.4059 3.3954 3.3822 3.3936   3.5909 3.5813 3.5885 3.5942 3.5715 3.5665 3.2823 3.4051 3.3282 3.3185   3.26   3.3319 3.3631 3.3805 3.4118 3.3256 3.3252 3.3433 3.3444 3.3235   3.2822 3.2961 3.2764 3.3915]]
1021                   2.36651         1.35772         0.5304         -0.12667          -0.12112          0.13617          1.451          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3464 3.4975 3.3698 3.3537 3.3756 3.4273 3.6086 3.6215 3.6119 3.5707   3.5948 3.5895 3.555  3.6856 3.5055 3.4715 3.5195 3.5514 3.2712 3.3413   3.288  3.2719 3.2793 3.2381 3.5017 3.5592 3.5223 3.5133 3.5214 3.5381   3.7229 3.7279 3.7377 3.7376 3.7162 3.6683 3.3935 3.5267 3.434  3.4401   3.3674 3.4619 3.2231 3.5285 3.5419 3.474  3.4779 3.4853 3.4831 3.4794   3.3898 3.4539 3.4075 3.519 ]]
1022                   2.45039         1.37451         0.55627         -0.16661          -0.117          0.14307          1.27735          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4587 3.1797 3.3173 2.7123 3.1183 3.0781 3.5581 3.5231 3.5908 3.5191   3.5131 3.3674 4.008  3.8802 3.3829 3.9135 3.6475 4.126  3.0793 3.7674   3.4401 3.2661 3.0736 3.3784 3.6479 3.8747 3.827  3.7657 3.8546 3.7711   3.5359 3.5477 4.4221 3.5836 4.3997 4.1835 3.6454 3.4323 3.7741 3.9503   3.479  3.1401 4.0952 4.2871 4.0396 3.8562 4.0392 4.267  4.3658 4.0249   4.2246 4.3483 3.3027 4.513 ]]
1023                   3.12223         1.4115         0.5144         -0.48646          -0.46353          0.17414          1.0202          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.4092 3.1249 3.6209 2.9935 3.8825 2.8527 3.5607 4.4548 3.5052 3.1742   3.0724 2.9085 2.7412 3.3005 2.5025 2.9779 4.2235 3.7696 2.2348 3.7697   1.609  3.7033 2.5166 3.0669 3.9228 4.1366 3.9124 2.6146 2.6236 2.1458   4.2764 2.8151 4.0679 4.4226 2.639  3.0339 1.9315 2.7666 3.7013 2.5615   3.146  2.7078 2.4545 2.5435 4.3889 2.9256 3.5104 3.0026 2.1093 4.321   2.9271 3.1217 2.303  3.8067]]
1024                   2.3504         1.34851         0.50995         -0.119          -0.11894          0.13261          1.3284          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2203 3.3794 3.2434 3.2293 3.2766 3.3274 3.4714 3.4904 3.4755 3.4521   3.4702 3.4783 3.4225 3.5449 3.3842 3.3577 3.3908 3.4375 3.1567 3.2133   3.1688 3.1759 3.1575 3.1298 3.3768 3.4131 3.4067 3.3941 3.3813 3.3944   3.5851 3.6113 3.5964 3.5922 3.573  3.5637 3.2951 3.4144 3.3261 3.3197   3.2795 3.3307 3.3619 3.3864 3.4121 3.3268 3.3323 3.3662 3.3338 3.3291   3.2818 3.3038 3.2978 3.3938]]
1025                   2.38768         1.3663         0.53301         -0.13675          -0.13102          0.13722          1.44985          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3293 3.501  3.3629 3.3513 3.3863 3.4309 3.5916 3.6158 3.6095 3.5805   3.5876 3.6104 3.5491 3.6735 3.5129 3.4769 3.5212 3.588  3.2697 3.3325   3.2827 3.2858 3.3007 3.0366 3.4903 3.5333 3.5456 3.5311 3.4943 3.5274   3.7175 3.7255 3.745  3.7302 3.7213 3.7051 3.3995 3.5398 3.4392 3.4437   3.3823 3.456  3.4923 3.487  3.5487 3.4342 3.4647 3.4858 3.4714 3.4752   3.4509 3.4397 3.4077 3.518 ]]
1026                   2.49644         1.38362         0.52806         -0.18853          -0.18852          0.14102          1.39325          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8826 3.4143 3.2846 3.4975 3.2468 3.3041 3.4047 3.6257 3.5737 3.4044   3.3477 3.4129 3.536  3.6541 3.2088 3.2918 3.3857 3.3945 3.1801 3.3767   3.0705 3.1876 3.0394 2.9377 3.4599 3.4987 3.5793 3.4321 3.2075 3.3608   3.6921 3.8619 3.9017 3.6763 3.3362 3.2017 3.3618 3.677  3.4753 3.3736   3.2602 3.2951 3.3462 3.4144 3.5765 3.1287 3.28   3.4539 3.2028 3.3772   3.3698 3.4226 3.2724 3.293 ]]
1027                   2.74829         1.43795         0.5798         -0.30844          -0.26451          0.15864          1.33938          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5722 3.7762 3.6645 3.6934 3.4547 3.7147 3.9049 4.0215 2.9932 3.8875   4.0025 3.9336 3.9924 4.0487 3.7625 3.5398 3.8373 3.8743 2.6534 3.665   3.4897 2.5553 2.6759 2.6905 3.825  3.8378 2.6645 3.9122 2.8803 3.9732   4.0934 3.8193 4.3129 3.6777 4.2017 3.2113 3.4387 3.8426 3.8338 3.808   3.7037 3.7702 3.9303 3.9595 3.932  3.8147 3.8769 3.9705 3.8633 4.0972   3.786  3.9611 3.8223 3.8456]]
1028                   2.62704         1.40449         0.58978         -0.25071          -0.14287          0.15508          1.47093          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6785 3.8488 3.6564 3.7492 3.618  3.804  4.0245 3.9024 3.8938 3.9072   3.8957 3.9694 4.0187 4.2202 3.8409 4.1705 4.0512 4.1948 2.2435 3.7996   3.6914 3.6967 3.7097 3.7026 4.1206 4.0946 4.1538 4.0202 3.964  3.9471   4.2251 4.387  4.1205 2.5204 4.2772 2.4674 3.8185 3.9253 3.7537 4.1222   3.8215 4.2906 2.1928 4.2361 4.2805 4.0418 3.9034 3.8136 4.0302 4.2038   4.147  3.8839 4.0291 4.2867]]
1029                   2.40421         1.34462         0.51364         -0.14462          -0.14456          0.13599          1.3701          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2257 3.3744 3.2569 3.1806 3.3542 3.4399 3.4988 3.7119 3.3694 3.3343   3.5155 3.7429 3.6969 3.3298 3.4276 2.9417 3.744  3.7236 3.0731 3.317   3.2418 3.2245 3.2154 3.2513 3.6233 3.5541 3.6316 3.7204 3.3804 3.483   3.4785 3.779  3.9151 3.5048 3.4636 3.4222 3.1528 3.3806 3.3803 3.3349   3.2956 3.3925 3.1378 3.1508 3.3708 3.3565 3.1848 3.3563 3.4889 3.1762   3.2097 3.176  3.2435 3.3332]]
1030                   2.83538         1.47504         0.59617         -0.3499          -0.30713          0.16512          1.46527          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6067 3.7051 3.5823 3.6146 3.7346 3.6986 3.7807 3.6912 3.8442 3.8131   3.8165 4.014  3.9649 2.9589 3.5434 3.808  3.8451 2.5035 3.4953 3.3805   2.3831 2.5125 3.5842 3.6068 3.778  2.8713 3.9068 3.8425 3.859  3.9015   4.1378 4.0465 4.081  4.0509 4.0649 4.0309 3.7786 3.8747 3.9037 3.7782   3.7313 3.7713 3.9165 3.4993 3.9329 3.8397 3.4494 3.8897 3.8667 4.1425   3.9541 4.0128 2.5632 3.8879]]
1031                   2.60557         1.4095         0.57172         -0.24048          -0.17638          0.15177          1.40208          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7422 3.8741 3.6667 2.3972 3.535  3.7341 2.4048 2.5878 4.0976 4.0221   4.0157 3.984  4.1124 4.2956 3.7801 4.159  3.9261 3.9731 3.772  3.7563   2.3154 3.6601 3.6824 3.6866 4.054  4.1173 4.0328 4.2293 4.0336 3.9165   4.4813 4.3596 4.2368 2.4301 4.4182 2.6122 3.9198 3.9791 3.9292 2.2733   4.0073 3.8926 4.3681 4.0636 3.9082 3.8121 3.9302 3.9431 3.8721 4.203   4.3153 3.8991 3.9785 2.0849]]
1032                   2.3504         1.34777         0.50976         -0.119          -0.11896          0.13259          1.33335          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2732 3.2733 3.3002 3.3533 3.4822 3.5148 3.4984 3.466   3.4822 3.4984 3.4402 3.5467 3.3867 3.3599 3.3867 3.44   3.1651 3.2298   3.1812 3.1812 3.1812 3.1486 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.5726 3.589  3.5728 3.5891 3.5728 3.557  3.2803 3.4133 3.3331 3.3333   3.2539 3.3334 3.3527 3.3689 3.4013 3.3203 3.3205 3.3527 3.3135 3.3134   3.26   3.2867 3.2598 3.3666]]
1033                   2.3503         1.34772         0.50974         -0.11895          -0.11891          0.13258          1.33325          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2734 3.2734 3.3001 3.3533 3.4822 3.5145 3.4984 3.4661   3.4822 3.4984 3.44   3.5462 3.3866 3.36   3.3869 3.44   3.1651 3.2296   3.1812 3.1812 3.1812 3.1488 3.3774 3.4151 3.4088 3.3963 3.3836 3.3962   3.5728 3.589  3.5728 3.5889 3.5728 3.5566 3.28   3.4133 3.3332 3.3332   3.2533 3.3333 3.3527 3.3691 3.4013 3.3204 3.3204 3.3528 3.3134 3.3134   3.2599 3.2867 3.2601 3.3667]]
1034                   2.3504         1.34777         0.50976         -0.119          -0.11896          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.407  3.273  3.2733 3.3    3.3533 3.4822 3.5148 3.4984 3.4663   3.4822 3.4982 3.44   3.5466 3.3867 3.3596 3.3866 3.44   3.1651 3.2298   3.1812 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5727 3.589  3.5728 3.589  3.573  3.5566 3.28   3.4133 3.3333 3.3335   3.2534 3.3334 3.3528 3.369  3.4013 3.3206 3.3204 3.3527 3.3134 3.3133   3.2599 3.2871 3.26   3.3666]]
1035                   2.35033         1.34774         0.50975         -0.11897          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.274  3.2733 3.3    3.3534 3.4822 3.5146 3.4979 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.3601 3.3868 3.44   3.165  3.2298   3.1813 3.1812 3.1812 3.1488 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.5727 3.589  3.5727 3.589  3.5729 3.5567 3.2802 3.4135 3.3334 3.3333   3.253  3.3333 3.3526 3.3689 3.4013 3.3204 3.3204 3.3531 3.3132 3.3133   3.26   3.2865 3.26   3.3666]]
1036                   2.35032         1.34775         0.50975         -0.11897          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2465 3.4066 3.2731 3.2733 3.3    3.3534 3.4822 3.5146 3.4984 3.4661   3.482  3.4984 3.4398 3.5468 3.3866 3.36   3.3867 3.44   3.165  3.2296   3.1816 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3963   3.5728 3.589  3.5731 3.589  3.5728 3.5564 3.2801 3.4133 3.3333 3.3333   3.2532 3.3333 3.3528 3.3689 3.4011 3.3204 3.3204 3.3528 3.3132 3.3134   3.2601 3.2867 3.26   3.3667]]
1037                   2.35038         1.34776         0.50975         -0.11899          -0.11895          0.13259          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2465 3.407  3.2733 3.2733 3.3    3.3533 3.4821 3.5146 3.4983 3.4662   3.4825 3.4984 3.4401 3.5468 3.3866 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1813 3.1813 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5729 3.589  3.5729 3.589  3.5729 3.5566 3.2802 3.4132 3.3334 3.3333   3.2525 3.3333 3.3527 3.3689 3.4012 3.3204 3.3204 3.3528 3.3133 3.3127   3.2601 3.2867 3.26   3.3666]]
1038                   2.35033         1.34773         0.50974         -0.11897          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4065 3.2734 3.2736 3.3001 3.3534 3.4823 3.5147 3.4983 3.466   3.4821 3.4981 3.44   3.5466 3.3867 3.36   3.3866 3.44   3.165  3.2297   3.1812 3.1813 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.5729 3.589  3.5729 3.5889 3.5727 3.5567 3.28   3.4133 3.3333 3.3334   3.2532 3.3333 3.3527 3.3689 3.4013 3.3204 3.3203 3.3526 3.3133 3.3133   3.26   3.2867 3.2598 3.3667]]
1039                   2.35032         1.34773         0.50974         -0.11897          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2735 3.2733 3.3001 3.3533 3.4821 3.5146 3.4986 3.4661   3.4822 3.4984 3.44   3.5466 3.3867 3.3601 3.3867 3.4401 3.1651 3.2297   3.1812 3.1812 3.1813 3.149  3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.5889 3.5728 3.589  3.5727 3.5566 3.28   3.4134 3.3333 3.3333   3.2533 3.3333 3.3527 3.369  3.4013 3.3205 3.3204 3.3527 3.3133 3.3133   3.2599 3.2865 3.26   3.3667]]
1040                   2.35039         1.34776         0.50975         -0.119          -0.11895          0.13259          1.3335          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2734 3.2733 3.3001 3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3868 3.44   3.165  3.2298   3.181  3.1812 3.1814 3.1488 3.3774 3.4152 3.4088 3.3963 3.3837 3.3962   3.5728 3.589  3.5731 3.589  3.5728 3.5566 3.28   3.4133 3.3336 3.3334   3.2534 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3133   3.26   3.2867 3.26   3.3666]]
1041                   2.35036         1.34776         0.50975         -0.11898          -0.11894          0.13259          1.3334          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2469 3.4069 3.2733 3.2734 3.3    3.3536 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.3598 3.3866 3.44   3.1652 3.2298   3.1812 3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5729 3.589  3.5729 3.589  3.5726 3.5566 3.28   3.4133 3.3334 3.3334   3.2534 3.3333 3.3528 3.3689 3.4011 3.3202 3.3204 3.3527 3.3133 3.3131   3.26   3.2867 3.26   3.3667]]
1042                   2.35033         1.34774         0.50975         -0.11897          -0.11892          0.13258          1.33345          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2734 3.3    3.3531 3.4824 3.5145 3.4984 3.4661   3.4822 3.4984 3.44   3.5466 3.3867 3.3599 3.3867 3.4405 3.1651 3.2298   3.1812 3.1812 3.1814 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5726 3.5889 3.5732 3.5565 3.28   3.4133 3.3334 3.3335   3.2533 3.3334 3.3528 3.3689 3.4014 3.3204 3.3204 3.3529 3.3133 3.3132   3.26   3.2867 3.26   3.3666]]
1043                   2.35033         1.34774         0.50975         -0.11897          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2734 3.3    3.3533 3.4822 3.5145 3.4984 3.4661   3.4822 3.4984 3.44   3.5467 3.3869 3.36   3.3866 3.4399 3.165  3.2297   3.1812 3.1812 3.1812 3.1489 3.3774 3.415  3.4088 3.3962 3.3836 3.3961   3.5728 3.5891 3.5729 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3333   3.2532 3.3333 3.3528 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3134   3.26   3.2868 3.26   3.3667]]
1044                   2.35031         1.34773         0.50974         -0.11896          -0.11891          0.13258          1.33325          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.407  3.2734 3.2736 3.3002 3.3533 3.4822 3.5146 3.4983 3.466   3.4823 3.4984 3.4402 3.5467 3.3864 3.3602 3.3867 3.44   3.1651 3.2298   3.1812 3.1813 3.1812 3.1488 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.573  3.589  3.5729 3.5565 3.2801 3.4131 3.3331 3.3332   3.2534 3.3333 3.3527 3.3689 3.4012 3.3204 3.3204 3.3524 3.3133 3.3133   3.26   3.2866 3.26   3.3667]]
1045                   2.35037         1.34775         0.50975         -0.11899          -0.11894          0.13259          1.33355          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2736 3.2734 3.3    3.353  3.4822 3.5146 3.4985 3.466   3.4821 3.4984 3.44   3.5467 3.3866 3.3601 3.3866 3.4399 3.1651 3.2298   3.181  3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5727 3.5891 3.5728 3.5566 3.28   3.4133 3.3338 3.3333   3.2533 3.3333 3.3528 3.3689 3.4013 3.3204 3.3204 3.353  3.3135 3.3133   3.26   3.2866 3.2599 3.3667]]
1046                   2.35035         1.34775         0.50975         -0.11898          -0.11893          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2469 3.4067 3.2733 3.2734 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4822 3.4983 3.44   3.5466 3.387  3.36   3.3867 3.44   3.1651 3.2296   3.1813 3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.5893 3.573  3.589  3.5728 3.5566 3.28   3.4132 3.3335 3.3334   3.2533 3.3334 3.3528 3.3692 3.4013 3.3203 3.3208 3.3528 3.3133 3.3134   3.26   3.2867 3.2599 3.3666]]
1047                   2.35033         1.34774         0.50974         -0.11897          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2464 3.4066 3.2732 3.2733 3.3001 3.3533 3.4823 3.5145 3.4984 3.466   3.4822 3.4984 3.4399 3.5465 3.3867 3.3601 3.3867 3.44   3.165  3.2298   3.1816 3.1812 3.1811 3.1489 3.3774 3.4151 3.4088 3.3963 3.3836 3.3962   3.5727 3.5889 3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3332 3.3333   3.2533 3.3333 3.3527 3.369  3.4012 3.3204 3.3204 3.3528 3.3132 3.3134   3.2597 3.2866 3.26   3.3667]]
1048                   2.35045         1.34777         0.50976         -0.11903          -0.11898          0.13259          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2732 3.2733 3.3    3.3533 3.4822 3.5146 3.4984 3.466   3.4823 3.4982 3.44   3.5466 3.3857 3.36   3.3866 3.44   3.165  3.2298   3.1811 3.1812 3.1813 3.1489 3.3774 3.415  3.4088 3.3962 3.3837 3.3962   3.5728 3.5891 3.5724 3.589  3.573  3.5566 3.2801 3.4136 3.3334 3.3334   3.2533 3.3333 3.3528 3.3689 3.4013 3.3204 3.3205 3.3527 3.3134 3.3133   3.2599 3.2867 3.2599 3.3667]]
1049                   2.3504         1.34776         0.50975         -0.119          -0.11895          0.13259          1.33345          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2733 3.3    3.3533 3.4821 3.5144 3.4982 3.4659   3.4823 3.4984 3.4395 3.5468 3.3867 3.3596 3.3865 3.44   3.165  3.2297   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3963   3.5727 3.589  3.5728 3.5893 3.5727 3.5567 3.28   3.4133 3.3333 3.3334   3.2535 3.3335 3.3524 3.3689 3.4011 3.3204 3.3205 3.3528 3.3133 3.3133   3.2601 3.2867 3.26   3.3666]]
1050                   2.35034         1.34775         0.50975         -0.11897          -0.11893          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2733 3.2999 3.3533 3.4823 3.5145 3.4984 3.466   3.4822 3.4983 3.4405 3.5466 3.3869 3.36   3.3867 3.44   3.165  3.2298   3.1812 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3963 3.3837 3.3963   3.5728 3.5892 3.5728 3.5889 3.5728 3.5567 3.28   3.4132 3.3333 3.3333   3.2534 3.3333 3.3528 3.3689 3.4013 3.3203 3.3203 3.3526 3.3134 3.3133   3.2601 3.2867 3.2595 3.3666]]
1051                   2.35031         1.34774         0.50975         -0.11896          -0.11891          0.13258          1.3334          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2464 3.4067 3.2733 3.2733 3.3    3.3532 3.4822 3.5145 3.4984 3.4658   3.4821 3.4983 3.44   3.5467 3.3876 3.3599 3.3867 3.44   3.1651 3.2297   3.181  3.1813 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3963   3.5728 3.5891 3.5729 3.589  3.5728 3.5566 3.2799 3.4133 3.3333 3.3334   3.2533 3.3334 3.3528 3.3689 3.4013 3.3204 3.3204 3.3527 3.3132 3.3133   3.26   3.2867 3.2599 3.3667]]
1052                   2.35038         1.34778         0.50975         -0.11899          -0.11895          0.13259          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2735 3.2733 3.3002 3.3536 3.4821 3.5145 3.4982 3.4661   3.4823 3.4984 3.44   3.5474 3.3865 3.3603 3.3865 3.44   3.1651 3.2293   3.1811 3.1812 3.1809 3.1489 3.3773 3.415  3.4088 3.3963 3.3836 3.3962   3.5728 3.5886 3.5729 3.589  3.5725 3.5566 3.28   3.4133 3.3333 3.3333   3.2534 3.3335 3.3527 3.3689 3.4013 3.3204 3.3204 3.3528 3.3129 3.3133   3.2599 3.2867 3.2598 3.3667]]
1053                   2.35035         1.34775         0.50974         -0.11898          -0.11893          0.13258          1.3333          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2464 3.4067 3.2733 3.2733 3.3    3.3535 3.4822 3.5143 3.4985 3.466   3.4821 3.4984 3.4398 3.5467 3.3867 3.36   3.3866 3.4399 3.1651 3.2298   3.1812 3.1812 3.1813 3.1488 3.3774 3.4151 3.4088 3.3962 3.3837 3.3963   3.5727 3.589  3.5728 3.589  3.5727 3.5566 3.28   3.4133 3.3333 3.3333   3.2533 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3527 3.3134 3.3133   3.26   3.2868 3.2597 3.3667]]
1054                   2.35026         1.34771         0.50974         -0.11893          -0.11889          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2734 3.2733 3.3001 3.3533 3.4822 3.5146 3.4984 3.4659   3.4822 3.4984 3.4397 3.5466 3.3867 3.3601 3.3867 3.44   3.165  3.2298   3.1812 3.1816 3.1813 3.149  3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5729 3.589  3.5729 3.589  3.5728 3.5566 3.2793 3.4132 3.3333 3.3333   3.2533 3.3334 3.3527 3.3689 3.4012 3.3204 3.3204 3.3528 3.3134 3.3133   3.26   3.2867 3.2601 3.3667]]
1055                   2.35039         1.34776         0.50975         -0.119          -0.11895          0.13259          1.33345          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2468 3.4067 3.2733 3.2733 3.3001 3.3533 3.4821 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1813 3.1813 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3333 3.3335   3.2533 3.3334 3.3528 3.369  3.4013 3.3203 3.3203 3.3528 3.3132 3.3133   3.2597 3.2867 3.2596 3.3666]]
1056                   2.35031         1.34774         0.50974         -0.11896          -0.11891          0.13258          1.33335          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2733 3.2732 3.3    3.3531 3.4822 3.5145 3.4984 3.4659   3.4822 3.4984 3.44   3.5471 3.3867 3.3601 3.3867 3.44   3.165  3.2297   3.1812 3.1813 3.1813 3.1488 3.3773 3.415  3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5727 3.5566 3.28   3.4133 3.3333 3.3334   3.2534 3.3333 3.3528 3.3688 3.4013 3.3204 3.3204 3.3528 3.3133 3.3134   3.2599 3.2867 3.2601 3.3666]]
1057                   2.35032         1.34774         0.50974         -0.11896          -0.11892          0.13258          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4069 3.2733 3.2734 3.2999 3.3534 3.4823 3.5145 3.4984 3.466   3.4824 3.4984 3.44   3.5467 3.3866 3.3601 3.3867 3.4404 3.1651 3.2297   3.1812 3.1813 3.1812 3.1489 3.3774 3.415  3.4088 3.3961 3.3836 3.3962   3.5728 3.589  3.5728 3.5888 3.5728 3.5565 3.28   3.4133 3.3334 3.3328   3.2534 3.3333 3.3528 3.3689 3.4013 3.3204 3.3204 3.3526 3.3133 3.3132   3.2593 3.2867 3.2601 3.3667]]
1058                   2.35022         1.34771         0.50974         -0.11892          -0.11887          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2732 3.2734 3.3    3.3533 3.4822 3.5146 3.4984 3.4656   3.4822 3.4984 3.44   3.5466 3.3868 3.3599 3.387  3.4399 3.1651 3.2299   3.1811 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.5889 3.5728 3.589  3.5727 3.5565 3.28   3.4133 3.3333 3.3333   3.2533 3.3333 3.3527 3.369  3.4013 3.3204 3.3204 3.3526 3.3134 3.3133   3.26   3.2867 3.2605 3.3668]]
1059                   2.35034         1.34775         0.50975         -0.11897          -0.11893          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2468 3.4069 3.2733 3.2733 3.3001 3.3533 3.4822 3.5146 3.4983 3.466   3.4822 3.4984 3.44   3.5467 3.3866 3.3599 3.3867 3.44   3.165  3.2296   3.1812 3.1813 3.1814 3.1492 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5729 3.589  3.5728 3.5566 3.28   3.4134 3.3333 3.3334   3.2534 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3132   3.26   3.2866 3.26   3.3667]]
1060                   2.3504         1.34776         0.50975         -0.119          -0.11896          0.13259          1.3337          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2732 3.2734 3.3001 3.3533 3.4821 3.5143 3.4984 3.466   3.4822 3.4983 3.44   3.5467 3.3867 3.36   3.3867 3.4396 3.1651 3.2298   3.1812 3.1813 3.1812 3.1486 3.3774 3.4152 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.573  3.5887 3.5727 3.5566 3.2799 3.4134 3.3336 3.3338   3.2534 3.3334 3.3528 3.3689 3.4013 3.3204 3.3203 3.3527 3.3133 3.3133   3.26   3.2867 3.2597 3.3667]]
1061                   2.35036         1.34776         0.50975         -0.11898          -0.11894          0.13259          1.3335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2465 3.4067 3.2733 3.2735 3.3    3.3533 3.4822 3.5145 3.4984 3.466   3.4822 3.4984 3.4399 3.5467 3.3867 3.3602 3.3869 3.44   3.165  3.2297   3.1812 3.1812 3.1809 3.149  3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5727 3.589  3.5728 3.5889 3.5731 3.5566 3.28   3.4135 3.3337 3.3333   3.2533 3.3333 3.3528 3.3689 3.4013 3.3203 3.3204 3.3527 3.3132 3.3135   3.2601 3.2867 3.26   3.3665]]
1062                   2.35035         1.34775         0.50974         -0.11898          -0.11893          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2732 3.2733 3.3    3.3534 3.4822 3.5142 3.4982 3.4661   3.4821 3.4982 3.4399 3.5467 3.3867 3.36   3.3867 3.4393 3.1651 3.2297   3.1813 3.1812 3.1812 3.1488 3.3773 3.415  3.4088 3.3962 3.3837 3.3963   3.5729 3.589  3.5728 3.589  3.5724 3.5566 3.28   3.4133 3.3334 3.3333   3.2533 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3526 3.3133 3.3133   3.26   3.286  3.26   3.3667]]
1063                   2.3504         1.34776         0.50975         -0.119          -0.11896          0.13259          1.3334          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2734 3.2734 3.3    3.3533 3.4823 3.5146 3.4986 3.466   3.4822 3.4984 3.44   3.5467 3.3866 3.3599 3.3867 3.44   3.165  3.2298   3.1812 3.1812 3.1812 3.1488 3.3774 3.4152 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5567 3.28   3.4132 3.3332 3.3334   3.2533 3.3334 3.3528 3.3689 3.4013 3.3204 3.3203 3.3526 3.3133 3.3133   3.26   3.2864 3.26   3.3668]]
1064                   2.3504         1.34776         0.50975         -0.119          -0.11896          0.13259          1.33335          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2732 3.3001 3.3533 3.4822 3.5148 3.4983 3.4659   3.4822 3.4986 3.4396 3.5467 3.3866 3.36   3.3867 3.44   3.1648 3.2298   3.1813 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.589  3.5724 3.5566 3.2803 3.4135 3.3334 3.3333   3.2533 3.3333 3.3527 3.3688 3.4014 3.3204 3.3204 3.3528 3.3134 3.3133   3.26   3.2867 3.2599 3.3667]]
1065                   2.35044         1.34778         0.50976         -0.11902          -0.11898          0.13259          1.33355          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2732 3.3    3.3533 3.4822 3.5146 3.4984 3.4659   3.4822 3.4983 3.44   3.5467 3.3866 3.36   3.3867 3.44   3.1651 3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.415  3.4089 3.3962 3.3837 3.3962   3.5728 3.5891 3.573  3.589  3.5728 3.5566 3.2802 3.4133 3.3333 3.3337   3.2534 3.3334 3.3525 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3129   3.26   3.2867 3.2596 3.3664]]
1066                   2.35043         1.34778         0.50975         -0.11902          -0.11897          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4068 3.2733 3.2733 3.3    3.3533 3.4823 3.5145 3.4986 3.466   3.4822 3.4984 3.44   3.5467 3.3867 3.36   3.3867 3.44   3.1645 3.2298   3.1812 3.1813 3.1813 3.1488 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3333 3.3332   3.2534 3.3334 3.3528 3.3689 3.4013 3.3204 3.3202 3.3528 3.3133 3.3133   3.26   3.2864 3.26   3.3664]]
1067                   2.35033         1.34776         0.50975         -0.11897          -0.11892          0.13258          1.3334          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2732 3.2735 3.2997 3.3533 3.4823 3.5146 3.4986 3.466   3.4825 3.4984 3.44   3.5467 3.3867 3.36   3.3866 3.4401 3.1651 3.2297   3.1812 3.1811 3.1813 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5729 3.589  3.5729 3.5889 3.5728 3.5568 3.28   3.4129 3.3334 3.3332   3.2534 3.3334 3.3527 3.369  3.4013 3.3204 3.3202 3.3528 3.3134 3.3134   3.26   3.2867 3.2602 3.3668]]
1068                   2.35033         1.34774         0.50974         -0.11897          -0.11892          0.13258          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4066 3.2735 3.2733 3.3001 3.3531 3.4823 3.5144 3.4984 3.466   3.4822 3.4984 3.44   3.5467 3.3869 3.3601 3.3867 3.44   3.165  3.2298   3.1813 3.1812 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.28   3.4133 3.3335 3.3333   3.2533 3.3333 3.3528 3.3689 3.4014 3.3205 3.3204 3.3529 3.3133 3.3133   3.26   3.2863 3.26   3.3667]]
1069                   2.35037         1.34774         0.50974         -0.11899          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.247  3.4067 3.2735 3.2733 3.3    3.3533 3.4821 3.5146 3.4984 3.4661   3.4822 3.4984 3.4399 3.5467 3.3866 3.36   3.3867 3.4401 3.165  3.2298   3.1813 3.1813 3.1809 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5566 3.2795 3.4133 3.3333 3.3333   3.2535 3.3334 3.3527 3.3689 3.4013 3.3204 3.3204 3.3528 3.3133 3.3132   3.26   3.2867 3.2596 3.3667]]
1070                   2.35033         1.34775         0.50975         -0.11897          -0.11892          0.13258          1.33355          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.406  3.2734 3.2733 3.2999 3.3535 3.4821 3.5146 3.4984 3.466   3.4822 3.4984 3.4401 3.5467 3.3867 3.36   3.3866 3.44   3.1651 3.2298   3.1812 3.1813 3.1812 3.1488 3.3774 3.4151 3.4089 3.3962 3.3837 3.3962   3.5728 3.589  3.5727 3.5888 3.5728 3.5566 3.2799 3.4134 3.3333 3.3338   3.2533 3.3333 3.3528 3.3689 3.4013 3.3203 3.3201 3.3527 3.3131 3.3133   3.26   3.2867 3.26   3.3667]]
1071                   2.35032         1.34774         0.50974         -0.11896          -0.11892          0.13258          1.3333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4067 3.2734 3.2733 3.3    3.3533 3.4822 3.5147 3.4983 3.466   3.4822 3.4984 3.4402 3.5466 3.3867 3.36   3.3867 3.4401 3.1651 3.2299   3.1812 3.1812 3.1812 3.1487 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5728 3.589  3.5728 3.589  3.5728 3.5567 3.2801 3.4133 3.3332 3.3333   3.2533 3.3333 3.3528 3.3689 3.4012 3.3203 3.3202 3.3527 3.3133 3.3133   3.2601 3.2867 3.26   3.3667]]
1072                   2.35028         1.34773         0.50974         -0.11895          -0.1189          0.13258          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2471 3.4067 3.2731 3.2733 3.3    3.3536 3.4822 3.5146 3.4984 3.466   3.4822 3.4983 3.44   3.5467 3.3868 3.36   3.3867 3.4402 3.165  3.2298   3.1812 3.1812 3.1813 3.1489 3.3774 3.4151 3.4088 3.3961 3.3837 3.3963   3.5727 3.589  3.5728 3.589  3.5726 3.5565 3.2799 3.4133 3.3333 3.3334   3.2532 3.3334 3.3526 3.3689 3.4013 3.3205 3.3204 3.3528 3.3133 3.3133   3.26   3.2867 3.26   3.3666]]
1073                   2.3504         1.34776         0.50975         -0.119          -0.11896          0.13259          1.3335          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2465 3.4069 3.2733 3.2735 3.3    3.3532 3.4822 3.5147 3.4984 3.466   3.4822 3.4983 3.4402 3.5469 3.3867 3.36   3.3867 3.4401 3.165  3.2297   3.1812 3.1812 3.1812 3.1488 3.3773 3.415  3.4088 3.3962 3.3836 3.3961   3.5728 3.5891 3.5728 3.589  3.573  3.5566 3.28   3.4133 3.3332 3.3333   3.2533 3.3337 3.3527 3.3691 3.4013 3.3204 3.3204 3.3527 3.3133 3.3131   3.2599 3.2867 3.26   3.3667]]
1074                   2.35036         1.34776         0.50975         -0.11898          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2466 3.4067 3.2733 3.2732 3.3    3.3534 3.4824 3.5146 3.4984 3.466   3.4822 3.4983 3.44   3.5467 3.3865 3.3601 3.3867 3.44   3.1651 3.2298   3.181  3.1813 3.1813 3.1489 3.3773 3.4151 3.4089 3.3962 3.3837 3.3962   3.5728 3.5892 3.5729 3.589  3.5729 3.5566 3.2801 3.4133 3.3333 3.3334   3.2533 3.3333 3.3527 3.3689 3.4013 3.3204 3.3204 3.3526 3.3131 3.3135   3.2599 3.2867 3.2604 3.3666]]
1075                   2.35037         1.34774         0.50975         -0.11899          -0.11894          0.13259          1.33335          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2467 3.4066 3.2733 3.2737 3.3    3.3531 3.4822 3.5146 3.4984 3.466   3.4822 3.4984 3.44   3.5466 3.3867 3.3597 3.3867 3.4401 3.1651 3.2298   3.1812 3.1813 3.1812 3.1489 3.3774 3.4151 3.4088 3.3962 3.3836 3.3963   3.573  3.5892 3.5728 3.589  3.5728 3.5565 3.28   3.4133 3.3333 3.3334   3.2532 3.3333 3.3528 3.3689 3.4013 3.3204 3.3203 3.3527 3.3133 3.3135   3.2599 3.2865 3.2599 3.3667]]
1076                   2.35033         1.34772         0.50974         -0.11897          -0.11892          0.13258          1.3334          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2465 3.4066 3.2733 3.2733 3.3    3.3532 3.4822 3.5146 3.4984 3.4661   3.4823 3.4983 3.4399 3.5466 3.3867 3.36   3.3865 3.4409 3.1647 3.2297   3.1812 3.1812 3.1812 3.1489 3.3773 3.4151 3.4088 3.3962 3.3837 3.3963   3.5728 3.5891 3.5729 3.589  3.5728 3.5566 3.2791 3.4133 3.3332 3.3335   3.253  3.3333 3.3528 3.3687 3.4013 3.3204 3.3205 3.3527 3.3133 3.3136   3.2599 3.2867 3.26   3.3667]]
1077                   2.35027         1.34773         0.50974         -0.11894          -0.1189          0.13258          1.3334          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2469 3.4067 3.2735 3.2733 3.3    3.3533 3.4822 3.5142 3.4984 3.466   3.4822 3.4985 3.44   3.5467 3.3867 3.3601 3.3867 3.44   3.165  3.2298   3.1813 3.1812 3.1813 3.1489 3.3773 3.4151 3.4088 3.3962 3.3836 3.3962   3.5728 3.5888 3.5728 3.589  3.5728 3.5565 3.28   3.4133 3.3334 3.3333   3.2534 3.3334 3.3528 3.3689 3.4013 3.3204 3.3204 3.3527 3.3133 3.3133   3.26   3.2866 3.26   3.3667]]
1078                   2.35034         1.34774         0.50974         -0.11897          -0.11893          0.13258          1.33335          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2467 3.4065 3.2735 3.2734 3.3    3.3533 3.4822 3.5145 3.4984 3.4661   3.4822 3.4984 3.4401 3.5466 3.3866 3.36   3.3866 3.4397 3.165  3.2297   3.1812 3.1812 3.1813 3.1489 3.3774 3.4151 3.4088 3.3962 3.3837 3.3962   3.5729 3.589  3.5728 3.589  3.5729 3.5566 3.2801 3.4132 3.3333 3.3334   3.2533 3.3333 3.3527 3.3689 3.4013 3.3203 3.3204 3.3527 3.3135 3.3134   3.2598 3.2867 3.2601 3.3667]]
1079                   2.35033         1.34774         0.50974         -0.11897          -0.11893          0.13258          1.3334          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2466 3.4071 3.2735 3.2734 3.3    3.3534 3.4823 3.5144 3.4985 3.4659   3.4822 3.4984 3.44   3.5467 3.3866 3.36   3.3866 3.44   3.1651 3.2296   3.1812 3.1812 3.1812 3.149  3.3774 3.415  3.4088 3.3962 3.3836 3.3962   3.5728 3.589  3.5728 3.5888 3.5729 3.5566 3.28   3.4134 3.3333 3.3334   3.2528 3.3334 3.3526 3.3689 3.4013 3.3204 3.3204 3.3527 3.3134 3.3134   3.26   3.2866 3.26   3.3667]]
1080                   2.59227         1.4298         0.58312         -0.23416          -0.19581          0.15269          1.33603          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.9673 3.346  3.3042 2.7797 2.6058 2.9873 3.442  3.3599 3.3356 3.2664   3.5582 3.4091 3.4063 3.8902 3.6121 3.9731 3.7382 3.2613 3.182  3.0474   3.1877 3.3393 3.198  3.0146 3.7981 3.7299 3.7801 3.5919 3.5507 3.6914   4.1061 4.1451 4.1576 4.0461 4.1736 4.0815 3.9581 3.8987 3.8404 3.612   3.8279 3.7662 4.2635 3.3871 4.1976 4.0799 4.1735 3.8034 4.1638 4.097   4.2372 4.1281 4.3302 4.1644]]
1081                   2.6063         1.42664         0.57539         -0.24083          -0.2093          0.1521          1.4343          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.769  3.0149 2.4197 3.2717 3.1525 3.404  3.7236 3.5074 3.4985 3.404   3.3925 3.6236 3.8875 3.7148 3.5818 3.4702 3.3751 3.78   3.1075 3.1629   3.1762 3.2845 3.303  3.0966 3.6983 3.6686 3.644  3.6159 3.7007 3.6087   4.0626 4.0741 4.0887 4.2095 4.1633 3.7765 3.7361 3.6899 3.3492 3.3351   3.842  3.8104 4.216  4.145  4.0663 3.7574 3.8717 4.0239 4.0727 3.3612   4.3094 4.1897 3.992  4.3648]]
1082                   2.4192         1.34737         0.55391         -0.15176          -0.11845          0.14308          1.30148          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.2926 2.7824 3.1985 3.2561 3.0984 3.2044 3.6333 3.5591 3.3784 3.3983   3.7038 3.4721 3.6671 3.7915 3.6875 3.5701 3.4846 3.457  3.3148 3.1048   3.3741 3.3261 3.4487 2.9235 3.6807 3.8103 3.7932 3.3907 3.5353 3.3978   4.308  3.9449 4.0702 4.3302 4.0441 4.04   3.3958 3.6139 3.303  3.4282   3.5316 3.8733 3.4139 3.8363 3.8907 3.9807 4.0759 3.9087 4.2136 4.3166   4.1867 4.2586 4.2533 3.9966]]
1083                   2.42378         1.36632         0.54521         -0.15394          -0.13076          0.14174          1.2041          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.5853 2.8475 2.8687 2.881  3.3341 3.2852 3.4962 3.1457 3.1188 3.6486   3.3603 3.2718 3.6256 3.4469 3.7275 3.3513 3.7307 3.5196 3.1533 3.237   3.129  3.0472 3.1184 3.0608 3.7487 3.7925 3.5551 3.6393 3.5776 3.6847   4.2471 4.0577 3.8312 3.6504 4.0265 4.0803 4.0861 3.4077 3.4082 3.7258   3.6329 3.6816 3.4062 3.8624 3.9674 3.9254 4.1628 4.0694 4.1487 4.0673   4.0901 4.4238 4.4542 4.1798]]
1084                   2.38457         1.35255         0.50858         -0.13527          -0.1343          0.13445          1.34562          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.935  3.0735 2.928  2.9354 2.9926 3.0228 3.2917 3.2939 3.3283 3.2995   3.3057 3.2864 3.3805 3.5016 3.1025 3.2559 3.3464 3.3542 3.0254 2.9904   3.0542 2.9772 2.9827 3.1425 3.3597 3.3929 3.3918 3.3754 3.3566 3.3679   3.6171 3.628  3.6294 3.7561 3.6168 3.569  3.2469 3.3663 3.3419 3.3483   3.3836 3.4055 3.5081 3.5238 3.6047 3.4583 3.4732 3.4676 3.5849 3.5531   3.4997 3.5463 3.5223 3.5295]]
1085                   2.34614         1.33795         0.50674         -0.11698          -0.11657          0.13285          1.33342          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9127 3.0633 2.8865 2.9209 2.9939 2.9487 3.2643 3.3271 3.3205 3.2603   3.2964 3.2627 3.4275 3.3724 3.4287 3.1503 3.584  3.4855 3.1277 2.9995   3.1389 3.1016 3.1236 3.0263 3.3539 3.3943 3.3927 3.3791 3.3585 3.3716   3.6788 3.6147 3.6331 3.6418 3.7321 3.6761 3.3786 3.4198 3.4218 3.3138   3.1781 3.333  3.536  3.5398 3.5916 3.5078 3.4782 3.5802 3.5714 3.5195   3.5622 3.4704 3.3611 3.6688]]
1086                   2.35664         1.33664         0.50677         -0.12197          -0.12144          0.13347          1.3282          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0952 3.0702 2.9359 2.9536 2.9739 3.0251 3.274  3.2822 3.2695 3.2361   3.3035 3.2852 3.2028 3.5022 3.3551 3.2601 3.2496 3.3707 2.9295 3.0477   3.0456 2.9448 3.2103 3.1545 3.3572 3.3992 3.388  3.3737 3.3588 3.3685   3.6416 3.7047 3.6551 3.771  3.7047 3.6702 3.2656 3.4457 3.3563 3.3089   3.1946 3.3475 3.4961 3.4699 3.5092 3.4534 3.517  3.5087 3.5873 3.6431   3.5507 3.6426 3.5111 3.6825]]
1087                   2.29277         1.31987         0.50116         -0.09157          -0.09086          0.13021          1.31713          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9252 3.0657 2.9097 2.9414 3.0096 3.1272 3.2742 3.3105 3.3513 3.2486   3.2275 3.2407 3.1585 3.3914 3.2372 3.3787 3.3969 3.3837 3.037  3.2007   3.1816 3.2913 3.0352 3.1253 3.348  3.3991 3.3853 3.3781 3.3583 3.3675   3.7014 3.7027 3.5493 3.6686 3.6868 3.6351 3.0461 3.5252 3.1848 3.271   3.2702 3.2184 3.48   3.5133 3.5426 3.3444 3.5256 3.4727 3.6152 3.6412   3.5739 3.5129 3.5806 3.6334]]
1088                   2.39894         1.35858         0.51346         -0.14211          -0.14211          0.13504          1.3205          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3699 3.5589 3.3583 3.4029 3.5123 3.4815 3.5394 3.6608 3.6205 3.5617   3.5883 3.6402 3.435  3.5668 3.4492 3.3679 3.3681 3.4569 3.2346 3.2018   3.2863 3.2592 3.2299 3.2136 3.3929 3.4187 3.4185 3.4023 3.3938 3.4079   3.5015 3.5573 3.5158 3.5431 3.5235 3.5633 3.2964 3.4488 3.315  3.2857   3.2768 3.3717 3.2487 3.2539 3.326  3.2506 3.271  3.296  3.0912 3.1752   3.0954 3.1323 3.0822 3.2492]]
1089                   2.36553         1.3503         0.50953         -0.12621          -0.12619          0.13313          1.31575          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2476 3.5182 3.3996 3.5057 3.4198 3.4396 3.5889 3.6154 3.5505 3.5389   3.5736 3.5498 3.4295 3.5302 3.3854 3.4123 3.506  3.454  3.1875 3.2592   3.2113 3.2453 3.2582 3.1342 3.3882 3.4185 3.4205 3.3986 3.3839 3.4101   3.5192 3.5573 3.5099 3.549  3.5555 3.5135 3.3624 3.3569 3.3256 3.2987   3.2391 3.3541 3.3141 3.3103 3.3059 3.2403 3.1899 3.2848 3.3373 3.1691   3.1232 3.117  3.1353 3.2873]]
1090                   2.39433         1.3519         0.511         -0.13992          -0.13988          0.1347          1.31375          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3649 3.5187 3.4156 3.4981 3.5151 3.4379 3.5509 3.6259 3.5083 3.5404   3.5839 3.5686 3.4416 3.5221 3.392  3.3261 3.3555 3.4796 3.1955 3.2503   3.2396 3.2254 3.2227 3.1956 3.3843 3.4144 3.4142 3.399  3.3856 3.3986   3.5564 3.5528 3.5213 3.5693 3.5359 3.5099 3.2321 3.4814 3.3218 3.3455   3.2664 3.3033 3.2342 3.3249 3.3057 3.2384 3.301  3.3296 3.1426 3.1592   3.0787 3.1787 3.1401 3.1826]]
1091                   2.34946         1.34695         0.50916         -0.11856          -0.11844          0.13255          1.3374          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1641 3.36   3.2108 3.1949 3.2287 3.2875 3.4427 3.4871 3.4492 3.4212   3.4475 3.4478 3.4532 3.5269 3.3568 3.3593 3.3344 3.4201 3.1302 3.1989   3.1528 3.1252 3.1567 3.1213 3.3733 3.4113 3.4044 3.3909 3.3785 3.3913   3.6051 3.5933 3.5959 3.5892 3.6022 3.5628 3.3064 3.4115 3.3148 3.3469   3.2445 3.3279 3.3609 3.4091 3.4354 3.3398 3.3634 3.3855 3.3874 3.3847   3.305  3.3426 3.3396 3.4261]]
1092                   2.34892         1.3468         0.50992         -0.1183          -0.11823          0.13268          1.3499          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1384 3.3413 3.1958 3.1968 3.2335 3.293  3.4438 3.4682 3.4711 3.4325   3.45   3.4428 3.4403 3.4919 3.3749 3.3813 3.3815 3.4687 3.1182 3.1919   3.1677 3.1334 3.1398 3.1159 3.3743 3.4112 3.4048 3.3918 3.38   3.3915   3.6145 3.6243 3.5928 3.6033 3.5988 3.5513 3.2786 3.4204 3.3361 3.3288   3.2769 3.3637 3.3924 3.4108 3.4468 3.3437 3.3711 3.3856 3.3845 3.3866   3.3208 3.3435 3.3297 3.4463]]
1093                   2.34259         1.34549         0.50887         -0.11528          -0.11518          0.13225          1.3476          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1658 3.334  3.1783 3.1855 3.2263 3.2832 3.4195 3.4712 3.4458 3.4292   3.4368 3.4618 3.4244 3.5396 3.3564 3.3537 3.3821 3.4558 3.1203 3.1979   3.1409 3.153  3.1869 3.1265 3.374  3.4109 3.4054 3.3916 3.3794 3.3922   3.5885 3.6198 3.5922 3.5967 3.6034 3.5967 3.2595 3.3954 3.3488 3.3286   3.2395 3.3464 3.3957 3.407  3.427  3.3514 3.3596 3.3863 3.3642 3.3976   3.3243 3.3718 3.3204 3.4252]]
1094                   2.34733         1.34708         0.50938         -0.11754          -0.11745          0.13249          1.34915          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.175  3.3356 3.1929 3.1979 3.238  3.2765 3.4424 3.4973 3.4638 3.4388   3.4423 3.4678 3.4361 3.5378 3.4128 3.3501 3.3669 3.4424 3.1403 3.1841   3.1503 3.1306 3.1457 3.1211 3.3721 3.4102 3.4043 3.3958 3.3785 3.3928   3.6114 3.6352 3.6002 3.5981 3.5583 3.5852 3.251  3.3745 3.347  3.3201   3.264  3.3513 3.3848 3.3996 3.4414 3.37   3.3288 3.3929 3.3624 3.3923   3.3205 3.3509 3.3239 3.4179]]
1095                   2.40118         1.30516         0.46002         -0.14318          -0.09977          0.13081          1.34622          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.661  2.6702 2.7686 2.4521 3.2383 2.7844 2.955  2.9962 2.743  2.872   3.0067 2.8931 3.0722 3.1457 3.217  2.7679 3.3703 2.9015 2.841  2.7288   2.7217 2.7179 2.8076 2.7289 3.0028 3.4101 2.9266 2.9745 3.0436 3.0052   3.3743 3.2681 3.2904 3.45   3.0626 3.3123 2.9793 3.4413 3.4232 3.3629   2.8793 3.0907 3.1593 3.2605 3.1537 3.264  3.3289 3.3385 3.358  3.6205   3.4145 3.2092 3.5863 3.3092]]
1096                   2.39273         1.30912         0.45577         -0.13915          -0.08531          0.1292          1.34245          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.5396 2.7882 2.9478 2.6114 2.6324 2.3388 2.9484 2.9246 2.641  2.6351   2.9604 2.9096 3.1053 3.3761 3.2716 3.3603 3.0516 3.0259 2.7726 2.609   3.1517 2.5981 2.9312 2.7551 3.0579 3.0939 3.0796 2.9323 3.0208 3.3925   3.5049 3.3622 3.5897 3.6314 3.3581 3.514  2.7419 2.8593 2.8317 3.3325   2.899  2.758  3.2256 3.1096 3.3524 3.054  3.0928 3.0484 3.2102 3.4113   3.1862 3.3357 3.2345 3.4006]]
1097                   2.4106         1.3123         0.45378         -0.14767          -0.09545          0.13023          1.16818          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.1898 2.548  3.2278 2.9018 2.5715 2.5921 2.9031 2.9471 2.9408 2.9708   3.433  3.0418 2.8467 2.996  3.0637 3.0138 3.3704 2.856  2.5684 2.5684   2.6103 2.5762 2.561  2.5672 3.1067 3.1792 3.1188 3.1216 3.0586 3.0602   3.5892 3.3615 3.3694 3.3122 3.2148 3.5797 3.0736 2.8402 2.9378 2.7441   2.7206 2.9616 3.1206 3.0235 3.2411 3.0691 3.2314 3.1902 3.4319 3.486   3.6267 3.5612 3.4461 3.1405]]
1098                   2.43485         1.32503         0.45423         -0.15921          -0.09873          0.13107          1.31963          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.6854 2.701  2.5444 2.6568 2.3706 2.6916 2.6719 2.7892 2.8705 3.1561   2.7251 2.8232 2.7383 3.5622 2.6537 2.9232 3.2417 2.8941 2.9518 2.6005   2.785  2.9875 2.9577 2.466  3.0052 3.142  2.9743 3.1339 3.032  3.1044   3.2533 3.4698 3.0362 3.3734 3.3413 3.2666 2.7836 3.0483 2.9897 3.1663   3.2513 3.0066 3.3723 3.2781 3.4061 3.0116 3.0648 3.1227 3.4826 3.4205   3.1611 3.2303 3.5357 3.5089]]
1099                   2.33532         1.33205         0.50187         -0.11182          -0.11083          0.13187          1.30133          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9599 3.0426 2.95   2.9334 3.0445 3.0579 3.2894 3.3209 3.2806 3.2829   3.2457 3.3079 3.2646 3.569  3.3747 3.3833 3.3031 3.3719 3.0357 3.0763   3.1102 2.941  3.0072 2.9489 3.3548 3.3948 3.3867 3.383  3.3589 3.364   3.5897 3.6695 3.7127 3.7085 3.6389 3.582  3.1733 3.3787 3.2831 3.2155   3.279  3.1934 3.4827 3.4976 3.5629 3.4578 3.4651 3.4816 3.5941 3.5745   3.5443 3.5528 3.5819 3.6393]]
1100                   2.36394         1.34133         0.50733         -0.12545          -0.1249          0.13371          1.33813          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8986 3.0744 3.07   2.9018 3.0621 3.0065 3.3224 3.4402 3.3095 3.2996   3.2878 3.3092 3.4427 3.5077 3.3165 3.2934 3.3825 3.3445 2.9745 3.027   3.1013 3.0158 3.0647 3.0356 3.3548 3.3962 3.3857 3.37   3.3532 3.3715   3.6887 3.6519 3.6983 3.7282 3.5978 3.6332 3.1963 3.3792 3.3541 3.3575   3.2142 3.3134 3.5444 3.5334 3.5198 3.4836 3.4239 3.4502 3.4743 3.5883   3.5945 3.5808 3.4881 3.6099]]
1101                   2.30238         1.3254         0.50257         -0.09614          -0.0959          0.13056          1.2993          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8793 3.137  3.015  2.975  2.909  3.0383 3.2879 3.3273 3.2749 3.2619   3.2856 3.3237 3.5696 3.4867 3.3684 3.1274 3.4703 3.6109 3.0717 3.2405   3.0732 3.1225 3.0995 3.1247 3.3549 3.405  3.3853 3.3792 3.3595 3.3741   3.5973 3.6536 3.679  3.7116 3.6311 3.5347 3.4597 3.3933 3.226  3.2144   3.1912 3.3802 3.5211 3.5312 3.6183 3.4545 3.483  3.5114 3.473  3.5678   3.5779 3.547  3.5185 3.642 ]]
1102                   2.37594         1.34309         0.50778         -0.13116          -0.13068          0.13426          1.34865          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9254 3.099  2.8832 3.0666 2.9922 3.0319 3.2953 3.2786 3.3036 3.2787   3.2515 3.3332 3.4532 3.3757 3.3599 3.2622 3.3461 3.5696 2.9478 3.1319   2.9251 3.0291 3.015  2.9918 3.3502 3.3911 3.3922 3.3822 3.3618 3.3791   3.7224 3.7252 3.7093 3.7249 3.7225 3.7012 3.3588 3.2583 3.4944 3.3762   3.2195 3.2055 3.5058 3.4989 3.5495 3.2774 3.4482 3.4787 3.5963 3.6359   3.5549 3.5553 3.5749 3.6528]]
1103                   2.35693         1.35333         0.51149         -0.12211          -0.12209          0.13294          1.3538          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2892 3.4767 3.2439 3.3228 3.304  3.36   3.5235 3.5668 3.5319 3.5052   3.5052 3.5735 3.4178 3.5829 3.3693 3.3944 3.4453 3.436  3.1891 3.2743   3.2385 3.1716 3.2184 3.1696 3.3802 3.4178 3.4107 3.4044 3.3898 3.3958   3.5579 3.5385 3.5487 3.5762 3.5476 3.5301 3.321  3.4198 3.2922 3.3489   3.241  3.3652 3.3307 3.3796 3.3587 3.2724 3.3334 3.3555 3.2742 3.2219   3.2434 3.1883 3.2723 3.2725]]
1104                   2.34304         1.34213         0.50793         -0.1155          -0.1155          0.13213          1.35925          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3316 3.5387 3.3969 3.3255 3.3718 3.3343 3.5344 3.5635 3.5338 3.4855   3.5118 3.5344 3.4581 3.5413 3.3548 3.3431 3.3313 3.5297 3.2511 3.2386   3.2188 3.1884 3.188  3.1507 3.3834 3.4148 3.409  3.4014 3.388  3.3968   3.5716 3.5338 3.5397 3.5687 3.5376 3.5196 3.2352 3.3973 3.2917 3.3501   3.2372 3.3684 3.3419 3.364  3.3783 3.3114 3.3344 3.3514 3.2533 3.2333   3.2934 3.3105 3.1835 3.3845]]
1105                   2.3616         1.34849         0.51024         -0.12433          -0.12431          0.13313          1.3346          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3343 3.4692 3.3767 3.3065 3.3735 3.4331 3.5353 3.5446 3.5489 3.4558   3.5585 3.5102 3.4412 3.5196 3.3745 3.3431 3.3634 3.4411 3.187  3.259   3.2092 3.1817 3.2257 3.1548 3.3771 3.4136 3.4141 3.3922 3.3838 3.3975   3.5095 3.5858 3.5379 3.6052 3.5641 3.5655 3.275  3.4369 3.3046 3.3636   3.2384 3.308  3.3216 3.3175 3.3612 3.2845 3.3142 3.336  3.2548 3.2811   3.2806 3.1621 3.2351 3.294 ]]
1106                   2.34234         1.3455         0.50834         -0.11516          -0.11505          0.13213          1.3195          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1924 3.3501 3.2046 3.2138 3.2004 3.2978 3.4469 3.4799 3.4566 3.4291   3.4539 3.4581 3.4574 3.5197 3.3381 3.359  3.4204 3.3802 3.1419 3.2027   3.1468 3.1321 3.1586 3.108  3.3735 3.4107 3.4054 3.393  3.3782 3.3919   3.5916 3.6067 3.5698 3.6115 3.5984 3.5776 3.2813 3.3728 3.3257 3.3133   3.249  3.3121 3.3876 3.3936 3.4439 3.3611 3.3539 3.401  3.3677 3.3819   3.313  3.3577 3.3228 3.4286]]
1107                   2.35535         1.34925         0.51082         -0.12136          -0.12127          0.13301          1.33655          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1312 3.3298 3.2063 3.1868 3.2347 3.3014 3.4417 3.4806 3.4544 3.4225   3.4427 3.4651 3.4267 3.5292 3.383  3.3965 3.3649 3.4066 3.1455 3.2053   3.14   3.1542 3.1635 3.1079 3.3733 3.4102 3.4056 3.3921 3.3794 3.3905   3.6021 3.623  3.6052 3.6294 3.6061 3.6027 3.2876 3.4278 3.2974 3.3493   3.2771 3.3238 3.3907 3.3763 3.447  3.3582 3.3291 3.3719 3.3798 3.3697   3.3066 3.3544 3.3093 3.4364]]
1108                   2.34736         1.34642         0.5089         -0.11755          -0.11744          0.13243          1.3395          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.156  3.3154 3.249  3.2004 3.2355 3.2883 3.4555 3.4814 3.4516 3.4186   3.4396 3.4584 3.4217 3.5883 3.3567 3.3665 3.38   3.4359 3.1277 3.1793   3.1573 3.1362 3.1631 3.1133 3.3736 3.4098 3.4063 3.3924 3.38   3.3931   3.6022 3.6269 3.5966 3.5845 3.6038 3.5696 3.2615 3.3986 3.3033 3.325   3.2414 3.354  3.3847 3.3803 3.4288 3.3368 3.3577 3.3908 3.3609 3.3776   3.3404 3.3401 3.2932 3.4319]]
1109                   2.35249         1.34871         0.51007         -0.12          -0.11989          0.13279          1.3245          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.134  3.3392 3.2298 3.1977 3.224  3.2851 3.4509 3.4777 3.465  3.427   3.4414 3.4589 3.4424 3.5508 3.3967 3.3354 3.4248 3.438  3.1131 3.1714   3.1554 3.1377 3.1295 3.1143 3.3732 3.4112 3.4059 3.3924 3.3812 3.3897   3.6082 3.6178 3.5955 3.6055 3.5925 3.568  3.2804 3.4234 3.3173 3.3249   3.2806 3.3241 3.3794 3.4063 3.43   3.3434 3.3494 3.383  3.3593 3.3735   3.318  3.346  3.3334 3.4091]]
1110                   2.34366         1.29529         0.4582         -0.11579          -0.08002          0.12885          1.21417          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.705  2.7136 2.2305 2.5548 2.6127 2.6114 2.8328 2.8957 2.7371 2.5938   2.9553 2.9788 3.2563 2.7783 2.7753 3.4827 2.9101 3.0601 2.7193 3.1051   2.5943 2.9237 2.8177 2.6519 3.1101 3.1775 3.1629 3.1415 3.1293 3.1501   3.4258 3.4095 3.4725 3.3181 3.2896 3.4206 2.9089 3.3637 2.9665 2.8743   3.2225 2.6722 3.4528 3.6074 3.459  3.3811 3.5706 3.6295 3.7999 3.9605   3.4251 3.469  3.7104 3.6867]]
1111                   2.45511         1.34549         0.48326         -0.16885          -0.14173          0.13639          1.41972          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.492  2.6498 2.5137 2.4594 2.3138 2.4269 3.1894 2.9304 2.7488 2.8969   3.0716 2.8587 2.8957 2.7241 2.8338 2.8075 3.4052 3.1991 2.7149 2.9425   2.6528 3.1715 3.0053 2.7477 3.1337 3.2171 3.1407 3.1404 3.0907 3.1413   3.7189 3.5572 3.5514 3.4271 3.6594 3.4486 3.1366 3.2342 3.6429 2.9001   3.0216 3.075  3.2513 3.444  3.501  3.7735 3.363  3.5553 3.478  3.694   3.7576 3.7638 3.5501 3.7567]]
1112                   2.52492         1.36075         0.48833         -0.20209          -0.17677          0.1413          1.40048          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4133 2.456  2.4628 2.7538 2.1665 2.2034 3.0482 2.665  2.9051 2.7746   2.8797 3.0378 2.9559 2.6814 2.8527 3.282  3.3165 2.9323 2.6123 2.7567   2.4487 2.6341 2.8201 2.6015 3.1493 3.1823 3.1522 3.1898 3.1441 3.1158   3.6434 3.6233 3.4184 3.5621 3.7782 3.7356 3.0653 3.0613 3.72   3.0289   3.4532 3.1988 3.684  3.5326 3.5345 3.3828 3.5396 3.4017 4.1354 3.6992   4.0015 3.7777 3.7123 3.9316]]
1113                   2.45156         1.33776         0.47368         -0.16716          -0.13976          0.13606          1.3013          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.5577 2.5318 2.2063 2.2888 2.5186 2.9362 2.8292 2.92   2.8077 2.7715   3.2109 2.7904 3.1645 3.1455 2.7627 3.0322 3.5009 2.8689 2.7171 2.5631   2.8664 2.6248 2.4524 2.896  3.1895 3.1835 3.1575 3.1894 3.1959 3.1785   3.2936 3.556  3.6132 3.5487 3.5314 3.317  3.5075 3.0021 2.7688 3.1816   3.3168 3.4125 3.584  3.6607 3.4635 3.3381 3.4687 3.647  3.814  3.7144   3.951  3.8076 3.5034 3.651 ]]
1114                   4.54485         1.67379         0.43647         -1.16376          -0.07017          0.28721          1.1802          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.6702 1.6211 1.4651 1.6237 0.7153 1.0814 1.4114 2.0018 2.0077 1.6201   1.586  1.7351 1.3732 2.4101 1.4965 2.118  2.1221 2.3176 1.4812 1.3003   2.1623 1.5001 1.6987 1.1182 2.544  1.9142 1.7445 1.9074 2.1484 2.3926   2.0315 1.624  2.0745 1.5369 2.0714 2.4219 1.8266 2.5078 2.0797 0.9309   1.6098 1.2512 1.7935 1.6973 1.8918 2.4912 2.2936 2.0706 2.7656 2.2114   2.2713 2.8228 1.5967 2.6645]]
1115                   4.71864         1.71079         0.44346         -1.2465          -0.09494          0.29627          1.38233          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.5431 1.1682 1.4139 1.0475 1.3824 1.0627 1.6986 1.7082 1.3293 1.655   1.6232 1.8836 1.2797 1.8743 1.4755 2.181  2.4601 1.751  1.5196 1.8067   1.889  1.509  1.496  1.3049 1.8548 1.918  2.0896 1.9785 1.7796 1.2779   1.7422 1.7031 2.3509 1.6425 2.3446 1.6425 1.7361 2.3759 1.1737 2.0144   2.7623 1.6018 2.2505 2.0298 2.3104 2.4239 1.847  2.6789 2.0875 2.3724   2.5065 1.7953 1.9502 2.3801]]
1116                   4.9716         1.80778         0.48937         -1.36693          -0.21653          0.32926          1.36523          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.0182 0.9149 1.5832 2.0829 1.097  1.1305 1.8722 2.3815 1.8893 1.5095   1.206  1.6027 2.584  2.3108 0.9499 2.54   1.7373 2.0863 0.9796 1.3076   1.3854 1.9458 1.336  2.1385 2.0986 1.4154 1.7327 1.8343 2.0213 2.1292   2.5476 1.8856 2.7364 2.1536 2.5094 2.2126 1.3727 2.2722 1.3486 1.3489   1.1712 2.4741 2.3512 2.3069 1.5934 1.8302 1.4617 2.5122 2.4312 1.7274   2.4691 1.3303 1.8736 1.985 ]]
1117                   5.26162         1.85564         0.50086         -1.505          -0.34444          0.35412          1.42363          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.6209 0.9888 1.6188 2.1391 1.315  1.0967 1.9167 2.0107 1.6643 1.3621   1.1421 1.68   0.9569 1.8306 1.8205 1.1989 1.4536 1.5801 0.7915 1.6719   1.0148 1.4559 2.0719 1.4732 1.9552 1.8492 2.1411 1.4989 1.0203 1.4347   2.5666 2.4816 2.5875 2.5047 2.232  2.0442 1.9445 2.0837 2.7104 1.5772   2.0767 2.4544 1.8295 1.7754 2.2808 1.9321 2.0067 2.256  3.3637 1.7093   1.5094 2.4582 2.1706 2.0262]]
1118                   4.92844         1.83376         0.87004         -1.34638          -0.23139          0.25892          1.76428          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.309  4.1029 3.696  3.5963 4.2278 3.6136 4.8062 4.5851 4.8962 4.0575   5.2444 4.4308 5.0826 4.6281 5.0657 5.5345 4.7859 3.9433 4.1395 3.845   4.5471 4.556  4.6265 4.5971 4.7406 5.1282 5.0159 4.8306 5.098  5.1699   5.1109 4.6774 5.6306 5.6442 5.7655 5.449  4.6592 5.4921 4.7682 4.8116   4.7639 4.6936 5.3485 5.4649 5.5431 5.3249 5.4481 5.4168 6.0621 5.9497   5.7148 5.5268 5.5662 5.5734]]
1119                   5.3235         1.91898         0.90338         -1.53447          -0.25952          0.27254          1.8365          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.1077 3.6835 4.1217 3.9388 4.1823 4.1959 4.4867 4.6759 4.5791 4.5492   4.5228 4.6011 5.3336 4.8696 4.9761 5.1829 4.3604 5.045  4.5952 4.1496   4.2029 4.6413 4.8032 4.0803 4.4323 5.117  5.0587 4.2786 5.0769 5.1661   5.4968 5.4943 5.7372 5.7783 5.9626 5.5062 5.1502 5.2903 5.0774 5.3348   5.0148 5.1543 5.3118 5.4273 5.7182 5.253  5.6543 5.35   5.9561 6.2172   6.2307 6.1118 5.6691 6.1238]]
1120                   5.05812         1.89895         0.88156         -1.40812          -0.26127          0.26187          1.90497          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8184 4.1995 3.911  3.7284 3.6666 3.9535 4.5668 4.4205 4.3584 4.5095   4.3883 4.4263 5.0079 5.4592 5.2181 4.3155 4.3078 4.8801 4.3423 4.4872   4.2725 4.5935 3.8677 4.5923 5.0331 4.9072 4.8485 5.0532 5.0256 4.9931   5.509  5.6384 5.4699 5.4783 5.4828 5.4639 5.1788 5.4123 4.3418 4.428   5.1105 5.1019 5.0462 5.5213 5.5007 5.4756 5.4278 5.702  6.1035 5.7877   6.0354 5.9098 5.9235 6.2771]]
1121                   4.91838         1.8986         0.86889         -1.34159          -0.20844          0.25568          1.88838          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8693 4.2968 3.7084 4.4955 3.9902 3.8856 4.3478 4.5643 4.1867 4.5219   4.5742 4.3554 5.1184 5.131  4.6201 4.4537 4.398  5.462  4.738  4.2019   4.5551 3.9593 4.5367 4.4185 4.6583 5.1625 5.1104 5.2363 5.116  4.4465   5.5488 5.0921 4.9168 5.6738 5.6212 5.3749 5.6526 4.5754 4.5525 4.7363   5.0201 5.1318 5.4372 5.4825 5.3991 5.787  5.5882 5.5344 5.5476 5.9199   5.2667 6.3635 5.8374 5.7974]]
1122                   2.45467         1.3406         0.49004         -0.16864          -0.15599          0.13833          1.21413          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3976 2.4385 2.7591 2.2092 2.5478 2.4431 2.8309 2.7762 3.0659 3.1061   3.0869 3.1736 3.2162 3.4997 3.2028 3.4126 3.3993 3.4276 2.5631 3.0412   2.759  2.7906 2.4773 2.6471 3.2286 3.2546 3.2656 3.2129 3.2519 3.2946   3.6782 3.6494 3.7048 3.6837 3.5041 3.702  2.9048 3.1906 3.0955 3.1892   3.562  3.2645 3.6275 3.4452 3.7752 3.2306 3.3133 3.4783 3.8143 3.9393   3.5528 4.4324 3.5909 3.7538]]
1123                   2.39203         1.32672         0.4809         -0.13882          -0.11706          0.13315          1.38053          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8056 2.8245 2.5537 2.3464 2.5156 2.4029 3.0524 3.0418 2.9027 2.8524   3.0308 2.9544 3.1949 3.0938 2.9529 3.2851 2.9952 2.9287 2.8413 2.9474   2.7845 3.0578 2.9638 2.7651 3.2082 3.2279 3.255  3.2277 3.2321 3.2012   3.7965 3.5816 3.3698 3.3258 3.2142 3.541  2.7327 3.3597 3.1601 3.2729   2.9107 3.4531 3.5108 3.2929 3.7571 3.1213 3.5791 3.4434 3.7735 3.9044   3.5446 3.4055 3.7663 3.859 ]]
1124                   2.43516         1.31512         0.48219         -0.15935          -0.14236          0.13592          1.2722          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.6966 2.1082 2.6431 2.8707 2.5441 2.4231 2.7997 3.1372 2.8885 2.7723   2.8036 3.0495 3.3334 3.2526 3.1718 3.1179 3.2453 3.1522 2.7931 2.9733   2.7064 2.9023 2.7884 2.4275 3.2365 3.281  3.2141 3.2266 3.227  3.2024   3.6878 3.7178 3.4644 3.5692 3.8774 3.6846 2.9499 3.2739 3.2397 3.1073   3.0627 3.1203 3.6359 3.3892 3.7562 3.422  3.6429 3.496  3.8437 3.6953   3.7079 3.6744 3.7875 3.6701]]
1125                   2.44448         1.31978         0.49124         -0.16379          -0.15326          0.13847          1.2843          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7275 2.6126 2.7417 2.4847 2.705  2.852  3.3373 3.2383 3.0826 2.7752   2.8502 3.1418 2.8538 3.2547 2.9914 3.0708 3.1775 2.7933 2.6362 2.5851   3.0935 2.7554 2.8121 2.9199 3.2156 3.2531 3.2112 3.1619 3.225  3.2043   3.6604 3.6742 3.8095 3.6966 3.7372 3.5026 3.2378 3.532  3.1273 3.5097   2.8827 2.9992 3.3308 3.4102 3.3103 3.7642 3.5275 3.447  3.9559 4.1635   3.8276 3.8769 4.098  3.7888]]
R2 : 0.7932
MSE : 0.4343
MAE : 0.5007
MAPE : 0.184
Explained Var : 0.7951
MSLE : 0.0272
MedAE : 0.3616
R2 indices : (array([39], dtype=int64),)
MSE indices : (array([39], dtype=int64),)
MAE indices : (array([568], dtype=int64),)
MAPE indices : (array([69], dtype=int64),)
Explained Var indices : (array([39], dtype=int64),)
MSLE indices : (array([2], dtype=int64),)
MedAE indices : (array([600], dtype=int64),)