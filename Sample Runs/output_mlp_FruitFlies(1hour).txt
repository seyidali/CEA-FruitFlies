IterationNumber           MSE              MAE              MAPE              R2              ExpVar              MLSE              MedAE             Model
1                   0.64395         0.61089         0.37302         0.77437          0.77458          0.05851          0.41298          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.2558 2.5845 3.3668 3.3464 3.485  2.926  1.8611 3.125  1.9982 1.9952   2.1963 2.1591 4.3742 4.8123 4.4614 4.2014 4.5371 4.5096 5.5458 5.7852   5.5936 5.4958 5.4239 5.5454 2.6175 3.0014 2.6596 3.0369 2.6171 3.2412   0.9534 1.2351 0.9874 1.1403 0.8469 1.0488 1.5621 1.3658 1.1996 1.3799   1.4021 1.3261 2.6948 2.3554 2.4515 3.725  2.3314 2.4388 4.9471 5.1045   5.1503 5.1105 5.1486 5.0038]]
2                   3.62403         1.58575         1.22384         -0.26981          -0.19172          0.27913          1.24442          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.2742 2.8062 3.0575 3.5559 3.6847 2.8548 3.3669 3.6401 3.237  3.3411   2.6503 3.7642 3.6943 3.7218 3.3334 3.4288 3.8674 4.0704 2.9501 2.9416   3.2292 2.8745 3.5567 2.9747 3.2992 3.462  3.2557 3.4174 3.4844 3.4434   3.7806 4.2364 4.3123 4.3463 3.7292 4.2815 3.7158 2.9462 3.4889 4.2149   3.8252 3.4087 4.1435 3.999  4.0915 3.6404 3.8498 3.7604 4.6617 4.0977   4.3925 4.4027 4.1803 3.0825]]
3                   0.56392         0.56431         0.34767         0.80241          0.80261          0.0518          0.41192          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.3463 3.6933 3.3644 3.4347 3.4219 3.2961 1.9064 2.2887 1.996  2.1035   2.6296 2.1745 4.5985 4.8806 4.5282 4.205  4.4495 4.5076 5.5052 5.7815   5.5671 5.5602 5.5892 5.6167 2.5624 3.0093 2.6402 2.469  2.5442 2.4761   1.0467 1.136  1.0538 1.1288 0.7832 1.0686 1.7412 1.4235 1.201  1.5009   1.4069 1.3394 2.7408 2.3119 2.5384 2.5327 2.5305 2.4358 4.8991 5.1234   5.0751 5.1454 5.1696 5.1311]]
4                   0.54404         0.5412         0.34111         0.80937          0.81          0.05092          0.36592          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.3518 3.7739 3.4533 3.3615 3.5532 3.458  1.7543 2.4433 2.1306 2.2048   1.9879 2.2057 4.5822 4.7808 4.6213 4.3873 4.6142 4.6479 5.6353 5.7188   5.6696 5.6219 5.677  5.6194 2.43   3.0062 2.5875 2.6823 2.4476 2.3685   1.0567 1.0854 1.0282 1.253  0.8918 1.0338 1.5014 1.5477 1.2513 1.5502   1.486  1.5293 2.7616 2.5198 2.5823 2.6093 2.449  2.4978 5.1151 4.6447   5.1804 5.237  4.8563 5.1777]]
5                   0.91821         0.7152         0.4291         0.67827          0.6792          0.07805          0.53772          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3184 2.4329 3.3276 3.4979 3.5661 3.3257 1.872  2.4417 2.0834 2.0566   2.0705 2.2841 4.5389 4.9324 4.4981 4.2688 4.5685 4.5331 5.5286 5.6737   3.0614 5.413  5.5845 5.5976 2.57   2.9041 2.6781 2.8171 2.4634 3.176   0.8308 1.0869 0.9347 1.0905 3.5242 1.0468 1.5355 3.1125 1.1902 3.3441   1.4082 1.3395 2.7184 2.2947 2.4458 2.6111 2.3402 2.3779 4.9993 5.2031   5.1549 5.237  4.0744 5.1378]]
6                   3.36486         1.53555         1.13432         -0.17901          -0.12226          0.25894          1.37803          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0767 2.7094 3.1144 3.2657 3.2123 3.341  3.2631 3.4373 3.2283 3.2105   3.0275 3.2232 3.3034 3.3067 2.8947 3.4033 3.7948 3.6249 2.7606 3.4005   2.9105 3.0753 3.5356 2.9427 3.3772 3.5903 3.508  3.3971 3.6362 3.2349   3.4624 4.0799 3.424  3.818  4.3963 3.6141 3.0735 3.7904 3.5935 3.8476   3.6042 3.2716 3.8208 3.7031 4.5178 4.1036 3.6402 4.1721 3.7038 4.2342   3.6072 4.5071 4.5438 4.7295]]
7                   0.58172         0.59826         0.38728         0.79617          0.79627          0.05649          0.45632          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2566 3.5929 3.3397 3.3621 3.5487 3.2399 1.8486 2.3402 1.9708 2.1487   2.1023 2.1999 4.4805 4.8998 4.5251 4.3427 4.4621 3.7088 5.5545 5.8195   5.5177 5.4748 5.4617 5.6207 2.5635 2.2934 2.685  2.8371 2.524  2.6664   0.8662 1.6989 0.9189 1.4551 0.9093 1.0042 1.5777 1.372  1.185  1.4102   1.3648 1.4038 2.6941 2.4536 2.4376 2.6436 2.3095 2.3569 4.9025 4.7272   5.1686 5.1647 5.1806 4.8381]]
8                   0.5495         0.54357         0.36151         0.80746          0.80943          0.05332          0.3825          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1925 3.6184 3.4531 3.4448 3.5171 3.6008 1.9744 2.3021 2.0805 2.1203   2.1809 2.1914 4.6329 4.9211 4.6409 4.3551 4.5974 4.6216 5.6327 5.9116   5.5792 5.6293 5.5527 5.661  2.5596 2.939  2.6769 2.8322 2.5722 2.6314   1.325  1.2965 0.8981 1.3269 0.6679 1.3755 1.6072 1.3367 1.3626 1.5408   1.5404 1.4263 2.5869 2.5338 2.3556 2.6254 2.6057 2.5929 4.8888 5.0794   5.245  5.3157 5.0772 5.1487]]
9                   0.55827         0.5719         0.33444         0.80439          0.8047          0.0498          0.45665          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2665 3.6957 3.3271 3.3332 3.5214 4.2312 2.0168 2.2239 1.9783 1.9876   2.0317 2.1271 4.5458 4.9798 4.5216 4.2728 4.6042 4.5267 5.5437 5.8188   5.5699 5.543  5.7044 5.5991 2.5998 2.8878 2.6657 2.7678 2.5419 2.7171   0.8062 1.0559 0.781  1.0108 0.7921 0.9712 1.5548 1.4255 1.1891 1.4311   1.3977 1.3413 2.6547 2.3272 2.4027 2.862  2.3025 2.4346 5.0218 5.2059   5.2034 5.2466 5.1902 5.1917]]
10                   4.3353         1.68065         0.70325         -0.51903          -0.0368          0.29013          1.57518          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.106  2.5784 1.7749 1.9871 2.1063 3.2108 1.8186 1.5787 1.6228 1.389   1.4632 1.8134 2.3754 1.5921 2.5401 2.5746 1.6135 1.9665 1.9958 2.945   1.9798 1.6432 1.2467 1.2426 1.2447 3.2918 1.2409 1.9276 2.035  1.8997   1.6926 2.0961 2.1765 2.0105 1.8455 2.6481 0.9181 1.9257 1.8866 1.8769   1.8735 1.3002 2.6039 2.3872 1.322  1.5494 1.463  1.0533 3.087  1.767   1.8798 1.6899 1.8449 2.2809]]
11                   0.94356         0.72138         0.49546         0.66939          0.68303          0.08586          0.54212          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8113 4.0868 3.3774 3.6096 2.8857 3.6155 2.1571 2.5342 2.1506 2.9367   2.6546 2.3503 4.209  5.2194 4.326  3.8689 4.9289 5.041  4.191  6.0742   5.798  5.6482 5.1489 5.464  2.7003 3.053  2.8475 2.4628 2.2607 2.9296   1.0355 1.3768 1.2979 2.4352 3.1881 0.9289 1.7981 1.8998 1.0252 1.8482   1.9748 1.7149 3.0674 2.7344 2.9516 3.0141 2.2426 2.8071 5.3726 4.9469   4.9229 5.2398 5.4475 5.3759]]
12                   0.89193         0.71435         0.54775         0.68748          0.75643          0.09033          0.52807          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8676 4.2113 4.2987 3.7856 3.7799 3.7773 1.7631 3.0489 2.9904 2.7792   2.9586 2.5787 4.8651 5.3526 4.2849 4.5487 4.8572 3.6463 5.4369 5.9013   5.679  5.8174 5.9637 5.9487 3.2318 3.0124 3.0993 3.0696 2.5256 3.0487   1.8763 2.1587 1.8465 2.0721 1.7517 1.2718 2.0843 2.0399 1.88   2.141   2.1948 1.8155 3.1191 3.1438 2.9385 3.2758 3.1999 3.0496 5.3543 5.4396   5.1955 4.7083 5.1647 5.4378]]
13                   0.55412         0.56804         0.3286         0.80584          0.80585          0.04964          0.46422          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2443 3.5475 3.1454 3.3593 3.4649 3.3318 1.6785 2.2951 2.0029 1.9802   2.091  2.1302 4.5525 4.9306 4.5553 4.2795 4.5308 4.5255 5.545  5.7748   5.5592 5.521  5.5869 5.5936 2.5602 3.0033 2.6544 2.7863 2.6072 2.7322   0.8679 0.9948 0.8634 1.0295 0.8089 0.9022 1.5442 1.3863 1.1696 1.4781   1.3917 1.3499 2.6464 2.3591 2.3994 2.5455 2.3443 2.4297 5.0167 5.2237   5.2062 5.2554 5.2078 5.1377]]
14                   24.36993         2.46366         0.95115         -7.53891          -7.35433          0.45961          1.53078          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 1.54    1.2728  5.0693  1.5786  1.666  35.703   1.549   2.7405  1.8945    2.7036  1.2963  1.0286  1.7517  1.473   1.6988  1.328   2.1844  1.8792    1.4269  1.1506  1.3509  1.0017  1.4695  3.4834  1.2159  1.9369  1.4177    1.4276  1.4863  2.0206  1.6475  1.9946  1.4312  1.8567  2.0089  2.1721    4.2286  1.8249  1.2344  1.7339  0.7627  1.8705  1.1886  1.4618  1.9656    1.2363  1.8473  1.5479  2.5501  1.6168  1.4113  2.0455  1.4451  1.3123]]
15                   1.05644         0.79011         0.46474         0.62984          0.63038          0.08169          0.64832          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6917 4.0668 3.8743 2.952  3.9649 2.9025 2.0341 2.4519 2.6921 2.9153   2.2099 2.3976 3.531  5.5652 3.8244 3.0514 5.0159 2.7837 5.6477 5.2442   5.2488 6.0627 4.8948 5.5767 3.2448 2.9028 3.0496 2.7849 2.026  3.1483   2.0708 1.4813 0.7998 1.6695 1.4965 1.7637 1.8679 1.4778 1.211  1.1456   1.5796 1.1378 2.1402 3.2531 2.1899 2.8496 2.246  2.8866 3.8076 3.73   4.9949 5.5641 5.4694 4.8693]]
16                   0.78421         0.65506         0.47871         0.72522          0.77387          0.07621          0.42962          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8583 4.2075 3.7633 3.5892 4.4797 3.9139 2.2769 2.7692 2.3262 2.4719   1.952  2.537  5.0266 5.2336 5.0086 4.4943 5.0884 5.0182 5.6987 5.9401   5.9246 5.5625 5.6425 6.018  2.7165 2.8401 3.1575 2.8682 2.9037 3.1434   1.2903 1.4873 1.7279 2.0513 2.1243 1.8341 1.9656 1.6823 1.5488 1.6762   0.9338 1.8887 3.2285 3.1754 2.764  2.9508 3.1126 3.36   5.1358 4.2304   4.9095 5.6416 4.9899 5.3143]]
17                   0.55766         0.56738         0.33645         0.8046          0.80464          0.04979          0.3563          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2647 3.682  3.3668 3.3838 3.4733 3.3826 1.9089 2.5084 1.9991 2.1656   2.156  2.1392 4.4969 4.8618 4.3742 4.2676 4.531  4.4917 5.398  5.7987   5.3935 5.5402 5.6238 5.6044 2.5459 2.9008 2.6524 2.6529 2.4876 2.7721   0.8603 1.0075 0.9833 1.1602 0.9883 1.0051 1.4803 1.3843 1.2165 1.5079   1.4034 1.3041 2.758  2.3277 2.5034 2.5776 2.3626 2.4082 4.9814 5.1912   5.1998 5.2191 5.0765 5.1295]]
18                   3.53364         1.5852         1.19339         -0.23814          -0.16309          0.27046          1.37547          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.2993 3.8046 5.6122 3.2056 3.0348 2.4819 3.5188 3.3117 3.2137 3.3484   2.7536 3.2056 3.6721 2.8045 3.9054 3.084  3.4595 3.1547 2.7556 2.9755   3.4747 3.3423 3.0721 3.3621 3.5076 3.5101 3.3933 3.4758 3.4857 3.4586   4.1934 4.0704 4.0417 4.4986 2.613  3.7037 3.3986 4.0322 3.4232 4.1397   3.7237 3.2392 3.7842 4.2549 3.5838 4.0911 3.8626 3.6893 4.2245 4.9745   4.6093 4.2912 3.9647 4.2344]]
19                   0.55329         0.57077         0.33934         0.80613          0.80636          0.05057          0.4384          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2881 3.6388 3.4134 3.4115 3.5028 3.4298 1.8537 2.2593 2.0706 1.99   2.0572 2.0815 4.3615 4.8884 4.2179 4.2875 4.4232 4.5394 5.5393 5.4593   5.5622 5.4514 5.7665 5.6303 2.69   2.7841 2.4378 2.6279 2.2865 2.7533   0.9053 1.1014 0.8587 1.1593 0.8588 1.0189 1.552  1.3818 1.1957 1.4189   1.3789 1.3427 2.6729 2.3336 2.4528 2.5762 2.0745 2.3721 4.8364 5.0886   5.1052 5.2211 5.2266 5.1182]]
20                   0.60665         0.57662         0.3603         0.78744          0.78839          0.05562          0.37815          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3709 3.4796 3.478  3.4666 3.5512 3.2699 1.9487 2.5809 2.0963 2.1083   2.1379 2.3608 4.5136 4.9183 4.6691 4.3704 4.1913 4.5974 5.4362 5.7348   5.6822 5.4749 5.62   5.6871 1.8809 3.0106 2.6736 2.7479 2.5736 2.6197   1.1255 1.1863 0.9738 1.3039 0.9796 1.0049 1.5246 1.5201 1.2987 1.3387   1.4895 1.4332 3.0478 2.5492 2.5667 2.8867 2.2087 2.5028 5.0773 5.3293   5.0952 5.3577 4.9267 5.175 ]]
21                   0.59744         0.58503         0.34765         0.79066          0.79126          0.05051          0.39218          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2971 3.6027 3.443  3.3831 3.4806 3.3502 1.9027 2.307  2.0461 1.984   2.068  2.1622 4.5349 4.933  4.5237 4.1558 4.5104 4.4437 5.4917 5.8334   5.4728 5.4445 5.5916 5.5546 2.5492 3.1384 3.2523 2.6416 2.4162 2.7625   0.9655 1.2641 0.9303 1.0417 0.952  1.0118 1.5235 1.4913 3.2244 1.4987   1.4355 1.3651 2.8227 2.356  2.4752 2.6017 2.3728 2.5254 4.9203 3.8939   5.1081 5.2664 5.1067 5.1351]]
22                   3.32083         1.54183         1.19107         -0.16358          -0.06955          0.26534          1.31087          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.6228 3.374  2.4651 3.3456 3.2858 3.2472 3.2491 3.8281 3.2284 3.7538   3.0671 3.3595 3.8179 3.5283 3.0617 3.7142 3.4315 3.6554 3.6265 3.421   3.4261 3.4087 3.0238 3.7619 3.318  3.6748 2.3667 3.6834 3.3178 3.2494   3.818  4.1315 4.1015 3.933  4.1217 4.0128 4.0337 3.2978 3.4092 3.2662   3.8004 3.5011 3.8976 4.0337 3.9889 3.9552 4.2995 3.7328 4.3702 3.9306   4.7436 4.117  4.9054 4.5921]]
23                   0.63073         0.58748         0.34249         0.779          0.77907          0.05352          0.42713          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2686 3.6406 3.5597 3.4398 3.4653 3.332  1.8012 2.1699 1.9915 2.2122   2.2404 2.262  4.5389 5.07   4.5948 3.6692 4.3775 4.3285 5.5005 5.7967   5.5881 5.4878 5.4913 5.5854 2.54   2.9123 2.7662 2.7679 2.1207 2.3489   0.8677 1.2241 0.8941 1.0031 0.8635 1.028  1.5922 1.3473 1.1802 1.3709   1.3592 1.3172 2.707  2.4662 2.8162 2.4197 2.3622 2.2919 4.8982 5.2573   5.1062 5.1255 5.1251 5.0654]]
24                   0.56846         0.58918         0.36782         0.80082          0.80179          0.05285          0.43955          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3486 3.6883 3.4199 3.3225 3.5418 3.4575 1.9422 2.318  2.0537 2.1047   2.2324 2.1031 4.6075 4.7989 4.224  4.2439 4.5603 4.6699 5.4054 5.9043   5.3418 5.641  5.539  5.2389 2.5806 2.9234 2.5755 2.8056 2.599  2.7925   1.013  1.3753 0.898  1.1136 0.905  1.277  1.6815 1.5572 1.4057 1.5823   1.4601 1.4952 2.8343 2.5463 2.5695 2.5736 2.2922 2.5551 5.09   5.2671   5.244  5.3505 5.2327 4.8689]]
25                   0.54499         0.56115         0.32774         0.80904          0.80906          0.04882          0.45812          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2574 3.5958 3.31   3.2912 3.457  3.2353 1.8561 2.2876 1.9724 2.1607   2.1151 2.1331 4.522  4.9454 4.5471 4.2643 4.496  4.5365 5.5293 5.811   5.619  5.523  5.5891 5.5878 2.8741 2.9679 2.6845 2.7818 2.5525 2.7121   0.8446 1.0071 0.7844 1.0326 0.8101 0.9409 1.5098 1.424  1.1823 1.4634   1.3845 1.3367 2.6685 2.3442 2.4331 2.5304 2.3163 2.3947 5.0142 5.2158   5.2128 5.2556 5.2032 5.1512]]
26                   5.47662         1.88682         0.72589         -0.91894          -0.31595          0.37624          1.71827          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[1.1288 1.7246 1.4358 1.4037 1.2437 1.8022 1.6803 2.9516 4.4778 1.7835   1.082  1.492  2.476  2.8647 1.4546 2.0345 1.3475 2.4266 1.3757 1.9468   1.3116 1.3933 1.6523 1.1128 1.3883 1.5978 3.0548 1.8761 1.7718 1.7611   2.3478 1.4914 1.8445 1.8214 2.1808 2.3469 1.732  1.5013 1.5177 1.7666   1.4839 1.9365 3.1247 1.578  1.8642 1.5765 1.6721 2.2313 1.4559 1.238   1.798  1.649  1.5409 1.7426]]
27                   0.75105         0.69818         0.45569         0.73684          0.74408          0.07362          0.5953          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5803 3.8908 3.1168 3.7815 3.6396 3.6294 2.2565 2.2686 2.402  2.2268   2.5656 2.6525 4.5924 3.7128 4.2584 4.4531 3.6135 3.1891 5.8995 4.153   5.8233 4.986  5.1184 5.7826 2.1603 3.3822 3.2278 2.8899 2.5852 2.8636   2.0612 1.5891 2.6295 1.2028 1.1112 1.7364 1.6398 1.8005 1.2647 1.772   0.8236 2.9779 3.0111 2.8371 2.4156 3.5022 2.9293 2.636  5.1023 4.0909   5.1635 5.0974 5.625  5.3731]]
28                   1.16036         0.76571         0.65463         0.59343          0.67988          0.11528          0.52587          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7734 3.9587 3.9152 3.6509 4.2799 3.8608 2.2781 2.37   2.882  2.3555   2.3336 2.7064 4.988  4.9648 4.9346 4.6221 4.1327 4.9605 5.3024 6.0556   5.8596 5.745  5.7343 5.2577 3.0999 3.3185 2.908  3.1542 2.6398 2.7595   1.5589 1.6362 1.4825 3.5338 1.1254 3.9986 2.2008 1.9395 1.8007 1.8937   1.9849 2.9865 3.4402 2.8694 2.9147 3.204  3.0013 2.762  5.199  5.4658   5.5191 6.0146 5.3134 5.5106]]
29                   0.73759         0.62497         0.35453         0.74156          0.74168          0.06016          0.46765          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2672 3.5796 3.3425 3.3293 3.4608 3.3654 1.8646 2.2576 2.0007 2.0082   1.9473 2.1325 4.5425 4.9363 4.5301 4.274  4.5503 4.5381 5.5244 5.7661   5.6049 3.3255 5.6143 5.6037 2.5269 3.014  2.6737 2.8028 2.522  2.7322   0.8116 0.9995 0.8389 0.9815 0.7769 0.8402 1.5255 1.3363 1.1829 2.8832   1.3831 1.3718 2.6654 2.3533 2.3944 2.5465 2.3586 2.4644 4.999  5.1239   5.2243 5.3057 5.2167 5.1248]]
30                   6.07756         1.86688         1.05934         -1.1295          -0.91316          0.34653          1.63062          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.3914 1.9591 1.7634 1.672  2.5087 1.6057 1.3129 1.6454 2.9184 1.4895   1.3151 2.506  1.9813 7.8628 1.8906 1.735  2.0993 1.4621 1.6806 1.2709   6.456  3.7263 2.1033 1.5893 1.6807 3.1218 3.8532 1.6717 1.7197 1.7026   1.3945 0.9143 1.8556 9.0901 1.4527 1.1838 1.1829 3.9327 2.1096 1.9072   4.1575 0.9262 1.0686 2.1195 2.304  1.7307 4.0884 1.8372 1.9985 2.566   1.8183 2.6915 1.5816 2.2958]]
31                   1.11748         0.81773         0.56782         0.60845          0.61472          0.09819          0.69153          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7185 4.005  3.8242 3.6865 3.923  3.6489 2.4442 2.967  2.5676 2.3492   2.6495 2.3616 5.0037 4.9561 4.808  4.1891 5.1396 4.7033 4.6017 5.984   4.6608 4.969  4.8514 5.0334 2.2631 3.3048 2.2654 2.2611 2.3838 1.9256   1.0211 1.5911 1.437  2.9494 1.2522 1.4941 2.2548 1.9719 1.6452 1.8019   2.0565 1.3946 3.1552 1.8965 2.2858 2.503  2.7721 3.3417 3.3829 4.3923   4.2755 5.6006 5.1472 5.4875]]
32                   0.95429         0.737         0.5871         0.66563          0.7246          0.09991          0.47182          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8156 3.9471 3.6888 4.1214 4.0341 3.9755 2.4715 2.8587 2.4523 2.1338   2.3567 2.6611 4.5687 4.6604 5.0086 4.4058 4.6763 3.9643 5.5135 6.2006   5.9383 5.7039 5.8476 5.8581 2.8762 3.1764 3.3087 3.3184 2.3764 2.828   1.0366 2.8065 2.0759 1.5562 2.0035 2.3993 2.3217 1.8994 1.6396 2.3538   1.9499 1.5926 3.5228 3.0909 3.0444 3.2408 3.0196 3.008  5.1189 5.3762   5.0591 5.0758 5.2545 4.2934]]
33                   0.79506         0.61839         0.48067         0.72142          0.7224          0.07638          0.42067          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2753 3.6179 3.3951 3.3235 3.5177 3.5388 1.8292 2.2616 2.1663 2.1692   2.0668 2.1288 4.5419 4.9069 4.4404 4.2729 3.2582 4.5162 5.5387 5.801   5.4997 5.5387 5.6192 5.6019 2.596  3.0479 3.1377 2.7    2.5366 2.648   1.0502 3.8335 0.9128 1.0247 0.9052 1.0271 1.5134 1.4029 1.1719 1.4208   1.4069 1.3849 2.6527 2.3923 2.4373 2.616  2.3375 2.5329 4.9153 5.1849   5.1097 5.2641 5.1502 5.0539]]
34                   3.35469         1.53429         1.11752         -0.17544          -0.14096          0.25691          1.19553          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.5374 2.3583 2.7836 2.9241 3.0435 3.424  3.3287 2.8036 3.4148 3.2591   3.1931 3.1625 3.4858 3.616  3.5503 3.2231 2.8519 2.6335 2.9676 2.7428   3.039  3.0153 3.2156 3.2809 3.3901 3.5137 2.4232 3.3757 3.7215 3.3362   4.2715 3.5374 4.1187 4.086  3.9838 3.8716 3.3305 2.9023 3.5313 3.7363   2.5858 4.4472 3.8613 3.7448 3.4774 4.0039 3.9725 2.0269 4.273  3.9611   4.4535 4.9166 4.1585 4.4061]]
35                   0.57258         0.56623         0.34288         0.79937          0.79957          0.05092          0.4184          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2795 3.6036 3.3058 3.3887 3.4904 3.4328 1.9738 2.3267 2.1545 2.5524   2.1092 2.1351 4.4072 4.8848 4.4333 4.0056 4.6353 4.438  5.5997 5.8115   5.5684 5.5063 5.6395 5.5778 2.6843 3.0096 2.5732 2.8031 2.4697 2.6414   0.8993 1.1033 0.9321 1.1429 0.931  1.1161 1.4999 1.4533 1.2616 1.5268   1.4    1.3865 2.9007 2.3806 2.421  2.41   2.178  2.4787 5.0597 5.2204   4.9164 5.2126 5.2199 5.1296]]
36                   0.55643         0.54773         0.34964         0.80503          0.80655          0.05083          0.37502          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3969 3.6847 3.3962 3.4864 3.3432 3.4512 2.027  2.3023 2.0627 1.9205   2.2009 2.3268 4.639  4.9935 4.6177 4.3794 4.6112 4.5707 5.4951 5.6339   5.695  5.7019 5.5274 5.6205 2.4912 2.8724 2.7242 2.8124 2.5597 2.5015   0.9808 1.2822 1.3508 1.2096 1.0291 1.1639 1.6576 1.4881 1.2699 1.3975   1.5226 1.4643 2.7846 2.5629 2.3686 2.4752 2.4547 2.5255 4.5284 5.3996   5.3294 5.2673 5.0386 5.2903]]
37                   0.87664         0.66673         0.40823         0.69284          0.69293          0.07363          0.47198          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2652 3.6008 3.4295 3.3421 3.4563 3.3289 1.9157 2.1444 2.0892 2.1532   2.1204 2.139  4.4298 4.8336 4.3824 4.2579 4.4676 4.4421 5.4065 5.7873   5.6014 5.5163 5.5969 2.5046 2.6048 2.8104 2.7218 2.8348 2.3558 2.6356   0.8617 1.064  0.9018 1.0127 0.8199 3.566  1.5936 1.4426 1.1819 1.4501   1.4161 1.5028 2.6713 2.4087 2.3978 2.547  2.2842 2.3932 4.8859 5.2119   5.0977 5.2668 5.1579 5.1361]]
38                   3.49079         1.57044         1.14334         -0.22313          -0.15201          0.26554          1.30662          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.8276 2.9531 2.9722 2.9949 2.9975 2.8273 3.3694 3.5253 3.6254 2.787   2.9342 3.095  3.3307 3.7944 4.2    3.1674 3.6953 4.5377 3.2247 3.4366   2.8629 3.1237 3.0857 3.3984 3.499  3.4861 3.5432 3.1308 3.3569 3.5503   4.3026 4.0638 4.3099 3.3419 3.9056 4.0738 2.4909 4.4305 3.6545 3.9032   3.8988 3.7613 4.1749 3.9605 3.8221 4.1648 3.7589 3.5882 4.5338 3.4589   4.3503 4.1916 4.659  3.5292]]
39                   0.56058         0.57333         0.34063         0.80358          0.80366          0.0502          0.45052          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2318 3.567  3.3875 3.4725 3.4699 3.3263 1.8269 2.3433 2.1807 2.1247   2.1492 2.1209 4.4992 4.9279 4.3782 4.2711 4.4017 4.4842 5.5391 5.7727   5.631  5.5474 5.6869 5.1256 2.492  2.9601 2.6261 3.0055 2.4105 2.5699   0.8849 1.0512 0.9415 1.0648 1.9014 1.496  1.36   1.3583 1.2431 1.4424   1.4386 1.453  2.5566 2.1818 2.4829 2.4585 2.4295 2.4342 4.9562 5.1464   5.1535 4.9576 5.1766 5.0722]]
40                   0.60097         0.56842         0.36047         0.78943          0.79211          0.05535          0.42265          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.34   3.7717 3.4828 3.4274 3.6339 3.6279 1.98   2.4123 2.2164 2.0545   1.9442 2.2719 4.5554 5.0237 4.5769 4.3452 4.6386 4.3809 5.5419 5.8836   5.6654 5.6128 5.6678 5.721  2.534  2.9496 2.4546 2.9002 2.2846 2.7596   1.0735 1.1299 1.1474 1.2861 1.029  1.1312 1.6583 1.5376 1.1411 1.6814   1.5188 1.3079 2.7842 2.2119 2.8337 2.7643 2.4395 2.6691 5.0576 5.1932   5.203  5.1732 5.1521 5.2788]]
41                   0.57618         0.5728         0.34026         0.79812          0.79816          0.05177          0.45992          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.26   3.624  3.323  3.3435 3.4407 3.3419 1.8578 2.2272 1.9706 1.9703   2.0326 2.1321 4.5418 4.9276 4.5481 4.2591 4.5583 4.5206 5.5456 5.8001   5.599  5.5334 5.5826 5.6062 1.6913 2.9804 2.68   2.8104 2.5269 2.6421   0.7624 1.0182 0.8491 1.0969 0.7836 1.3061 1.4852 1.3864 2.557  1.4711   1.3806 1.3228 2.6758 2.288  2.4168 2.5368 2.369  2.4048 4.99   5.2057   5.1947 5.3063 5.1721 5.0814]]
42                   8.34545         1.98847         0.8292         -1.92414          -1.61743          0.34895          1.42627          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 1.7681  1.312   2.6057  1.5988  1.0864  2.3382  1.67    1.7503  3.2458   16.6668  1.8027  1.7568  2.5989  1.6743  1.2832  1.8372  1.5461  1.592    1.7336  1.544   1.7767  2.9604  1.8586  1.7991  1.5779  1.8387  1.6268    1.3907  1.7589  4.146   1.6657  2.0572  0.6965  2.7936  1.7206  1.7514    0.9467  3.0818  1.8124  1.8172  1.6202  2.5221  1.7134  2.2117  1.8699    1.8769  2.5595  1.825   2.1576  1.8179  2.0874  1.7871  2.191   2.0837]]
43                   0.80234         0.72502         0.45763         0.71887          0.72486          0.07256          0.59615          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.907  3.0913 3.6235 3.7276 3.8377 3.9027 2.3125 2.849  2.3691 1.942   2.9478 2.261  4.3805 5.1053 3.9778 3.9752 4.7663 4.6878 5.6181 6.0475   6.2189 5.5453 4.2312 5.8897 2.7809 2.3958 1.8147 2.8056 3.2462 3.2034   1.4649 1.5511 1.222  1.4097 1.9313 1.3771 2.2954 1.9774 1.4098 1.7627   1.6963 1.0965 3.1036 2.5309 3.0492 2.4502 2.0924 1.9635 5.3145 4.1835   5.3297 5.2197 5.3809 4.1201]]
44                   0.80331         0.63924         0.43792         0.71853          0.77119          0.07209          0.40647          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8351 4.432  3.8714 3.9186 3.7975 3.6232 2.5971 2.8474 2.415  2.4324   2.5257 2.6038 5.0767 4.9996 4.9146 4.1512 4.5748 4.9633 5.8003 6.1498   5.9876 5.8603 5.661  5.5298 2.5182 3.4248 3.145  3.5185 2.7883 3.1016   1.6299 1.7046 1.243  1.3047 1.5535 1.5965 1.6608 1.8546 1.3692 0.9773   1.9257 1.9701 3.4993 3.0875 3.2238 3.0734 3.0433 2.7463 5.0121 5.516   5.3239 5.3245 5.222  5.3408]]
45                   0.69332         0.61488         0.33837         0.75707          0.7581          0.05476          0.45553          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2692 3.5871 2.7455 3.3958 3.4531 3.3371 1.8351 2.2714 2.0155 1.9069   1.9899 2.165  4.512  4.9514 4.5492 4.2595 4.5913 4.5482 3.3455 5.8156   5.5996 5.5711 5.6275 5.5824 2.6186 2.9413 2.7215 2.7871 2.5162 2.7054   0.791  0.997  0.7983 0.9705 0.7632 0.9626 1.6039 1.4057 1.1836 1.4758   1.4265 1.3185 2.6675 2.3123 2.3709 2.4573 2.3335 2.4008 4.9762 5.1893   5.2077 5.2707 5.1565 5.1456]]
46                   4.5052         1.65618         0.67584         -0.57856          -0.18419          0.30247          1.37962          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.7288 2.1386 4.469  1.4231 2.3525 1.7484 1.7425 1.9281 1.6537 1.9429   1.6612 1.43   1.2222 1.8778 1.7283 2.1241 2.2394 0.9209 1.9668 1.9076   1.5408 1.5382 1.5355 2.3203 3.0973 1.306  2.6537 4.3291 2.7487 1.8538   1.6437 1.7928 1.6727 1.6331 3.0156 2.7079 1.9398 1.9801 1.5756 2.0042   3.0316 1.9681 1.6229 1.2375 2.4101 1.9838 1.4599 2.6553 1.4333 2.5139   3.2715 1.1325 2.7393 3.4893]]
47                   0.79081         0.65553         0.41375         0.72291          0.74563          0.06939          0.46953          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6704 3.1714 3.6715 3.8903 4.0692 3.6416 2.6122 3.1687 1.6108 2.159   2.2934 2.4444 4.9942 5.0047 4.8703 4.6012 4.8451 4.414  5.7725 6.2451   5.1869 5.6935 5.8432 5.951  2.7669 3.5218 2.8289 2.5278 2.3806 3.304   1.736  1.2738 1.4792 0.9392 0.6101 1.3858 1.9615 2.0577 1.7147 1.9444   1.9452 1.814  3.3036 3.3675 2.8132 2.4593 2.8607 2.6605 5.1756 4.9137   5.2431 5.4482 5.5867 3.2356]]
48                   0.77574         0.67969         0.55389         0.72819          0.77617          0.08632          0.56582          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7271 3.9947 3.7415 3.6787 3.9094 3.5469 2.3587 2.5049 3.1601 2.3352   2.2409 2.5166 5.0022 3.8183 4.7464 4.5895 5.1192 4.9259 5.8479 5.9493   5.9011 5.824  5.5586 5.7659 2.948  3.0558 3.0639 3.0368 2.6454 2.9208   1.863  1.9809 1.6716 2.7764 2.4683 1.775  2.0151 2.193  1.6126 2.0394   1.9353 1.5797 2.5245 2.818  2.8917 3.2553 3.0458 2.9709 4.6358 5.4863   4.3604 5.729  4.0411 5.2121]]
49                   0.55011         0.56544         0.3281         0.80725          0.80725          0.04916          0.46657          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3334 3.3334 3.4666 3.3333 1.8668 2.2667 2.     2.   2.0668 2.1332 4.5333 4.9333 4.5329 4.2666 4.5333 4.5334 5.5333 5.8   5.6    5.5333 5.6    5.5999 2.5998 2.9999 2.6667 2.7998 2.5334 2.7334   0.8001 1.0001 0.8    1.0002 0.7999 0.9334 1.5334 1.4    1.2    1.4668   1.3999 1.3333 2.6666 2.3333 2.3998 2.5333 2.3336 2.4    5.     5.2   5.2    5.2667 5.2    5.1333]]
50                   0.55016         0.56545         0.32809         0.80723          0.80723          0.04916          0.46668          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6002 3.3334 3.3333 3.4667 3.3333 1.8667 2.267  2.     2.   2.0668 2.1334 4.5333 4.9334 4.5333 4.2666 4.5332 4.5333 5.5333 5.8   5.6    5.5334 5.5998 5.6    2.6    3.     2.6666 2.8    2.5333 2.733   0.8003 1.0003 0.8001 0.9999 0.8003 0.9334 1.5332 1.4    1.1999 1.4667   1.4    1.3333 2.6667 2.3333 2.4    2.5333 2.3333 2.3999 5.0001 5.2   5.1999 5.2667 5.2    5.1333]]
51                   0.55755         0.56705         0.3287         0.80464          0.80464          0.04942          0.46663          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.3332 3.3335 3.4666 3.3333 1.8667 2.2668 2.0002 2.0004   2.0667 2.1336 4.5332 5.0198 4.5333 4.2665 4.5333 4.5332 5.5334 5.7999   5.5999 5.5331 5.5999 5.5999 2.6001 3.0001 2.6666 2.8    2.5332 2.7332   0.7999 1.0002 0.8    1.0001 0.7999 0.9334 1.5333 1.4    1.2001 1.4667   1.4001 1.3334 2.6666 2.3334 2.4001 2.5334 2.3333 2.4    4.9999 5.2   5.2    5.2667 5.1999 5.1334]]
52                   0.55015         0.56544         0.32811         0.80723          0.80723          0.04916          0.4667          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6002 3.3333 3.3333 3.4667 3.3334 1.8666 2.2668 2.     2.0006   2.0667 2.1334 4.5334 4.9333 4.5335 4.2666 4.5334 4.5334 5.5333 5.7999   5.6    5.5335 5.6002 5.6001 2.6001 2.9999 2.6666 2.8001 2.5333 2.7332   0.8001 1.0002 0.8    1.0003 0.7996 0.9335 1.5333 1.4001 1.2    1.4667   1.3999 1.3333 2.6666 2.3334 2.4001 2.5335 2.3331 2.4    4.9999 5.2   5.2    5.2668 5.1999 5.1333]]
53                   0.55012         0.56545         0.32809         0.80724          0.80724          0.04916          0.4667          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5999 3.3334 3.3334 3.4667 3.3334 1.8667 2.2668 2.     2.   2.0668 2.1334 4.5333 4.9332 4.5332 4.2668 4.5333 4.5333 5.5331 5.7999   5.5997 5.5333 5.6    5.6001 2.5995 3.     2.6667 2.8001 2.5332 2.7331   0.8001 1.     0.8    1.0001 0.8001 0.9334 1.5334 1.4    1.2    1.4666   1.4001 1.3335 2.6667 2.3333 2.4001 2.5334 2.3336 2.4    5.     5.2002   5.2    5.2666 5.2    5.1334]]
54                   0.55015         0.56545         0.32808         0.80723          0.80723          0.04916          0.46663          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5998 3.3333 3.3334 3.4667 3.3328 1.8666 2.2665 2.     2.   2.0666 2.1335 4.5332 4.9333 4.5332 4.2665 4.5331 4.5333 5.5332 5.8   5.6001 5.5335 5.6001 5.5999 2.6    3.     2.6665 2.7999 2.5325 2.7333   0.8002 1.0001 0.8002 0.9999 0.7998 0.9333 1.5332 1.4    1.2    1.467   1.4    1.3334 2.6667 2.3335 2.4001 2.5332 2.3332 2.4001 5.     5.2   5.1998 5.2666 5.2    5.1333]]
55                   0.5527         0.56653         0.32831         0.80634          0.80634          0.04922          0.46662          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2669 3.6    3.3334 3.3333 3.4665 3.3334 1.8667 2.2668 2.0001 2.   2.0667 2.1333 4.5332 4.9332 4.5333 4.2666 4.5334 4.5334 5.5332 5.8602   5.5999 5.5334 5.6    5.6    2.6    3.0001 2.6667 2.8    2.5333 2.7334   0.7999 1.0001 0.8001 0.9998 0.8001 0.9332 1.5333 1.4    1.2002 1.4667   1.3999 1.3333 2.6668 2.3335 2.4001 2.5333 2.3333 2.4    4.9998 5.2   5.2    5.2666 5.2    5.1334]]
56                   0.55012         0.56543         0.32808         0.80725          0.80725          0.04916          0.46665          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3333 3.4666 3.3334 1.8668 2.2667 1.9999 2.0001   2.0667 2.1334 4.5333 4.9331 4.5333 4.2666 4.5332 4.5333 5.5333 5.8   5.6001 5.5332 5.6003 5.5999 2.5999 3.0002 2.6667 2.7998 2.5332 2.7333   0.8001 1.     0.8    1.     0.8001 0.9335 1.5333 1.4001 1.2002 1.4669   1.4    1.3334 2.6667 2.3333 2.4001 2.5334 2.3333 2.4002 5.     5.1999   5.2    5.2667 5.1999 5.1333]]
57                   0.55014         0.56546         0.3281         0.80724          0.80724          0.04916          0.46668          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3332 3.3333 3.4667 3.3334 1.8666 2.2669 2.0004 2.0001   2.0669 2.1334 4.5333 4.9333 4.5334 4.2667 4.5329 4.5332 5.5334 5.8   5.5998 5.5332 5.6    5.5999 2.5999 2.9999 2.6667 2.8    2.5333 2.7334   0.7998 1.0003 0.8    0.9999 0.8001 0.9334 1.5334 1.4    1.2    1.4667   1.4    1.3334 2.6666 2.3334 2.3998 2.5335 2.3334 2.4003 5.     5.2   5.2    5.2667 5.2002 5.1334]]
58                   0.55003         0.56537         0.32807         0.80728          0.80728          0.04915          0.4666          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.269  3.6    3.3333 3.3333 3.4666 3.3333 1.8667 2.2666 2.0001 2.   2.0667 2.1333 4.5334 4.9331 4.5335 4.2666 4.5333 4.5333 5.5332 5.7999   5.6    5.5334 5.6001 5.6    2.5998 2.9999 2.6665 2.7999 2.5334 2.733   0.8    0.9999 0.8003 1.0003 0.8001 0.9335 1.5333 1.4001 1.2    1.4668   1.4    1.3335 2.6667 2.3333 2.4    2.5334 2.3333 2.4001 5.0001 5.2   5.2    5.2666 5.2    5.1334]]
59                   0.55014         0.56545         0.32809         0.80724          0.80724          0.04916          0.46667          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3331 3.3334 3.4668 3.3334 1.8664 2.2667 2.0007 1.9999   2.0666 2.1333 4.5333 4.9334 4.5334 4.2666 4.533  4.5332 5.5333 5.7998   5.6    5.5332 5.6    5.5997 2.5999 2.9998 2.6666 2.7999 2.5332 2.7334   0.7999 1.0001 0.8001 1.0001 0.8    0.9334 1.5333 1.3999 1.2001 1.4667   1.4001 1.3335 2.6666 2.3333 2.4002 2.5334 2.3334 2.3998 4.9999 5.2   5.2001 5.2667 5.2001 5.1334]]
60                   0.57202         0.58328         0.33197         0.79957          0.79968          0.05001          0.4667          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3333 3.3333 3.4667 3.3331 1.8667 2.2666 2.0001 2.0001   2.0667 2.1335 4.5333 4.9332 4.5334 4.2666 3.5718 4.5333 5.5333 5.7999   5.5998 5.5334 5.5999 5.5999 2.6    3.     2.6666 2.8002 2.5333 2.7336   0.8001 1.     0.8    1.0014 0.7999 0.9333 1.5332 1.4002 1.2001 1.4666   1.4    1.3334 2.6666 2.3334 2.3998 2.5334 2.3332 2.4001 5.     5.2   5.2    5.2667 5.1999 5.1334]]
61                   0.55015         0.56545         0.3281         0.80723          0.80723          0.04916          0.46665          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3335 3.3333 3.4668 3.3334 1.8667 2.2667 2.0002 2.0005   2.0674 2.1334 4.5333 4.9333 4.5334 4.2666 4.5333 4.5332 5.5334 5.8   5.6    5.5333 5.5999 5.6    2.5997 3.0001 2.6668 2.7999 2.5331 2.7332   0.8001 1.0002 0.8    1.0001 0.8001 0.9334 1.5333 1.4    1.2    1.4667   1.4    1.3333 2.6667 2.3333 2.4    2.5333 2.3333 2.3999 4.9999 5.2   5.2    5.2666 5.2    5.1333]]
62                   0.55006         0.56533         0.32806         0.80727          0.80727          0.04916          0.46663          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3333 3.4666 3.3393 1.8667 2.2668 2.0004 2.   2.0666 2.1335 4.5332 4.9332 4.5335 4.2665 4.5333 4.5333 5.5333 5.8   5.6    5.5334 5.6    5.5999 2.6    2.9999 2.6665 2.8    2.533  2.7335   0.8001 0.9999 0.8002 1.0003 0.8    0.9335 1.5333 1.4    1.2001 1.4668   1.3999 1.3334 2.6667 2.3334 2.4    2.5334 2.3333 2.4    5.0001 5.1998   5.1999 5.2666 5.2    5.1332]]
63                   0.55011         0.56544         0.32808         0.80725          0.80725          0.04916          0.46665          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.3333 3.3334 3.4668 3.3333 1.8667 2.2667 2.     2.0002   2.0667 2.1334 4.5333 4.9332 4.5333 4.2667 4.5333 4.5333 5.5333 5.8   5.5999 5.5333 5.6    5.6    2.5999 2.9999 2.6661 2.7998 2.5334 2.7334   0.8001 1.     0.8001 1.     0.8001 0.9334 1.5333 1.4001 1.1999 1.4666   1.4    1.3333 2.6667 2.3333 2.4    2.5333 2.3333 2.4    5.0001 5.2001   5.1999 5.2666 5.2    5.1333]]
64                   0.55015         0.56545         0.32809         0.80723          0.80723          0.04916          0.46658          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6001 3.3333 3.3334 3.4667 3.3334 1.8663 2.2667 1.9996 2.   2.0668 2.1335 4.5333 4.9333 4.5332 4.2666 4.5332 4.5333 5.5336 5.8   5.6    5.5333 5.5998 5.6    2.6002 2.9999 2.6667 2.7999 2.5331 2.7332   0.8001 1.0001 0.7999 1.     0.8    0.9333 1.5333 1.4    1.2    1.4666   1.4    1.3336 2.6667 2.3333 2.3999 2.5335 2.3333 2.4    5.     5.2   5.2    5.2666 5.2    5.1333]]
65                   0.55016         0.56551         0.32812         0.80723          0.80723          0.04916          0.4667          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5998 3.3333 3.3334 3.4667 3.3335 1.8668 2.2667 2.0001 2.   2.0667 2.1334 4.5332 4.9333 4.5335 4.2666 4.5333 4.5333 5.5333 5.8   5.6    5.5333 5.6001 5.5999 2.6    3.     2.6619 2.8    2.5336 2.7333   0.8001 1.     0.8    1.0002 0.8002 0.9335 1.5334 1.4    1.2    1.4667   1.4001 1.3333 2.6667 2.3333 2.4001 2.5333 2.3333 2.4001 5.     5.2   5.2    5.2667 5.2    5.1333]]
66                   0.54999         0.5654         0.32807         0.80729          0.80729          0.04915          0.4666          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6002 3.333  3.3334 3.4666 3.3333 1.8667 2.2666 2.0003 2.0002   2.0667 2.1334 4.5334 4.9317 4.5332 4.2667 4.5333 4.5332 5.5333 5.8   5.5998 5.5333 5.5999 5.6001 2.6    3.     2.6666 2.7999 2.5332 2.7332   0.8    1.     0.7999 1.0001 0.8    0.9334 1.5333 1.4    1.2001 1.4666   1.4    1.3333 2.6668 2.3332 2.4    2.5333 2.3335 2.4    5.     5.1999   5.2    5.2666 5.1998 5.1334]]
67                   0.55018         0.56547         0.32808         0.80722          0.80722          0.04916          0.4667          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6002 3.3333 3.3334 3.4666 3.3333 1.8668 2.2667 1.9999 1.9999   2.0668 2.1335 4.5331 4.9333 4.5332 4.2665 4.5333 4.5333 5.5333 5.8002   5.6001 5.5333 5.6    5.6    2.5999 3.     2.6665 2.8001 2.533  2.7334   0.8    0.9997 0.8002 1.0001 0.7998 0.9334 1.5333 1.4001 1.2    1.4667   1.4    1.3334 2.6667 2.3333 2.4    2.5333 2.3333 2.4001 4.9999 5.2001   5.2    5.2666 5.1999 5.1332]]
68                   0.55011         0.56543         0.32808         0.80725          0.80725          0.04916          0.4666          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3333 3.4665 3.3334 1.8666 2.2666 2.0003 2.   2.0667 2.1333 4.5334 4.9333 4.5334 4.2667 4.5333 4.5334 5.5333 5.7999   5.6001 5.5333 5.6    5.6    2.5999 3.     2.6667 2.7999 2.5333 2.7334   0.8    1.     0.8001 1.     0.8001 0.9334 1.5334 1.4    1.2    1.4668   1.4    1.3332 2.6666 2.3334 2.4    2.5334 2.3333 2.4    4.9999 5.2   5.2    5.2666 5.2001 5.1332]]
69                   0.55011         0.56545         0.32818         0.80725          0.80725          0.04917          0.46668          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5998 3.3332 3.3334 3.4667 3.3332 1.8677 2.2667 2.0001 2.0005   2.0669 2.1335 4.5333 4.9332 4.5332 4.2666 4.5333 4.5334 5.5333 5.8   5.6    5.5332 5.6    5.6    2.6    2.9999 2.6666 2.8    2.5333 2.7334   0.8001 1.0018 0.7999 1.0001 0.8    0.9334 1.5334 1.4    1.2    1.4666   1.3999 1.3334 2.6666 2.3334 2.3998 2.5333 2.3334 2.4    5.     5.2001   5.2    5.2667 5.1998 5.1333]]
70                   0.55012         0.56543         0.32811         0.80724          0.80724          0.04916          0.46662          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3332 3.3333 3.4666 3.3335 1.8668 2.2667 2.     2.   2.0667 2.1333 4.5334 4.9334 4.5332 4.2666 4.5333 4.5332 5.5333 5.8   5.6    5.5334 5.6    5.6    2.6    2.9999 2.6667 2.8    2.5334 2.7331   0.8001 1.0005 0.8    1.0001 0.8001 0.9334 1.5333 1.4002 1.1999 1.4669   1.4    1.3333 2.6666 2.3333 2.4001 2.5332 2.3334 2.3999 5.0001 5.2   5.1998 5.2667 5.2    5.1333]]
71                   0.55013         0.56543         0.32808         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5999 3.3333 3.3334 3.467  3.3333 1.8668 2.2664 2.0001 1.9999   2.0668 2.1333 4.5333 4.9333 4.5334 4.2663 4.5333 4.5333 5.534  5.7999   5.6    5.5332 5.5999 5.5999 2.5999 2.9999 2.6664 2.8    2.5333 2.7332   0.8    1.0001 0.8    1.     0.8001 0.9332 1.5333 1.4    1.2    1.4667   1.3998 1.3332 2.6669 2.3333 2.4    2.5331 2.3335 2.4001 5.     5.2   5.2    5.2668 5.2    5.1333]]
72                   0.5497         0.5651         0.32821         0.80739          0.80754          0.04923          0.46655          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3333 3.4664 3.3334 1.8667 2.2668 1.9998 2.0001   2.0667 2.1332 4.5332 4.9331 4.5335 4.2666 4.5334 4.5333 5.5334 5.8001   5.6    5.5334 5.6    5.6    2.5999 2.9999 2.6667 2.7999 2.5335 2.7334   0.8001 0.9999 0.8    1.     0.8    0.9334 1.5334 1.4    1.2001 1.4667   1.4001 1.3335 2.6666 2.3334 2.4001 2.5728 2.3334 2.4    4.9999 5.2   5.2    4.1231 5.2001 5.1334]]
73                   0.55017         0.56551         0.32815         0.80723          0.80723          0.04917          0.46662          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3333 3.4666 3.3333 1.8669 2.2667 2.     2.   2.0668 2.1333 4.5332 4.9332 4.5333 4.2666 4.5334 4.5331 5.5335 5.7998   5.6    5.5333 5.6    5.5999 2.6001 3.     2.6666 2.8    2.533  2.7333   0.8001 1.0003 0.8002 1.0003 0.8    0.9334 1.5333 1.4    1.2    1.4667   1.4001 1.3301 2.6666 2.3333 2.3999 2.5333 2.3333 2.4    4.9999 5.2001   5.2    5.2666 5.2001 5.1333]]
74                   0.55013         0.56543         0.32808         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3333 3.3334 3.4666 3.3333 1.8667 2.2668 2.0001 2.   2.0666 2.1334 4.5334 4.9333 4.5333 4.2666 4.5333 4.5333 5.5333 5.8001   5.5998 5.5333 5.6    5.6    2.5999 2.9999 2.6665 2.7999 2.5333 2.7333   0.8001 1.     0.8001 1.     0.8    0.9335 1.5333 1.4    1.2    1.4668   1.4    1.3334 2.6666 2.3334 2.4    2.5332 2.3333 2.4004 5.     5.1999   5.2    5.2668 5.2002 5.1333]]
75                   0.55015         0.56544         0.32809         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.267  3.6001 3.3333 3.3333 3.4668 3.3333 1.8669 2.2669 2.0001 2.0001   2.0672 2.1334 4.5332 4.9333 4.5332 4.2664 4.5334 4.5333 5.5333 5.8002   5.6    5.5334 5.6    5.6001 2.5998 2.9999 2.6669 2.7999 2.5332 2.7333   0.7999 1.     0.8001 1.0001 0.8    0.9336 1.5334 1.4    1.2    1.4667   1.3999 1.3335 2.6666 2.3333 2.4004 2.5332 2.3334 2.4    4.9999 5.2   5.2    5.2667 5.2    5.1333]]
76                   0.54988         0.56511         0.328         0.80733          0.80733          0.04915          0.4667          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3333 3.3334 3.4667 3.351  1.8676 2.2667 1.9997 2.0002   2.0668 2.1333 4.5334 4.9333 4.5334 4.2665 4.5334 4.5333 5.5332 5.7999   5.5999 5.5333 5.6001 5.5999 2.5999 2.9997 2.6666 2.8001 2.5333 2.7333   0.8    1.     0.7996 1.     0.8001 0.9335 1.5333 1.4001 1.2001 1.4667   1.4001 1.333  2.6667 2.3333 2.4001 2.5334 2.3333 2.4    4.9999 5.1999   5.2    5.2666 5.2    5.1333]]
77                   0.55014         0.56545         0.32808         0.80724          0.80724          0.04916          0.46667          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3333 3.3333 3.4668 3.3334 1.8667 2.2664 2.0004 2.0001   2.0667 2.1333 4.5333 4.9333 4.5332 4.2664 4.5333 4.5333 5.5332 5.8   5.6    5.5333 5.6    5.5999 2.5994 2.9998 2.6665 2.7999 2.5333 2.7333   0.8    1.0001 0.8    1.     0.8002 0.9334 1.5334 1.4    1.2    1.4668   1.3999 1.3335 2.6667 2.3333 2.4    2.5333 2.3329 2.3999 5.     5.1999   5.2001 5.2667 5.1999 5.1334]]
78                   0.55018         0.56547         0.32811         0.80723          0.80723          0.04916          0.4666          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3334 3.3334 3.4667 3.333  1.8663 2.2667 2.     2.0001   2.0668 2.1334 4.5331 4.9334 4.5333 4.2664 4.5333 4.5335 5.5333 5.7999   5.5999 5.5334 5.5999 5.5999 2.6    3.     2.6667 2.7999 2.5334 2.7333   0.7999 1.0004 0.7999 1.0001 0.8001 0.9334 1.5333 1.3999 1.2001 1.4666   1.4    1.3334 2.6667 2.3333 2.4    2.5333 2.3334 2.4    4.9999 5.2001   5.2001 5.2667 5.2    5.1333]]
79                   0.55015         0.56545         0.32809         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3332 3.3334 3.4666 3.3334 1.8665 2.2665 1.9999 2.0002   2.0667 2.1333 4.5333 4.9334 4.5334 4.2667 4.5333 4.5333 5.5333 5.8001   5.5999 5.5332 5.6    5.6    2.6    2.9999 2.6664 2.8    2.5333 2.7333   0.8001 1.     0.8    1.0001 0.7999 0.9335 1.5336 1.4    1.2    1.4667   1.4    1.3334 2.6667 2.3333 2.4001 2.5333 2.3334 2.4001 4.9999 5.2001   5.1999 5.2667 5.2001 5.1334]]
80                   0.55013         0.56543         0.32809         0.80724          0.80724          0.04916          0.4666          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3333 3.4666 3.3331 1.8666 2.2667 2.0001 2.0001   2.0668 2.1333 4.5333 4.9333 4.5333 4.2666 4.5334 4.5332 5.5333 5.8   5.6    5.5334 5.6    5.6    2.5998 3.0002 2.6667 2.7999 2.5335 2.7333   0.8002 1.0002 0.8    1.0001 0.8    0.9333 1.5333 1.3999 1.2    1.4666   1.4    1.3334 2.6666 2.3336 2.4    2.5334 2.3332 2.4001 4.9999 5.2002   5.2    5.2665 5.1999 5.1333]]
81                   0.54808         0.5648         0.32762         0.80796          0.80796          0.04899          0.46662          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3334 3.3333 3.4666 3.3333 1.8668 2.2663 2.0002 2.0002   2.0667 2.1333 4.5333 4.9333 4.5333 4.2667 4.5333 4.5332 5.5333 5.8   5.6001 5.5333 5.6    5.5999 2.6001 2.967  2.6666 2.7999 2.5333 2.7334   0.7998 1.0002 0.8002 1.     0.7999 0.9334 1.5334 1.4    1.2    1.4667   1.3999 1.3334 2.6667 2.3334 2.4001 2.5333 2.3333 2.4004 5.     5.2   5.1998 5.2666 5.1999 5.1333]]
82                   0.55117         0.5691         0.33002         0.80688          0.80689          0.04929          0.46668          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3334 3.3332 3.4666 3.3331 1.8668 2.2667 2.0001 1.9997   1.757  2.1334 4.5335 4.9332 4.5333 4.2667 4.5333 4.5333 5.5332 5.7999   5.5999 5.5333 5.6    5.5999 2.6    2.9999 2.6665 2.8    2.5332 2.733   0.8    1.0002 0.8001 1.0001 0.8    0.9333 1.5332 1.4214 1.2001 1.4668   1.4001 1.3333 2.6667 2.3334 2.3999 2.5333 2.3334 2.4    5.     5.1999   5.2    5.2665 5.2    5.1333]]
83                   0.55028         0.56562         0.32813         0.80719          0.80719          0.04917          0.46663          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3334 3.3333 3.4666 3.3234 1.8666 2.2668 2.     2.0002   2.0666 2.1334 4.5333 4.9332 4.5333 4.2665 4.5332 4.5332 5.5334 5.8   5.5999 5.5333 5.5999 5.6    2.6    3.0001 2.6666 2.8    2.5332 2.7332   0.8002 1.     0.8001 1.0001 0.8001 0.9333 1.5333 1.4    1.1998 1.4667   1.4    1.3334 2.6669 2.3334 2.4001 2.5332 2.3333 2.3999 5.     5.1999   5.1999 5.2666 5.1999 5.1333]]
84                   0.55015         0.56551         0.3281         0.80723          0.80723          0.04916          0.46668          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5998 3.333  3.3333 3.4668 3.3331 1.8667 2.2669 2.0001 1.9999   2.0669 2.1332 4.5332 4.9333 4.5332 4.2665 4.5299 4.5334 5.5333 5.8   5.6    5.5333 5.5999 5.6001 2.5998 2.9997 2.6667 2.8    2.533  2.7332   0.8002 1.0002 0.8002 1.0001 0.8001 0.9332 1.5333 1.4    1.2001 1.4668   1.4    1.3334 2.6667 2.3333 2.4    2.5333 2.3335 2.4    4.9999 5.1999   5.2    5.2666 5.1999 5.1332]]
85                   0.5501         0.56542         0.32808         0.80725          0.80725          0.04916          0.46663          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3333 3.4665 3.3333 1.8666 2.2666 2.     2.   2.0668 2.1334 4.5334 4.9332 4.5332 4.2666 4.5333 4.5335 5.5333 5.8   5.5999 5.5333 5.6    5.6001 2.6    2.9999 2.6666 2.7999 2.5333 2.7332   0.8    0.9998 0.8    1.0001 0.8    0.9334 1.5335 1.3999 1.2    1.4667   1.4001 1.3333 2.6667 2.3334 2.4    2.5333 2.3335 2.4    5.0001 5.1999   5.2    5.2666 5.2    5.1334]]
86                   0.55012         0.56544         0.32809         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3334 3.4667 3.3333 1.8666 2.2667 2.0001 1.9999   2.0667 2.1334 4.5333 4.9333 4.5333 4.2667 4.5333 4.5332 5.5334 5.8001   5.6    5.5333 5.6003 5.5999 2.6    3.     2.6667 2.7998 2.5334 2.7333   0.8    1.     0.8001 1.     0.7999 0.9336 1.5333 1.4001 1.2    1.4667   1.4    1.3333 2.6666 2.3333 2.4    2.5334 2.3334 2.3999 5.     5.2001   5.2    5.2666 5.1999 5.1333]]
87                   0.55013         0.56543         0.32809         0.80724          0.80724          0.04916          0.46662          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6003 3.3335 3.3334 3.4666 3.3333 1.8669 2.2666 2.     2.0001   2.0667 2.1333 4.5333 4.9334 4.5334 4.2666 4.5333 4.5333 5.5333 5.8   5.5999 5.5333 5.6    5.6    2.5999 2.9999 2.6666 2.7994 2.5333 2.7333   0.8002 1.0001 0.8001 1.0002 0.8    0.9333 1.5335 1.4    1.1998 1.4668   1.4    1.3335 2.6665 2.3333 2.3997 2.5333 2.3333 2.4    5.     5.1999   5.2    5.2666 5.2    5.1333]]
88                   0.55013         0.56544         0.3281         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5999 3.3333 3.3334 3.4667 3.3333 1.8667 2.2667 2.0001 2.0001   2.0666 2.1337 4.5332 4.9333 4.5334 4.2667 4.5334 4.5334 5.5334 5.8   5.5999 5.5333 5.6    5.6    2.6    2.9999 2.6663 2.7999 2.533  2.7332   0.8001 1.0003 0.8    1.     0.8001 0.9334 1.5333 1.4001 1.2    1.4667   1.4001 1.3334 2.6666 2.3333 2.4001 2.5332 2.3333 2.4    5.     5.2   5.2    5.2667 5.2    5.1333]]
89                   0.57767         0.57741         0.33068         0.79759          0.79766          0.05076          0.4667          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[2.5758 3.6    3.3333 3.3334 3.4667 3.3333 1.8666 2.2668 2.0001 2.0003   2.0667 2.1334 4.5333 4.9333 4.5333 4.2666 4.5333 4.5333 5.5333 5.8002   5.6    5.5333 5.6    5.5999 2.6    2.9999 2.6666 2.7998 2.5336 2.7331   0.8    1.0001 0.8001 1.0003 0.8001 0.9334 1.5333 1.311  1.1998 1.4668   1.3999 1.3333 2.6667 2.3334 2.3999 2.5335 2.3335 2.4    4.9998 5.2001   5.2    5.2665 5.1999 5.1335]]
90                   0.55013         0.56544         0.32809         0.80724          0.80724          0.04916          0.4667          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3332 3.3333 3.4667 3.3333 1.8667 2.2667 2.0001 1.9999   2.0666 2.1334 4.5333 4.9334 4.5333 4.2665 4.5332 4.5333 5.5333 5.7999   5.5999 5.5333 5.5998 5.5999 2.5996 3.     2.6668 2.7999 2.5333 2.7334   0.8001 1.0002 0.8001 1.     0.8003 0.9334 1.5332 1.4    1.2    1.4667   1.4001 1.3333 2.6667 2.3337 2.4001 2.5334 2.3333 2.3999 5.0002 5.1999   5.2    5.2666 5.1997 5.1331]]
91                   0.55013         0.56544         0.3281         0.80724          0.80724          0.04916          0.46658          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3332 3.3332 3.4665 3.3333 1.8666 2.2668 2.     2.0002   2.0665 2.1334 4.5332 4.9332 4.5334 4.2666 4.5333 4.5333 5.5334 5.7999   5.5999 5.5333 5.6    5.6    2.6001 3.     2.6667 2.7999 2.5334 2.7334   0.8002 1.     0.8001 1.0003 0.8001 0.9334 1.5333 1.4002 1.1999 1.4666   1.4    1.3331 2.6669 2.3335 2.4    2.5333 2.3334 2.4    5.     5.2   5.2    5.2668 5.1999 5.1333]]
92                   0.55013         0.56543         0.32808         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3334 3.3333 3.4666 3.3334 1.8667 2.2667 2.0001 1.9999   2.0666 2.1334 4.5333 4.9336 4.5333 4.2666 4.5335 4.5334 5.5332 5.8   5.6    5.5333 5.6    5.5998 2.5999 2.9999 2.6667 2.7999 2.5332 2.7331   0.7999 0.9999 0.7999 1.0001 0.8001 0.9335 1.5333 1.4    1.2001 1.4667   1.4001 1.3334 2.6666 2.3338 2.4001 2.5333 2.3332 2.4001 5.     5.2   5.2    5.2668 5.1999 5.1332]]
93                   0.55012         0.56545         0.3281         0.80725          0.80725          0.04916          0.46672          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3332 3.3333 3.4666 3.3333 1.8668 2.2667 2.     2.   2.0667 2.1334 4.5333 4.9333 4.5333 4.2667 4.5333 4.5333 5.5331 5.7999   5.5999 5.5333 5.5999 5.6    2.6    2.9996 2.6667 2.8001 2.5332 2.7332   0.8001 1.0002 0.7999 1.0001 0.7998 0.9333 1.5335 1.4    1.2    1.4668   1.3998 1.3332 2.6666 2.3333 2.4    2.5334 2.3335 2.4004 5.     5.2001   5.2    5.2667 5.2001 5.1333]]
94                   0.55013         0.56543         0.32809         0.80724          0.80724          0.04916          0.46658          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3334 3.3334 3.4667 3.3333 1.8667 2.2668 2.0002 2.   2.0668 2.1333 4.5333 4.9333 4.5333 4.2666 4.5333 4.5333 5.5332 5.8   5.5999 5.5335 5.6001 5.6    2.5999 3.0001 2.6666 2.7999 2.5334 2.7334   0.8002 1.0001 0.8    1.0001 0.8002 0.9334 1.5333 1.4    1.2    1.4666   1.4    1.3333 2.6667 2.3333 2.4    2.5333 2.3335 2.4    4.9999 5.2   5.2001 5.2667 5.2001 5.1333]]
95                   0.56244         0.57654         0.33541         0.80293          0.80312          0.05056          0.46665          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3333 4.2821 3.4666 3.3335 1.867  2.2666 2.0001 1.9998   2.0667 2.1333 4.5333 4.9332 4.5334 4.2667 4.5332 4.5334 5.5334 5.7999   5.6    5.5333 5.5999 5.6001 2.5998 3.     2.6666 2.8    2.5332 2.7335   0.8001 1.0001 0.8001 1.0001 0.8001 0.9335 1.5333 1.4    1.1999 1.7855   1.4    1.3335 2.6667 2.3334 2.4001 2.5333 2.3334 2.4001 5.     5.2   5.1998 5.2666 5.2    5.1333]]
96                   0.55015         0.56544         0.32809         0.80723          0.80723          0.04916          0.46668          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3333 3.3334 3.4666 3.3333 1.8668 2.2668 2.     2.0001   2.0667 2.1334 4.5333 4.9333 4.5332 4.2661 4.5334 4.5332 5.5332 5.8   5.6001 5.5333 5.6    5.6    2.5999 3.0001 2.6666 2.8    2.5333 2.7332   0.8001 1.     0.8001 1.0001 0.8001 0.9336 1.5334 1.4    1.2002 1.4667   1.4001 1.3333 2.6666 2.3336 2.4001 2.5333 2.3333 2.4    5.     5.2001   5.1999 5.2666 5.2    5.1333]]
97                   3.1773         1.53012         1.10875         -0.11329          -0.06977          0.24914          1.39463          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[2.5872 2.7754 3.4379 3.267  3.5049 3.265  3.2551 3.2167 3.0614 3.4954   3.4908 3.2495 3.0797 3.3112 3.2902 3.5713 3.7547 3.5736 3.3148 3.0975   3.0484 3.219  3.0399 3.149  3.4439 3.4276 3.5163 2.7525 3.457  3.4338   3.7728 3.7191 3.3718 3.6705 3.8294 3.49   3.8446 3.8416 3.5598 3.4159   3.5696 4.1357 3.5737 3.7256 3.6933 3.629  3.6437 3.7416 4.0831 3.8534   3.8739 3.8483 4.2139 4.1775]]
98                   3.14988         1.51009         1.07592         -0.10368          -0.07741          0.24347          1.21098          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.2789 3.1266 3.1845 3.5164 3.119  3.1697 3.2917 3.2428 3.4682 3.1866   3.1125 3.3871 3.3394 3.3092 3.6331 3.4803 3.597  3.17   3.0095 2.9477   2.7482 3.3205 3.1649 3.0772 3.3943 3.4504 3.3266 3.3677 3.3958 3.3715   3.685  3.5718 3.9572 3.6462 3.6845 3.616  3.2967 3.3382 3.4835 3.4422   3.8991 1.3091 3.9868 3.5393 3.7237 3.3949 3.7139 3.698  3.6471 3.7282   4.0012 3.7273 4.0568 3.7837]]
99                   3.08581         1.52086         1.08652         -0.08123          -0.04869          0.24092          1.40553          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[2.9738 3.1011 2.6297 3.5358 2.8273 3.357  3.1404 3.0314 3.3083 3.1682   3.073  3.4805 3.343  4.0083 3.7196 3.2382 3.1697 3.3838 3.4091 3.2927   3.1043 3.0281 3.2372 3.2689 3.4281 3.4974 3.3744 3.4948 3.4274 3.3339   3.7822 3.564  3.4066 3.9045 3.4094 3.684  3.0783 3.773  3.8502 3.4571   3.3684 3.2376 3.5962 3.7684 3.3079 3.5278 3.924  3.5446 4.0138 4.3242   3.5629 3.3241 4.3484 3.6451]]
100                   3.3059         1.56332         1.11293         -0.15834          -0.1295          0.25319          1.39232          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.0498 2.8221 2.957  3.088  2.8708 3.0559 3.1823 3.2942 3.3365 3.4356   3.3141 3.2161 3.2564 4.8666 3.6857 2.7042 3.3743 3.117  3.1461 3.1833   3.134  3.2713 3.2658 3.0477 3.268  3.2787 3.4465 3.4291 3.4849 3.2735   3.2994 3.7187 3.4151 3.6758 3.7858 3.9768 3.433  3.3489 3.4335 3.8815   3.7667 3.4487 3.5982 3.4348 3.3323 3.4163 3.4226 3.6724 3.6424 3.8519   3.9334 3.2923 4.1186 4.0712]]
101                   2.82434         1.43453         0.93017         0.01039          0.01137          0.21199          1.56473          MLPRegressor(hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0008 2.6844 2.8593 2.9684 3.0025 3.0908 2.9397 3.1592 3.1554 2.4414   3.2074 3.3581 3.2271 3.1006 3.0485 3.2902 2.9642 3.0978 2.9836 2.919   2.7885 3.0859 2.7602 2.971  2.7765 3.1405 3.4596 3.1482 3.1217 3.1053   3.3235 3.0825 3.2465 3.0511 3.4037 3.0426 3.0265 2.1023 1.4461 3.4657   3.071  3.326  2.921  3.1398 3.3165 3.1917 3.2097 3.085  3.8315 3.1828   3.4394 3.4749 3.9637 3.2714]]
102                   2.71548         1.37744         0.85049         0.04853          0.05178          0.1942          1.39612          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8864 2.7002 2.6573 2.9076 3.7352 4.2914 2.9888 3.0947 3.0119 3.0109   3.1399 2.8764 2.7475 3.0313 2.9975 3.0811 2.9685 3.2931 2.8868 3.0525   2.9446 2.7296 2.8258 2.9918 3.0945 3.1204 3.0925 3.3405 3.1148 3.0749   3.1092 2.3523 3.177  3.3075 2.752  3.1948 3.0363 3.1873 2.7977 1.5221   1.6646 3.1388 3.0646 3.179  2.6998 3.1453 3.1624 3.2471 3.334  3.4131   3.3428 3.191  4.3295 3.0976]]
103                   2.60212         1.34723         0.86834         0.08825          0.09214          0.19298          1.39022          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9068 3.0818 2.7249 3.1641 3.3042 3.0243 3.0479 3.0298 3.0881 2.952   2.5818 3.0461 3.0421 4.0928 3.2797 3.0517 3.0876 3.2095 2.9507 2.7684   3.0916 2.9606 4.1476 3.0982 3.0881 3.1646 3.0373 3.1112 2.8033 2.6435   1.512  2.9586 3.2848 3.08   3.2101 2.7223 3.2791 2.164  2.8886 3.4067   2.6959 1.6773 3.2666 3.196  2.8113 3.2042 2.6646 2.97   3.6506 3.3685   3.3093 3.2732 3.2534 3.2188]]
104                   3.11899         1.51674         0.99141         -0.09286          -0.09174          0.22965          1.64447          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8946 2.7953 2.7049 2.6601 2.8189 2.7589 3.1235 3.2907 3.1342 3.0274   2.9791 3.3752 3.0364 3.3429 2.9906 2.889  3.1159 2.9778 2.8608 2.8856   2.985  2.7443 2.9806 3.0494 3.1499 3.1251 3.015  3.0922 3.0681 3.0912   3.1173 3.5023 3.2559 3.2965 2.6603 3.2787 3.2226 3.1834 3.0652 3.1256   2.992  3.0197 3.3151 3.4292 3.0805 3.1059 3.1948 3.1936 3.0815 3.3026   3.2651 3.1516 3.2124 3.2758]]
105                   0.65572         0.62259         0.40544         0.77024          0.77129          0.0601          0.47187          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.2063 3.5926 3.333  3.379  3.1059 2.8537 2.0659 2.2809 2.5991 2.0118   2.0461 2.1392 4.5179 5.1032 4.5103 4.2687 4.5279 4.5176 5.577  5.7973   4.1016 5.5297 5.6134 5.5828 2.6087 3.     2.6877 2.8178 2.5343 2.7233   0.8237 1.6905 0.8288 1.6565 0.7777 0.9247 1.4153 1.4186 1.5062 1.4712   1.1747 1.3227 2.6567 2.5693 2.3937 2.533  2.3353 3.4736 5.0048 5.2017   5.9477 5.2803 5.2014 5.0383]]
106                   0.73283         0.58969         0.33605         0.74323          0.74412          0.05463          0.37897          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2913 3.4525 3.4278 3.772  3.4188 3.344  1.8769 2.3282 1.9942 2.0161   2.0647 2.1306 4.5458 5.2635 4.4884 3.4001 4.5567 4.5232 5.8087 5.7973   5.6133 6.0581 5.5952 3.3099 2.6187 3.3012 2.8906 2.9234 2.5424 2.7437   1.28   1.0112 1.414  0.9952 0.7959 0.993  1.8656 1.383  1.8449 1.4724   1.5741 1.3286 2.6628 2.359  3.2266 2.5478 2.3235 2.4026 5.458  5.1966   5.1924 5.2899 5.2093 5.1422]]
107                   0.61913         0.61595         0.3458         0.78306          0.78407          0.05284          0.49653          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2564 3.5741 3.3473 3.3404 3.479  3.3373 1.873  2.2485 1.7378 1.9753   2.4779 2.2295 4.5383 4.9265 4.5486 4.2626 4.8526 4.5987 5.5337 6.3246   5.6023 5.5399 5.5967 5.6078 2.5218 2.9903 1.9486 2.8085 2.5278 2.7489   1.9794 0.9163 0.8322 1.0122 0.8414 0.994  1.5301 1.5211 1.1336 1.5436   1.3981 1.3388 2.6588 2.3217 2.5178 2.5158 2.344  3.4451 5.0039 5.2043   5.2509 5.2564 5.1921 5.1232]]
108                   0.72011         0.66077         0.3717         0.74768          0.7496          0.05871          0.53623          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2649 3.509  3.0063 3.124  4.1407 3.7537 1.8579 2.2256 2.1587 2.0158   2.2691 2.6512 4.5337 5.4277 4.5564 4.2828 3.8818 3.6493 5.7059 5.7484   5.6442 5.5315 5.5983 5.7744 2.6021 2.8716 2.6577 2.8097 2.5386 2.6836   3.0695 1.1169 0.8073 0.9955 1.7714 0.9844 1.5256 1.3967 1.1999 1.413   1.3917 1.3461 2.6909 2.3428 2.1319 2.5377 2.335  3.0688 4.9811 5.1848   5.1621 4.2681 5.9944 5.1312]]
109                   0.63543         0.61719         0.39406         0.77735          0.77963          0.06023          0.4769          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.196  3.7761 3.3859 3.8453 4.0753 3.3284 2.0881 2.3637 2.3241 1.989   2.2379 2.6731 4.4362 4.8155 4.18   4.2062 4.5123 4.3271 5.529  5.7832   5.5278 5.3684 5.5548 5.6248 2.8661 2.9144 2.4996 3.1804 2.2929 2.6519   1.2599 1.0443 0.8837 1.4405 1.001  2.0737 1.6263 1.5196 1.3087 1.4828   1.4777 1.3709 2.6381 2.3871 2.4043 2.6444 2.4041 2.4406 5.086  5.2023   4.9943 5.1902 5.17   5.0842]]
110                   0.6651         0.64729         0.37947         0.76696          0.76825          0.05507          0.51283          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2586 3.6185 3.3843 3.1683 3.4651 3.1748 2.4528 2.3052 2.0688 2.8282   2.1095 2.4661 4.2859 4.6821 4.3834 3.7017 4.3883 3.9184 5.4727 5.8331   5.6209 4.298  4.5952 4.9626 2.6832 2.4093 2.6075 2.4086 2.5852 2.8428   0.9609 1.0095 0.9394 1.6696 0.9628 1.3852 1.5464 1.3849 1.4381 1.6075   1.3407 1.3449 2.7999 2.3202 2.3547 2.2963 2.132  2.5018 4.8917 4.9159   5.1266 5.0525 5.3156 4.7763]]
111                   0.69058         0.642         0.46091         0.75803          0.75996          0.07057          0.55413          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4817 3.6833 3.3165 3.3853 3.742  3.2527 2.1003 2.7384 2.0338 2.9307   2.3255 2.3495 4.4224 4.809  4.3637 4.2335 4.5498 4.4279 5.3952 5.211   4.9094 5.3578 4.6602 5.6627 2.6144 3.1748 2.5796 2.6223 2.8657 2.1776   1.1702 1.3362 1.9549 2.4884 0.978  1.2422 1.6119 1.275  1.2077 1.8705   1.6215 1.865  2.7348 2.4149 2.4376 2.6243 2.9669 2.4097 4.9869 5.1124   5.1491 4.5991 5.1425 4.7694]]
112                   0.594         0.59706         0.36177         0.79187          0.79192          0.05443          0.42737          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0568 3.67   3.3109 3.3224 3.4239 4.0834 2.0219 2.2923 2.0264 2.1032   2.2754 2.1795 4.2538 4.9887 4.4424 4.1875 4.4803 4.2297 5.0561 4.3474   4.6716 5.5091 5.5172 5.5852 2.5932 2.5612 3.0185 2.5956 2.6661 2.7318   0.7384 1.1745 2.4085 1.091  0.9802 1.0975 1.8926 1.4018 1.1339 1.4999   1.8189 1.6297 2.7365 2.2918 2.5116 2.3819 2.329  2.4551 4.8615 4.8689   5.0933 4.9951 5.066  5.0551]]
113                   2.47629         1.30767         0.89805         0.13234          0.1325          0.19496          1.22823          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.1331 3.0028 2.9081 2.8704 3.1448 3.3465 1.9975 3.1104 2.9673 3.2539   3.1538 2.741  3.3007 3.1622 3.1071 3.1421 3.2861 3.364  3.0851 2.9611   3.1465 5.5147 2.946  4.6933 3.1201 2.6845 3.2291 2.8286 2.6454 3.117   1.2995 3.3031 3.3444 3.2863 3.3141 2.1924 3.1708 3.5274 1.391  3.4124   3.2067 1.3626 3.4874 3.3138 3.2204 3.3109 2.9683 2.5332 3.2141 3.4356   3.4298 4.9162 3.4008 3.1849]]
114                   2.48767         1.30006         0.81079         0.12835          0.12931          0.18432          1.26257          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.2281 2.914  2.9408 2.9117 3.0609 2.8691 2.9441 3.0075 2.9849 2.5776   2.9739 2.4293 3.0056 2.9837 3.0312 3.1254 3.0734 3.3823 4.8786 2.9691   2.7116 2.775  2.9301 2.9223 3.0066 3.1405 3.1239 2.6178 2.4259 3.1563   3.3542 1.2307 3.418  3.5719 3.3502 2.0447 3.3343 3.2717 3.2684 3.1366   3.106  3.0961 3.2165 3.1805 2.464  2.463  3.288  2.7235 4.6276 3.3639   3.3628 3.5976 4.7355 3.2055]]
115                   2.85596         1.41         0.93624         -0.00069          -0.00069          0.21292          1.39337          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.8545 3.1355 2.959  3.0735 3.1953 2.8973 3.2011 3.3746 2.4674 2.9193   2.9546 3.124  3.2707 3.4651 3.2759 3.0067 2.9566 2.9576 2.948  2.8862   2.9718 2.9734 2.8713 2.9643 3.1309 3.1194 3.0988 3.1118 3.0759 3.1732   3.2416 3.2044 3.3988 3.2598 3.338  3.4776 3.0433 3.0482 3.0388 1.3338   3.2137 3.1462 3.3176 2.4847 3.2679 3.1606 3.0445 3.1375 3.2701 3.3086   5.1777 3.341  4.5485 3.3567]]
116                   2.61558         1.33254         0.86985         0.08353          0.08651          0.19232          1.17907          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.6891 3.1051 2.9937 2.9183 2.8915 3.0868 3.122  3.3283 3.2826 2.0906   2.421  3.2386 3.261  3.4344 3.4196 3.0363 3.312  3.7158 3.     2.8025   3.167  2.9765 2.8659 4.5556 3.2236 3.0604 2.7454 2.5156 3.0014 3.1728   3.3262 3.1892 3.2791 3.3527 3.6119 1.384  2.9699 3.1741 3.1761 3.275   1.8888 1.4305 2.6854 3.0408 3.2799 2.7447 3.2197 3.2128 2.9727 3.1077   3.3058 3.5763 3.3177 3.4041]]
117                   2.74454         1.37803         0.93221         0.03835          0.03904          0.20733          1.18972          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8693 3.0443 2.8907 2.9433 2.6891 2.6033 3.0341 3.2117 3.0367 2.9589   2.8159 3.0778 3.3238 3.3166 3.5753 3.2412 3.871  3.1405 2.9656 2.9094   2.8992 2.9581 3.0449 2.9631 3.1121 3.1056 3.1469 3.0856 3.0421 3.092   3.2099 3.3307 2.403  3.2728 3.0667 3.3682 3.3144 1.7601 3.1057 3.0739   3.0283 2.9154 3.3731 3.1078 2.794  3.0851 2.5631 2.6424 3.4698 3.2948   3.2611 4.8741 3.3755 3.2802]]
118                   2.77699         1.39893         0.9074         0.02698          0.02978          0.20108          1.2465          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.4383 3.1075 3.2272 2.7873 3.7127 2.8716 3.1198 2.9777 3.1143 3.0414   2.9439 2.8805 2.9159 3.1952 3.1593 3.0391 3.5157 3.3157 3.061  2.7942   2.9848 3.0406 2.9279 2.8286 2.812  3.0802 3.1086 3.1575 3.1172 3.085   3.1949 3.4996 3.2551 3.3635 3.1843 3.4042 2.1434 3.1605 3.088  1.532   1.6881 2.876  3.2854 2.9641 3.3473 3.1433 2.7542 2.6147 3.1127 3.4308   3.1463 3.3875 3.173  3.3944]]
119                   2.98977         1.47459         0.97359         -0.04758          -0.04679          0.22242          1.56883          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9252 2.8712 2.8367 2.7671 3.241  2.7856 3.0442 3.1635 3.1205 2.6711   3.086  3.0991 2.8509 3.1062 3.3368 2.7144 2.9842 2.8988 2.7854 3.0784   3.0261 2.9699 3.087  3.303  3.0122 3.1235 3.3969 3.4503 3.0694 3.1514   3.2356 3.399  3.0592 3.3564 3.4132 3.3007 3.0805 3.0621 2.8555 3.077   2.9525 2.7728 3.2266 3.219  3.2666 2.9268 2.8932 2.8076 3.2284 3.3626   3.4506 3.3841 3.3434 3.148 ]]
120                   3.14564         1.51505         0.99466         -0.10219          -0.10209          0.23212          1.62627          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8566 4.0858 2.7117 3.246  2.7352 2.9277 2.9843 3.3031 3.1813 3.1038   2.8507 3.0611 3.1706 3.1929 3.0316 3.0775 3.1429 3.0193 2.8226 2.7763   2.9255 2.9981 2.7879 2.8107 3.1505 3.134  3.0612 3.0569 3.0735 3.0317   3.2118 3.1885 3.4029 3.5195 3.3526 3.1263 3.3109 2.9742 3.0548 3.0623   3.0018 3.2861 3.3768 3.1631 2.857  3.2303 2.9482 3.2592 3.061  3.2751   3.0066 3.1748 3.3669 3.8803]]
121                   0.55215         0.5642         0.33314         0.80653          0.80655          0.04921          0.44177          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2707 3.6088 3.3334 3.3317 3.4652 3.3142 1.828  2.2647 1.9899 2.0591   2.0892 2.1532 4.5357 4.9474 4.5221 4.2716 4.5409 4.5384 5.5241 5.7892   5.6019 5.5567 5.6132 5.5575 2.615  2.9955 2.6579 2.8033 2.4988 2.646   0.8821 1.1448 0.9284 0.9842 0.8931 0.9957 1.5343 1.4065 1.2126 1.4792   1.3844 1.3323 2.6711 2.3221 2.3932 2.5251 2.339  2.3956 4.9965 5.202   5.2048 5.2608 5.1856 5.1266]]
122                   0.55104         0.56273         0.31998         0.80692          0.80693          0.04742          0.41792          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2527 3.877  3.3399 3.336  3.4784 3.3309 1.8681 2.2357 2.1657 1.9676   2.045  2.132  4.5056 4.9325 4.4713 4.2797 4.5427 4.5571 5.5387 5.7866   5.4562 5.5308 5.6036 5.5767 2.592  2.8883 2.6376 2.7958 2.4828 2.7281   1.0105 0.978  0.7812 0.9792 0.9565 0.9113 1.5295 1.3983 1.2027 1.459   1.4078 1.3388 2.6574 2.3332 2.4003 2.5312 2.3094 2.4005 4.9991 5.2067   5.1963 5.2736 5.1939 5.1331]]
123                   0.54857         0.56718         0.32816         0.80779          0.80779          0.04883          0.43082          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2838 3.6208 3.3398 3.3275 3.4625 3.3181 1.8493 2.2601 1.995  1.9859   2.0946 2.1186 4.5144 4.9335 4.4163 4.318  4.5588 4.5307 5.5903 5.8208   5.5964 5.5251 5.4952 5.5961 2.6046 3.0018 2.6679 2.7991 2.5289 2.7427   0.7673 1.0238 0.9297 0.9865 0.7877 0.933  1.53   1.3934 1.227  1.471   1.3948 1.3424 2.6935 2.333  2.3872 2.5269 2.3326 2.4407 4.9901 5.201   5.2027 5.264  5.1892 5.1237]]
124                   0.5477         0.56148         0.33145         0.80809          0.80811          0.04967          0.43385          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6294 3.6046 3.3187 3.3454 3.4799 3.3306 1.8269 2.226  2.0889 2.0142   2.0639 2.1674 4.4155 4.9298 4.5278 4.2745 4.5388 4.5426 5.5264 5.7981   5.6076 5.5259 5.5165 5.6198 2.592  3.0085 2.6716 2.7955 2.5254 2.7332   0.9278 1.1226 0.7771 0.9913 0.8073 0.9399 1.5373 1.4025 1.1552 1.48   1.3615 1.328  2.6864 2.3285 2.4226 2.5233 2.3336 2.4221 4.9957 5.1977   5.1918 5.2353 5.2203 5.1071]]
125                   0.58686         0.58202         0.34682         0.79437          0.79437          0.05213          0.41162          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.496  3.59   3.3612 3.2931 3.4299 3.4978 1.8079 2.2321 2.1177 1.9881   2.1979 2.7712 4.3355 4.6345 4.1321 3.8285 4.5084 4.3655 5.5153 5.7227   5.6064 5.242  5.5726 5.4129 2.8395 3.1471 2.5937 2.7237 2.425  2.8272   0.9415 1.1165 1.0762 1.164  1.0001 1.0901 1.5514 1.4264 1.1461 1.4767   1.3951 1.3999 2.6182 2.3919 2.431  2.5891 2.3505 2.6196 4.9482 4.8613   5.135  5.0836 5.0785 5.1329]]
126                   0.59906         0.59841         0.36709         0.7901          0.7901          0.05462          0.47243          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3105 3.8154 3.3737 3.5309 3.5087 3.2024 2.1637 2.2839 2.0603 1.9831   2.2743 2.4564 4.1796 4.8157 4.4867 4.1322 4.3331 4.4142 5.5179 5.7788   5.4933 5.4581 5.3657 5.3376 2.2878 3.1092 2.4407 2.7419 2.461  2.6642   0.9178 1.1568 1.0821 1.4219 0.8966 1.1218 1.4946 1.3669 1.2032 1.5009   1.3156 1.3473 2.6985 2.5194 2.4251 2.6157 2.3971 2.6297 4.9684 4.8404   5.0407 5.1885 5.1278 5.1317]]
127                   0.62262         0.62384         0.36948         0.78184          0.78185          0.05599          0.48237          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1489 3.551  3.4383 3.2385 3.512  3.3435 1.7837 2.3461 2.5707 2.6083   2.0873 2.6282 4.3539 4.8994 4.3011 4.2308 4.1047 4.2885 5.4708 5.7786   5.6114 5.1815 5.1957 5.2793 2.3927 2.8966 2.5377 2.7141 2.275  2.5648   0.8495 1.1435 1.2239 1.3902 0.8183 1.0388 1.5605 1.404  1.2316 1.4809   1.4175 1.3535 2.727  2.4195 2.4772 2.5553 2.3544 2.481  4.914  5.2838   5.1278 5.1934 5.1065 5.1371]]
128                   0.62778         0.62419         0.38271         0.78003          0.78013          0.05713          0.47508          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2477 3.8882 3.4241 3.2419 3.3714 3.0762 1.8338 2.2721 2.0201 2.589   2.0868 2.2645 3.9637 4.84   4.2254 4.0119 4.4023 4.5142 5.5033 5.7401   5.5911 5.4554 5.3968 5.3959 2.5323 2.8676 2.5071 2.7906 2.5196 2.5269   0.9834 1.3534 0.9336 1.42   0.9083 1.1064 1.5345 1.168  1.143  1.5018   1.4011 1.3304 2.7296 2.4966 2.4037 2.5745 2.3515 2.4669 4.7266 5.1416   5.1736 5.2149 5.2148 5.0683]]
129                   4.38512         1.64181         0.78838         -0.53649          -0.24493          0.29837          1.41118          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.7056 2.2496 1.8624 2.1923 2.2761 2.2327 1.6641 2.5127 1.6966 2.3821   2.3155 2.468  1.9466 1.2502 2.907  1.7282 2.0329 2.6847 0.8419 1.607   1.9388 1.8284 2.3343 2.3883 2.6158 2.5288 2.6088 2.5807 1.7595 2.5205   2.6634 2.674  1.6916 2.7369 2.7232 2.0964 2.662  1.704  3.1746 2.4059   1.644  1.6339 1.8287 2.6699 2.8245 2.7491 2.7069 2.6183 2.5862 2.1469   1.1314 2.3714 1.7675 2.2036]]
130                   3.77856         1.55946         0.76894         -0.32396          -0.05495          0.25182          1.2822          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[1.5329 0.8781 2.1171 1.4641 2.0397 2.2623 2.255  1.5542 2.436  2.404   1.5362 2.0813 2.7602 2.1552 2.721  2.1664 1.4415 2.7802 2.0256 1.7051   2.1647 2.1191 2.133  2.4793 2.042  2.4374 2.7043 2.6197 2.4444 2.6534   2.0554 2.8556 1.9548 2.5721 2.6064 2.9735 1.6827 2.3373 2.6945 2.354   2.1847 2.1496 2.4362 2.4536 2.6641 2.0581 2.2358 1.9428 2.9439 2.0923   3.33   2.9072 2.7583 1.6614]]
131                   3.40604         1.48126         0.70779         -0.19343          0.00937          0.21525          1.31913          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.227  2.4456 2.2374 2.0055 2.372  2.3792 2.4415 1.2493 2.3553 2.4424   2.4089 2.2314 2.976  2.5565 2.347  2.4741 2.3196 2.6705 2.3546 2.2968   2.2993 1.9411 2.6048 2.4328 2.7259 2.5643 2.6096 2.1376 2.6862 2.5734   2.498  2.1949 2.7117 2.4621 3.0412 1.8688 2.2907 2.4126 2.6689 2.776   1.2139 2.4371 1.9056 2.8563 1.3711 2.5952 1.6573 3.2259 2.5736 2.8793   2.7235 1.7431 2.0177 2.7605]]
132                   3.82569         1.61575         0.7915         -0.34047          -0.13765          0.2565          1.50242          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.0741 2.2895 1.0229 1.8954 1.7221 1.9735 1.7401 2.4489 2.3727 2.3872   2.1877 1.8579 2.783  2.0859 2.7434 1.7595 2.2194 2.396  2.3801 1.9993   2.2157 2.4729 2.0608 2.6827 2.5948 2.386  2.6529 2.2001 1.8518 2.5979   2.5534 1.559  2.8263 3.0331 2.8791 2.5418 2.7267 2.8204 2.8116 1.7755   2.6718 2.8745 2.8452 2.4191 2.1355 3.1819 2.0579 2.6757 2.7403 2.567   3.2208 2.8317 2.9686 1.4776]]
133                   3.38096         1.57528         1.04354         -0.18464          -0.18379          0.24747          1.57632          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.9153 2.7079 2.8699 2.9472 2.7881 2.9307 3.0548 2.8771 3.7842 2.917   3.1838 3.1657 3.0309 2.7032 3.0501 2.8273 3.3393 3.1306 3.0346 2.8057   2.9023 2.767  2.7974 2.954  3.1554 3.1249 3.0005 3.0733 3.0243 3.3107   4.2805 3.2048 3.2877 3.6241 3.305  3.1976 3.7339 3.1265 3.311  3.2502   3.4764 3.0364 3.5137 3.5992 3.3875 4.1734 3.2445 3.2109 3.1398 3.3704   3.6209 3.1584 3.3279 3.2469]]
134                   3.26709         1.57772         1.07271         -0.14475          -0.13374          0.2459          1.61965          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.7977 2.6022 3.0783 3.1126 2.3968 2.8979 3.7517 3.071  2.9149 3.0221   4.0138 3.2075 4.2462 3.3246 3.262  3.3505 3.3518 2.9682 3.4165 2.8781   3.0351 2.9442 2.7107 3.0111 3.0834 3.0551 3.0309 3.3179 3.01   3.6724   3.2535 3.9138 3.6197 3.2664 3.6388 3.2077 3.4494 3.3686 3.6738 3.508   3.1647 3.0987 3.8569 3.86   3.19   3.8872 3.3623 4.0807 3.7559 3.287   3.8079 4.1037 2.9543 3.0608]]
135                   3.21369         1.53004         1.03878         -0.12604          -0.12502          0.24078          1.51075          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.684  3.5949 2.8997 2.7419 3.1643 3.0454 2.8999 3.4358 3.0307 2.8916   2.9291 3.0474 2.8391 3.4452 2.9548 3.0839 3.1041 3.4393 2.8453 3.0232   2.9044 2.9441 2.7486 2.7369 3.0729 3.0811 3.0924 3.0308 3.188  3.0193   3.6167 3.6193 3.2815 3.4578 3.5391 3.6704 3.3154 2.9353 3.4321 3.0789   3.2109 3.5217 3.0759 3.0352 3.3407 3.393  3.2374 3.2396 3.5859 4.1446   3.4552 3.5218 3.5233 3.0883]]
136                   3.09963         1.51568         1.00625         -0.08607          -0.08341          0.23156          1.60957          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.0511 3.1312 3.2696 2.8411 2.5767 2.8695 3.0002 3.0273 2.9145 3.1372   3.0103 2.897  3.084  3.1671 4.2682 3.3575 2.9815 2.989  2.8418 3.0302   2.8833 2.8132 2.8925 2.9574 3.4772 3.1075 3.9456 3.3169 3.1086 3.9719   3.216  3.3048 3.5    3.3038 3.3544 3.6362 3.2134 3.1074 3.1288 3.4512   2.9722 3.4126 3.1874 3.2616 3.2606 3.3821 3.7274 3.0846 3.1861 2.9614   3.1699 4.2609 3.5366 3.4981]]
137                   3.16006         1.45554         0.83705         -0.10724          -0.03213          0.21632          1.47522          MLPRegressor(hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4177 2.4902 2.1878 2.239  2.3139 2.1951 2.4526 2.7307 2.5443 2.6996   2.4086 2.3147 2.7565 2.8398 2.2673 2.8084 2.4639 2.539  2.3213 2.4571   2.5441 2.4678 2.6341 2.6273 2.6991 2.2172 2.5987 2.5114 2.8393 2.7017   2.9279 2.9195 2.7159 2.6566 2.8275 3.2158 2.99   2.4189 2.6877 3.0463   2.0188 2.2947 3.052  3.0194 2.8577 2.8599 2.9588 2.8312 3.0784 3.0349   3.0648 3.2028 3.241  3.1217]]
138                   3.20101         1.48684         0.80633         -0.12159          -0.01516          0.21453          1.46312          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3368 1.9455 2.4493 2.6997 1.9789 2.4718 1.4862 2.7162 2.5861 2.5356   2.563  2.6361 2.2225 2.5566 2.6276 2.6596 2.7646 2.5319 2.7673 2.2331   2.5665 2.431  2.6298 2.4636 2.8362 2.689  2.6088 2.7134 2.6495 2.7071   2.7919 2.908  2.7587 2.2568 1.9717 2.7846 2.8616 2.801  1.8705 2.6047   1.4678 2.8965 2.8701 2.5808 2.6932 2.9699 3.1313 3.0159 2.8054 3.1254   2.7163 2.8744 3.1664 2.5851]]
139                   3.08634         1.44287         0.81355         -0.08141          -0.00502          0.2088          1.42738          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5553 2.3861 2.4037 2.4182 2.2358 2.0617 2.5456 2.7061 2.2781 2.4849   2.3389 2.5809 2.5456 2.9497 2.6981 2.9019 2.5172 3.0349 2.3599 2.4786   2.5163 2.5455 2.5309 2.5689 2.6956 2.7434 2.8404 2.8155 2.6055 2.7425   2.4609 2.7325 2.7009 2.8294 2.9702 2.1294 3.0234 2.937  2.3601 2.7126   2.5599 2.6656 2.6618 2.8121 2.6622 2.7835 3.1207 2.9541 3.0703 2.7517   3.3698 3.1209 2.7484 2.8952]]
140                   3.3696         1.50896         0.83124         -0.18066          -0.08571          0.22606          1.50878          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4216 2.6707 1.8199 2.4509 2.4254 2.0002 2.6208 2.6274 2.6355 2.4895   2.7124 2.6601 2.7485 2.278  2.2461 2.3781 2.7777 2.8079 2.4249 2.252   2.4243 2.4076 2.5902 2.526  2.7046 2.5498 2.8563 2.688  2.5579 2.7299   2.7725 2.7519 3.1988 2.7796 2.7514 2.846  2.8886 2.0553 2.661  2.624   1.7415 2.7525 2.764  2.9218 2.9327 2.7541 3.0192 2.9631 2.8964 2.5521   2.9693 2.9867 2.2271 2.9299]]
141                   2.11379         1.18696         0.65844         0.25936          0.25941          0.15331          1.04372          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[2.9992 3.5782 3.311  3.2668 3.4252 2.6105 2.0081 2.3753 3.1684 3.3646   2.1782 2.305  3.3111 3.2571 4.4812 3.0867 3.4077 3.0203 5.5133 3.1896   3.2035 3.0027 3.1766 3.2302 3.3724 3.0265 3.4304 3.4205 3.3562 3.4116   0.7663 1.0098 3.4892 0.9448 3.4623 3.4688 3.2114 3.5683 1.1662 3.3125   1.414  3.2696 3.5158 3.4148 3.2997 3.3929 3.0081 2.3956 4.9878 3.436   5.1711 3.3348 5.1265 3.3693]]
142                   3.37517         1.60456         1.1959         -0.18262          -0.04249          0.26675          1.45378          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.5229 3.7784 3.4174 3.6221 3.9698 3.6081 3.8519 3.9985 3.7556 3.723   3.6395 4.0518 3.4627 3.6592 3.8331 3.7559 3.8966 3.8953 3.9199 4.0894   3.8076 3.6011 3.7962 3.5712 3.7197 3.7905 3.8175 3.9316 3.775  3.923   3.6543 3.8002 4.0256 3.8859 3.7721 3.9168 3.8715 3.4073 3.775  3.5432   3.5072 3.4205 4.0103 3.8714 3.8199 4.0199 3.8176 3.8938 3.4099 3.5238   3.5375 3.9151 3.8235 4.0754]]
143                   0.83149         0.67041         0.42001         0.70866          0.70945          0.07152          0.48683          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.2154 3.5224 3.2477 3.1588 3.4158 2.8994 1.9826 2.4583 2.1822 2.2046   2.2893 2.3484 4.4415 4.7893 4.4595 3.062  4.3841 4.3934 5.5143 5.7868   5.6302 5.5123 5.5891 5.5645 2.9453 3.3823 2.7871 2.8193 3.4388 3.1863   0.5504 1.7915 0.9082 1.1685 0.7436 0.8569 1.4821 2.9391 2.9107 1.3651   1.3048 1.2136 3.0803 2.4429 2.4886 2.6516 2.4445 2.5541 4.9282 2.9458   5.145  5.214  5.116  5.0461]]
144                   0.57799         0.57845         0.34463         0.79748          0.79762          0.05236          0.46918          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.2234 3.6072 3.3093 3.2098 3.4815 3.1351 2.0301 2.3516 2.127  2.1311   2.1894 2.2738 4.4694 4.8535 4.332  4.154  4.4888 4.4537 5.636  5.8715   5.6981 5.6337 5.6704 5.5539 2.7932 3.1521 2.6177 2.74   2.5811 2.7605   0.7492 1.0475 0.7879 1.1024 0.7316 0.8768 1.5984 1.3712 1.2453 1.53   1.45   1.3644 2.7964 2.4641 2.4791 2.6326 2.3996 2.4815 4.8968 5.1277   5.0868 5.3365 5.219  5.1097]]
145                   2.3144         1.23101         0.90648         0.18906          0.19938          0.18952          1.0314          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[2.9803 3.1714 3.1931 3.1204 3.2007 2.97   3.2282 3.3851 3.5249 2.1175   3.1229 3.472  3.4    3.1951 3.5157 4.1443 3.2092 3.106  2.9372 3.067   3.     5.5257 3.1139 3.2393 3.3613 2.9934 3.3964 3.337  2.6634 3.4443   3.3017 3.6113 3.6651 3.6396 0.7637 0.9338 3.3406 3.0727 3.2423 3.2051   3.0409 1.2531 3.3726 3.3312 3.3186 3.3473 2.4069 2.5614 4.9569 5.1412   5.1448 5.1683 5.1607 3.4844]]
146                   3.53429         1.64034         1.19537         -0.23837          -0.09974          0.27395          1.59128          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.6232 3.9518 3.9206 3.7499 3.6594 3.6482 3.5331 4.1271 3.9037 3.7939   3.9615 3.8548 3.8726 3.9837 3.8373 3.6298 3.3378 3.3801 3.4804 3.5422   3.6724 3.9618 3.6577 3.6773 3.7272 4.1198 3.7145 3.6039 3.6812 3.8728   3.5575 3.3895 4.0355 3.863  3.7966 3.9193 3.7747 3.9636 3.9268 3.6409   3.9878 3.9847 3.925  3.4589 3.7334 3.6243 3.8926 3.9728 3.4581 3.4109   3.7287 3.9679 4.101  3.7067]]
147                   1.15419         0.78447         0.67171         0.59559          0.60168          0.11812          0.49418          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[2.9307 3.5321 3.2741 3.2961 3.2984 3.1583 2.0141 2.4407 2.118  2.5279   2.2269 2.2247 4.3768 4.1106 4.3658 4.0123 4.2811 4.428  5.5247 5.7641   2.9953 5.7426 5.6055 5.5795 2.8909 3.0938 2.6925 2.9688 2.6435 3.2092   0.8072 3.3331 0.8903 3.3008 0.7702 0.8446 3.1375 1.3402 1.2072 1.4348   2.9996 2.9742 2.7123 2.52   2.4839 2.5995 2.3325 2.4413 4.9443 5.4018   5.1548 5.1984 5.2447 5.0523]]
148                   0.57921         0.57667         0.33555         0.79705          0.79707          0.05213          0.43665          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2356 3.5999 3.3056 3.3226 3.4376 3.3596 1.9777 2.4722 2.1194 2.1235   2.0798 2.1975 4.4604 4.9281 4.4601 4.1993 4.4138 4.4291 5.6101 5.8758   5.6376 5.5643 5.6967 5.6425 2.5454 3.14   2.6553 2.8082 2.595  2.7764   0.7962 0.9698 0.7654 1.055  0.6404 0.9156 1.471  1.473  1.135  1.5242   1.3766 1.3661 2.5917 2.1836 2.4979 2.4972 2.4573 2.5062 4.8969 5.1347   5.2347 5.3018 5.2277 5.0764]]
149                   0.68616         0.592         0.3273         0.75958          0.76018          0.05331          0.42032          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3108 3.5886 3.5061 3.3779 3.4537 3.3427 1.7203 2.1425 2.004  1.9141   1.9591 2.0662 4.6417 4.9445 4.537  4.403  4.7022 4.6566 5.5786 5.8159   5.6055 3.0767 5.5884 5.5987 2.5903 2.9485 2.6351 2.5771 2.5129 2.7366   0.8001 0.9605 0.8499 1.009  0.7944 0.9163 1.563  1.3975 1.2242 1.5146   1.3895 1.3316 2.6477 2.3311 2.3902 2.5917 2.3469 2.4072 5.0344 5.1993   5.2156 5.2643 5.2191 5.1595]]
150                   2.97776         1.44296         0.86077         -0.04337          -0.03894          0.209          1.31827          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.444  2.9004 3.6623 3.8885 2.8743 3.4351 2.4906 3.9515 3.703  3.5638   2.8182 2.3699 3.5176 2.7909 2.451  2.762  3.3322 2.43   3.641  3.2259   3.1254 3.7914 3.6239 3.2541 3.3062 4.0698 3.5732 3.5395 2.7383 3.6546   3.5632 2.5404 2.358  2.789  2.1094 2.3696 3.6503 1.8163 3.1907 2.4957   2.2439 2.6391 2.6354 3.3132 3.6287 3.6937 2.7883 2.7301 2.5158 2.2896   3.5431 2.3669 2.166  2.8949]]
151                   1.03331         0.79736         0.46466         0.63794          0.63802          0.08304          0.74095          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.26   3.7375 2.8681 2.7824 3.3567 2.9172 3.2357 3.3966 2.2728 3.8902   3.1581 3.6638 3.4379 4.3241 3.4267 3.0738 3.3746 2.8761 4.9927 5.8003   5.63   5.2581 5.7865 5.3175 2.7769 2.4604 2.9998 2.7524 2.6233 2.3538   1.2296 1.2537 1.0815 1.2629 0.856  2.7587 1.5378 1.6973 1.2277 1.6866   1.5364 1.3763 1.8818 2.7014 3.0253 1.8406 2.2081 2.2357 5.0758 5.5258   4.9197 4.728  4.5398 4.532 ]]
152                   1.43603         0.94313         0.4736         0.49683          0.50173          0.10114          0.76778          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.941  3.3057 3.3086 2.99   3.5471 2.9402 3.5701 2.0362 1.9043 1.648   1.8877 2.2486 4.437  4.5114 2.7841 3.0891 3.4201 4.2009 5.1425 5.8597   3.2777 2.6635 5.6929 2.6509 2.3731 2.716  2.4417 2.8396 2.8238 2.7886   0.54   1.4355 0.5911 0.8676 2.8383 0.7742 1.8674 1.2619 0.9183 2.7943   2.6937 2.6844 2.5636 2.7362 2.0629 3.4079 2.3005 3.3362 4.6812 4.9959   5.5723 5.5242 5.1233 5.3424]]
153                   0.55386         0.56499         0.32496         0.80593          0.80594          0.04939          0.4583          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2797 3.6866 3.3671 3.412  3.4732 3.3535 1.7581 2.1581 1.9334 1.9154   1.9413 2.0728 4.6759 5.0495 4.4859 4.4188 4.5865 4.5072 5.5479 5.8228   5.5991 5.5355 5.6002 5.5615 2.5635 3.0074 2.6711 2.8027 2.5389 2.746   0.7478 0.8692 0.8399 1.0809 0.7981 0.9609 1.5252 1.3578 1.1863 1.4816   1.3436 1.3244 2.6492 2.3006 2.3793 2.511  2.3248 2.4022 5.1774 5.2245   5.2135 5.3596 5.2644 5.1027]]
154                   3.3757         1.53448         1.04275         -0.1828          -0.16912          0.25002          1.37337          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6855 2.7002 4.0102 2.7782 3.3992 3.6579 3.3864 3.7596 2.9701 4.0873   3.6685 4.3187 3.1111 3.7003 3.3981 4.0915 2.9626 3.9509 3.4252 2.3735   2.1906 3.9879 2.7576 3.8593 2.4885 3.7096 3.4765 3.4098 3.2974 3.531   2.8861 3.4184 2.7415 3.2055 3.8219 3.7382 3.6187 2.6719 2.3189 2.9675   2.1821 1.9532 5.396  3.1834 3.8925 3.2266 3.5613 3.5074 3.2408 1.9161   2.8881 3.7997 3.9358 3.789 ]]
155                   0.98107         0.74825         0.43741         0.65624          0.65802          0.08112          0.57932          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.5708 2.8664 2.8431 2.5512 2.8988 2.7443 3.3374 3.5579 3.1277 2.7711   2.8779 3.189  3.2677 2.9563 3.5261 2.9567 3.6692 3.2814 5.2293 5.9043   5.9121 5.4858 5.8296 5.401  2.5766 3.9641 1.7673 2.3996 2.504  2.9685   0.9433 1.3883 1.0803 1.3073 1.5559 1.2045 1.5158 1.1606 0.9092 1.6208   1.0311 1.3345 2.271  3.0416 2.3754 2.911  2.5037 2.6719 5.2183 4.7732   5.09   4.7069 4.8056 5.133 ]]
156                   0.77746         0.68885         0.3436         0.72759          0.73293          0.06301          0.5967          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3529 3.114  3.4516 2.8351 3.5767 3.6301 1.676  2.0061 1.8804 2.1947   2.0981 2.6868 4.188  4.3934 4.4745 3.7764 2.8417 2.7009 5.3833 5.4986   5.4191 5.1238 5.816  5.3725 2.2092 2.8876 2.8373 2.1811 2.1406 2.6233   0.6334 0.7848 3.0254 0.7426 0.5806 0.847  1.3904 1.233  1.2159 1.3172   2.7029 1.1721 2.2535 2.0924 1.9198 2.6532 3.34   2.5778 5.0785 4.7345   5.0776 5.0523 4.9906 4.8788]]
157                   2.16905         1.15663         0.74298         0.23999          0.24002          0.16076          0.89722          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0219 3.2903 2.8292 2.9547 3.3934 3.2879 3.3673 2.4137 2.056  3.4378   3.3192 2.2756 3.644  3.1804 4.3879 3.2604 3.2333 4.4237 2.9709 5.7851   3.2556 5.5347 3.1492 3.0892 3.3887 3.4549 3.4912 3.3988 3.4471 2.7314   3.4743 3.4853 0.7913 1.0449 0.8617 3.5777 3.4273 1.3999 3.308  3.4049   1.3362 1.3038 3.4142 3.4908 2.4323 2.5378 2.3379 3.2746 3.3937 3.4118   3.4564 5.2337 3.5202 3.4912]]
158                   3.53516         1.65064         1.2284         -0.23867          -0.07966          0.27681          1.58487          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.9429 3.7549 3.5249 3.881  3.5949 3.7621 4.0962 3.925  3.8363 3.7241   3.7962 3.7873 3.3335 3.9493 3.0166 3.5377 4.2401 3.9099 3.6387 3.7259   3.8207 3.7169 3.9103 3.92   3.8865 3.8723 3.8654 4.0032 4.0024 3.99   3.8834 3.9751 3.9729 3.9058 3.9542 3.7602 3.9213 3.8809 3.8284 4.0213   3.6357 3.4618 3.7896 3.7518 4.0303 3.9346 3.9845 3.6707 3.9212 3.5018   3.4216 3.8295 3.9674 3.742 ]]
159                   0.59455         0.6085         0.33917         0.79168          0.79173          0.05074          0.51552          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1121 3.7012 3.1445 3.2681 3.3232 3.2266 2.0234 2.3352 2.3724 2.2302   3.3225 2.2528 3.7081 4.688  3.8618 3.9338 4.3977 4.4292 5.554  5.6157   5.5773 5.5018 5.5822 5.5022 2.5685 3.0422 2.9043 2.9267 3.1578 3.2748   0.8662 0.9607 0.7725 0.9137 0.898  1.4047 1.3238 1.3116 1.1942 1.4018   1.3323 1.247  2.4486 2.3794 2.5351 2.6315 2.4265 3.0415 4.9852 4.8404   5.1372 5.0963 5.2081 5.0917]]
160                   0.54629         0.5629         0.32158         0.80859          0.8086          0.04762          0.4166          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2359 3.55   3.3178 3.1994 3.3502 3.3433 2.0018 2.3026 2.0936 2.0452   2.1462 2.3254 4.4495 4.9412 4.5182 4.1844 4.476  4.4655 5.5817 5.8631   5.6574 5.5851 5.5621 5.6846 2.538  3.0125 2.6662 2.8081 2.6635 2.7952   0.775  0.9058 0.789  0.9754 0.7868 0.9359 1.4641 1.4982 1.2365 1.3224   1.4803 1.3986 2.7312 2.4171 2.4768 2.6381 2.4293 2.3714 4.999  5.1407   5.1136 5.1755 5.1794 5.0123]]
161                   2.33193         1.22179         0.98007         0.18292          0.24278          0.20601          0.91147          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0159 2.9374 3.1578 3.0488 3.0691 2.9461 3.1923 3.2475 3.2787 3.2109   3.3776 2.259  3.1333 3.2743 4.3981 3.1612 4.4132 3.1899 5.5384 3.0474   5.5736 5.5399 5.5891 3.0209 2.5969 3.0372 3.419  3.3684 3.4258 3.2766   3.3776 3.5035 3.5212 3.6016 3.5495 3.2978 3.3466 2.9812 3.1798 3.3889   3.4187 3.2791 3.469  3.4959 3.4409 3.4822 3.3593 2.3859 3.2743 5.1418   5.1224 5.2431 3.77   3.2783]]
162                   3.31633         1.59102         1.18984         -0.162          -0.02216          0.26337          1.45298          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.7942 4.0246 3.2663 3.7548 3.9849 3.6191 3.7139 3.5317 3.9841 3.9748   4.0052 3.9273 3.4417 3.8264 3.7735 4.0185 3.6872 3.9306 3.7452 3.3194   3.9064 3.7455 3.7656 3.7642 3.8719 3.9059 3.8518 3.6203 3.7327 3.9075   3.6596 3.997  3.5222 3.8853 3.8073 3.5446 3.6955 4.1831 3.6906 3.4263   3.8689 4.1724 3.9396 3.7976 3.7503 2.8277 3.6473 3.6482 3.7905 3.6921   3.4513 4.2026 3.8548 3.9973]]
163                   1.00904         0.73152         0.40416         0.64645          0.65244          0.08036          0.57395          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.255  3.5484 3.3043 3.0854 3.361  2.9693 2.0008 2.4574 2.2097 2.1446   2.6121 2.3552 4.3156 4.1252 4.2792 3.8552 4.3549 4.388  5.3035 3.0293   5.587  5.7156 5.6604 3.0138 2.7042 3.0672 2.6908 2.946  2.5375 2.8304   0.7285 0.9881 0.7667 0.9754 0.3686 0.9409 3.0501 1.3507 1.1079 1.398   1.3398 1.4067 2.7522 2.4078 2.5183 3.0384 2.6413 3.0079 2.7653 5.103   4.7605 5.1844 5.1219 4.8424]]
164                   0.56674         0.56981         0.33529         0.80142          0.80154          0.05195          0.39385          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2813 3.5667 3.2917 3.3307 3.3854 3.3055 1.9791 2.4906 2.149  2.2115   2.2096 2.1926 4.4973 4.7307 4.3987 4.1812 4.4855 4.4636 5.5977 5.858   5.6841 5.6231 5.6893 5.674  2.5125 3.1905 2.8479 2.8962 2.6633 2.7875   0.7483 1.0172 0.7766 0.9634 0.6775 0.9122 1.5538 1.4667 1.1913 1.4863   1.3256 1.3844 2.7712 2.3072 2.4856 2.6053 2.4203 2.3328 4.9925 5.0434   5.2301 5.2967 5.1769 4.9805]]
165                   0.73279         0.61578         0.33761         0.74324          0.74401          0.05653          0.46713          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3102 3.6237 3.4814 3.3306 3.4865 3.3885 1.76   2.1364 1.8336 1.9008   1.8999 2.0122 4.6105 5.0688 4.5561 4.2437 4.5126 4.6475 5.5404 5.8181   5.5975 3.1172 5.6215 5.5912 2.5502 3.2812 2.6744 2.808  2.5282 2.7153   0.6999 0.9074 0.7925 1.0479 0.7998 0.9801 1.5363 1.4052 1.1737 1.4534   1.4086 1.3789 2.6026 2.3368 2.3835 2.5224 2.3354 2.388  5.0014 5.277   5.1733 5.274  5.157  5.1241]]
166                   3.20037         1.5044         0.94227         -0.12137          -0.11046          0.23065          1.53393          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.814  3.6984 3.5428 3.5677 2.8367 3.2809 3.8202 3.2477 3.1394 3.2592   2.5541 3.3375 3.794  3.014  3.1984 3.0521 3.9593 3.1514 2.2377 3.9873   3.2272 2.6268 3.5639 3.9674 4.0091 4.577  2.315  4.0056 3.4711 2.005   3.2301 2.5679 4.3752 2.4764 3.603  2.3845 2.9209 3.779  3.6916 4.2964   3.2033 2.1899 3.5648 2.6139 3.7493 3.9135 3.2088 3.2325 3.4257 3.9161   2.3621 2.9233 3.4474 3.5245]]
167                   0.88058         0.732         0.41317         0.69146          0.69173          0.0718          0.59733          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.9607 3.7944 2.9746 3.0897 2.8753 2.9805 3.0503 3.4748 2.9847 3.5393   2.8549 3.1574 4.4439 3.5312 2.6044 3.342  3.1098 4.0299 5.2263 5.6299   5.4791 4.6321 5.2067 5.4745 2.182  1.9761 2.4415 2.8238 2.4692 2.6824   1.6182 1.7616 0.9631 0.9139 0.9367 0.8306 1.7498 1.4308 1.0136 1.2916   1.4924 1.2396 2.6437 3.6778 2.352  2.6905 2.7083 2.4402 5.3859 5.3275   5.2539 4.8937 4.5848 5.5991]]
168                   1.55214         0.95195         0.64575         0.45615          0.45625          0.1305          0.7647          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.7948 3.0316 3.0886 2.8744 2.9504 2.9004 3.0293 2.4551 3.0328 3.6348   1.8396 2.9969 4.1019 4.3629 3.4402 2.4501 4.4008 4.1333 5.2935 5.5297   5.3802 5.4715 2.7157 3.2866 2.5005 2.9334 3.1734 3.5443 2.8742 2.0331   0.5956 3.6572 1.3684 1.2172 2.8951 2.9678 1.3908 1.2147 0.871  3.3398   1.6353 1.5343 1.989  2.1544 3.4298 2.9159 2.2044 2.2415 4.9426 5.076   3.6981 4.9707 4.8933 4.9586]]
169                   0.52948         0.54295         0.31053         0.81448          0.8145          0.0485          0.42933          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3207 3.5592 3.3997 3.3892 3.4749 3.3076 1.8431 2.1156 1.9582 1.8756   1.9672 2.0091 4.7019 5.0115 4.6825 4.4012 4.7316 4.622  5.5563 5.8077   5.6123 5.5422 5.6089 5.6019 2.7102 2.9783 2.6369 2.7871 2.533  2.7288   0.8012 0.9814 0.5883 0.7483 0.5845 0.983  1.519  1.4175 1.2012 1.5042   1.3984 1.319  2.6283 2.3286 2.3857 2.4642 3.1351 2.3781 4.9735 5.2176   5.19   5.2519 5.2006 5.1287]]
170                   3.64491         1.67332         1.05288         -0.27713          -0.26618          0.2639          1.63803          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.9654 3.3659 3.0541 2.7248 2.3074 3.5835 3.8871 2.9999 3.9609 3.8894   3.5911 3.732  2.5168 4.0093 4.2907 3.4734 2.8725 2.3125 3.4743 3.9062   3.8687 2.8648 3.2524 2.6299 2.6868 2.3907 1.7062 3.8853 3.663  3.2958   3.2693 3.5865 2.8231 2.0617 3.455  3.9537 3.8286 3.6728 3.6917 3.3297   3.7456 4.3932 3.5425 2.7224 4.1464 3.6485 2.526  3.7959 2.0429 4.2325   3.3293 2.8554 2.187  3.8767]]
171                   0.99496         0.79189         0.5057         0.65138          0.65158          0.08882          0.66212          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2024 2.7044 2.7815 2.9278 3.2013 3.2158 3.2504 3.6849 2.9505 2.9037   2.926  2.7804 3.5301 3.6107 3.7049 3.1749 3.2112 3.5648 5.6625 5.9514   5.4954 5.5517 4.4875 5.419  2.5471 3.338  3.0674 2.658  2.2145 2.7556   1.0419 1.3881 0.8695 2.3951 0.9938 1.5682 1.2894 1.7981 0.9017 1.3378   0.7024 1.1008 2.4484 3.6933 2.7785 3.006  2.7093 2.3983 4.4858 5.1925   4.8748 5.3862 4.6397 4.5599]]
172                   1.44737         0.90907         0.5444         0.49286          0.49578          0.10471          0.7302          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.779  3.836  2.8209 2.8736 3.2003 3.0025 3.6297 2.0789 3.1024 1.7964   2.9476 1.6964 2.8487 4.9792 3.4112 2.7422 4.3715 4.0214 5.5537 5.5832   5.3338 2.6194 5.2473 5.4915 2.6907 2.8389 2.9174 2.213  2.8527 3.5418   0.5451 3.6088 1.1715 0.9063 0.7474 1.226  1.4037 1.2067 2.5704 1.4216   2.7829 2.6302 2.4478 2.101  2.291  2.675  2.6788 1.9433 5.1269 5.4032   2.5976 5.5665 5.0039 3.328 ]]
173                   1.87566         1.14014         0.54215         0.34279          0.34361          0.11989          0.93127          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2126 3.5811 3.1408 3.0285 2.8508 2.9257 1.9479 2.3378 3.1119 3.2355   2.2161 3.2468 4.4302 4.8462 3.3892 4.0947 3.2664 4.3727 5.5181 3.3355   3.0555 5.5286 3.1742 3.1551 3.3767 3.4368 3.3924 3.3881 3.4118 3.3095   3.6556 0.9963 3.5324 0.9173 0.8548 0.865  1.5353 3.4619 3.2937 1.3553   3.2523 3.2758 3.2611 2.4426 2.5529 2.5315 2.4041 3.4037 3.3645 3.2826   3.4262 3.4553 2.8393 3.4547]]
174                   3.49974         1.61819         1.20129         -0.22626          -0.08855          0.27332          1.48597          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.7314 3.8781 3.5023 3.8332 3.7952 3.9554 3.7    3.8867 3.7131 3.7322   4.0923 3.8075 3.8799 3.5339 3.684  3.4884 3.615  3.8738 3.7365 3.6925   3.8198 3.6606 3.7127 3.4544 3.5712 3.8749 3.8889 3.7075 3.6741 3.7192   3.7866 3.7725 3.911  3.8413 4.006  3.7753 3.6558 3.9035 3.7605 4.0292   4.0103 3.7403 3.838  3.8731 3.6347 3.9541 3.2002 3.8958 3.6198 3.7209   3.407  4.2485 3.8793 3.5093]]
175                   0.99059         0.70851         0.39512         0.65291          0.65435          0.07549          0.4811          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.9526 3.5286 3.2397 3.2248 3.3822 3.0785 3.3186 2.4077 2.2559 2.0987   3.3362 2.3234 4.4053 4.8022 4.5892 4.1313 4.4038 4.3826 5.5174 3.0393   5.3345 5.511  5.5905 2.9745 3.1802 2.9964 2.8008 2.8594 2.6283 2.8231   0.7516 1.1112 0.6872 0.862  0.7508 0.9854 3.0022 1.3282 1.1528 1.3248   1.3736 1.2588 2.7565 2.5204 2.4712 2.6033 2.4546 2.5473 2.8381 5.1192   5.2228 5.2213 5.3711 5.0383]]
176                   0.55261         0.56507         0.33227         0.80637          0.80642          0.04916          0.40062          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1496 3.5091 3.2759 3.2828 3.3664 3.3482 1.9741 2.4675 2.1333 2.057   2.2177 2.2995 4.4399 4.8445 4.4859 4.1546 4.491  4.4924 5.5973 5.897   5.6833 5.4654 5.6297 5.6467 2.7328 2.9603 2.7237 2.8808 2.5813 2.6393   0.8881 0.9905 0.8034 1.0254 0.8206 1.0652 1.37   1.4487 1.217  1.5054   1.4696 1.3737 2.7669 2.3064 2.2835 2.6068 2.4108 2.5266 5.0042 5.082   5.1753 5.0354 5.2397 5.1248]]
177                   2.71335         1.35225         0.98394         0.04928          0.05738          0.2187          1.26977          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9955 3.3151 3.3041 3.0663 3.1697 3.1249 2.0918 3.2242 2.2105 3.2637   3.1859 3.3025 3.0532 3.391  3.1069 4.1167 4.478  4.3778 3.0014 3.0852   3.418  3.1826 3.115  5.5606 3.3657 3.4901 2.7215 3.3774 3.4102 2.7652   3.4223 3.4602 3.4298 3.3445 3.5905 3.5736 3.547  3.0715 1.1552 3.5513   1.3622 3.0203 3.4316 3.4494 3.3023 2.5544 3.3523 3.4145 3.3131 3.3968   3.4887 5.2212 3.489  3.3315]]
178                   3.62276         1.66204         1.23256         -0.26937          -0.11392          0.28061          1.51482          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.8799 3.6433 3.7826 3.9432 3.5673 3.7975 3.8246 3.8452 3.6235 3.6766   3.9009 3.8425 3.7159 3.8609 3.5668 3.1912 3.7029 3.7652 3.5432 3.6752   3.6918 3.7444 3.837  4.0515 3.7519 4.0081 3.9763 3.7478 3.8175 3.9655   4.0994 4.0205 3.8432 3.8848 3.8936 3.7278 3.7296 3.6907 3.9954 3.9587   3.9616 4.2088 4.084  3.5098 3.8861 3.7946 4.0569 3.938  3.685  3.7864   3.3554 3.8535 3.7098 3.6866]]
179                   0.7894         0.68221         0.37046         0.72341          0.72433          0.06451          0.51212          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.196  3.4796 3.284  3.2431 3.2566 3.2063 1.9599 2.4888 2.1497 2.1009   2.5196 2.1713 4.3918 4.8343 4.4176 3.7013 3.1825 3.155  5.5249 5.7826   5.5587 5.5241 5.5261 5.5844 2.7141 3.0626 2.7401 2.6641 3.1717 3.2046   0.7209 1.0961 0.515  0.9496 0.778  0.9975 1.4071 1.5371 1.04   1.4449   1.2404 2.97   2.923  2.2284 2.4839 2.557  2.9908 2.6175 5.1814 5.1275   4.985  5.2263 2.8947 4.8524]]
180                   0.53478         0.5546         0.32713         0.81262          0.81263          0.04797          0.43023          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2662 3.471  3.2518 3.3416 3.4323 3.2055 1.9673 2.3115 2.1604 2.1025   2.0952 2.1785 4.4638 4.8895 4.4851 4.1088 4.4874 4.4813 5.6165 5.6607   5.6624 5.6319 5.6727 5.6961 2.6262 3.0058 2.7269 2.7615 2.5224 2.7925   0.864  1.0803 0.8743 1.0186 0.7582 0.9039 1.5134 1.3906 1.2537 1.4992   1.4014 1.3778 2.5538 2.4406 2.3336 2.6456 2.2945 2.5211 5.0409 5.1873   5.175  5.2574 5.2026 4.9812]]
181                   0.77055         0.64774         0.47663         0.73001          0.73206          0.077          0.47337          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2907 3.6495 3.3144 3.3906 3.5493 3.3692 1.7502 2.1513 1.9106 1.9495   2.0886 2.064  4.4846 5.1339 4.5214 4.3297 4.4943 4.6399 5.5139 5.8009   5.595  5.5313 5.6073 5.6037 2.5839 2.96   2.6795 2.7243 2.5434 2.9987   0.8553 0.98   0.7573 3.241  0.8022 0.9306 1.4845 3.0944 1.1809 1.5061   1.4957 1.3012 2.6242 2.2759 2.456  2.4894 2.3152 2.4042 5.0114 5.2187   5.2149 5.2823 5.2037 5.1119]]
182                   3.84668         1.61328         1.14784         -0.34783          -0.33833          0.28034          1.55447          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6227 2.5411 2.3308 3.5236 3.1998 3.6687 2.9949 4.3132 3.9934 4.7062   4.0867 2.3    3.2568 4.322  3.1924 2.306  3.709  3.0355 3.7253 3.9984   1.6636 3.5223 3.2754 3.1351 2.5117 3.5031 3.0941 2.5183 3.4334 3.6955   1.8525 4.3714 3.5242 3.5736 2.4728 3.7562 4.7614 3.9219 3.6222 2.8443   2.6588 3.3128 3.5484 2.5183 2.7465 3.8874 2.3383 3.8745 3.616  2.2964   3.4362 3.7899 2.5337 3.7882]]
183                   1.15739         0.84263         0.52243         0.59446          0.5945          0.0971          0.65337          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1064 2.9993 3.0259 2.3603 3.3565 2.2623 3.3034 3.6929 3.3116 2.0861   2.8803 2.6361 3.1581 3.3516 3.1577 3.574  3.4208 3.6091 5.6885 6.0345   5.6799 5.9003 5.7575 5.4683 2.991  3.5703 2.5161 2.9065 2.7648 3.0888   2.4377 2.0777 2.638  1.6033 1.441  1.1939 1.4964 1.2454 1.0052 1.5383   1.4658 1.0483 2.6709 2.0491 3.1128 2.2796 2.2088 3.0093 2.9826 4.843   4.4619 5.1943 5.2964 4.9221]]
184                   1.44225         0.9742         0.5251         0.49465          0.51094          0.11322          0.75832          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2039 3.5381 2.9123 2.9044 3.8395 3.1609 2.8573 3.0003 1.9113 1.6239   2.9684 2.599  3.976  4.2584 3.7701 3.8154 4.2444 4.1004 5.3567 2.7693   5.3776 5.0678 2.718  2.6576 2.0056 2.9012 2.3899 2.8654 2.3453 2.1982   0.5526 1.5543 0.611  0.8419 0.6491 0.9113 2.8006 2.6665 1.088  3.325   1.4489 1.2254 2.6583 3.4147 2.2781 2.251  2.6412 2.3551 5.1293 5.3698   5.6033 3.3721 2.4945 5.1132]]
185                   0.57187         0.5767         0.31883         0.79962          0.79971          0.04874          0.47035          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3091 3.6471 3.3855 3.3818 3.4983 3.3672 1.8415 2.127  1.9701 1.852   3.1175 2.1256 4.5441 5.0975 4.688  4.3093 4.6584 4.4881 5.5304 5.8071   5.6015 5.5224 5.5727 5.5806 2.6066 2.9367 2.6665 2.745  2.5335 2.6989   0.8364 0.7841 0.7978 0.868  0.8733 0.987  1.5551 1.4209 1.1633 1.4711   1.406  1.1425 2.6206 2.3474 2.3933 2.576  2.3035 2.4029 5.0201 5.188   5.2068 5.268  5.1514 5.1812]]
186                   3.05396         1.45719         0.96374         -0.07007          -0.06832          0.22035          1.33613          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.0914 2.4486 3.7796 4.0164 2.3444 3.4111 2.6016 3.655  4.08   2.2114   4.4313 2.8931 3.5066 2.9773 3.8118 3.5619 3.2539 3.6239 3.4831 3.3799   3.5803 3.1271 2.3468 3.3181 3.8721 2.5188 2.6393 4.2159 3.2332 4.1115   3.8169 3.3522 4.2682 3.8489 2.5355 2.4179 2.6901 2.6033 3.1663 2.0211   3.0636 3.0003 2.0253 2.547  4.0053 3.5817 3.0456 2.6441 2.5662 2.6306   3.6118 5.1453 3.1831 2.8567]]
187                   1.07007         0.78994         0.46835         0.62506          0.62609          0.08952          0.63447          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.8376 2.8911 2.8242 2.7692 2.9259 2.6365 3.4395 3.4358 3.3211 3.593   3.3901 2.7447 3.0639 3.3148 3.2778 2.5003 3.347  3.3683 5.3792 5.4081   5.4194 5.0154 5.7384 5.6034 2.2285 3.1728 3.0847 2.7705 3.0778 2.6221   1.2874 0.8738 2.4664 2.3586 0.4329 0.7418 1.8011 1.4484 1.3237 1.1401   0.7336 1.3231 2.6128 3.1867 3.133  2.2232 2.9425 2.2677 4.7586 4.6066   4.7422 5.1787 5.0649 4.5627]]
188                   1.37502         0.86679         0.40092         0.51821          0.52915          0.08742          0.63167          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.8995 2.8765 3.7947 3.042  2.9269 3.028  1.5751 2.1764 1.7413 2.3761   2.3312 1.8671 4.6388 5.0258 3.5373 3.1978 4.3756 2.6647 5.2985 5.7312   5.0829 2.6631 2.6591 5.2757 2.4919 2.6557 2.0538 3.2008 2.8599 3.4284   2.9094 0.9039 0.6306 0.7383 3.6023 0.8639 1.7179 1.1763 2.5229 1.8882   1.5983 1.3885 2.774  2.405  2.5408 2.4271 2.6191 2.2902 5.1838 5.0252   2.5213 5.1298 5.0677 4.392 ]]
189                   0.55017         0.56548         0.32808         0.80723          0.80723          0.04916          0.46663          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.6002 3.3333 3.3331 3.4665 3.3329 1.8669 2.267  2.0005 2.0004   2.0669 2.1338 4.5332 4.9334 4.5336 4.2663 4.5332 4.533  5.5335 5.8   5.6001 5.5329 5.5999 5.6    2.6001 3.0001 2.6666 2.8001 2.5333 2.7334   0.8    1.0001 0.8    0.9994 0.7996 0.9335 1.5332 1.4004 1.2005 1.4671   1.4    1.3331 2.6665 2.3333 2.3999 2.5332 2.3329 2.4004 5.0001 5.1999   5.2    5.2668 5.1998 5.1331]]
190                   0.55014         0.56543         0.32807         0.80724          0.80724          0.04916          0.4665          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.5999 3.3332 3.3332 3.4665 3.3326 1.8666 2.2676 2.0002 2.0005   2.0664 2.1325 4.5335 4.9333 4.5332 4.2663 4.5332 4.5331 5.5335 5.8   5.6002 5.533  5.5995 5.6    2.6001 2.9998 2.6664 2.8    2.5335 2.7333   0.8003 1.0003 0.8002 1.     0.8007 0.9327 1.5334 1.4    1.2001 1.4666   1.4    1.3328 2.6665 2.3332 2.3998 2.5332 2.3333 2.3998 5.     5.2001   5.1994 5.2669 5.1998 5.1333]]
191                   0.55015         0.56547         0.32809         0.80723          0.80723          0.04916          0.46665          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6002 3.3332 3.3332 3.4666 3.3335 1.8667 2.2665 2.0005 2.0003   2.0669 2.1334 4.5332 4.9334 4.5332 4.2664 4.5332 4.533  5.5333 5.7999   5.6001 5.5332 5.5993 5.6002 2.6    2.9998 2.6661 2.8002 2.5337 2.7334   0.8003 1.0002 0.8    0.9999 0.7995 0.9334 1.5332 1.4001 1.1999 1.4665   1.4    1.3333 2.6668 2.333  2.4003 2.5336 2.3334 2.4001 4.9998 5.2001   5.1998 5.2666 5.1999 5.1331]]
192                   0.55004         0.56539         0.32806         0.80727          0.80727          0.04915          0.46655          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3335 3.4667 3.3332 1.8673 2.2674 2.0005 1.9999   2.0667 2.1338 4.5331 4.9329 4.5333 4.2667 4.5334 4.5328 5.5334 5.8   5.6    5.5336 5.6001 5.5998 2.6    3.     2.6668 2.8    2.5335 2.7334   0.8005 0.9999 0.8007 1.0002 0.8003 0.9334 1.5332 1.4    1.2002 1.4665   1.3998 1.3334 2.6666 2.3334 2.4    2.533  2.3333 2.3999 4.9998 5.1999   5.2002 5.2665 5.1998 5.133 ]]
193                   0.55014         0.56542         0.32801         0.80724          0.80724          0.04915          0.46662          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6002 3.3332 3.3331 3.4666 3.3332 1.8669 2.2671 2.001  2.0003   2.0673 2.1333 4.5332 4.9332 4.5334 4.2663 4.5331 4.5332 5.5333 5.8   5.5998 5.5331 5.6007 5.6    2.6001 3.     2.6667 2.7998 2.5331 2.7334   0.8003 0.9995 0.7996 0.999  0.8004 0.9335 1.5334 1.4    1.199  1.4668   1.4001 1.3335 2.6666 2.3332 2.4003 2.5333 2.3333 2.4001 5.     5.1999   5.1997 5.266  5.2001 5.133 ]]
194                   0.55009         0.56543         0.32808         0.80726          0.80726          0.04916          0.46648          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2669 3.6    3.3332 3.3335 3.4669 3.3331 1.8668 2.2665 2.0001 2.0007   2.067  2.1336 4.5327 4.9329 4.5332 4.2664 4.5333 4.5333 5.5336 5.7998   5.5999 5.5335 5.6    5.6006 2.6002 3.     2.6667 2.7998 2.5332 2.7335   0.7996 1.0002 0.7998 0.9997 0.8001 0.9335 1.5333 1.4    1.2002 1.4665   1.3999 1.3333 2.6667 2.3333 2.3999 2.5334 2.3333 2.4003 4.9997 5.1998   5.2001 5.2667 5.2002 5.1329]]
195                   0.55005         0.56539         0.32802         0.80727          0.80727          0.04914          0.46653          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2671 3.6001 3.333  3.3331 3.4666 3.3336 1.8671 2.2672 2.0002 2.0004   2.0667 2.1333 4.5329 4.9335 4.5331 4.2663 4.5333 4.5336 5.5337 5.8   5.5999 5.5334 5.6001 5.5997 2.5995 2.9991 2.6667 2.7999 2.5336 2.7334   0.8002 0.9994 0.7994 1.0002 0.8011 0.9332 1.5332 1.4    1.2    1.4665   1.4    1.3335 2.6664 2.3334 2.4004 2.5334 2.3336 2.4002 4.9999 5.2001   5.2001 5.2671 5.2002 5.1333]]
196                   0.55015         0.56549         0.32812         0.80724          0.80724          0.04917          0.46653          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5997 3.333  3.3332 3.4663 3.3328 1.8669 2.2673 2.0001 2.0002   2.0668 2.1336 4.5331 4.933  4.5327 4.2663 4.5334 4.5328 5.5333 5.7999   5.6004 5.5333 5.6    5.6    2.6001 2.9997 2.6666 2.7997 2.5334 2.7333   0.7993 1.     0.7996 0.9999 0.7996 0.9338 1.5334 1.4001 1.1998 1.4668   1.4002 1.3333 2.6666 2.3334 2.3998 2.5332 2.3333 2.4    4.9999 5.2001   5.2    5.2664 5.1993 5.1331]]
197                   0.55011         0.56544         0.32807         0.80725          0.80725          0.04915          0.4665          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3334 3.3337 3.4664 3.3331 1.867  2.2673 1.9998 2.0003   2.0668 2.1333 4.5332 4.9329 4.5332 4.2667 4.5331 4.5329 5.5333 5.8001   5.6    5.5331 5.6002 5.6001 2.5999 3.0003 2.6658 2.7994 2.5333 2.7336   0.8001 0.9996 0.8002 1.     0.8001 0.9334 1.5335 1.3998 1.2002 1.4666   1.3998 1.3332 2.6664 2.3333 2.3995 2.5332 2.3335 2.3999 4.9995 5.1999   5.1996 5.2667 5.2    5.1334]]
198                   0.55008         0.5654         0.32805         0.80726          0.80726          0.04915          0.46672          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5996 3.3329 3.3332 3.4668 3.3334 1.8676 2.2669 2.0011 2.0001   2.0664 2.1334 4.5332 4.9332 4.5335 4.2661 4.5336 4.5331 5.5333 5.7998   5.6    5.5332 5.5999 5.5999 2.6    3.0002 2.6665 2.8    2.5334 2.7337   0.7998 0.9998 0.8004 1.0001 0.8003 0.9332 1.5332 1.3995 1.2002 1.4669   1.4    1.3334 2.6666 2.3333 2.4001 2.5333 2.3333 2.4    5.     5.1998   5.2003 5.2666 5.2003 5.1334]]
199                   0.55006         0.56546         0.32813         0.80726          0.80726          0.04916          0.46675          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.5998 3.3329 3.3335 3.4667 3.3334 1.8671 2.2666 2.0004 2.0001   2.0665 2.1335 4.5327 4.9331 4.5334 4.2668 4.5329 4.5333 5.5331 5.8001   5.5986 5.5336 5.5999 5.5998 2.6002 2.9996 2.6667 2.8002 2.5334 2.733   0.7999 1.0009 0.8    1.0002 0.8006 0.9334 1.5332 1.4001 1.1997 1.4668   1.4005 1.3334 2.6666 2.3334 2.4001 2.5334 2.3333 2.4    5.0001 5.1998   5.1999 5.2667 5.2    5.1333]]
200                   0.55004         0.56542         0.32808         0.80727          0.80727          0.04915          0.46657          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.5996 3.3329 3.3333 3.4671 3.3333 1.8666 2.2664 2.0004 2.0008   2.0669 2.1332 4.5332 4.9328 4.5331 4.2666 4.5329 4.5332 5.5331 5.7999   5.6003 5.5334 5.6    5.5997 2.6002 3.     2.6668 2.8001 2.5335 2.7335   0.8007 1.0003 0.7997 1.     0.8003 0.9338 1.5333 1.4    1.1998 1.4659   1.4001 1.3334 2.6665 2.333  2.4    2.5334 2.3335 2.3999 4.9999 5.2001   5.1999 5.2667 5.2    5.1335]]
201                   0.55013         0.56544         0.32807         0.80724          0.80724          0.04915          0.4666          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2662 3.5999 3.3331 3.3329 3.4666 3.3329 1.8672 2.267  2.     2.0007   2.0665 2.1341 4.5334 4.9332 4.5333 4.2663 4.5333 4.5334 5.5334 5.7994   5.6001 5.5335 5.6    5.6    2.5999 2.9999 2.6667 2.8002 2.5333 2.7332   0.8    0.9995 0.8001 1.0004 0.8007 0.9334 1.533  1.3999 1.2001 1.4669   1.4001 1.3332 2.6668 2.3333 2.4    2.5335 2.3329 2.4002 4.9998 5.2002   5.1997 5.267  5.1998 5.1332]]
202                   0.55006         0.56546         0.32809         0.80727          0.80727          0.04915          0.4665          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3329 3.3334 3.467  3.3333 1.8675 2.2673 2.0003 1.9999   2.067  2.1337 4.533  4.9332 4.5334 4.2664 4.5327 4.5328 5.5334 5.8001   5.6003 5.5339 5.6003 5.5997 2.5998 2.9991 2.6659 2.8    2.5335 2.7333   0.7997 1.0003 0.8001 0.9999 0.8002 0.9333 1.5331 1.4002 1.2    1.4664   1.4001 1.3334 2.6662 2.3337 2.3995 2.5332 2.3333 2.3999 4.9999 5.2001   5.1999 5.2666 5.1996 5.1328]]
203                   0.55023         0.56551         0.32814         0.80721          0.80721          0.04917          0.46665          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3334 3.3333 3.4667 3.3329 1.8669 2.2677 1.9997 2.0002   2.0667 2.1337 4.533  4.9331 4.5336 4.2663 4.5332 4.5332 5.5334 5.8001   5.6    5.5333 5.5997 5.6    2.6    3.0002 2.6665 2.8002 2.533  2.7333   0.7999 1.0001 0.8001 1.0003 0.7999 0.9334 1.5332 1.4001 1.2001 1.4666   1.4003 1.3335 2.6667 2.3334 2.4001 2.5337 2.3334 2.3999 4.9998 5.1998   5.2001 5.2666 5.1999 5.1333]]
204                   0.55024         0.56549         0.32812         0.8072          0.8072          0.04917          0.46667          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2663 3.5998 3.3332 3.3334 3.4664 3.3329 1.8664 2.2675 1.9999 2.0001   2.0665 2.1334 4.533  4.9332 4.533  4.2662 4.5327 4.5336 5.5332 5.8   5.6    5.5331 5.5999 5.6    2.6001 3.0001 2.6665 2.8005 2.5333 2.7332   0.7999 1.     0.8001 1.0002 0.8    0.9334 1.5336 1.4    1.1996 1.4666   1.3999 1.3334 2.6667 2.3329 2.4003 2.5333 2.3338 2.4001 5.     5.1999   5.2    5.2663 5.1998 5.1334]]
205                   0.55012         0.56543         0.32812         0.80725          0.80725          0.04916          0.4665          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3329 3.3337 3.4666 3.3328 1.8668 2.2666 2.0001 2.0001   2.0665 2.1339 4.5326 4.9332 4.5328 4.2666 4.5333 4.5331 5.5338 5.7999   5.6005 5.5336 5.5998 5.6001 2.6001 2.9999 2.6667 2.8001 2.5334 2.7328   0.8005 1.0005 0.8    1.0004 0.8002 0.9333 1.5334 1.4001 1.2001 1.4668   1.4001 1.3334 2.6668 2.3333 2.4002 2.5333 2.3334 2.4005 4.9995 5.1999   5.1999 5.2666 5.1997 5.1333]]
206                   0.55005         0.56542         0.32807         0.80727          0.80727          0.04915          0.46668          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.6001 3.3334 3.333  3.4666 3.3333 1.8671 2.2667 2.0002 2.0005   2.0674 2.1336 4.5333 4.9331 4.5333 4.2667 4.5333 4.5333 5.5333 5.8002   5.5999 5.5333 5.6001 5.6003 2.6    2.9991 2.6668 2.8    2.5336 2.7335   0.8006 0.9997 0.8003 1.0002 0.8    0.9338 1.5332 1.4    1.1994 1.4667   1.4    1.333  2.6667 2.3333 2.4001 2.5333 2.3333 2.4001 5.     5.2   5.1998 5.2669 5.2    5.1335]]
207                   0.55008         0.56546         0.32809         0.80726          0.80726          0.04915          0.46663          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.6    3.3332 3.3315 3.4667 3.3334 1.8675 2.2667 2.0003 2.0002   2.0672 2.1332 4.5334 4.9332 4.5333 4.2667 4.5331 4.5332 5.5334 5.8001   5.6005 5.5332 5.5999 5.6    2.6006 3.0001 2.6667 2.8    2.5336 2.7335   0.8007 1.     0.8002 1.     0.8    0.9339 1.5331 1.4001 1.2001 1.4668   1.3999 1.3333 2.6668 2.3335 2.4    2.5334 2.3333 2.3999 4.9997 5.2007   5.2002 5.2663 5.2004 5.1333]]
208                   0.55012         0.56545         0.32808         0.80724          0.80724          0.04916          0.46658          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.5999 3.3329 3.333  3.4666 3.3333 1.8676 2.2666 2.0006 2.0009   2.0675 2.1335 4.5327 4.9333 4.5332 4.2668 4.5335 4.5333 5.5335 5.7999   5.6    5.5328 5.5998 5.6    2.5994 3.0004 2.6664 2.7999 2.5331 2.7335   0.8    0.9997 0.8002 1.0004 0.8003 0.9331 1.5333 1.4    1.2    1.4669   1.3999 1.3333 2.6668 2.3328 2.3999 2.5332 2.3334 2.4002 5.0001 5.2002   5.2    5.2664 5.1997 5.1334]]
209                   0.55022         0.5655         0.32813         0.80721          0.80721          0.04917          0.46655          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5999 3.3333 3.333  3.4667 3.3335 1.8666 2.267  1.9998 2.0011   2.0678 2.1333 4.5327 4.9334 4.533  4.2664 4.5329 4.5328 5.5342 5.8001   5.5998 5.5334 5.6004 5.6003 2.5998 3.0002 2.6668 2.8002 2.5328 2.7334   0.7999 1.0003 0.7998 1.     0.8    0.9335 1.5335 1.4    1.2    1.4665   1.3999 1.3331 2.6667 2.3339 2.4002 2.5334 2.3334 2.4002 4.9996 5.2001   5.2003 5.2667 5.1999 5.1332]]
210                   0.55017         0.56544         0.3281         0.80723          0.80723          0.04916          0.46655          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3334 3.3337 3.4664 3.3335 1.8672 2.2672 1.9999 2.   2.067  2.1339 4.5331 4.9335 4.5333 4.2663 4.5335 4.5331 5.5331 5.7998   5.6    5.5333 5.5998 5.6001 2.6001 3.0004 2.6666 2.7995 2.5333 2.7337   0.8    1.     0.8002 1.0001 0.8    0.9331 1.5334 1.3999 1.2002 1.4667   1.4    1.3334 2.667  2.3334 2.4    2.5335 2.3333 2.4001 4.9999 5.1996   5.1999 5.2663 5.2001 5.1331]]
211                   0.55022         0.56551         0.32815         0.80721          0.80721          0.04917          0.46667          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6002 3.3337 3.3337 3.4665 3.3334 1.8664 2.268  1.9997 2.0001   2.0667 2.1334 4.5331 4.9328 4.5331 4.2663 4.5334 4.5331 5.5332 5.8003   5.5997 5.5332 5.5999 5.5997 2.5999 2.9997 2.6667 2.8001 2.5332 2.7331   0.8    1.0004 0.7997 1.0001 0.8    0.9341 1.5331 1.3999 1.2    1.4666   1.3999 1.3331 2.6668 2.3331 2.4    2.5331 2.3331 2.4    5.     5.2003   5.1998 5.2666 5.2    5.1334]]
212                   0.5501         0.56546         0.32811         0.80725          0.80725          0.04916          0.46668          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.267  3.6    3.3331 3.3332 3.4666 3.3334 1.867  2.2664 1.9999 2.0001   2.0665 2.1337 4.533  4.933  4.5328 4.2665 4.5329 4.5331 5.5328 5.8   5.5999 5.5333 5.5995 5.6    2.6    2.9999 2.6668 2.8    2.533  2.7329   0.7999 1.0004 0.8005 1.0001 0.8001 0.9335 1.5334 1.4    1.2001 1.4667   1.3999 1.3334 2.6669 2.3338 2.3999 2.5334 2.3334 2.3998 4.9999 5.1999   5.2    5.2664 5.2    5.1333]]
213                   0.55019         0.56549         0.32814         0.80722          0.80722          0.04917          0.4664          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3323 3.4664 3.3333 1.8664 2.2668 2.0001 2.0002   2.0669 2.1329 4.5331 4.9332 4.5329 4.2662 4.5333 4.5333 5.5336 5.7998   5.5999 5.5333 5.6002 5.6    2.5994 3.     2.6673 2.7999 2.5332 2.7336   0.8003 1.0005 0.7998 1.0004 0.7999 0.9332 1.5332 1.4005 1.2001 1.4668   1.3999 1.3335 2.6668 2.3333 2.4001 2.5335 2.3332 2.4003 5.     5.1999   5.2    5.2669 5.2005 5.1332]]
214                   0.55005         0.56541         0.32804         0.80727          0.80727          0.04915          0.46668          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2674 3.5998 3.3332 3.3334 3.4667 3.3331 1.8671 2.2667 2.     2.0006   2.0667 2.133  4.533  4.9327 4.5333 4.2664 4.5332 4.5331 5.5331 5.7999   5.6    5.5333 5.5998 5.6001 2.5998 3.0003 2.6665 2.8    2.5335 2.7339   0.7999 0.9994 0.8    1.     0.8001 0.9334 1.5331 1.4001 1.1999 1.4668   1.4    1.3333 2.6669 2.3333 2.4    2.5334 2.3334 2.4003 5.0001 5.1998   5.2    5.2666 5.2    5.1333]]
215                   0.55018         0.56548         0.3281         0.80723          0.80723          0.04916          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3335 3.3334 3.4666 3.3331 1.8671 2.2671 2.0002 1.9998   2.0669 2.133  4.5332 4.9332 4.5334 4.2665 4.5331 4.5331 5.5334 5.8002   5.6003 5.5327 5.6001 5.5997 2.5999 3.0003 2.6669 2.8002 2.5332 2.7332   0.8001 1.     0.8001 1.0002 0.7999 0.9334 1.5332 1.4003 1.2    1.4666   1.4    1.3334 2.6666 2.3332 2.3999 2.5331 2.3336 2.4    4.9998 5.2001   5.2002 5.2669 5.2    5.133 ]]
216                   0.5502         0.5655         0.32809         0.80722          0.80722          0.04916          0.46663          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3333 3.3332 3.4666 3.333  1.8667 2.2665 2.0005 1.9999   2.0681 2.134  4.5332 4.9337 4.5328 4.2664 4.5332 4.533  5.5331 5.7989   5.5996 5.5334 5.6    5.6001 2.6    2.9999 2.6666 2.8    2.5321 2.7334   0.7995 0.9998 0.8003 0.9999 0.7996 0.9331 1.5332 1.4    1.1998 1.4667   1.3998 1.3332 2.667  2.3331 2.4002 2.5332 2.3335 2.4002 5.     5.2   5.1997 5.2667 5.2    5.1334]]
217                   0.55009         0.56542         0.32803         0.80725          0.80725          0.04915          0.4667          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3335 3.333  3.4668 3.3334 1.8663 2.2667 2.0004 2.0003   2.067  2.1338 4.5334 4.9335 4.533  4.2665 4.5332 4.5332 5.5333 5.7999   5.6    5.5337 5.5999 5.6001 2.6002 2.9995 2.6658 2.8007 2.5333 2.7333   0.7998 0.9999 0.8002 0.9994 0.8    0.9332 1.5333 1.4002 1.1998 1.4667   1.3995 1.3335 2.6663 2.3334 2.4    2.5334 2.3344 2.4002 4.9999 5.2   5.2    5.2669 5.1995 5.1332]]
218                   0.5501         0.56543         0.32813         0.80725          0.80725          0.04916          0.46663          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2663 3.6001 3.3335 3.3332 3.4666 3.335  1.8676 2.2674 2.0001 2.0007   2.0671 2.1342 4.5332 4.9331 4.5331 4.2665 4.5329 4.5333 5.5332 5.7999   5.5995 5.5333 5.6    5.6    2.6    3.     2.6667 2.8    2.5329 2.7333   0.8002 1.0001 0.8    1.0008 0.8001 0.9334 1.5333 1.4004 1.2001 1.4664   1.3999 1.3333 2.6665 2.3334 2.4007 2.5333 2.3335 2.4    5.0003 5.1994   5.2005 5.2666 5.2001 5.1333]]
219                   0.55011         0.56539         0.32805         0.80725          0.80725          0.04915          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.5998 3.3332 3.3332 3.4666 3.3333 1.8672 2.267  1.9994 2.0003   2.0671 2.1333 4.5333 4.9334 4.5329 4.2661 4.533  4.5334 5.5339 5.8001   5.6012 5.5334 5.5999 5.6001 2.6    2.9997 2.6663 2.8001 2.5333 2.7332   0.8005 0.9999 0.7999 0.9999 0.8009 0.9334 1.5333 1.4    1.2001 1.4667   1.4    1.3334 2.6667 2.3333 2.4002 2.5329 2.3333 2.4    4.9997 5.1998   5.1996 5.2666 5.1999 5.1333]]
220                   0.55014         0.56547         0.32812         0.80724          0.80724          0.04916          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3332 3.333  3.4665 3.3334 1.8668 2.2668 2.0001 2.0001   2.0671 2.1338 4.5328 4.933  4.5332 4.2666 4.5332 4.5331 5.5331 5.7998   5.6    5.5334 5.6    5.6    2.6001 3.0001 2.6667 2.8001 2.5333 2.7337   0.7997 1.0003 0.8    1.0002 0.8002 0.9331 1.5332 1.4    1.1996 1.4666   1.4001 1.3334 2.6667 2.3333 2.4004 2.5337 2.3333 2.4001 5.     5.2   5.1995 5.2669 5.2    5.1334]]
221                   0.5501         0.56543         0.32811         0.80725          0.80725          0.04916          0.46625          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2663 3.5999 3.3331 3.333  3.4662 3.3329 1.8677 2.2668 2.0009 2.0002   2.0666 2.1329 4.533  4.9334 4.5331 4.2666 4.5327 4.5332 5.5334 5.7998   5.6001 5.5334 5.6    5.6002 2.6003 2.9999 2.6667 2.7996 2.5332 2.7332   0.7992 1.0003 0.8002 1.0004 0.8004 0.9333 1.5334 1.4001 1.2001 1.4666   1.3998 1.3335 2.6669 2.3332 2.3999 2.5335 2.3336 2.4    4.9999 5.2006   5.2002 5.2667 5.1999 5.1333]]
222                   0.55011         0.56544         0.32807         0.80725          0.80725          0.04915          0.46658          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.6001 3.3334 3.3333 3.4667 3.3333 1.8672 2.2668 2.0003 2.0004   2.0673 2.1341 4.5325 4.9332 4.5333 4.2665 4.5333 4.5333 5.5333 5.8001   5.6    5.5331 5.6002 5.5999 2.5999 3.0001 2.6664 2.7998 2.5333 2.7329   0.8002 1.     0.8001 0.9998 0.8002 0.9333 1.5335 1.4    1.2    1.4663   1.4001 1.3334 2.6666 2.3338 2.3998 2.5334 2.3331 2.4001 4.9999 5.2003   5.2    5.2659 5.2    5.1332]]
223                   0.55009         0.56545         0.32809         0.80726          0.80726          0.04916          0.46658          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2672 3.5998 3.3329 3.3335 3.4661 3.3326 1.8668 2.2666 2.0001 2.0003   2.0669 2.1338 4.5331 4.933  4.5331 4.2663 4.5332 4.533  5.5334 5.8   5.6    5.5333 5.6    5.6    2.6001 2.9998 2.6666 2.7999 2.5332 2.7337   0.8001 0.9999 0.8    1.0003 0.8002 0.9331 1.5333 1.4    1.1999 1.4667   1.4    1.3334 2.6668 2.3332 2.3997 2.5336 2.3336 2.3999 5.0002 5.2   5.2    5.2664 5.2001 5.1331]]
224                   0.55016         0.56543         0.32811         0.80723          0.80723          0.04917          0.46665          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3332 3.4666 3.3333 1.8672 2.2675 2.     2.0007   2.0647 2.1343 4.5341 4.933  4.5328 4.2665 4.5331 4.5329 5.5332 5.8003   5.6    5.5333 5.5998 5.6    2.6007 3.0001 2.6669 2.8006 2.5333 2.7332   0.8001 1.0005 0.7998 1.0001 0.7999 0.9334 1.5332 1.4    1.1999 1.4666   1.3995 1.3333 2.6666 2.3332 2.4    2.5331 2.3332 2.4    4.9997 5.1997   5.2002 5.2664 5.2    5.1329]]
225                   0.55014         0.56546         0.32809         0.80724          0.80724          0.04916          0.46668          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.5997 3.334  3.3334 3.4665 3.3328 1.8668 2.2666 1.9998 2.0002   2.067  2.1336 4.533  4.9335 4.5332 4.2665 4.5328 4.5331 5.5333 5.8001   5.6    5.5331 5.6    5.6    2.5999 3.0001 2.6667 2.8    2.5334 2.7332   0.8005 0.9999 0.7997 1.0002 0.8    0.933  1.5333 1.4003 1.2    1.4667   1.4    1.3332 2.6668 2.3338 2.3998 2.5332 2.3334 2.4001 4.9999 5.2   5.2004 5.2667 5.2001 5.1333]]
226                   0.55016         0.56548         0.32809         0.80723          0.80723          0.04916          0.46655          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6003 3.3331 3.333  3.4666 3.3331 1.8667 2.2671 2.0005 1.9997   2.0675 2.1335 4.5331 4.9333 4.5334 4.2665 4.533  4.5332 5.5335 5.8   5.5999 5.5332 5.5998 5.6001 2.5999 3.0001 2.6666 2.7997 2.5334 2.7332   0.8001 1.     0.8002 0.9998 0.8002 0.9334 1.5333 1.3999 1.2001 1.4666   1.4001 1.3328 2.6666 2.3334 2.4    2.5333 2.3333 2.399  4.9999 5.1999   5.1999 5.2661 5.2001 5.1336]]
227                   0.55005         0.56544         0.32807         0.80727          0.80727          0.04915          0.46665          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2662 3.5996 3.3327 3.3331 3.4666 3.333  1.8672 2.2668 2.0006 2.0002   2.0672 2.1334 4.5332 4.9328 4.5331 4.2664 4.5329 4.5333 5.5333 5.8   5.6    5.5336 5.6    5.5998 2.5999 2.9999 2.6669 2.8002 2.5334 2.7334   0.7998 1.     0.801  1.     0.8003 0.9333 1.5333 1.3998 1.2002 1.4667   1.4    1.3334 2.6666 2.3332 2.3992 2.5335 2.3334 2.4    5.     5.1998   5.2003 5.2666 5.2002 5.1334]]
228                   0.55002         0.56541         0.32802         0.80728          0.80728          0.04915          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3334 3.3337 3.4665 3.3336 1.8664 2.2668 2.0007 2.0005   2.0669 2.1331 4.5328 4.9333 4.533  4.2667 4.5329 4.5331 5.5332 5.8001   5.6    5.5332 5.6    5.6    2.6002 2.9988 2.6666 2.8001 2.5333 2.7337   0.7993 0.9997 0.7999 0.9996 0.8002 0.9331 1.5333 1.3997 1.2005 1.4667   1.4    1.3334 2.6667 2.3332 2.3999 2.5333 2.3334 2.3998 5.     5.2001   5.2002 5.2664 5.2001 5.1331]]
229                   0.55014         0.56552         0.32815         0.80724          0.80724          0.04916          0.46653          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2661 3.5999 3.3334 3.3333 3.4663 3.3335 1.8667 2.2668 2.0006 1.9998   2.0676 2.1336 4.533  4.9328 4.5329 4.2667 4.5332 4.5331 5.5334 5.8   5.6006 5.5332 5.6002 5.5998 2.6    3.     2.6664 2.7998 2.5331 2.7334   0.8    1.0003 0.8002 1.0003 0.8002 0.9339 1.5334 1.3999 1.2    1.4667   1.4001 1.3332 2.6667 2.3333 2.3998 2.5335 2.3333 2.3998 5.     5.2006   5.2001 5.2668 5.2004 5.1328]]
230                   0.55015         0.56547         0.3281         0.80723          0.80723          0.04916          0.4666          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.5998 3.3334 3.3331 3.4666 3.333  1.8673 2.2667 1.9999 2.   2.0672 2.1342 4.533  4.9333 4.5332 4.2666 4.5333 4.5335 5.5332 5.7999   5.6    5.5336 5.6001 5.6002 2.5997 3.     2.6671 2.8001 2.5322 2.7335   0.8003 1.0005 0.8005 1.     0.7998 0.9333 1.5328 1.4    1.1999 1.4666   1.3998 1.3334 2.6668 2.3334 2.4001 2.5332 2.3334 2.4    5.     5.2   5.2007 5.2666 5.2    5.1332]]
231                   0.55015         0.56543         0.3281         0.80723          0.80723          0.04916          0.46692          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5996 3.3332 3.3331 3.4668 3.3333 1.867  2.2672 2.0001 2.0005   2.0674 2.1336 4.5334 4.9344 4.5333 4.2663 4.5334 4.5333 5.533  5.7988   5.6003 5.5331 5.6    5.6002 2.6001 3.     2.6668 2.8004 2.5334 2.7332   0.7999 0.9999 0.7998 1.     0.8    0.9339 1.533  1.4001 1.2006 1.4671   1.3998 1.3333 2.6667 2.3336 2.4003 2.5332 2.3334 2.4    4.9999 5.2001   5.2001 5.266  5.2001 5.1334]]
232                   0.55008         0.56541         0.3281         0.80726          0.80726          0.04916          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2672 3.5998 3.3331 3.3337 3.4667 3.3341 1.8666 2.267  2.001  2.0003   2.0663 2.133  4.5331 4.9325 4.533  4.2659 4.5335 4.5333 5.5334 5.8   5.6001 5.5334 5.5998 5.5995 2.6009 3.     2.6662 2.8001 2.5334 2.7335   0.7997 1.0004 0.7998 1.0002 0.8001 0.9335 1.5334 1.3997 1.1999 1.4667   1.4001 1.3334 2.6668 2.3334 2.3999 2.5333 2.3338 2.3995 4.9998 5.1998   5.2    5.2667 5.2001 5.1335]]
233                   0.55009         0.56545         0.32806         0.80725          0.80725          0.04915          0.4667          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3334 3.3332 3.4666 3.3333 1.867  2.2668 2.0005 2.0004   2.0672 2.1326 4.5331 4.9332 4.533  4.2665 4.5331 4.5331 5.5332 5.8001   5.6    5.5331 5.6001 5.5998 2.6002 2.9999 2.6656 2.8002 2.5334 2.7334   0.7997 0.9999 0.8004 0.9997 0.8002 0.9333 1.5332 1.4001 1.1999 1.4669   1.4002 1.3333 2.6665 2.3333 2.4002 2.5332 2.3333 2.4001 5.     5.2   5.1998 5.2665 5.2    5.1326]]
234                   0.55015         0.56542         0.32807         0.80723          0.80723          0.04916          0.46655          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2669 3.6002 3.3334 3.3334 3.4667 3.3333 1.8668 2.267  2.0001 1.9999   2.0667 2.1331 4.533  4.9331 4.5337 4.2661 4.5331 4.5332 5.5337 5.8002   5.6002 5.5332 5.6002 5.5999 2.5997 3.0001 2.6667 2.8    2.5334 2.733   0.8001 1.     0.8002 1.     0.7999 0.933  1.5334 1.4    1.2002 1.4668   1.3995 1.3333 2.6667 2.3333 2.3997 2.5332 2.3336 2.4    4.9999 5.2002   5.2    5.2666 5.1999 5.1335]]
235                   0.55011         0.56545         0.32808         0.80725          0.80725          0.04916          0.46658          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5995 3.3335 3.3336 3.4666 3.3329 1.8668 2.2665 2.0005 2.   2.0666 2.1338 4.5332 4.9331 4.5332 4.2662 4.5332 4.5332 5.5334 5.8001   5.6003 5.5335 5.6001 5.6001 2.6    3.     2.6667 2.7999 2.5331 2.7332   0.8    0.9999 0.7997 0.9999 0.8    0.9333 1.5333 1.4003 1.2001 1.4666   1.4007 1.3333 2.6667 2.3333 2.3997 2.5337 2.3333 2.3997 5.     5.1999   5.1999 5.2664 5.2    5.133 ]]
236                   0.55008         0.56544         0.32811         0.80726          0.80726          0.04916          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5997 3.333  3.3332 3.4665 3.3329 1.8676 2.2669 2.0001 2.0004   2.067  2.1334 4.5334 4.9331 4.5333 4.2667 4.5327 4.5331 5.5333 5.7999   5.5999 5.5329 5.5997 5.6003 2.6001 3.0002 2.6666 2.8002 2.5332 2.7334   0.7992 1.0003 0.8001 1.0002 0.8003 0.9332 1.5334 1.4001 1.2002 1.4665   1.3999 1.3332 2.6668 2.3336 2.4001 2.5332 2.3338 2.4007 4.9999 5.1998   5.2002 5.2665 5.2    5.1334]]
237                   3.2878         1.58338         1.15284         -0.152          -0.07916          0.25797          1.37993          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.2493 3.4323 3.4413 3.4907 3.3395 3.4111 3.2726 3.5452 3.4981 3.5918   3.5991 3.5181 3.5857 3.6309 3.4494 3.7232 3.4468 3.534  3.608  3.3468   3.3428 3.4798 3.1196 3.2529 3.6116 3.6686 3.7302 3.7551 3.6298 3.6004   3.757  3.7918 3.6179 3.7304 3.8612 3.8787 3.6227 3.7318 3.6526 3.6362   3.7078 3.2015 3.7673 3.8646 3.6223 3.7596 3.778  3.6207 3.8374 3.8324   3.6619 3.9259 3.5194 3.6713]]
238                   3.34315         1.60581         1.15638         -0.1714          -0.11045          0.25927          1.39098          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.1475 3.0431 3.1498 3.2251 3.1343 3.1844 3.416  3.6309 3.4177 3.4594   3.5191 3.6138 3.6129 3.5222 3.378  3.5405 3.5566 3.2856 3.3359 3.3969   3.3426 3.2756 3.409  3.3071 3.6048 3.569  3.6966 3.6711 3.6959 3.6779   3.8193 3.7297 3.7034 3.9423 3.9093 3.8015 3.3924 3.4256 3.7479 3.5922   3.5085 3.5467 3.741  3.8301 3.6905 3.891  3.7449 3.929  3.5041 3.5991   3.8674 3.7424 3.7627 3.6137]]
239                   3.37941         1.59517         1.16803         -0.1841          -0.13132          0.26176          1.42948          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.2022 2.9892 3.2231 3.2559 3.0645 3.1409 3.5953 3.4352 3.377  3.4161   3.5133 3.4309 3.5568 3.2566 3.5201 3.2379 3.4353 3.3406 3.3956 3.2488   3.3125 3.3313 3.206  3.2923 3.5218 3.7576 3.7203 3.6626 3.6537 3.718   3.8894 4.0522 3.7603 3.9457 3.6807 3.8486 3.629  3.6157 3.5046 3.4087   3.4962 3.5959 3.6507 3.4899 3.5306 3.7169 3.7824 3.826  3.5225 3.5547   3.8339 3.8083 3.5589 3.7783]]
240                   3.33678         1.60363         1.15649         -0.16916          -0.09664          0.2601          1.37498          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.0881 3.3349 3.2846 3.1918 3.1575 3.2352 3.4504 3.5893 3.6274 3.5336   3.5756 3.7046 3.6224 3.772  3.6544 3.6911 3.7508 3.5407 3.284  3.4819   3.3795 3.2059 3.3677 3.3774 3.54   3.6794 3.5216 3.694  3.6895 3.6361   3.7083 3.6174 3.646  3.8313 3.997  3.8045 3.5345 3.6032 3.6735 3.9191   3.5124 3.44   3.8069 3.7732 3.7744 3.6755 3.9798 3.7788 3.8329 3.5992   3.6967 3.7595 3.6107 3.6644]]
241                   3.08598         1.50929         0.96949         -0.08129          -0.08056          0.22661          1.64862          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7322 2.8876 2.843  2.8706 2.9316 3.0154 3.0094 2.9814 3.1052 3.0432   3.0656 3.2008 3.0377 3.1881 2.889  3.1029 3.004  3.0321 2.9962 2.9663   3.0682 2.7285 2.8417 3.0155 3.1837 3.2356 3.2121 3.2374 3.1271 3.1439   3.2825 3.2722 3.2125 3.0641 3.3377 3.392  3.1139 3.1127 2.9264 3.1242   3.2012 2.9489 3.2309 3.2069 3.2296 3.1863 3.2281 3.1384 3.1623 3.1396   3.2673 3.3124 3.1113 2.9719]]
242                   3.05966         1.52224         0.98154         -0.07206          -0.07186          0.22641          1.58187          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7171 2.9916 2.8497 2.6818 2.8396 2.7325 3.1562 3.1494 3.0672 3.232   3.0786 3.1592 3.3309 3.3379 3.0404 3.1299 2.9715 3.1292 2.883  2.8184   2.991  2.9679 2.965  2.9328 3.1475 3.2116 3.1646 3.2006 3.2029 3.156   3.275  3.268  3.1826 3.231  3.2804 3.208  3.0771 3.0666 3.0281 3.188   3.1578 3.1451 3.2381 3.2418 3.2039 3.1826 3.2804 3.2927 3.3192 3.2764   3.3205 3.1929 2.9344 3.21  ]]
243                   3.04963         1.4966         0.98355         -0.06855          -0.06813          0.22613          1.55057          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0101 2.8721 2.9105 2.9409 2.777  2.7778 3.0664 3.1032 3.1317 3.0287   3.2105 3.1299 3.0288 3.1495 3.2807 3.0254 3.1004 3.1904 3.026  2.8692   2.9064 3.0264 3.0426 2.8785 3.1632 3.2226 3.1662 3.1875 3.1912 3.2019   3.2941 3.2893 3.2545 3.3663 3.2365 3.5064 3.0304 3.0085 3.2142 3.154   2.9873 2.9073 3.3682 2.8276 3.0143 3.0161 3.2626 3.0933 3.088  3.2203   3.0513 3.1318 3.2828 3.2432]]
244                   3.07487         1.49876         0.97655         -0.0774          -0.07705          0.22667          1.50047          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8061 2.8263 2.8922 2.9449 3.0787 2.795  3.0379 3.0889 3.0787 3.0767   3.1681 3.0699 3.2668 3.1272 2.9973 3.0322 3.1164 3.216  2.7057 2.9063   2.8909 2.9599 2.867  2.9402 3.137  3.2072 3.1465 3.1702 3.1892 3.1735   3.2551 3.351  3.3495 3.2282 3.2773 3.435  2.9926 3.2834 2.8881 2.8361   3.0364 3.117  3.2777 3.2237 3.0858 3.3598 3.2354 3.1341 3.2021 3.2253   3.0474 3.316  3.2621 3.3003]]
245                   0.98993         0.70733         0.39201         0.65314          0.6553          0.07499          0.4651          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1769 3.577  3.2488 3.2981 3.4618 3.305  1.9054 2.3227 2.0966 2.1159   2.0594 2.129  4.4563 4.8865 4.4513 4.2157 4.4881 4.4911 5.5325 5.7966   5.5837 3.0048 2.9955 5.6248 2.6055 3.1923 2.6683 2.8448 2.0027 2.7307   0.8101 0.9924 0.7979 0.98   0.8141 0.867  3.1393 1.3938 1.1656 1.4627   1.3828 1.3265 2.6785 2.3266 2.4482 2.6047 2.3398 2.4156 4.9521 5.2027   5.1978 5.2535 5.156  5.1195]]
246                   0.6407         0.60542         0.35575         0.77551          0.77609          0.05712          0.48128          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1903 3.6054 3.3325 3.338  3.4488 3.3174 1.8129 2.3204 2.1147 2.1229   2.1217 2.1805 4.5258 4.9343 4.4773 4.2558 4.5634 4.4694 5.5253 5.8016   5.5982 5.5166 5.5906 5.5979 2.5993 3.1754 2.6689 2.8125 2.6557 2.7438   0.7564 1.0144 3.2465 0.9866 0.7754 0.9712 1.4807 1.4031 1.1626 1.5798   1.4001 1.3327 2.7937 2.4021 2.4377 2.5637 2.3741 2.4004 4.942  5.1372   4.471  5.212  5.1811 5.0944]]
247                   0.77002         0.66988         0.36518         0.73019          0.73027          0.06137          0.47285          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1586 3.5934 3.3119 3.3327 3.4723 3.226  1.9105 2.4313 2.0395 2.0315   2.2313 2.1876 4.5193 4.9012 4.4869 4.1641 4.4673 4.4524 5.5266 5.7897   5.2072 5.5345 2.8767 6.055  2.6612 3.1673 2.6349 2.8038 2.53   2.7512   0.8262 0.9986 0.7611 0.983  0.7407 0.9518 1.7351 1.3947 1.1985 1.4662   1.3485 3.0498 2.6642 2.3343 2.3898 2.5969 2.3631 2.4214 4.9919 5.2141   5.1502 5.246  5.1636 5.0746]]
248                   0.78551         0.67128         0.34438         0.72477          0.7296          0.05842          0.54243          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2499 3.5605 3.2721 3.3394 3.4655 3.3121 1.8527 2.3422 2.1398 2.1851   2.2106 2.3049 4.5369 4.9154 4.504  4.2141 4.5029 2.6341 4.9285 5.7992   5.5925 5.531  5.5925 5.5978 2.5968 3.02   2.7644 2.7991 2.5375 2.728   0.8077 0.946  0.7741 1.0152 0.7711 0.9261 1.4733 1.4022 1.1864 1.4169   1.3395 1.3369 2.5057 2.4165 2.4112 2.5797 2.3036 2.4765 4.9449 5.1632   2.7888 5.2263 5.1478 3.603 ]]
249                   2.99023         1.44992         0.90005         -0.04774          -0.04435          0.2104          1.52027          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9936 3.3588 3.1961 3.2347 3.2591 3.1314 3.3226 3.3958 3.209  3.3365   3.3593 3.3123 3.2549 3.3717 3.1254 3.0489 3.1674 3.1139 3.0491 2.9748   2.989  2.9569 2.975  3.0166 3.1503 3.2163 3.1716 3.2115 3.1633 3.2363   3.2723 3.3393 3.2927 3.3154 3.2925 0.8268 3.0195 1.2489 3.0056 3.1232   3.0023 3.0691 3.0256 3.0265 2.3952 3.13   2.9768 2.9905 2.8835 2.9363   2.8913 2.8962 2.8487 2.9113]]
250                   2.85805         1.41988         0.95232         -0.00142          -0.0013          0.21728          1.37813          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0898 3.1795 2.8241 3.0921 3.273  3.3215 3.2913 3.3742 3.3288 3.3218   3.3092 3.3514 3.1853 3.2538 3.3747 3.098  3.1489 3.2196 5.5918 3.0369   2.9687 3.0094 2.9913 2.9767 3.1795 3.2104 3.1835 3.1756 3.1577 3.1917   3.2265 3.2836 3.2601 3.2829 0.6681 3.3092 2.9973 3.0482 3.1102 3.1287   3.1196 2.9426 3.0731 3.0872 3.0538 3.0504 2.9528 2.492  2.8421 2.804   2.898  5.0926 3.0018 2.912 ]]
251                   2.89467         1.42051         0.96354         -0.01426          -0.01275          0.22083          1.58537          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1017 3.238  3.1185 3.2386 2.8623 3.2729 3.2832 3.3739 3.3246 3.363   2.4407 3.3324 3.0599 3.7189 3.0486 2.9852 3.1168 3.1027 2.9738 3.0179   3.0182 3.0248 5.5408 5.5734 3.1696 3.2229 3.1621 3.1934 3.1347 3.1899   3.2644 3.2862 3.2959 3.3078 3.2367 3.2257 3.0449 3.034  2.9279 3.0266   3.1182 3.1342 3.0704 3.0795 3.08   3.1189 3.0378 2.9931 2.8229 2.8786   2.8526 2.9935 2.9321 2.911 ]]
252                   2.72397         1.34829         0.87156         0.04555          0.04638          0.19802          1.08817          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1028 3.2986 3.1797 3.232  3.1883 3.2358 3.3011 3.3848 3.3261 3.32   2.6075 3.3808 4.206  3.2131 3.1218 3.8889 3.5522 4.2132 2.9675 3.0117   3.0154 2.9835 3.0117 2.9802 3.181  3.0925 2.7018 2.8763 2.6048 3.1641   0.8248 3.2798 3.3117 3.3255 3.2768 0.868  3.009  2.9898 2.8253 3.0703   3.1129 2.9711 3.0809 3.0337 3.0444 3.0287 3.011  3.0213 2.8136 2.8139   2.8822 5.0157 2.8641 2.8995]]
253                   3.09265         1.53048         1.06248         -0.08363          -0.06871          0.23801          1.4136          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9147 3.0213 3.1082 3.029  3.0962 3.1782 3.3398 3.2046 3.1207 3.2384   3.2968 3.285  3.3385 3.5422 2.9297 3.1441 3.5992 3.4376 3.1577 3.3125   3.1591 3.206  3.187  3.0576 3.5131 3.4478 3.3105 3.4478 3.4256 3.3993   3.3288 3.5126 3.5395 3.6239 3.5617 3.6052 3.3739 3.3803 3.4177 3.1256   3.4686 3.4532 3.4828 3.3048 3.3808 3.4573 3.5284 3.4193 3.6063 3.3891   3.6301 3.5206 3.4106 3.5074]]
254                   3.05025         1.52064         1.05081         -0.06877          -0.05491          0.23532          1.45973          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.1083 3.0386 3.1491 3.0139 3.0907 3.0531 3.2346 3.241  3.1516 3.1299   3.3159 3.147  3.4352 3.3019 3.2881 3.4167 3.4142 3.4435 3.3415 3.1069   3.3025 3.2599 3.2012 3.2049 3.4028 3.4795 3.3598 3.3019 3.4132 3.435   3.6434 3.4527 3.5845 3.4353 3.6219 3.5751 3.3929 3.3588 3.188  3.4373   3.3438 3.1058 3.4904 3.5392 3.5523 3.4962 3.4872 3.4257 3.3118 3.3212   3.3691 3.4149 3.4721 3.2714]]
255                   3.02703         1.50768         1.05655         -0.06063          -0.04459          0.23437          1.43523          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.0184 3.0778 3.185  3.4473 2.9946 3.2688 3.3025 3.3013 3.3316 3.3101   3.197  3.1109 3.3468 3.3967 3.2402 3.236  3.4768 3.2336 3.3156 3.1631   3.2438 3.3189 3.219  3.1115 3.4021 3.4473 3.4975 3.4914 3.461  3.522   3.4918 3.5969 3.5387 3.587  3.5106 3.5012 3.5195 3.1514 3.4017 3.1172   3.3049 3.1849 3.5034 3.4493 3.3896 3.4173 3.4584 3.3059 3.4385 3.4934   3.4546 3.4127 3.5626 3.4275]]
256                   3.12891         1.54786         1.06349         -0.09633          -0.08189          0.23955          1.52793          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.976  3.1115 2.98   3.1819 3.1277 3.2013 3.2791 3.3309 3.4554 3.2606   3.2239 3.2108 3.2635 3.2773 3.1508 3.0845 3.2698 3.495  3.2316 3.1765   3.2184 3.1774 3.2965 3.3011 3.4374 3.3469 3.4508 3.3848 3.3682 3.4107   3.4923 3.5685 3.5489 3.4693 3.5573 3.4734 3.2988 3.5045 3.3407 3.3742   3.4093 3.2791 3.5838 3.4311 3.3168 3.6086 3.4978 3.5447 3.395  3.3557   3.375  3.4145 3.46   3.3162]]
257                   3.07317         1.51102         0.9873         -0.0768          -0.07661          0.22747          1.65027          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9649 3.0509 2.7031 3.0067 3.1081 2.7779 3.093  3.1079 3.1443 3.078   3.1956 2.9645 3.146  3.2151 3.0115 3.1288 3.0055 3.0213 3.0141 2.8682   2.9041 2.932  3.0161 2.709  3.1712 3.1735 3.1391 3.1952 3.1316 3.171   3.4123 3.3348 3.2661 3.3681 3.1432 3.3112 3.07   3.0824 3.0161 3.1816   3.1324 3.0164 3.1579 3.2323 3.2748 3.1531 3.2354 3.1433 3.1956 3.2303   3.274  3.2803 3.2217 3.192 ]]
258                   3.11945         1.53233         0.98813         -0.09302          -0.09265          0.22964          1.61522          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9331 3.0169 2.8539 2.7788 2.8671 2.7117 3.1113 3.1032 3.1186 3.0526   3.1394 3.074  3.1157 3.3753 3.0031 2.8338 2.835  3.0946 3.1679 3.0083   2.8726 3.0464 2.9504 2.9226 3.1266 3.1754 3.1949 3.1746 3.1371 3.1661   3.2763 3.2169 3.1917 3.3021 3.2716 3.3461 3.21   3.1476 3.0459 3.0217   3.0819 3.124  3.3502 3.3093 3.1747 3.3312 3.1504 3.2531 3.1    3.0726   3.2316 3.1445 3.087  3.1999]]
259                   3.09016         1.50826         0.98015         -0.08275          -0.08195          0.22761          1.66643          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.84   2.9314 3.1305 2.7228 2.9144 2.7745 3.0878 3.2107 3.0496 2.9632   3.1171 2.9907 2.9091 3.3564 2.8105 3.0637 3.0378 3.1365 2.985  2.8239   3.0945 2.8998 2.9744 2.8934 3.1463 3.1751 3.1497 3.1869 3.1708 3.1439   3.2574 3.2858 3.2973 3.3288 3.19   3.3933 3.0355 3.039  2.8739 2.9771   3.0792 3.132  3.2689 3.1511 3.0333 3.322  3.2045 3.1978 3.0218 3.2124   3.296  3.1802 3.0853 3.1933]]
260                   3.058         1.50434         0.98852         -0.07148          -0.07132          0.22739          1.60422          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0258 2.9929 2.7388 2.7134 2.8547 2.9666 3.1347 3.173  3.1128 3.0991   3.0894 3.1136 3.2067 3.035  3.0291 3.2176 2.8242 3.0439 3.0434 3.081   2.8928 3.0374 3.0795 3.0334 3.1707 3.212  3.1385 3.1627 3.1404 3.1696   3.3143 3.2298 3.1788 3.4204 3.4386 3.3396 3.1484 3.0141 3.0095 3.1832   3.1961 2.8142 3.2996 3.1112 3.2548 3.3297 3.1962 3.1182 3.0299 2.9542   3.2138 3.2489 3.3382 3.2448]]
261                   0.7764         0.65226         0.35487         0.72796          0.7285          0.06001          0.4772          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2068 3.5861 3.2811 3.3432 3.4625 3.3316 1.9236 2.8323 2.588  1.9866   2.093  2.2501 4.519  4.9206 4.5099 4.2233 4.4905 4.5279 5.5322 5.7996   5.5982 5.5306 5.6029 3.1373 2.7327 3.0005 2.6753 2.9224 2.5377 2.9035   0.7221 0.996  0.7706 1.002  0.7535 0.8774 1.5321 1.4027 1.1998 1.485   1.4004 1.3307 2.7628 2.3425 2.446  2.5711 2.3648 2.3739 3.8687 5.195   5.1951 5.2343 5.2027 5.13  ]]
262                   0.77709         0.66811         0.35432         0.72772          0.72842          0.05865          0.49425          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2511 3.5946 3.1747 3.2255 3.4382 3.3316 1.8796 2.3346 2.0903 1.997   3.3358 2.1632 4.4989 4.9018 4.5033 4.2655 4.5017 4.4925 4.2864 5.8893   3.0113 5.5387 5.5982 5.5915 2.6851 3.0331 2.7026 2.8017 2.5327 2.7309   0.8079 1.0259 0.783  0.9495 0.8119 0.9114 1.534  1.3841 1.1848 1.4551   1.3941 1.3401 2.6993 2.3909 2.4021 2.7899 2.333  2.4068 5.0017 5.1898   5.1393 5.2713 5.1993 5.1343]]
263                   0.55625         0.5656         0.32247         0.8051          0.8051          0.04889          0.45105          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1554 3.5919 3.2601 3.2884 3.4366 3.2903 1.911  2.4016 2.0275 1.9839   2.0681 2.268  4.5048 4.9303 4.4879 4.2359 4.4831 4.5702 5.5332 5.7937   5.5973 5.5337 5.5978 5.6003 2.6057 3.0194 2.77   2.8061 2.5462 2.7351   0.8053 0.9047 0.7985 0.947  0.796  0.9068 1.5382 1.3948 1.1994 1.4655   1.3992 1.3021 2.6919 2.6617 2.4004 2.5335 2.337  2.4006 4.9759 5.1597   5.2042 5.2661 5.1967 5.1236]]
264                   0.87964         0.6811         0.36949         0.69179          0.69323          0.06737          0.49437          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2614 3.6057 3.3134 3.3142 3.4675 3.2516 1.9006 2.3117 1.9949 3.3939   2.0522 2.2381 4.4963 4.9141 4.5158 3.174  4.5718 4.5474 5.5364 3.092   5.6036 5.5321 5.5939 3.0661 2.6378 3.0506 2.7302 2.6436 2.5444 2.8195   0.8125 0.9423 0.7979 0.9243 0.7612 0.881  1.5406 1.3994 1.2151 3.0373   1.401  1.3172 2.6694 2.3283 2.3961 2.5332 2.3185 2.4518 5.0181 5.1891   5.1996 5.2499 5.195  5.1183]]
265                   2.67459         1.36404         0.82083         0.06286          0.0631          0.1931          1.4218          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2139 3.5445 3.1825 3.1672 3.1909 3.1597 3.3029 3.3784 3.2415 3.2862   3.3097 3.3397 3.1625 3.2724 3.0635 3.2536 3.0744 3.098  2.9421 3.0207   2.9721 5.4379 2.926  2.9849 3.1701 3.0383 3.2097 3.1806 3.1609 3.1929   0.7359 3.2779 3.1712 1.0118 3.2881 3.3103 3.1027 3.1252 2.8089 3.1451   2.9829 3.0182 2.8254 3.0556 3.0088 3.0514 3.063  3.0544 2.9107 2.9555   2.9756 2.8411 4.8979 2.824 ]]
266                   2.89057         1.42001         0.95089         -0.01282          -0.01231          0.21752          1.59287          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0996 3.1317 3.2299 3.1121 3.3573 3.1036 3.2932 3.3492 3.3354 3.2723   3.3371 3.3714 3.0663 3.2898 3.4306 3.3743 3.0813 3.0334 2.9849 3.0262   5.5558 3.0097 3.0107 2.9732 3.1649 3.2147 3.1751 3.1988 3.1798 2.8991   0.6667 3.3386 3.2689 3.3318 3.2397 3.3197 3.0812 2.9518 3.0429 3.0825   3.0647 1.3266 3.1356 3.0692 3.064  3.0513 3.0127 3.0326 2.9171 2.8181   3.0382 2.9401 2.9289 2.8929]]
267                   2.92672         1.41626         0.89172         -0.02549          -0.02505          0.20757          1.56642          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1109 3.2721 3.2412 3.2118 3.0101 3.0487 3.3057 2.6944 2.4161 3.3211   3.3277 3.2922 4.1154 3.2094 3.0521 2.9822 3.0869 3.1136 2.9385 5.8124   2.9975 2.979  2.9825 2.9615 3.1753 3.1917 3.1501 3.1829 3.1779 3.1908   3.2252 3.3045 3.2613 3.3016 3.2223 0.8298 3.1511 3.1222 2.9367 3.0378   3.0557 2.9193 3.1225 2.9804 3.022  3.0374 3.0049 3.0198 2.8223 2.9286   2.9067 2.8446 2.9025 2.9124]]
268                   2.81079         1.38253         0.86863         0.01514          0.01632          0.19905          1.44565          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1889 3.3601 3.1837 3.2404 3.2104 3.2694 3.3383 3.3174 2.2536 3.2872   3.2933 3.3484 4.0888 3.2844 4.2163 3.2405 3.1367 3.1561 3.0369 3.1041   3.017  2.955  2.9643 3.0079 3.1499 3.1006 3.1924 3.1981 3.1715 3.1849   3.2927 3.2462 3.2812 3.2744 3.2827 0.9561 2.9352 3.0689 3.0588 1.6016   3.0534 3.0474 3.0978 3.0162 3.0557 2.9991 3.0167 3.0268 2.8032 2.9405   2.9703 2.8458 2.9174 2.9118]]
269                   3.25286         1.49217         0.85541         -0.13976          -0.06969          0.2211          1.48143          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4911 2.4601 2.4638 2.6812 2.4153 2.3568 2.6756 2.5863 2.6007 2.6164   2.6438 2.5972 2.3524 2.7713 2.675  2.4454 2.9703 2.618  2.4037 2.5086   2.6276 2.5331 2.5499 2.643  2.7536 2.7436 2.8731 2.6352 2.7256 2.8443   2.8863 2.8787 2.7873 2.9756 3.0197 2.9276 2.7249 2.4842 2.3771 2.4331   2.9639 2.7208 2.9338 2.5928 2.7574 2.764  2.6441 3.0813 2.8819 3.0371   2.959  2.6746 2.5228 2.8951]]
270                   3.27564         1.48692         0.84496         -0.14774          -0.07418          0.22175          1.51693          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4474 2.1099 2.5392 2.6629 2.4105 2.3611 2.6956 2.656  2.6301 2.678   2.6126 2.4901 2.5602 3.2154 2.7834 2.4282 2.3508 2.3938 2.6372 2.5979   2.4036 2.3358 2.6269 2.5703 2.7948 2.736  2.8397 2.7732 2.6714 2.6547   2.9628 2.8967 2.9812 2.7709 3.0083 3.0729 2.5348 2.3358 2.395  2.8117   2.6171 2.8366 2.8146 2.7209 2.7222 2.4708 2.8944 2.7529 2.6556 2.8663   3.1612 2.7811 2.7621 3.0984]]
271                   3.40183         1.55047         0.86329         -0.19196          -0.11055          0.22977          1.41107          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.3753 2.7545 2.3817 2.4655 2.1777 2.2921 2.6955 2.6094 2.5275 2.5902   2.7637 2.8016 2.5472 2.4698 2.2054 2.7211 2.7602 2.1685 2.3994 2.3746   2.4957 2.5771 2.501  2.4565 2.7494 2.7385 2.6442 2.756  2.7357 2.8125   2.8223 2.9825 2.7503 2.7639 2.709  2.7483 2.6229 2.9139 2.9324 2.8208   2.6047 2.8599 2.7332 2.6953 2.8497 2.6949 2.803  3.0188 2.7423 2.7746   2.891  2.6126 2.655  2.7553]]
272                   3.29493         1.51444         0.8874         -0.1545          -0.09361          0.22628          1.51442          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.7222 2.5126 2.1902 2.2808 2.4444 2.3382 2.4627 2.7126 2.6898 2.7119   2.5863 2.5241 2.6737 2.9791 2.6533 2.7667 2.8738 2.9676 2.4809 2.4295   2.5111 2.557  2.7452 2.4931 2.9494 2.847  2.7654 2.7728 2.6696 2.867   2.9417 3.1282 2.9356 3.1432 2.9833 2.8641 2.5241 2.8485 2.7322 2.9562   2.7091 2.733  2.5749 2.6576 2.8891 2.7757 2.9638 2.6917 2.7068 2.868   2.6684 2.8074 2.7714 2.7694]]
273                   7.85436         2.27603         0.78574         -1.75207          -0.20877          0.7388          1.92418          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.6297 0.183  1.0859 1.8189 0.437  0.8965 0.8906 0.9206 1.0079 1.6658   1.244  0.304  0.5258 0.3349 0.4479 1.3387 0.6109 1.5026 0.9424 1.9303   1.203  0.5017 0.5642 1.6465 1.4248 0.3368 1.4166 1.727  1.6149 1.4265   1.3493 1.8506 1.2662 2.145  1.5032 1.3789 0.8924 1.6683 1.1232 0.4796   1.2337 0.3501 1.2132 1.0658 0.7525 1.4159 0.1435 0.956  0.2138 0.5717   0.7413 1.087  1.2405 0.7822]]
274                   7.6133         2.28818         0.6936         -1.6676          -0.03236          0.68052          2.0187          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.8993 0.4747 0.5943 1.2516 0.5071 0.9308 1.4206 1.3555 0.6433 0.6324   0.6442 0.5534 1.1875 0.3606 1.1374 0.8264 0.9655 0.7651 0.7123 0.9661   1.1911 1.4509 1.098  0.4987 1.3581 1.4254 1.1515 0.6271 1.6045 1.5676   0.6026 1.0637 0.8434 0.6454 1.1624 1.3038 0.8079 0.5706 0.9411 1.5749   1.818  0.8927 1.4578 0.3568 0.3814 1.0941 0.4624 0.8331 0.6703 0.8911   1.1679 0.9122 1.7171 1.7045]]
275                   4.01648         1.70886         1.31165         -0.40732          -0.14918          0.30513          1.52397          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.5055 3.7438 3.8445 3.4235 3.4532 3.9696 4.0333 3.9506 3.3606 4.2989   3.5825 3.7414 4.2044 4.1321 3.4411 4.0064 3.6796 4.2328 3.7343 3.8408   4.2132 3.4404 2.9161 3.5221 3.8766 4.0566 4.1779 4.2949 3.9193 4.2716   4.2597 4.0545 3.736  4.2656 4.4036 3.9509 3.9315 4.2799 3.7772 4.1256   4.5988 4.1737 4.4075 3.8927 4.8507 4.6662 3.9641 3.6021 4.2627 4.4114   4.6294 4.1146 4.1971 4.2604]]
276                   3.85976         1.69636         1.30553         -0.35241          -0.12096          0.29582          1.56848          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6933 3.7479 3.1081 4.0135 4.1145 3.3345 3.9309 3.899  3.308  3.6931   3.4699 3.3205 3.8213 4.0245 3.8633 3.6586 4.4067 3.4528 3.4017 3.9235   3.9103 4.097  3.0908 4.0082 4.0873 3.8723 3.7862 4.2269 3.7918 3.6386   4.4736 4.497  3.8963 4.2809 3.8668 3.9988 3.5033 4.1161 4.1797 4.0242   4.6213 4.0079 3.9609 4.8327 4.1498 4.157  4.4596 4.4615 4.0529 3.886   4.0516 4.1757 4.8017 4.071 ]]
277                   4.0728         1.71434         1.31402         -0.42706          -0.14813          0.30793          1.57352          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.062  3.6197 3.5449 3.0824 3.7168 3.4528 4.1935 4.6031 4.1224 4.0637   3.7739 4.4556 3.7413 3.8804 4.1685 3.5355 4.226  3.8501 3.8233 3.7724   3.3929 3.4086 3.5887 3.6747 4.304  3.9466 4.4191 4.213  4.0679 3.7262   4.3201 3.9147 4.6346 4.2416 4.2269 3.9027 3.6699 4.6001 3.3684 4.0957   4.5869 3.9566 4.1423 4.4709 4.0522 3.969  3.7678 4.2888 4.4751 4.4555   4.3128 4.618  4.4567 4.556 ]]
278                   3.91391         1.72848         1.31538         -0.37138          -0.11719          0.29969          1.55917          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3629 3.5201 3.8172 3.6262 4.0391 3.5753 3.684  4.1497 3.9061 4.4473   4.1264 3.9013 3.4072 3.678  4.0901 4.5863 3.8764 3.7626 3.7196 3.8462   3.8348 3.4502 3.925  3.7847 4.5299 3.9401 4.2023 3.8789 4.474  4.0988   4.6298 4.3896 4.232  4.168  4.5419 4.0155 3.5008 4.295  4.1708 3.7624   4.044  3.6824 3.8332 4.0187 4.4994 4.2165 4.1304 3.8093 4.1392 4.0337   4.0763 4.1225 3.7899 3.9858]]
279                   3.10251         1.4744         0.86998         -0.08708          -0.04046          0.21606          1.53647          MLPRegressor(activation='tanh',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3682 2.0961 2.468  2.3622 2.3129 2.5513 2.6368 2.8836 2.6493 2.6041   2.6537 2.9019 2.6621 2.4494 2.682  2.6273 2.8217 2.8136 2.6157 2.5789   2.741  2.8492 2.5227 2.8303 2.8278 2.9489 2.8322 2.7542 2.9571 2.9141   2.6725 2.7616 2.8138 3.0069 2.9757 2.9677 2.9163 2.8341 2.3946 2.8662   2.8462 2.5621 2.8934 3.0371 3.007  3.2235 3.0199 2.8518 2.9611 3.0019   2.9526 3.0788 3.0609 3.0141]]
280                   3.13526         1.47902         0.89519         -0.09855          -0.06175          0.22026          1.61027          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3428 2.6361 2.775  2.4308 2.4925 2.8711 2.6527 2.9224 2.6274 2.7774   2.8767 2.6112 3.069  2.7252 2.8038 3.0115 2.5275 2.4859 2.7932 2.7343   2.5921 2.8078 2.7016 2.8791 2.8465 2.9199 2.8604 2.7862 2.8704 2.9039   2.9753 3.2892 2.7644 2.7871 2.9562 3.1337 3.0169 3.1449 2.767  2.863   2.5685 2.5467 3.0007 2.7859 2.8607 2.871  3.0067 2.8446 2.8146 2.9036   3.2482 2.8457 2.7831 2.7199]]
281                   3.15494         1.50692         0.89049         -0.10545          -0.06575          0.22001          1.59167          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3494 2.5032 2.5614 2.1789 2.5451 2.4211 2.5267 2.902  2.8288 2.9509   2.996  2.8044 3.0451 2.7968 2.6678 2.761  2.7695 2.8855 2.7316 2.6725   2.7279 2.6991 2.9327 2.546  2.7731 2.9416 2.9271 2.8411 2.9397 2.8485   3.0652 3.096  2.9955 2.9089 2.9084 2.9163 2.6779 2.7372 2.9202 2.7706   2.8564 2.8983 2.8697 2.6842 2.8803 2.8257 2.837  2.8593 2.7373 2.7102   3.0588 3.028  2.9117 2.9303]]
282                   3.20917         1.50177         0.88191         -0.12445          -0.08033          0.22206          1.59257          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3494 2.6543 2.4858 2.5141 2.5385 2.6915 2.5223 2.6743 2.8025 2.5776   2.7422 2.7029 2.4856 2.9619 2.8626 2.7225 2.6083 2.7499 2.6021 2.8299   2.4946 2.5171 2.7156 2.6103 2.8949 2.907  2.8955 2.9081 2.837  2.7925   2.9448 2.7812 2.8034 3.052  3.1258 2.9786 3.0078 2.7121 2.6398 2.7852   2.7876 2.8169 3.0631 2.7891 2.8874 2.9533 2.8298 2.9044 2.8105 3.1429   2.8271 2.9358 3.0834 2.8584]]
283                   2.97008         1.4763         0.95317         -0.04068          -0.04022          0.21929          1.59747          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.0678 3.0926 3.0862 3.088  3.0836 3.0755 3.1015 3.1535 3.1052 3.1346   3.1099 3.0905 3.0689 3.1297 3.0695 3.0315 3.061  3.0632 3.043  3.0803   3.0408 3.0386 3.0522 3.0309 3.0904 3.1108 3.1019 3.1132 3.0797 3.0938   3.1396 3.167  3.1484 3.152  3.158  3.156  3.1434 3.1341 3.131  3.1268   3.1316 3.1614 3.1202 3.1113 3.1027 3.1357 3.1227 3.1202 3.0602 3.0589   3.0745 3.1052 3.0641 3.0657]]
284                   3.1002         1.54628         1.07878         -0.08627          -0.05113          0.24087          1.38068          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.4075 3.4655 3.3529 3.4023 3.5632 3.5079 3.5209 3.5446 3.5676 3.4807   3.3747 3.3696 3.4375 3.5542 3.4375 3.4154 3.2851 3.4948 3.4638 3.4336   3.3669 3.4052 3.2601 3.4117 3.3452 3.5493 3.5231 3.5671 3.4818 3.3861   3.4907 3.5979 3.5332 3.3706 3.5214 3.4886 3.5332 3.5132 3.4746 3.3716   3.4086 3.5598 3.5381 3.5201 3.4718 3.3798 3.5103 3.538  3.3476 3.3093   3.3071 3.3685 3.473  3.4315]]
285                   2.96715         1.47309         0.94805         -0.03965          -0.03882          0.21856          1.60247          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.034  3.0979 3.0584 3.074  3.0875 3.0758 3.0962 3.1149 3.0903 3.1043   3.1334 3.1024 3.0694 3.1137 3.0608 3.0303 3.0653 3.0552 3.0344 3.0631   3.0341 3.0068 3.0391 3.0392 3.1033 3.1036 3.087  3.0959 3.0565 3.0861   3.1199 3.1399 3.1409 3.1502 3.1359 3.1401 3.1319 3.1193 3.1097 3.1246   3.1295 3.1156 3.1246 3.0949 3.0873 3.0902 3.0902 3.0955 3.0447 3.0656   3.0559 3.0815 3.0451 3.0474]]
286                   2.96573         1.47964         0.96195         -0.03915          -0.03913          0.22023          1.57022          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.1042 3.1339 3.1113 3.1097 3.1224 3.1056 3.1251 3.1652 3.1426 3.1597   3.1458 3.1732 3.096  3.1345 3.0956 3.0707 3.0983 3.0982 3.0679 3.0968   3.0766 3.0671 3.0762 3.0728 3.1244 3.1598 3.1285 3.1419 3.1181 3.1344   3.1826 3.1784 3.1637 3.1831 3.1626 3.1778 3.1714 3.1596 3.1401 3.1651   3.1598 3.1525 3.1584 3.1554 3.1342 3.1476 3.1306 3.1378 3.0791 3.0969   3.0951 3.0961 3.1144 3.0893]]
287                   2.97196         1.47534         0.95503         -0.04134          -0.04087          0.21964          1.59782          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0811 3.1052 3.0994 3.0756 3.0763 3.0714 3.0757 3.1377 3.1246 3.1309   3.1217 3.123  3.0735 3.101  3.0642 3.0567 3.0804 3.0636 3.0311 3.0631   3.0923 3.0422 3.0374 3.0286 3.0962 3.1377 3.0906 3.1046 3.0644 3.117   3.1378 3.1653 3.1744 3.1855 3.131  3.1529 3.1728 3.1385 3.1057 3.1549   3.1141 3.13   3.095  3.106  3.1026 3.1061 3.1137 3.1158 3.0481 3.0749   3.0723 3.0736 3.0573 3.0655]]
288                   3.06741         1.53133         1.07817         -0.07478          -0.03829          0.23973          1.42945          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3294 3.4787 3.4421 3.3515 3.5011 3.46   3.4546 3.5233 3.4532 3.3957   3.5424 3.5074 3.4791 3.433  3.4984 3.414  3.3998 3.4937 3.4457 3.4538   3.2626 3.2457 3.444  3.4444 3.4843 3.5709 3.4848 3.5842 3.4501 3.4378   3.5252 3.5652 3.3355 3.4601 3.4432 3.5014 3.4715 3.4535 3.5257 3.5774   3.4389 3.5267 3.5776 3.375  3.4102 3.3552 3.501  3.4976 3.4648 3.4963   3.4663 3.4853 3.4564 3.3837]]
289                   2.96933         1.4727         0.94887         -0.04042          -0.03956          0.2188          1.60647          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0561 3.0993 3.0606 3.0758 3.0692 3.0592 3.0772 3.1196 3.1018 3.0885   3.1032 3.1077 3.0576 3.1073 3.0549 3.0228 3.0701 3.0628 3.0441 3.0457   3.0302 3.0046 3.0354 3.0275 3.0793 3.1122 3.0956 3.1185 3.0874 3.0972   3.1378 3.1473 3.1309 3.1495 3.1131 3.1493 3.1531 3.0956 3.0927 3.1313   3.1254 3.1155 3.1406 3.0896 3.0738 3.0975 3.0831 3.1025 3.0634 3.0307   3.0728 3.0699 3.0495 3.0733]]
290                   2.9686         1.47971         0.96451         -0.04016          -0.04015          0.2207          1.56902          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1242 3.1325 3.1132 3.1046 3.1235 3.1076 3.1275 3.1631 3.1415 3.1413   3.1437 3.1501 3.0964 3.1372 3.1149 3.0741 3.0989 3.0955 3.0739 3.0922   3.0747 3.0662 3.0983 3.0788 3.1192 3.1575 3.1287 3.1423 3.1149 3.1357   3.181  3.1843 3.1658 3.2054 3.1625 3.1955 3.1746 3.1594 3.142  3.1954   3.1805 3.1764 3.1633 3.1319 3.1368 3.1505 3.1302 3.1385 3.0763 3.0987   3.096  3.1008 3.0963 3.112 ]]
291                   3.22194         1.57006         1.1472         -0.12893          -0.04254          0.25478          1.37278          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6687 3.6754 3.6466 3.6195 3.5398 3.38   3.7164 3.738  3.5678 3.6965   3.6659 3.5972 3.5444 3.6458 3.6145 3.5946 3.6813 3.6459 3.6784 3.5814   3.6441 3.6105 3.4965 3.4619 3.5781 3.5977 3.5325 3.5315 3.5234 3.7517   3.6826 3.7398 3.6768 3.739  3.5875 3.7091 3.6471 3.6199 3.6698 3.5745   3.631  3.748  3.7501 3.6938 3.6415 3.732  3.7574 3.6966 3.439  3.6176   3.5813 3.6213 3.683  3.6805]]
292                   3.57269         1.65196         1.23875         -0.25182          -0.07157          0.28008          1.54655          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8149 4.0671 3.871  3.8384 4.1418 3.716  3.8468 3.9839 3.7222 3.6371   3.7513 3.8569 4.0611 3.9666 3.7846 3.9052 3.9292 4.0416 3.8498 3.8884   3.7352 3.7114 3.8259 3.6151 3.7554 3.9398 3.8426 3.793  3.8913 3.7057   3.9147 3.975  3.9341 3.9414 3.9699 3.8356 3.8183 3.8532 3.8247 3.8588   3.9244 4.047  3.9913 3.9424 3.8178 4.0669 4.0484 3.8778 3.8148 3.855   3.7717 2.8672 3.8933 3.7316]]
293                   2.96653         1.48042         0.96506         -0.03944          -0.03943          0.22065          1.55852          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1099 3.1379 3.1178 3.1101 3.1293 3.1149 3.1339 3.1722 3.1446 3.1478   3.1555 3.1643 3.1044 3.1456 3.109  3.0813 3.1073 3.1095 3.0737 3.1007   3.0804 3.0732 3.0812 3.0823 3.1318 3.1694 3.1382 3.1502 3.1253 3.1435   3.1748 3.1923 3.1737 3.1961 3.1753 3.1864 3.1828 3.167  3.1464 3.1739   3.1682 3.1581 3.1722 3.1412 3.145  3.1617 3.1395 3.1481 3.0881 3.1057   3.103  3.1139 3.1054 3.0966]]
294                   2.95236         1.46534         0.93493         -0.03447          -0.03238          0.21654          1.65347          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.0173 3.0679 3.035  3.0361 3.035  3.0163 3.0637 3.1113 3.0461 3.0434   3.0753 3.0368 3.0038 3.0696 3.0226 2.9936 2.9795 2.9963 2.9906 3.1961   3.1571 2.9595 2.9926 3.196  3.0113 3.0519 3.0357 3.0309 3.0304 3.0236   3.1048 3.0844 3.0476 3.0796 3.0839 3.093  3.0852 3.0806 3.0781 3.2532   3.0723 3.0515 3.2444 3.2237 3.0492 3.07   3.0201 3.068  3.0032 3.0262   2.9955 3.0334 2.9818 3.0117]]
295                   3.21468         1.56492         1.13509         -0.12638          -0.03951          0.25367          1.42262          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6769 3.7422 3.6361 3.6307 3.6065 3.6712 3.6181 3.6586 3.7143 3.5511   3.6856 3.6319 3.669  3.5041 3.4821 3.5485 3.5991 3.467  3.6238 3.6382   3.6211 3.4929 3.6297 3.6308 3.6605 3.6568 3.7304 3.7697 3.6413 3.7016   3.7084 3.6568 3.5988 3.566  3.7186 3.6802 3.7307 3.6637 3.5591 3.6796   3.7478 3.4934 3.6717 3.6116 3.7249 3.7208 3.588  3.674  3.5047 3.6509   3.5246 3.6837 3.6274 3.5461]]
296                   3.60727         1.67787         1.2361         -0.26394          -0.07612          0.2804          1.69452          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.9484 3.975  3.8363 3.9554 3.9462 3.8922 3.9298 3.938  4.0184 3.9869   4.0617 3.8339 3.7794 3.8683 3.8828 3.8674 3.9277 3.2481 3.9299 3.8207   3.9627 3.8848 3.6618 3.6769 3.8522 3.5145 4.0122 4.0859 3.8927 3.9629   3.9429 3.952  3.9801 3.7825 3.7799 3.7549 3.9375 3.9729 4.2156 3.8557   3.9488 4.0215 3.8903 3.8173 3.9299 3.8928 3.9272 3.9062 3.5827 3.7189   3.9401 3.8734 3.8851 3.2083]]
297                   2.96674         1.48072         0.9654         -0.03951          -0.03951          0.2207          1.55947          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1102 3.1446 3.112  3.1164 3.1277 3.113  3.1345 3.173  3.1459 3.1463   3.1565 3.1589 3.1072 3.1429 3.1079 3.0846 3.1072 3.1067 3.0747 3.1007   3.0824 3.0752 3.0798 3.0823 3.1293 3.1693 3.1372 3.1503 3.125  3.1443   3.1778 3.193  3.1775 3.1966 3.175  3.189  3.1801 3.1664 3.1506 3.1769   3.1707 3.1628 3.1735 3.141  3.1486 3.1622 3.1413 3.1477 3.0853 3.1078   3.1049 3.1119 3.1119 3.1002]]
298                   2.99083         1.46925         0.93112         -0.04795          -0.04511          0.21761          1.66272          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9913 3.2485 3.0735 3.0342 3.0366 3.03   3.0248 3.0924 3.0491 3.0577   3.0472 3.0748 3.0125 3.056  2.9819 2.9696 2.9875 3.0261 2.9761 3.0305   3.0154 2.9527 2.9666 3.011  3.2031 3.0346 3.0389 3.2539 3.0481 3.0727   3.098  3.0661 3.0843 3.1025 3.0672 3.066  3.0613 3.0917 3.0394 3.108   3.0743 3.0361 3.091  3.0107 3.0435 3.0304 3.0214 3.0596 2.9719 2.987   2.9951 2.9954 2.9736 2.9997]]
299                   2.96164         1.47313         0.95394         -0.03772          -0.03731          0.21903          1.58457          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0529 3.075  3.0836 3.1112 3.0917 3.0768 3.094  3.1388 3.0878 3.1011   3.1177 3.1187 3.0794 3.0944 3.0634 3.0442 3.0653 3.1014 3.0771 3.103   3.045  3.0341 3.0291 3.0434 3.0808 3.1375 3.1025 3.1119 3.0899 3.1315   3.1208 3.1656 3.1322 3.1785 3.1424 3.1686 3.1559 3.1285 3.1161 3.1487   3.1253 3.1063 3.1327 3.103  3.1175 3.1535 3.123  3.1227 3.0585 3.0868   3.0653 3.0848 3.0761 3.076 ]]
300                   3.10998         1.5386         1.08817         -0.0897          -0.05381          0.24275          1.49005          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.3853 3.4189 3.4728 3.4918 3.4597 3.3771 3.471  3.5447 3.4863 3.4954   3.4086 3.5833 3.3944 3.3797 3.4197 3.5098 3.3774 3.3425 3.4423 3.4899   3.4185 3.4058 3.429  3.4257 3.3407 3.5835 3.3322 3.5143 3.4716 3.4016   3.412  3.5197 3.4846 3.6027 3.3771 3.5317 3.5605 3.4843 3.565  3.5566   3.4405 3.5904 3.5295 3.4347 3.452  3.5715 3.4822 3.5008 3.424  3.265   3.4258 3.4882 3.3457 3.2957]]
301                   2.97531         1.4731         0.94936         -0.04251          -0.04158          0.21907          1.61162          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0772 3.1025 3.0624 3.0788 3.0687 3.0693 3.067  3.1041 3.0915 3.0961   3.0932 3.118  3.062  3.0831 3.0596 3.0196 3.0314 3.0505 3.0107 3.0446   3.0341 3.0176 3.0369 3.0266 3.0853 3.1089 3.1074 3.087  3.0826 3.0732   3.1276 3.1554 3.1306 3.1675 3.1408 3.1323 3.1448 3.0851 3.1093 3.1419   3.1397 3.1006 3.1144 3.0863 3.1007 3.1095 3.0826 3.1151 3.0526 3.0588   3.0675 3.0689 3.0287 3.045 ]]
302                   2.96879         1.47997         0.96401         -0.04023          -0.04021          0.22055          1.56902          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1015 3.1345 3.1113 3.129  3.1218 3.1135 3.1261 3.1603 3.1423 3.1636   3.1461 3.1553 3.1155 3.1369 3.0999 3.0689 3.0955 3.0933 3.0716 3.0903   3.0771 3.0649 3.0786 3.078  3.125  3.1592 3.15   3.1395 3.1186 3.1342   3.1636 3.2008 3.1605 3.2023 3.1653 3.1763 3.1757 3.162  3.1435 3.168   3.1616 3.153  3.1622 3.1505 3.1386 3.1503 3.1277 3.1354 3.0753 3.0953   3.0957 3.0998 3.0947 3.0887]]
303                   2.95599         1.47224         0.94869         -0.03574          -0.03514          0.21815          1.59577          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0701 3.0903 3.0748 3.0638 3.101  3.0788 3.0763 3.1215 3.1191 3.0978   3.1092 3.126  3.0623 3.1262 3.0732 3.0218 3.0686 3.0773 3.0423 3.0441   3.0386 3.0527 3.0471 3.0338 3.0892 3.1315 3.1068 3.1057 3.081  3.1104   3.1508 3.1436 3.1283 3.1445 3.1487 3.1362 3.1265 3.1231 3.1041 3.1187   3.1203 3.1245 3.1187 3.0884 3.0913 3.1337 3.1153 3.0968 3.0789 3.0683   3.0656 3.0964 3.0791 3.0598]]
304                   3.10156         1.53463         1.0875         -0.08675          -0.04453          0.24253          1.4796          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.5279 3.4256 3.4131 3.3681 3.4936 3.4653 3.3309 3.5808 3.5687 3.5584   3.4686 3.5938 3.51   3.4806 3.4624 3.311  3.5319 3.4341 3.3716 3.5005   3.481  3.4415 3.5093 3.4907 3.5257 3.5681 3.4653 3.5428 3.5565 3.4706   3.5856 3.5838 3.5168 3.5201 3.5681 3.5089 3.3938 3.5822 3.4894 3.5733   3.4505 3.4594 3.5062 3.3554 3.5826 3.5016 3.3979 3.4907 3.2532 3.5094   3.3729 3.4469 3.4553 3.5236]]
305                   2.97229         1.47455         0.94961         -0.04145          -0.04062          0.219          1.60282          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0714 3.0846 3.0667 3.0435 3.1056 3.0482 3.0893 3.1208 3.0805 3.1154   3.1076 3.1193 3.0578 3.0858 3.0735 3.026  3.0635 3.0716 3.0448 3.0642   3.0415 3.0233 3.0251 3.0373 3.0705 3.1275 3.0777 3.1047 3.0651 3.0797   3.1114 3.1485 3.1384 3.1461 3.1351 3.153  3.1431 3.1316 3.0828 3.1257   3.1333 3.1201 3.1242 3.0909 3.0866 3.1165 3.0936 3.1143 3.0251 3.0635   3.0724 3.0534 3.0434 3.0493]]
306                   2.96286         1.47767         0.96138         -0.03815          -0.03812          0.22006          1.56872          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1027 3.1427 3.1319 3.1095 3.1246 3.1091 3.1263 3.167  3.1361 3.1353   3.1454 3.1484 3.0994 3.1353 3.0933 3.0737 3.0976 3.0983 3.0635 3.0955   3.0739 3.0915 3.071  3.0725 3.1415 3.1606 3.1274 3.1407 3.1144 3.1326   3.1641 3.1833 3.1644 3.183  3.1645 3.1749 3.1752 3.1591 3.1437 3.1675   3.1576 3.15   3.1633 3.1317 3.1384 3.152  3.1289 3.1311 3.0751 3.0945   3.0961 3.1034 3.0952 3.0906]]
307                   3.23248         1.55809         1.14366         -0.13262          -0.04781          0.25531          1.34915          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6664 3.7561 3.6226 3.695  3.5787 3.7116 3.679  3.6268 3.5102 3.6537   3.6787 3.6093 3.6532 3.6816 3.5724 3.5752 3.6289 3.6659 3.6324 3.5629   3.5697 3.4701 3.5089 3.5628 3.5248 3.6388 3.6709 3.4814 3.6189 3.5206   3.7371 3.7835 3.7388 3.6578 3.6575 3.6637 3.7424 3.67   3.6296 3.7417   3.6922 3.5085 3.7239 3.522  3.5657 3.7035 3.6766 3.5869 3.4204 3.7249   3.6379 3.5406 3.6638 3.5839]]
308                   3.55587         1.65087         1.22794         -0.24593          -0.05334          0.27861          1.57872          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8063 3.846  3.824  3.932  3.362  3.957  3.8985 3.9149 3.9644 3.985   3.9538 3.9972 3.8187 3.9111 3.9242 3.9255 3.7871 3.9673 3.8142 3.7585   3.5214 3.8416 3.8442 3.3832 3.8793 3.9778 3.9775 4.0401 3.9333 3.8646   3.6533 3.9444 3.9111 3.5792 4.0035 4.0767 3.9222 3.9891 3.8597 3.948   3.9436 3.8757 3.8842 3.9791 3.941  3.9205 3.9247 4.0162 3.8575 3.6428   3.9781 3.9252 3.9152 4.066 ]]
309                   2.96603         1.48039         0.96502         -0.03926          -0.03926          0.22063          1.55842          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1091 3.1415 3.1153 3.1161 3.1297 3.1141 3.1356 3.172  3.1458 3.1455   3.1548 3.1603 3.1061 3.1437 3.1112 3.082  3.1058 3.1104 3.0738 3.0998   3.0818 3.0764 3.0827 3.0785 3.1318 3.1695 3.138  3.1496 3.1255 3.144   3.1764 3.1933 3.1733 3.1939 3.1731 3.1868 3.1829 3.1687 3.1476 3.1749   3.1695 3.1631 3.1691 3.142  3.1451 3.1606 3.141  3.1489 3.0879 3.1016   3.1061 3.1136 3.1053 3.0978]]
310                   2.98043         1.46777         0.93129         -0.0443          -0.04085          0.21714          1.65112          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.048  3.0262 3.0279 2.993  3.0104 3.0011 3.0619 3.0729 3.0464 3.0608   3.0813 3.063  2.9958 3.0461 3.0003 2.9901 3.0406 3.0184 2.9812 3.0127   2.9965 3.0013 2.9725 3.0105 3.0005 3.0572 3.0364 3.0278 3.029  3.0337   3.1044 3.084  3.0867 3.1012 3.0915 3.0593 3.0909 3.0685 3.0608 3.1029   3.0819 3.0596 3.0887 3.0657 3.049  3.0256 3.0387 3.0662 2.9514 2.9754   2.9723 3.0326 2.9783 2.9941]]
311                   3.19808         1.56642         1.12875         -0.12057          -0.03504          0.25218          1.40155          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7266 3.639  3.6883 3.6041 3.6397 3.5567 3.653  3.6782 3.6683 3.6244   3.6663 3.5279 3.6144 3.5844 3.5981 3.6079 3.7719 3.6356 3.4777 3.4629   3.5392 3.5611 3.6334 3.6254 3.65   3.744  3.6682 3.6896 3.5672 3.656   3.7707 3.6833 3.577  3.4537 3.7601 3.6026 3.6985 3.7402 3.6874 3.5797   3.7399 3.6713 3.5562 3.676  3.5749 3.6642 3.7    3.7197 3.5926 3.5988   3.5981 3.6063 3.4646 3.5365]]
312                   3.56335         1.64456         1.2416         -0.24855          -0.06792          0.2797          1.51195          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.9251 3.8472 3.9214 3.3348 3.6764 3.813  3.7027 4.0636 3.9476 4.0223   3.9313 4.005  3.5637 3.8429 3.835  3.6782 3.9534 3.8698 3.7547 3.9329   3.7927 3.7133 3.9138 3.7804 4.0035 3.9779 4.0075 3.7817 4.0638 3.1978   3.9356 3.9628 3.4973 3.9982 4.0208 3.9246 3.8365 3.9876 3.8298 3.9407   4.0007 4.0219 3.8266 3.944  3.8105 3.795  3.9378 4.0463 3.7209 3.7167   3.9665 3.9046 3.8031 3.8233]]
313                   2.96543         1.48018         0.96466         -0.03905          -0.03905          0.22056          1.55962          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1099 3.1437 3.1191 3.1168 3.1265 3.1148 3.1347 3.1728 3.1469 3.1478   3.1511 3.1589 3.103  3.1483 3.1075 3.0811 3.1066 3.1141 3.0758 3.0991   3.084  3.0736 3.0793 3.0792 3.1307 3.1696 3.1371 3.1506 3.1251 3.1443   3.1765 3.1913 3.1728 3.1923 3.1731 3.1864 3.1756 3.1687 3.1504 3.1758   3.1671 3.1642 3.1737 3.1414 3.1454 3.1603 3.1406 3.1471 3.0808 3.1061   3.1119 3.1142 3.1069 3.0988]]
314                   2.99754         1.47674         0.93883         -0.0503          -0.04828          0.21888          1.65777          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2033 3.0594 3.0468 3.0291 3.0565 3.0067 3.0123 3.1067 3.0612 3.0477   3.0674 3.0583 3.0348 3.2386 3.0091 3.1578 3.0187 3.0087 2.9823 3.0041   2.981  2.9638 3.0112 2.9791 3.0608 3.0633 3.0231 3.2452 3.0226 3.0547   3.0673 3.077  3.106  3.1138 3.093  3.0622 3.1084 3.2837 3.0434 3.0694   3.0842 3.0907 3.1006 3.0423 3.0472 3.2676 3.028  3.0457 2.9769 2.9694   2.9836 2.988  2.9855 2.9912]]
315                   2.96769         1.47531         0.95438         -0.03984          -0.0394          0.21932          1.59197          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.08   3.096  3.0711 3.0678 3.0899 3.078  3.1099 3.1418 3.0966 3.103   3.1291 3.1396 3.084  3.1068 3.0663 3.0307 3.0806 3.0834 3.0369 3.0688   3.0556 3.0309 3.0524 3.0687 3.1072 3.1336 3.1089 3.1075 3.0669 3.1022   3.1316 3.1623 3.1227 3.1873 3.1283 3.1555 3.1393 3.1315 3.1168 3.1273   3.1658 3.139  3.1319 3.0979 3.1136 3.1326 3.0883 3.1398 3.0567 3.0627   3.0989 3.0597 3.0519 3.0838]]
316                   3.03181         1.525         1.07468         -0.06231          -0.02497          0.23778          1.43518          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.4243 3.4903 3.4532 3.5596 3.5485 3.4374 3.4226 3.388  3.4853 3.5153   3.385  3.4898 3.4321 3.3118 3.3566 3.4682 3.4493 3.5467 3.503  3.4271   3.463  3.4825 3.3365 3.481  3.4307 3.4969 3.514  3.5223 3.52   3.4689   3.5035 3.4756 3.4639 3.5626 3.557  3.6284 3.402  3.4655 3.4469 3.3675   3.384  3.5205 3.5361 3.5581 3.5243 3.4969 3.4468 3.5125 3.4619 3.3378   3.2895 3.2706 3.5257 3.4123]]
317                   2.96193         1.47126         0.9481         -0.03782          -0.03695          0.21832          1.60897          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.0486 3.0868 3.0945 3.0502 3.078  3.06   3.0952 3.1265 3.098  3.0917   3.1183 3.092  3.0571 3.0862 3.0583 3.0326 3.0504 3.0458 3.0296 3.0619   3.0482 3.021  3.0296 3.0424 3.0727 3.1188 3.0726 3.1133 3.0746 3.0942   3.1247 3.1589 3.1181 3.152  3.1281 3.1321 3.1165 3.1191 3.0869 3.1398   3.1036 3.1257 3.1254 3.0983 3.0877 3.1118 3.0801 3.0994 3.0552 3.0669   3.0633 3.0711 3.0728 3.0585]]
318                   2.96529         1.48002         0.96272         -0.039          -0.03898          0.22033          1.57037          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1056 3.1362 3.1087 3.1091 3.13   3.113  3.1279 3.1627 3.1349 3.1383   3.1506 3.1742 3.0948 3.1395 3.0961 3.0936 3.0983 3.0965 3.0895 3.0897   3.0699 3.0682 3.0765 3.0737 3.1192 3.16   3.1274 3.1385 3.1142 3.1357   3.1848 3.1826 3.1634 3.1829 3.1828 3.1764 3.1716 3.1815 3.1403 3.1687   3.1577 3.1524 3.1635 3.1323 3.1333 3.15   3.1316 3.1599 3.0893 3.0958   3.0957 3.1015 3.095  3.0897]]
319                   2.96441         1.47513         0.95241         -0.03869          -0.03827          0.21902          1.60382          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0775 3.1392 3.0638 3.1037 3.1005 3.079  3.1178 3.1519 3.1084 3.0989   3.0962 3.134  3.072  3.1196 3.0627 3.0581 3.063  3.0599 3.0581 3.0524   3.06   3.0561 3.063  3.0384 3.1049 3.1347 3.0841 3.0976 3.1029 3.1086   3.1387 3.1326 3.1619 3.1691 3.1252 3.1412 3.1442 3.124  3.1114 3.203   3.1005 3.1104 3.1285 3.1585 3.1151 3.1477 3.0829 3.1059 3.0276 3.1017   3.0502 3.0773 3.0623 3.074 ]]
320                   3.09313         1.53334         1.07768         -0.08379          -0.04621          0.24086          1.47885          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4542 3.4681 3.5403 3.4927 3.5982 3.5424 3.4676 3.5927 3.3342 3.2951   3.5626 3.5131 3.4782 3.4454 3.4509 3.3289 3.4602 3.5145 3.4292 3.3028   3.3495 3.4002 3.4061 3.437  3.427  3.548  3.5183 3.4604 3.3745 3.5782   3.4944 3.4577 3.5009 3.5476 3.487  3.3847 3.4925 3.4367 3.4965 3.619   3.5391 3.5649 3.4403 3.5066 3.4602 3.4911 3.5344 3.3135 3.2505 3.4226   3.4635 3.5004 3.5334 3.3105]]
321                   2.96674         1.47214         0.94853         -0.03951          -0.0386          0.2186          1.60787          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0587 3.074  3.0689 3.0793 3.0808 3.042  3.0756 3.1145 3.078  3.1016   3.0907 3.1241 3.0506 3.1029 3.0748 3.0186 3.052  3.0656 3.0535 3.0468   3.0314 3.0118 3.0337 3.0405 3.073  3.1002 3.0831 3.112  3.0781 3.1026   3.1134 3.1455 3.1165 3.1619 3.1403 3.1513 3.1351 3.1193 3.1015 3.1259   3.1169 3.0997 3.1315 3.0817 3.1075 3.1078 3.0828 3.0938 3.0629 3.0536   3.0478 3.0764 3.0533 3.0371]]
322                   2.96542         1.47929         0.96179         -0.03905          -0.03902          0.22019          1.56932          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1021 3.133  3.1157 3.1131 3.123  3.1092 3.1256 3.1651 3.1581 3.1384   3.1459 3.1521 3.0988 3.1362 3.0959 3.0746 3.1004 3.0954 3.0701 3.0956   3.0715 3.0687 3.0745 3.0756 3.1224 3.16   3.128  3.1405 3.1121 3.1548   3.1636 3.1815 3.1625 3.1838 3.16   3.1771 3.1711 3.1608 3.1425 3.1678   3.1598 3.1558 3.1627 3.1311 3.1328 3.1508 3.1343 3.1358 3.0755 3.0948   3.0967 3.1018 3.0957 3.0859]]
323                   3.26301         1.57254         1.15003         -0.14332          -0.05661          0.25666          1.3721          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6585 3.7223 3.667  3.7553 3.6547 3.6575 3.7418 3.6034 3.6629 3.6686   3.6114 3.6058 3.5218 3.7067 3.6061 3.4843 3.6058 3.6873 3.589  3.5809   3.548  3.4779 3.4099 3.6258 3.6342 3.729  3.5578 3.4945 3.5693 3.5729   3.7845 3.7778 3.66   3.7567 3.6445 3.6837 3.6691 3.617  3.6646 3.7333   3.642  3.699  3.5334 3.6582 3.5869 3.7075 3.6726 3.6775 3.4054 3.644   3.6385 3.7052 3.6173 3.6067]]
324                   3.60826         1.65785         1.24687         -0.26429          -0.07639          0.2821          1.66407          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8647 3.1596 4.0862 3.8896 3.9917 3.8558 3.8255 3.9046 4.0823 3.9683   3.7467 4.0053 4.0571 3.9347 4.0192 3.8958 3.5129 3.8207 3.7376 3.8872   3.8594 3.7172 3.8653 3.7405 3.935  4.1413 4.0576 4.0265 3.8564 3.9233   3.8244 4.0706 3.9207 3.8191 4.0701 3.972  3.9956 3.7768 3.78   3.9067   3.9929 3.9881 3.9557 3.7755 3.8611 3.9256 3.7102 3.7985 3.7557 3.7747   3.6662 3.8946 3.7642 3.5104]]
325                   2.96572         1.48014         0.96484         -0.03915          -0.03915          0.22059          1.56162          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1119 3.141  3.1176 3.1236 3.1287 3.1157 3.1364 3.1741 3.1485 3.1477   3.1495 3.1617 3.1102 3.1429 3.1045 3.0795 3.1051 3.105  3.0779 3.1014   3.0807 3.0733 3.0799 3.0804 3.1312 3.1696 3.1382 3.1505 3.1222 3.1419   3.1736 3.1931 3.1757 3.1934 3.1723 3.1866 3.1821 3.1651 3.1488 3.1738   3.1675 3.1627 3.1691 3.1413 3.1474 3.1601 3.1398 3.1469 3.0872 3.1093   3.1033 3.1135 3.1031 3.0992]]
326                   3.00208         1.4697         0.93339         -0.05189          -0.04829          0.21852          1.65407          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.0074 3.0386 3.0413 3.0282 3.0305 3.0074 3.0233 3.075  3.0805 3.037   3.0588 3.0446 3.0057 3.026  3.0191 2.9557 3.0249 3.0161 2.9486 2.986   2.9577 2.9632 2.989  2.9918 3.     3.0747 3.0297 3.0379 3.0264 3.0286   3.0878 3.0773 3.0915 3.0807 3.0551 3.2627 3.0588 3.0693 3.0229 3.0961   3.0625 3.0575 3.0864 3.0654 3.0156 3.0683 3.0139 3.0865 2.9633 2.9979   3.0023 3.0091 2.9724 2.9995]]
327                   3.14745         1.54803         1.13328         -0.10282          -0.01819          0.25051          1.38103          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6179 3.7362 3.667  3.546  3.6582 3.631  3.6782 3.6067 3.6859 3.6845   3.5363 3.7319 3.5526 3.5227 3.6472 3.656  3.6098 3.6089 3.5851 3.6307   3.6105 3.6544 3.5435 3.5233 3.6864 3.7457 3.663  3.6352 3.6331 3.5487   3.6756 3.643  3.4822 3.714  3.4598 3.7406 3.6983 3.6185 3.4199 3.7087   3.5805 3.5214 3.7424 3.7038 3.746  3.6618 3.6909 3.473  3.6528 3.7032   3.6408 3.6358 3.5439 3.5801]]
328                   3.68869         1.70277         1.25972         -0.29247          -0.12367          0.28612          1.60222          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4768 3.9262 3.9873 3.8992 3.76   3.407  3.9608 4.063  3.9059 3.8579   4.1575 3.943  4.0867 4.038  3.8478 3.752  3.7903 3.7657 3.9025 3.8942   3.816  3.7881 3.8554 3.725  3.8522 3.73   3.9383 3.9449 2.5029 3.5372   4.0969 3.9608 3.886  4.0054 3.7405 3.8323 3.9262 3.9103 4.0712 3.9793   3.9086 3.9271 3.9678 3.742  4.0883 3.9507 4.0191 3.8677 3.6406 3.7264   3.8371 3.6554 3.8573 3.1048]]
329                   2.96589         1.48017         0.96506         -0.03921          -0.03921          0.22062          1.56007          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1119 3.1428 3.1151 3.1124 3.129  3.1162 3.133  3.1739 3.1464 3.1486   3.1522 3.1616 3.1066 3.1431 3.1081 3.0804 3.1066 3.1044 3.0735 3.0986   3.0814 3.0783 3.0799 3.0806 3.1315 3.1683 3.138  3.1506 3.1253 3.1444   3.1714 3.1957 3.1762 3.1952 3.1725 3.187  3.1831 3.167  3.1477 3.1738   3.1669 3.1587 3.1691 3.1387 3.1457 3.1592 3.1392 3.1459 3.0891 3.1075   3.108  3.1132 3.1057 3.0945]]
330                   2.99339         1.47388         0.93974         -0.04885          -0.04633          0.21876          1.64592          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.0144 3.0432 2.9994 3.0335 3.036  3.0239 3.0504 3.0905 3.06   3.0848   3.0259 3.2809 3.0336 3.0436 3.0334 3.0024 3.0095 2.9869 2.9516 2.9618   2.9642 2.9705 3.0036 3.0079 3.0339 3.082  2.9992 3.0761 3.012  3.0281   3.0453 3.0837 3.0704 3.1123 3.059  3.0977 3.2961 3.0786 3.0483 3.0644   3.0543 3.0412 3.1021 3.0423 3.0517 3.0328 3.2564 3.07   2.9729 2.9741   3.032  3.032  3.0171 3.182 ]]
331                   0.82908         0.66977         0.43707         0.7095          0.71332          0.07948          0.46685          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2682 3.5997 3.3337 3.3335 3.4666 3.3337 1.8664 2.2668 2.0001 1.9996   2.0666 2.1333 4.5333 4.9337 4.5333 4.2655 4.5329 4.5328 5.5345 5.802   5.6011 5.5328 5.5998 5.6    2.6014 2.9997 2.6666 2.8004 2.533  2.7337   0.8022 1.0004 0.7999 0.9983 0.8002 0.933  3.1826 3.1698 1.2    3.1765   1.4022 1.3319 3.1689 2.3338 2.4005 2.5343 2.3331 2.3977 4.9993 5.2003   5.1994 5.2669 5.1999 5.1333]]
332                   0.82973         0.65358         0.39008         0.70927          0.7093          0.06984          0.46658          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.5997 3.3336 3.3334 3.4664 3.3324 1.8664 2.267  2.0001 2.0001   2.0667 2.1325 4.5331 4.9335 4.5332 3.0817 3.1064 4.5327 5.5325 5.8003   5.5994 5.5325 5.6012 5.5998 2.5993 2.9994 2.6678 2.8001 2.5347 2.733   0.7986 0.9999 0.8007 0.9991 0.7996 0.9324 3.1827 1.3994 1.1997 1.466   1.3996 1.3334 3.1694 2.3332 2.4002 2.5333 2.334  2.4003 4.9994 5.2   5.1997 5.2662 5.1993 5.1333]]
333                   0.58976         0.58706         0.34099         0.79336          0.79376          0.05251          0.46675          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2655 3.5999 3.3324 3.3333 3.4666 3.3333 1.8667 2.2671 2.0016 2.0001   2.0666 2.1332 4.5336 4.9331 4.5324 4.2657 4.5333 4.5333 5.5331 5.7993   5.6001 5.5335 5.5994 5.6001 2.5998 3.0013 2.6669 2.8013 2.5314 2.7337   0.8004 1.0002 0.8    0.9998 0.8002 0.9319 1.5324 1.3988 1.2014 1.4685   1.3995 3.1635 2.667  2.3336 2.4006 2.5337 2.3318 2.3992 5.0006 5.2005   5.2    5.2675 5.1994 5.1336]]
334                   0.78071         0.64555         0.36899         0.72645          0.72655          0.06418          0.46715          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2674 3.6009 3.3331 3.3335 3.4671 3.3342 1.8669 2.2654 1.9989 2.0001   2.0661 2.1341 4.5336 4.9332 4.5333 3.0817 3.1073 4.5324 5.5328 5.7998   5.6    5.5333 5.5989 5.5989 2.5998 2.9999 2.6669 2.7991 2.5334 2.7333   0.7975 1.0001 0.8007 0.9971 0.7992 0.9328 1.5334 1.4019 1.2003 3.1771   1.3994 1.3322 2.6692 2.3339 2.3999 2.5351 2.3337 2.4008 4.9997 5.1998   5.1998 5.2664 5.1994 5.1331]]
335                   0.62798         0.61227         0.3368         0.77996          0.78006          0.05066          0.46675          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.5997 3.3336 3.3333 3.4656 3.3334 1.8667 2.2666 1.9988 2.0001   2.0666 2.1326 4.5336 4.933  4.533  4.2672 3.1066 3.1068 5.5333 5.798   5.6011 5.5336 5.6005 5.5994 2.6006 3.0003 2.6681 2.8006 2.5324 2.7334   0.7999 1.0001 0.7994 0.9997 0.8001 0.9308 1.5326 1.4002 3.1501 1.4668   1.4004 1.3332 2.6673 2.3344 2.4    2.536  2.3352 2.4007 4.9997 5.1995   5.2    5.2665 5.2    5.1321]]
336                   0.69716         0.61391         0.33769         0.75572          0.75654          0.05501          0.46647          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.6004 3.3326 3.3334 3.4662 3.333  1.8665 2.2666 2.0004 1.9998   2.0665 2.1332 4.5336 4.933  4.5331 3.0821 3.1069 4.5335 5.5337 5.7999   5.5997 5.5331 5.5996 5.6016 2.6003 3.0004 2.6669 2.8002 2.5335 2.7334   0.7996 1.0009 0.8001 1.0036 0.8006 0.9335 1.5341 1.3999 1.199  1.4664   1.3999 1.3331 2.6678 2.3339 2.4004 2.5336 2.3319 2.3998 4.9991 5.1998   5.1981 5.2667 5.1999 5.1323]]
337                   0.81976         0.65582         0.38898         0.71277          0.71278          0.06885          0.46637          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.267  3.5997 3.3352 3.3318 3.4664 3.3331 1.8669 2.2685 1.999  2.0006   2.0666 2.133  4.5328 4.9334 4.5331 3.0811 4.533  3.1063 5.533  5.7989   5.5998 5.5338 5.5999 5.6    2.6006 3.0003 2.6673 2.8002 2.5331 2.733   0.8    1.0002 0.8018 1.0007 0.8027 0.933  3.1821 1.3988 1.1998 1.4663   1.4021 1.3335 2.6669 2.3325 2.4004 3.1575 2.3344 2.3994 5.     5.2001   5.2003 5.2653 5.199  5.1327]]
338                   0.91693         0.68923         0.42309         0.67872          0.67885          0.07928          0.46705          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2663 3.5997 3.3333 3.1257 3.4666 3.3333 1.8673 2.2673 1.9999 2.0001   2.0665 2.1334 4.533  4.9348 3.108  3.0821 4.5325 4.5331 5.5351 5.7992   5.6009 5.5334 5.5997 5.6003 2.5994 2.9999 2.6633 2.8007 2.5328 2.7335   0.8001 0.9996 0.8008 1.0021 0.7999 0.936  3.1829 1.3989 1.1992 3.1768   1.3999 1.3333 3.1694 2.3328 2.4002 2.5331 2.3344 2.4003 5.     5.2017   5.1986 5.266  5.1983 5.1329]]
339                   0.91347         0.68536         0.42196         0.67993          0.68012          0.07908          0.46665          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.268  3.6005 3.3335 3.3332 3.4664 3.3327 1.8676 2.267  1.9996 2.0004   2.0672 2.1334 3.1073 4.9338 4.5336 3.0827 4.5321 4.5309 5.5339 5.7998   5.6001 5.5325 5.5977 5.6021 2.5999 3.0005 2.667  2.7999 2.5337 2.7332   0.7984 1.0006 0.8002 1.0005 0.8011 0.9333 3.1835 1.3996 1.1997 3.1762   1.4001 1.3342 3.17   2.3329 2.4001 2.5332 2.3333 2.4    5.0003 5.1995   5.2001 5.2668 5.2    5.1334]]
340                   0.82078         0.67522         0.42383         0.71241          0.7141          0.07602          0.46732          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3339 3.3347 3.4665 3.3337 1.8666 2.2654 2.0021 2.0001   2.0641 2.1338 4.5321 4.9329 4.5323 4.2664 4.5329 3.1073 5.5335 5.7995   5.6029 5.5325 5.6001 5.601  2.599  2.9995 2.667  2.8003 2.5336 2.7331   0.7998 0.9983 0.7996 1.0005 0.7999 0.9302 3.1816 1.399  1.2009 3.1749   1.4001 3.1639 2.6667 2.3332 2.3999 2.5325 2.3332 2.3999 5.0005 5.1995   5.1982 5.2668 5.2    5.1335]]
341                   0.89064         0.67285         0.4131         0.68793          0.68803          0.0761          0.46647          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2663 3.6    3.3329 3.333  3.4671 3.333  1.8666 2.2669 1.9991 2.0001   2.0672 2.133  4.5353 4.9333 4.5333 4.2658 4.5327 4.5334 5.5334 5.7992   5.6017 3.0819 5.5998 5.6    2.5996 2.9999 2.6668 2.7994 2.5332 2.7324   0.8007 1.0004 0.7999 1.001  0.8006 0.933  3.1822 1.4002 1.2001 3.1759   1.399  1.3335 2.6679 2.339  2.401  2.5327 2.3342 2.4001 4.9997 5.2   5.1991 5.2666 5.1996 5.132 ]]
342                   0.81922         0.65244         0.40295         0.71296          0.71403          0.07177          0.46718          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2676 3.5998 3.3333 3.3333 3.466  3.334  1.8665 2.267  2.758  2.0001   2.067  2.136  4.5324 4.9334 4.5325 3.0819 4.5316 4.533  5.5316 5.8001   5.5996 5.5327 5.5997 5.5993 2.6    2.9999 2.6669 2.8004 2.5312 2.7334   0.8002 0.9998 0.8021 1.0018 0.8    0.9351 3.1834 3.169  1.2001 1.4661   1.3977 1.3341 2.6658 2.3343 2.3994 2.5339 2.3347 2.4014 4.9998 5.2   5.1993 5.2666 5.2004 5.1346]]
343                   0.92273         0.69053         0.39126         0.67669          0.67813          0.07176          0.46722          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2694 3.6003 3.3332 3.3331 3.4665 3.3335 1.8671 2.2618 1.9989 2.0004   2.0661 2.1338 4.5338 4.9332 4.5332 3.0818 4.5325 3.1071 5.5327 5.7997   5.5997 5.5343 3.0881 5.6001 2.6004 2.9997 2.6672 2.8002 2.5331 2.7329   0.8003 1.0006 0.8007 1.0003 0.8016 0.9308 3.1827 1.4002 1.2001 1.4673   1.4018 1.3329 2.667  2.3377 2.4013 2.5333 2.3325 2.4001 5.0005 5.2004   5.1999 5.2643 5.2002 5.1337]]
344                   0.79992         0.65765         0.41572         0.71972          0.72203          0.07288          0.4669          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5998 3.3332 3.3338 3.4666 3.3335 1.8665 2.2669 2.0001 1.9998   2.0672 2.1351 3.1062 4.9332 4.5327 4.2661 4.5332 4.5332 5.5331 5.7999   5.5994 5.5331 5.599  5.6002 2.5996 2.9995 2.6662 2.8    2.5323 2.733   0.8    1.0026 0.7987 0.9975 0.7991 0.933  3.181  1.4001 3.1509 3.1757   1.4017 1.3332 3.1696 2.3339 2.402  2.5332 2.3336 2.3991 5.0002 5.1997   5.2002 5.2674 5.2001 5.1333]]
345                   0.65689         0.59986         0.37487         0.76983          0.77008          0.06176          0.4667          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.5997 3.3336 3.3341 3.4667 3.1259 1.8669 2.2667 2.     1.9986   2.0667 2.1333 4.5333 4.9333 4.5332 4.2665 4.5326 4.5333 5.5333 5.8007   5.6019 5.5321 5.599  5.5995 2.5997 2.9999 2.6663 2.7998 2.5344 2.7315   0.7999 0.9989 0.8015 0.9987 0.7997 0.9346 3.1829 1.4    1.1996 1.4669   1.3995 1.3319 2.6677 2.3333 2.3998 2.5331 2.3324 2.3999 4.9992 5.2001   5.1999 5.2668 5.1993 5.1325]]
346                   0.81996         0.65591         0.389         0.7127          0.71271          0.06888          0.46695          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2669 3.6003 3.3332 3.3338 3.4669 3.3326 1.8671 2.2662 1.9991 1.9996   2.0666 2.1348 3.1059 4.9326 4.5332 3.0801 4.5332 4.5329 5.533  5.7997   5.6009 5.5346 5.6    5.5984 2.5992 2.9998 2.6666 2.8002 2.534  2.7304   0.8007 1.0006 0.8002 0.9998 0.8001 0.9332 3.1819 1.3994 1.1993 1.4672   1.3994 1.3328 2.6692 2.3337 2.4009 3.1572 2.3333 2.3995 4.9998 5.2002   5.1999 5.2653 5.1992 5.133 ]]
347                   0.94642         0.70874         0.43939         0.66839          0.66915          0.08284          0.46697          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.5995 3.3334 3.3338 3.4666 3.3332 1.8674 2.2665 2.0002 1.9997   2.0667 2.134  3.1055 4.9367 4.5333 3.0821 4.5338 4.5325 5.5343 5.8003   5.5998 5.5337 5.6002 5.6007 2.5999 3.0003 2.6669 2.7977 2.5336 2.7321   0.7999 0.999  0.7971 1.0001 0.8    0.9331 3.1819 3.1691 1.1998 3.1765   1.4001 1.3335 2.6657 2.3331 2.4016 2.5319 2.3313 2.4001 5.0008 5.2009   5.1981 5.2678 5.2015 5.1329]]
348                   0.91142         0.69791         0.42053         0.68065          0.6811          0.07753          0.4669          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2655 3.6    3.3332 3.3322 3.4662 3.3334 1.8672 2.2661 1.9993 2.0006   2.0667 2.1336 4.5342 4.9333 3.1077 3.0825 4.5336 4.5338 5.5331 5.7991   5.5995 5.535  5.6001 5.5997 2.599  3.0008 2.6671 2.7998 2.533  2.733   0.8004 0.9995 0.8012 0.9996 0.7998 0.9353 3.1821 1.3998 1.2014 1.4669   3.1702 1.3307 3.1696 2.3343 2.3997 3.1572 2.3331 2.4004 5.0003 5.1997   5.1991 5.2667 5.2001 5.1328]]
349                   0.86243         0.67709         0.40767         0.69781          0.69789          0.07359          0.46722          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2658 3.5999 3.3333 3.3331 3.4667 3.3339 1.8664 2.2666 2.0008 1.9995   2.0679 2.1336 4.5326 4.9334 4.5334 3.0826 4.5329 3.1071 5.5325 5.7999   5.6013 5.5342 5.5993 5.5999 2.5999 2.9987 2.6668 2.8029 2.5329 2.7332   0.8018 0.9986 0.8001 0.9994 0.7999 0.9335 3.183  1.4002 1.1992 1.4661   3.1686 1.3331 2.6667 2.3336 2.3999 2.5336 2.3332 2.4007 4.9998 5.1998   5.2004 5.2672 5.1989 5.133 ]]
350                   0.93402         0.69083         0.37668         0.67273          0.67407          0.06948          0.46735          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2671 3.6002 3.3333 3.3339 3.4667 3.3339 1.865  2.267  2.0005 1.9997   2.0668 2.1337 4.5327 4.9327 4.534  3.083  4.5335 3.1081 5.5365 5.7989   5.5996 3.0821 5.5998 5.6006 2.5992 2.9998 2.6662 2.801  2.5338 2.7341   0.8004 1.0004 0.7993 0.9995 0.8013 0.9335 1.5338 1.4007 1.1999 3.1762   1.4013 1.3328 2.6684 2.3344 2.3995 2.5334 2.3338 2.3999 5.0006 5.2014   5.1996 5.2677 5.1995 5.1335]]
351                   0.79503         0.63947         0.39037         0.72143          0.72206          0.06881          0.4663          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6005 3.3323 3.3338 3.4664 3.3337 1.8663 2.265  2.0006 1.9996   2.0676 2.1341 4.5333 4.9332 4.5331 3.0808 4.5337 4.5318 5.5335 5.8002   5.5991 5.5338 5.6011 5.6003 2.5998 3.     2.6661 2.7988 2.533  2.7333   0.8004 0.9994 0.7997 0.9988 0.8005 0.9339 3.1831 1.4    1.2    1.4644   1.3998 3.1632 2.6675 2.3332 2.4002 2.5348 2.3324 2.4003 4.9998 5.2008   5.2004 5.2655 5.1998 5.1336]]
352                   0.84742         0.65993         0.40917         0.70308          0.70398          0.07417          0.46625          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.5998 3.3331 3.3332 3.4659 3.3337 1.8668 2.2675 1.9989 2.0002   2.0666 2.1339 4.5327 4.9332 4.5333 3.0813 4.5333 4.5335 5.534  5.8003   5.5999 5.5354 5.6003 5.5993 2.6006 3.0002 2.6663 2.7999 2.5334 2.7322   0.8    1.0016 0.7992 0.9998 0.8005 0.9334 3.182  1.3998 1.2001 1.4665   3.1699 1.3334 3.1707 2.3346 2.402  2.5325 2.335  2.3999 4.999  5.2   5.2    5.2663 5.1996 5.1327]]
353                   0.80356         0.64808         0.38432         0.71844          0.71861          0.06757          0.46715          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.5991 3.3335 3.3335 3.466  3.1252 1.8664 2.2683 2.0004 2.0011   2.0655 2.1338 4.5337 4.9323 4.5346 3.082  3.1068 4.5338 5.5331 5.8001   5.6019 5.5329 5.6009 5.6006 2.5996 3.0009 2.6666 2.8005 2.5335 2.734   0.8013 1.0002 0.7996 1.     0.8004 0.9341 3.1828 1.4002 1.2009 1.4675   1.4016 1.3326 2.6665 2.3333 2.3997 2.5339 2.3339 2.4001 4.9999 5.1999   5.1995 5.2667 5.1986 5.134 ]]
354                   0.80537         0.68168         0.40987         0.71781          0.71785          0.07164          0.46757          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2663 3.6027 3.331  3.3335 3.4662 3.3337 1.8669 2.2664 2.0011 2.   2.0666 2.1334 4.5324 4.9333 4.5332 4.2666 3.1073 3.1057 5.5316 5.7996   5.5999 5.5339 5.6004 5.5997 2.6003 3.0002 2.666  2.7994 2.5329 2.7343   0.8006 1.0008 0.7998 0.9998 0.8    0.9341 3.1818 3.1705 1.2007 1.4664   1.4003 1.3333 2.6683 2.3329 2.3997 2.5334 2.3337 2.4    5.003  5.2006   5.1988 5.2663 5.2001 5.1329]]
355                   0.8388         0.64947         0.40901         0.7061          0.70666          0.07465          0.46675          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2679 3.5994 3.3331 3.3334 3.4665 3.3333 1.8672 2.2656 2.0002 1.9988   2.0678 2.1335 4.5333 4.9332 4.5337 3.0818 4.5338 4.5337 5.5332 5.7988   5.5996 5.5333 5.5995 5.6001 2.5995 3.     2.6663 2.8002 2.5333 2.7333   0.7999 1.0007 0.8012 0.9971 0.7998 0.9324 3.1816 1.4004 1.2013 3.1762   1.4019 1.3346 2.6661 2.3321 2.4004 2.5334 2.334  2.3996 4.9992 5.2007   5.2008 5.2669 5.1986 5.1332]]
356                   0.70191         0.6511         0.36397         0.75406          0.7542          0.0592          0.46707          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2676 3.6    3.3329 3.3335 3.4664 3.3332 1.868  2.2669 2.0007 2.0004   2.0671 2.1336 3.1064 4.9334 4.5333 4.2669 4.5317 3.1085 5.5328 5.7999   5.5997 5.5332 5.6001 5.5998 2.6002 2.9998 2.6652 2.7995 2.5319 2.7318   0.8003 0.9986 0.7984 1.0001 0.8015 0.9356 1.5335 3.1697 1.1987 1.4668   1.3997 1.3338 2.6659 2.3333 2.3991 2.5329 2.334  2.3998 4.9993 5.1999   5.2002 5.2681 5.2009 5.1332]]
357                   0.75545         0.61798         0.37773         0.7353          0.73533          0.06549          0.46622          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.266  3.6001 3.3335 3.3342 3.4671 3.3334 1.8664 2.2668 2.     2.   2.0662 2.1328 4.5333 4.9336 4.5331 3.0825 4.5332 4.5345 5.5329 5.8007   5.6012 5.5337 5.6001 5.5994 2.6001 2.9996 2.6666 2.7988 2.5348 2.7333   0.7999 1.0012 0.7982 1.0002 0.8001 0.936  3.182  1.4029 1.201  1.4671   1.3996 1.333  2.6673 2.334  2.4006 2.5343 2.3339 2.3999 4.9995 5.2005   5.1995 5.2672 5.2    5.1334]]
358                   0.72672         0.62325         0.34459         0.74537          0.7459          0.05745          0.46675          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2656 3.5989 3.3325 3.3334 3.4666 3.3333 1.8661 2.2666 2.0006 1.9986   2.0679 2.1346 4.5337 4.9334 3.1075 3.0804 4.5331 4.5327 5.5331 5.7999   5.6034 5.5336 5.5997 5.6003 2.6014 3.001  2.667  2.7997 2.5332 2.7351   0.801  0.9994 0.7994 1.002  0.8002 0.9334 1.5356 1.4013 1.2004 1.4672   1.3999 1.3332 3.1694 2.3339 2.3992 2.5337 2.333  2.3995 4.9991 5.2001   5.1988 5.2666 5.1998 5.1337]]
359                   0.65552         0.5911         0.3327         0.77032          0.77055          0.05324          0.46655          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2675 3.5996 3.3328 3.3331 3.4665 3.1253 1.8666 2.2669 1.9992 2.0001   2.0682 2.1313 4.534  4.9328 4.5334 3.0822 4.5339 4.5334 5.5337 5.8   5.6017 5.5334 5.6009 5.6009 2.6002 2.999  2.6665 2.8001 2.5334 2.7328   0.8002 0.9991 0.7996 0.9994 0.7998 0.9332 1.5331 1.3987 1.1955 1.4679   1.4001 1.3333 2.6678 2.3343 2.4004 2.5334 2.333  2.4004 4.9998 5.1998   5.1983 5.2656 5.2006 5.1329]]
360                   0.71873         0.63268         0.40005         0.74817          0.75025          0.068          0.46673          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.5999 3.3327 3.3332 3.4663 3.3338 1.8674 2.2667 2.0002 2.0013   2.0665 2.1329 4.5325 4.9328 4.5341 4.2667 4.533  4.5337 5.5341 5.7991   5.6001 5.531  5.6006 5.599  2.5996 3.001  2.6663 2.8005 2.5341 2.7334   0.7992 1.0023 0.8008 1.0004 0.8016 0.9334 3.1829 1.4006 1.1988 1.4643   3.1696 1.3337 2.6662 2.3331 3.1449 2.5337 2.333  2.3989 4.9994 5.2   5.1999 5.2657 5.2003 5.1333]]
361                   0.60112         0.59231         0.3501         0.78938          0.79105          0.05307          0.46593          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2678 3.6009 3.3336 3.3344 3.4659 3.332  1.8676 2.265  1.9998 2.001   2.0682 2.1354 4.5336 4.9335 4.5339 4.2664 4.5346 4.5337 5.5341 5.8001   5.5993 5.5327 5.6015 5.6012 2.6008 3.     2.6662 2.7993 2.5333 2.7334   0.8012 0.9983 0.7981 0.9998 0.8005 0.934  1.5338 3.1697 3.151  1.4654   1.4005 1.3319 2.6696 2.3337 2.4003 2.5354 2.3329 2.4002 5.0006 5.2001   5.1988 5.2669 5.1997 5.1332]]
362                   0.84792         0.67466         0.3903         0.7029          0.70322          0.06947          0.46722          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5992 3.3334 3.3337 3.4668 3.3335 1.8663 2.2661 1.9996 2.0002   2.0671 2.1336 4.5328 4.9329 4.5334 3.0817 3.1058 3.1063 5.5337 5.7992   5.6005 5.5325 5.5997 5.6024 2.6    2.9997 2.6676 2.8001 2.5313 2.7335   0.8003 0.9994 0.8006 0.9997 0.8005 0.9342 3.1819 1.4001 1.2    1.4666   1.401  1.3346 2.6694 2.3312 3.1448 2.5332 2.3338 2.4013 5.0013 5.1998   5.2008 5.2668 5.1998 5.1326]]
363                   0.67027         0.59096         0.33636         0.76514          0.76534          0.0532          0.4668          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.267  3.6003 3.3326 3.3323 3.4668 3.3338 1.8664 2.2665 1.9992 2.0003   2.0702 2.1318 4.5332 4.9331 4.5323 3.0817 4.5331 4.5319 5.5317 5.7995   5.6004 5.5332 5.5991 5.6    2.6009 2.9995 2.6661 2.8009 2.5338 2.7331   0.8002 1.0006 0.802  1.0018 0.7998 0.9338 1.5332 1.3995 3.1509 1.4671   1.3995 1.3323 3.1695 2.3335 2.4001 2.5331 2.3336 2.4007 5.0001 5.2   5.2    5.2666 5.1993 5.1337]]
364                   0.82984         0.65371         0.39026         0.70923          0.70926          0.06986          0.46652          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3332 3.335  3.4671 3.334  1.8673 2.2674 1.999  1.9994   2.0654 2.1333 4.5332 4.9327 4.5336 3.0816 3.1061 4.5331 5.5336 5.8005   5.5984 5.5346 5.6001 5.5999 2.5999 3.     2.6681 2.8005 2.5336 2.7339   0.7995 0.9999 0.8003 1.0004 0.8    0.9354 3.1825 1.4014 1.1997 1.4636   1.4001 1.3317 3.1699 2.3334 2.4006 2.5335 2.3321 2.4011 4.9998 5.1997   5.1996 5.2693 5.1996 5.1336]]
365                   0.65194         0.58722         0.33161         0.77157          0.77174          0.05301          0.46675          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2661 3.5995 3.333  3.3336 3.4669 3.3333 1.8667 2.2674 2.0029 1.9999   2.067  2.1328 4.5335 4.9333 4.5332 3.0821 4.531  4.5323 5.5333 5.7981   5.6015 5.5332 5.6008 5.6017 2.5991 2.9999 2.6678 2.8016 2.5337 2.7336   0.8005 0.9991 0.7999 0.9997 0.7973 0.9312 1.5328 1.4001 1.2047 1.4671   1.4003 1.3329 2.667  2.3333 2.3998 2.5335 2.3333 2.3997 4.9988 5.1991   5.1996 5.2666 5.1996 5.1335]]
366                   0.88448         0.69242         0.40171         0.69009          0.69013          0.07263          0.46782          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6006 3.3337 3.3333 3.4652 3.3332 1.8673 2.267  2.     2.0009   2.0673 2.1345 4.5328 4.933  3.1073 3.0814 3.1063 4.5334 5.5336 5.8004   5.5978 5.5322 5.5993 5.5987 2.5997 3.     2.6667 2.7998 2.5331 2.7339   0.8005 0.9982 0.7998 1.     0.7996 0.9326 3.1816 1.3993 1.1997 1.4663   1.4009 3.1637 2.6689 2.3329 2.4    2.5314 2.3334 2.4003 4.9995 5.2012   5.2015 5.2679 5.1995 5.1342]]
367                   0.8295         0.65361         0.39009         0.70935          0.70938          0.06982          0.46683          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2669 3.5998 3.3329 3.3327 3.4669 3.3339 1.8662 2.2669 2.0002 2.0001   2.0667 2.1337 4.5329 4.9327 3.1077 3.0835 4.5333 4.5333 5.5335 5.7998   5.6003 5.5304 5.5995 5.5996 2.6012 3.0015 2.6667 2.8001 2.5333 2.7331   0.7997 0.9996 0.8011 0.9999 0.8002 0.9309 3.1821 1.4006 1.1997 1.4653   1.4002 1.333  3.17   2.3339 2.4012 2.5342 2.3342 2.3999 5.     5.2006   5.2002 5.2671 5.2004 5.1332]]
368                   0.75424         0.62261         0.36789         0.73572          0.73679          0.06244          0.46685          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3331 3.3334 3.4667 3.333  1.8673 2.2673 1.9998 1.9998   2.0664 2.1331 4.5325 4.9334 4.5344 3.0814 4.5328 4.5334 5.5313 5.8002   5.6001 5.533  5.6007 5.5997 2.6    3.0005 2.6661 2.8014 2.5337 2.7319   0.799  0.9992 0.8014 0.9992 0.7987 0.9344 1.5337 1.4004 3.1505 3.1777   1.3989 1.3329 3.1697 2.3331 2.3999 2.5356 2.335  2.4007 4.9997 5.1996   5.1997 5.2658 5.2002 5.1323]]
369                   0.57982         0.57485         0.33515         0.79684          0.79687          0.05164          0.46622          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.266  3.6008 3.3334 3.3331 3.4659 3.3337 1.8672 2.2656 1.9998 1.9993   2.0685 2.1331 4.5328 4.9331 4.5347 4.2659 4.5338 4.5334 5.5332 5.7996   5.6011 5.534  5.599  5.5995 2.5989 3.     2.6663 2.7998 2.5337 2.7332   0.8    1.0004 0.7986 1.0002 0.7997 0.9327 1.5337 1.3989 1.1987 1.4665   1.4016 1.3316 3.1701 2.333  2.3996 2.5331 2.3331 2.4006 4.9992 5.1989   5.1993 5.2664 5.2003 5.1338]]
370                   0.90172         0.68235         0.4338         0.68405          0.68592          0.08094          0.46682          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6009 3.3333 3.3328 3.4667 3.3332 1.867  2.2668 1.9995 1.9988   2.0662 2.1336 4.5332 4.9331 4.5328 3.0823 4.5327 4.5356 5.5302 5.8006   5.6014 5.5334 5.6013 5.5997 2.5999 3.0004 2.6668 2.799  2.5327 2.7325   0.8004 0.9994 0.8    1.0004 0.8003 0.9334 3.183  1.3995 1.2009 3.1764   3.1695 1.3335 2.6691 2.3331 2.4003 2.5333 2.3335 2.4002 5.     5.2014   5.1999 5.267  5.197  5.1333]]
371                   0.71925         0.6231         0.35717         0.74798          0.748          0.05955          0.46585          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1193 3.6001 3.3332 3.3332 3.4669 3.3332 1.8666 2.268  2.     2.0005   2.0667 2.1316 4.5335 4.9337 4.5326 3.0805 4.5323 4.5324 5.535  5.7997   5.6004 5.5339 5.5981 5.5994 2.5989 2.9988 2.6659 2.8003 2.5336 2.7341   0.7971 1.0014 0.7992 0.9996 0.8001 0.9333 1.5357 3.1696 1.199  1.4656   1.4002 1.3337 2.6655 2.3333 2.4006 2.5337 2.3322 2.399  5.0004 5.1999   5.2009 5.2666 5.1997 5.1336]]
372                   0.56991         0.57714         0.33393         0.80031          0.80036          0.05065          0.46653          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2663 3.6    3.3339 3.3323 3.4668 3.3338 1.8667 2.2662 1.9994 1.9998   2.0666 2.1322 4.5338 4.9332 4.5326 4.2654 4.5332 4.5337 5.5335 5.8007   5.5984 5.5323 5.5992 5.6002 2.6009 2.9999 2.6684 2.7999 2.5336 2.733   0.8002 1.     0.7995 1.0003 0.8001 0.9334 1.5344 1.3998 1.1988 1.4666   1.4017 1.3334 2.667  2.3334 2.4003 3.1574 2.333  2.4001 4.9972 5.1998   5.2013 5.2662 5.1986 5.1325]]
373                   0.8103         0.65479         0.37613         0.71608          0.7161          0.06666          0.46683          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2662 3.5999 3.3335 3.3331 3.4664 3.3332 1.867  2.2678 2.     2.0009   2.0664 2.1342 3.1078 4.9334 4.5352 3.0823 4.5333 4.5335 5.5331 5.8032   5.6001 5.5333 5.6019 5.6005 2.5996 3.0015 2.6666 2.8001 2.5333 2.7333   0.799  1.     0.7988 0.9996 0.7999 0.9351 1.5324 1.4009 1.2008 3.1769   1.3995 1.3284 3.1696 2.3352 2.4004 2.5325 2.3345 2.4015 4.9989 5.1999   5.1983 5.2664 5.1997 5.1333]]
374                   0.84376         0.6524         0.40995         0.70436          0.70485          0.07495          0.46695          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1201 3.5995 3.3334 3.333  3.4671 3.3341 1.8663 2.2694 2.0005 2.0002   2.0667 2.1345 4.5334 4.933  4.5338 3.082  4.5333 4.5329 5.5321 5.8012   5.5995 5.5332 5.5993 5.5994 2.5999 3.0008 2.6662 2.7987 2.5336 2.7306   0.7999 1.0009 0.8002 0.9989 0.801  0.9332 3.1826 1.4    1.1987 3.1765   1.4012 1.3333 2.6671 2.3335 2.3999 2.5332 2.3329 2.3991 5.0013 5.2011   5.2004 5.2661 5.2004 5.134 ]]
375                   0.872         0.66267         0.41727         0.69446          0.6952          0.07733          0.4668          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.6    3.1252 3.3331 3.4656 3.3331 1.8685 2.2659 1.9989 2.0007   2.0661 2.1334 4.5334 4.9335 4.5335 3.0817 4.533  4.5332 5.5312 5.8004   5.6017 5.5334 5.5996 5.5996 2.5992 3.0005 2.665  2.8002 2.5332 2.7331   0.7999 1.0004 0.8    1.001  0.8002 0.9324 3.1832 1.4003 1.2019 3.176   1.3998 1.3336 3.1697 2.3338 2.4005 2.5335 2.334  2.3997 5.0015 5.2001   5.1982 5.2668 5.1997 5.1335]]
376                   0.89598         0.69777         0.41095         0.68606          0.68627          0.07322          0.46768          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6002 3.3327 3.3328 3.4665 3.3331 1.8664 2.2669 2.0003 2.   2.069  2.1336 4.5319 4.9333 4.533  3.0807 3.1079 3.1071 5.5338 5.8007   5.6001 5.533  5.6003 5.6006 2.6011 3.0002 2.6667 2.8015 2.533  2.7335   0.8    1.0001 0.7994 0.9995 0.7989 0.9333 3.1813 3.1702 3.1514 1.4672   1.399  1.3342 2.6659 2.3333 2.3997 2.5335 2.3333 2.4003 4.9998 5.1994   5.1989 5.2664 5.1999 5.1316]]
377                   0.78045         0.64536         0.36894         0.72654          0.72664          0.06416          0.4662          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2662 3.5997 3.3329 3.3335 3.4662 3.3328 1.8668 2.2666 1.9996 2.0003   2.0667 2.1337 4.5321 4.9334 4.5342 3.082  4.5328 3.1072 5.5338 5.8003   5.5997 5.5342 5.5991 5.6012 2.5996 3.0008 2.6674 2.7988 2.5329 2.7332   0.8006 1.0007 0.7996 0.9991 0.7992 0.9307 1.5328 1.4004 1.2006 3.1757   1.3991 1.3335 2.6663 2.3334 2.4    2.5346 2.3342 2.401  5.0002 5.2   5.2    5.2661 5.201  5.1327]]
378                   0.91684         0.68921         0.42285         0.67875          0.67888          0.07923          0.46708          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5997 3.126  3.3328 3.4667 3.3334 1.8678 2.2672 1.9999 1.9995   2.0672 2.1334 4.5322 4.9337 4.5344 3.0821 3.1067 4.5334 5.5328 5.8038   5.6    5.5338 5.6001 5.5988 2.5998 2.9987 2.6668 2.8003 2.5335 2.7349   0.7988 0.9996 0.8016 0.9995 0.7997 0.9332 3.1828 1.4    1.201  3.1761   1.3986 1.3342 3.1694 2.333  2.4006 2.5348 2.3331 2.4004 4.999  5.1991   5.2005 5.267  5.1998 5.1333]]
379                   3.04323         1.52625         1.05798         -0.06631          -0.03875          0.23622          1.44615          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.3672 3.4292 3.3771 3.4544 3.4886 3.4384 3.3919 3.5079 3.4299 3.4317   3.4239 3.498  3.4614 3.3734 3.3821 3.3376 3.3294 3.392  3.3158 3.3757   3.4022 3.3594 3.3342 3.3385 3.4302 3.3893 3.4464 3.4851 3.4099 3.4725   3.5071 3.4296 3.4681 3.3924 3.3947 3.4368 3.4673 3.4201 3.4599 3.473   3.4522 3.4354 3.4541 3.4909 3.388  3.4684 3.4183 3.3603 3.355  3.3377   3.4023 3.4055 3.3949 3.393 ]]
380                   3.01086         1.51636         1.05167         -0.05497          -0.03012          0.2342          1.40615          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.4576 3.3521 3.4281 3.372  3.4341 3.3627 3.4093 3.3717 3.3491 3.4416   3.3837 3.4112 3.3919 3.3486 3.3571 3.3333 3.3352 3.351  3.3807 3.3583   3.3529 3.333  3.4331 3.3507 3.3973 3.4324 3.4229 3.4512 3.3287 3.4104   3.5423 3.4071 3.4648 3.3794 3.4128 3.4405 3.5409 3.4704 3.4283 3.4003   3.4363 3.4396 3.4155 3.3833 3.4013 3.4286 3.4126 3.4455 3.3571 3.4063   3.3426 3.4265 3.3877 3.4018]]
381                   3.04646         1.52231         1.06119         -0.06744          -0.04163          0.23678          1.4065          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.4146 3.423  3.4166 3.4057 3.4115 3.3549 3.4534 3.4915 3.39   3.4312   3.4248 3.4477 3.3834 3.4189 3.3106 3.3947 3.3451 3.3466 3.3816 3.3944   3.3399 3.3538 3.3721 3.3901 3.3654 3.457  3.3875 3.4071 3.4444 3.4039   3.4295 3.4105 3.4832 3.5069 3.4875 3.4731 3.4428 3.3847 3.3939 3.488   3.4665 3.4401 3.449  3.355  3.4143 3.3882 3.4518 3.3854 3.3265 3.3766   3.3438 3.4495 3.3785 3.3019]]
382                   3.06303         1.52913         1.0672         -0.07325          -0.04646          0.23794          1.43825          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.3945 3.4481 3.3905 3.3917 3.4169 3.3399 3.4378 3.4599 3.4157 3.416   3.4783 3.4089 3.3278 3.3611 3.4321 3.325  3.4322 3.3692 3.3214 3.3429   3.3361 3.4111 3.3811 3.3336 3.4487 3.4686 3.413  3.4428 3.4039 3.356   3.4332 3.5062 3.4293 3.489  3.4997 3.4902 3.4092 3.4494 3.4145 3.463   3.5002 3.4692 3.4791 3.4266 3.3612 3.3982 3.439  3.4562 3.3372 3.344   3.4047 3.393  3.4112 3.356 ]]
383                   2.96989         1.46843         0.937         -0.04061          -0.03848          0.21735          1.63742          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0435 3.076  3.0451 3.0481 3.0612 3.0462 3.0627 3.101  3.0702 3.0764   3.0767 3.0851 3.0292 3.0664 3.0285 3.0033 3.0279 3.0307 3.0019 3.0293   3.0103 3.0041 3.0083 3.0068 3.0546 3.0916 3.0628 3.0706 3.0471 3.0657   3.0931 3.1089 3.0926 3.1075 3.0937 3.1042 3.1053 3.0922 3.0707 3.0973   3.0948 3.0889 3.0897 3.0608 3.0681 3.078  3.0601 3.0678 3.002  3.021   3.024  3.0301 3.0216 3.0144]]
384                   2.97018         1.46875         0.93734         -0.04071          -0.03859          0.21738          1.63852          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0407 3.0719 3.0476 3.0497 3.0655 3.0471 3.0646 3.0969 3.073  3.076   3.0809 3.0853 3.0288 3.0692 3.0272 3.0072 3.0298 3.0275 3.0052 3.0268   3.0067 3.0043 3.0037 3.0097 3.0536 3.0917 3.0633 3.0714 3.0474 3.0668   3.0913 3.1124 3.0924 3.1115 3.0919 3.1017 3.1039 3.093  3.0729 3.0972   3.0915 3.0865 3.096  3.0627 3.0673 3.0763 3.0592 3.0689 3.0037 3.0229   3.0195 3.0297 3.0193 3.0158]]
385                   2.96928         1.46836         0.93697         -0.0404          -0.03826          0.21732          1.63877          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0427 3.0725 3.0508 3.0471 3.0602 3.0472 3.0585 3.0978 3.0723 3.075   3.0791 3.0843 3.0278 3.0694 3.0268 3.0064 3.0274 3.028  3.006  3.0305   3.0068 3.0039 3.0148 3.0114 3.0517 3.0922 3.0588 3.0698 3.0488 3.0726   3.0936 3.1103 3.095  3.1077 3.0955 3.1045 3.1017 3.0896 3.0712 3.0996   3.0916 3.0858 3.0905 3.0646 3.0674 3.0774 3.0614 3.0674 2.9991 3.0206   3.0213 3.0288 3.0204 3.0111]]
386                   2.96879         1.46801         0.93704         -0.04023          -0.03809          0.2173          1.63702          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0447 3.0701 3.0493 3.05   3.0613 3.047  3.0571 3.1003 3.077  3.0714   3.0813 3.0822 3.0294 3.0658 3.0304 3.0009 3.0336 3.0299 3.0064 3.0284   3.0095 3.0003 3.0063 3.0115 3.0522 3.0876 3.0583 3.0728 3.0462 3.0665   3.0904 3.1105 3.0901 3.1114 3.0926 3.1071 3.1024 3.0923 3.0743 3.0979   3.0899 3.0878 3.0907 3.0627 3.0667 3.0761 3.0642 3.0699 3.0039 3.0216   3.0214 3.0274 3.0235 3.0158]]
387                   2.93047         1.47102         0.95467         -0.0268          -0.0263          0.21749          1.55967          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1005 3.1564 2.9242 3.1032 3.1343 3.0663 2.9438 3.1718 3.1114 3.1384   3.1489 3.1682 3.0929 3.1199 3.1063 3.1283 3.1077 3.1352 3.0798 3.0771   3.0424 3.0716 3.1467 3.0903 3.1287 3.1876 3.1426 3.1238 2.9208 3.1464   3.1571 3.1845 2.9835 3.2004 2.8915 3.2102 3.1675 3.1638 3.1449 3.1837   3.1124 3.0931 2.959  3.1551 2.9207 3.1324 3.1611 3.1273 3.0847 3.098   3.0782 2.8598 3.099  3.1107]]
388                   2.95733         1.47278         0.94692         -0.03621          -0.03583          0.21826          1.56432          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.0854 3.0589 3.1119 3.1294 3.1372 3.0512 3.1409 3.1998 3.1216 3.1175   3.1798 3.1695 3.1098 3.1544 3.0929 3.0766 2.8748 3.1243 3.0907 3.0949   2.9305 3.0789 3.1226 2.921  3.1203 2.9281 2.9639 3.1507 3.1205 3.1777   3.1989 2.9603 3.1726 3.2172 3.159  3.1482 3.1737 3.2051 3.1203 3.1726   3.1534 2.957  3.1621 3.1223 3.1424 3.1489 3.1697 2.9561 3.0778 3.0693   3.1015 3.1211 3.1365 3.0733]]
389                   2.90968         1.45744         0.94819         -0.01952          -0.01909          0.21614          1.58052          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1195 3.147  3.1201 3.1078 3.1402 3.1295 3.1392 3.172  3.1443 2.9924   2.9144 3.1438 3.065  3.1081 3.1088 3.0701 3.1181 3.1073 3.1131 2.9981   3.1223 3.1101 3.1162 3.0944 3.1378 3.1674 3.0933 3.1486 3.0954 2.9195   2.9398 3.1755 3.1113 3.1684 3.1923 3.1799 3.174  3.1918 3.1027 3.1934   3.0981 3.0161 2.9532 3.1354 3.1538 3.1276 3.1372 3.1342 3.0882 3.0982   3.07   2.8504 3.1018 3.1044]]
390                   2.98053         1.48549         0.96307         -0.04434          -0.04416          0.22076          1.57447          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1279 3.1442 3.1578 2.9136 3.1334 2.9212 3.1461 2.9494 3.0076 3.158   3.1169 3.164  3.0952 3.1129 2.8838 3.0659 3.0757 3.1033 3.0868 3.0892   3.0728 3.059  3.0835 2.9892 3.164  3.1833 3.1405 3.1441 3.1299 3.1649   3.1965 3.2183 3.1672 3.1981 3.1688 3.1797 3.158  3.1582 3.1574 3.2066   3.1685 3.1646 3.1155 3.1008 3.1316 3.136  3.1651 3.1513 3.0803 3.1302   3.0579 3.1026 3.1182 3.1165]]
391                   2.96361         1.479         0.96258         -0.03841          -0.0384          0.22023          1.56562          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1148 3.1468 3.1211 3.1211 3.1338 3.1203 3.1336 3.1705 3.1446 3.1455   3.1525 3.1583 3.1014 3.139  3.1002 3.0763 3.1005 3.1007 3.0755 3.1015   3.0825 3.0763 3.0825 3.0827 3.1265 3.1648 3.133  3.1459 3.1202 3.1397   3.1648 3.1852 3.1635 3.1835 3.1652 3.1782 3.1777 3.1649 3.1454 3.1696   3.1632 3.158  3.164  3.1334 3.138  3.1518 3.1319 3.1395 3.0747 3.0937   3.0957 3.1017 3.0951 3.0884]]
392                   2.96275         1.47889         0.96229         -0.03811          -0.0381          0.22015          1.56572          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1145 3.1465 3.1204 3.1172 3.1329 3.1208 3.1329 3.1696 3.146  3.1466   3.1509 3.1589 3.101  3.1398 3.1009 3.0757 3.1009 3.1004 3.0751 3.1013   3.0817 3.0771 3.0817 3.0823 3.1269 3.1637 3.1327 3.1462 3.1206 3.1407   3.1641 3.183  3.164  3.1827 3.1644 3.1761 3.175  3.1648 3.1438 3.1705   3.1654 3.1574 3.1632 3.1326 3.1397 3.1518 3.1338 3.1386 3.0758 3.0937   3.096  3.1021 3.0961 3.0894]]
393                   2.96295         1.47888         0.96238         -0.03818          -0.03817          0.22018          1.56492          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.114  3.1479 3.1197 3.1212 3.1312 3.1199 3.1326 3.1699 3.1454 3.146   3.1519 3.1571 3.1003 3.1411 3.1025 3.0769 3.1009 3.1012 3.0762 3.1023   3.0823 3.0763 3.0822 3.0826 3.1263 3.1647 3.1325 3.1459 3.1213 3.1397   3.1658 3.1834 3.1638 3.1816 3.1647 3.1771 3.1774 3.165  3.1462 3.1714   3.1633 3.1583 3.1653 3.1324 3.1376 3.152  3.1331 3.1401 3.0753 3.0947   3.0961 3.1024 3.0951 3.0886]]
394                   2.96278         1.47878         0.96234         -0.03812          -0.03811          0.22016          1.56552          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1149 3.147  3.1174 3.119  3.1316 3.122  3.132  3.1698 3.1447 3.146   3.1516 3.158  3.1001 3.1382 3.1009 3.0759 3.1024 3.1022 3.0764 3.1014   3.0826 3.075  3.0809 3.0832 3.1273 3.1647 3.133  3.1457 3.1201 3.1384   3.1639 3.1832 3.1649 3.1836 3.1641 3.1768 3.1759 3.1642 3.1442 3.1695   3.1636 3.1587 3.1639 3.1316 3.1392 3.1531 3.1325 3.1398 3.0781 3.095   3.0943 3.1003 3.0935 3.0897]]
395                   3.03714         1.52143         1.05503         -0.06418          -0.04248          0.23528          1.38005          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.4017 3.4184 3.3691 3.4169 3.3483 3.3489 3.3902 3.3646 3.4876 3.3738   3.3899 3.4235 3.306  3.387  3.4028 3.354  3.3421 3.3562 3.2943 3.3282   3.3404 3.3532 3.3507 3.2983 3.3975 3.4058 3.3582 3.392  3.3772 3.4362   3.3793 3.4478 3.4331 3.4767 3.4483 3.4241 3.4642 3.4043 3.4234 3.4323   3.4185 3.4296 3.4292 3.3393 3.4573 3.3702 3.364  3.4154 3.3582 3.2612   3.3614 3.3064 3.3063 3.4057]]
396                   3.03863         1.52612         1.05054         -0.0647          -0.0435          0.23483          1.42905          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.3256 3.3803 3.3738 3.3178 3.4066 3.4017 3.4299 3.4123 3.5204 3.3919   3.4583 3.4099 3.3766 3.3882 3.3076 3.2854 3.3456 3.404  3.3324 3.3296   3.3245 3.3213 3.3099 3.313  3.441  3.4091 3.4504 3.3703 3.3211 3.4111   3.4006 3.4153 3.4415 3.388  3.3734 3.4397 3.4347 3.4401 3.4064 3.4334   3.4393 3.4073 3.4359 3.3717 3.3377 3.3998 3.394  3.3413 3.3441 3.328   3.3381 3.3694 3.376  3.2905]]
397                   3.03796         1.52275         1.05682         -0.06446          -0.0417          0.23546          1.39165          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.3321 3.3786 3.3708 3.3695 3.3928 3.3789 3.3656 3.3804 3.4522 3.3569   3.3623 3.3933 3.3924 3.4676 3.3516 3.3078 3.3499 3.3213 3.3392 3.3621   3.2985 3.3298 3.3218 3.3399 3.4381 3.4439 3.4425 3.5035 3.4199 3.3812   3.4569 3.4936 3.4155 3.4444 3.3916 3.4666 3.426  3.42   3.3978 3.4372   3.3614 3.427  3.4622 3.4251 3.3577 3.421  3.3557 3.4109 3.3384 3.3707   3.3337 3.3429 3.4432 3.3535]]
398                   3.04211         1.51901         1.05014         -0.06591          -0.04595          0.23509          1.38923          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.3545 3.416  3.4342 3.3632 3.3847 3.4002 3.3913 3.3804 3.3586 3.4018   3.4062 3.4149 3.3266 3.4297 3.3337 3.3336 3.2944 3.3736 3.2581 3.32   3.2937 3.3252 3.3599 3.2854 3.3364 3.4244 3.347  3.3851 3.3657 3.3902   3.4248 3.458  3.4391 3.3825 3.4305 3.4706 3.4688 3.4195 3.3676 3.412   3.342  3.435  3.4396 3.3724 3.3902 3.3658 3.3721 3.3337 3.336  3.3089   3.3505 3.3377 3.3588 3.3172]]
399                   2.96924         1.46867         0.93838         -0.04038          -0.03839          0.21749          1.63567          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0381 3.0735 3.05   3.0494 3.0605 3.0497 3.0636 3.1051 3.0716 3.0748   3.0805 3.0878 3.0334 3.0696 3.0316 3.0081 3.0323 3.0304 3.0052 3.0296   3.0175 3.0034 3.0169 3.0177 3.0539 3.0981 3.0669 3.0743 3.0503 3.0668   3.0944 3.1128 3.0967 3.1184 3.098  3.1069 3.1069 3.0951 3.0758 3.1018   3.0954 3.0847 3.0936 3.0625 3.0657 3.0822 3.0644 3.067  3.006  3.0228   3.0234 3.0263 3.0254 3.0189]]
400                   2.96856         1.46872         0.93831         -0.04015          -0.03819          0.21744          1.63667          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0479 3.0802 3.0513 3.0524 3.0636 3.0515 3.0665 3.1051 3.0795 3.0755   3.0803 3.0866 3.0299 3.0693 3.0299 3.0085 3.0284 3.0338 3.0026 3.031   3.0137 3.0062 3.0152 3.0157 3.0538 3.0925 3.0633 3.0735 3.0514 3.0699   3.0966 3.1144 3.0975 3.1148 3.0913 3.1105 3.1048 3.0942 3.073  3.0971   3.094  3.0904 3.0985 3.0635 3.0694 3.085  3.0651 3.0715 3.009  3.0252   3.0264 3.0301 3.0273 3.0185]]
401                   2.9686         1.46834         0.93798         -0.04016          -0.03816          0.21741          1.63327          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0441 3.0706 3.0465 3.0481 3.0612 3.0486 3.0592 3.1024 3.0745 3.0766   3.0833 3.0906 3.0358 3.0684 3.0331 3.0093 3.0295 3.0337 3.0018 3.033   3.0108 3.0088 3.01   3.0106 3.0569 3.0932 3.0594 3.0758 3.0509 3.0688   3.0925 3.1163 3.0973 3.1112 3.0937 3.1065 3.1069 3.0917 3.0771 3.1013   3.0977 3.0863 3.0919 3.0674 3.0667 3.0827 3.0636 3.0695 3.0044 3.0271   3.0272 3.035  3.0265 3.0155]]
402                   2.96901         1.46903         0.93835         -0.0403          -0.03833          0.21747          1.63517          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0453 3.0737 3.0484 3.0472 3.0649 3.049  3.063  3.1021 3.0717 3.0743   3.0788 3.0891 3.0316 3.0737 3.0314 3.0081 3.031  3.032  3.009  3.0278   3.0155 3.0089 3.0142 3.0134 3.0561 3.0945 3.0634 3.0775 3.0467 3.0712   3.0947 3.1132 3.1014 3.1136 3.0969 3.1092 3.1053 3.096  3.0746 3.101   3.0966 3.0891 3.0971 3.066  3.0697 3.0806 3.0629 3.0737 3.0066 3.0247   3.0221 3.033  3.0265 3.0167]]
403                   3.07329         1.5122         0.99826         -0.07684          -0.07583          0.22984          1.63445          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2658 3.2737 3.2508 2.791  3.2985 3.2774 3.0937 3.3448 3.278  3.2889   3.2894 3.3135 3.2554 3.3379 3.2855 3.1954 3.0446 3.0623 3.2424 3.191   3.2774 2.7806 3.2361 3.2194 3.0702 3.1339 3.0882 3.2892 3.1467 3.0999   3.3128 3.4066 3.314  3.1303 3.1295 3.3351 3.3466 3.2846 3.1005 2.8921   3.3385 3.3465 3.3284 3.292  3.1049 3.32   3.2931 2.8765 3.0403 3.2729   3.259  2.8307 3.3207 2.6403]]
404                   3.02849         1.49711         0.98208         -0.06114          -0.06101          0.2265          1.53647          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.7748 2.9972 3.331  3.265  2.8614 2.6489 3.2973 3.1261 3.2337 3.328   2.8684 3.3871 3.2862 3.2708 3.2718 3.2252 3.0628 2.4354 3.2271 3.2586   2.7745 3.2382 3.0364 3.197  3.2766 3.3556 3.0875 3.3065 3.148  2.9096   3.1214 3.1302 3.2942 3.3297 3.3028 3.2915 3.1371 3.3052 3.3007 3.3414   2.8024 3.315  3.2888 3.1602 3.2916 3.3199 3.2922 2.7563 3.2166 2.8522   3.2874 3.254  3.2417 3.2672]]
405                   2.98597         1.48775         0.99635         -0.04625          -0.0449          0.22598          1.54565          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2446 2.8282 3.2363 3.2713 3.2751 3.3363 3.2663 3.199  3.3284 2.851   3.3321 3.1843 3.0646 3.2873 3.2658 3.2693 3.2509 3.2553 3.2413 2.5151   3.2511 3.2151 3.0419 3.0192 3.2601 3.3424 3.3047 3.2982 2.597  3.1651   2.907  3.3566 3.3528 3.3076 3.3155 3.3297 3.2882 3.1148 2.7952 3.3224   3.1892 3.3245 3.3392 3.2454 3.0708 3.3286 3.3065 3.2853 3.1893 3.2866   3.2518 3.2572 3.2394 3.2768]]
406                   2.97986         1.48921         0.99641         -0.0441          -0.0423          0.22478          1.43615          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.0626 3.2871 3.0795 3.2596 3.3066 3.2221 3.159  2.8261 3.349  3.2954   3.3125 3.1129 3.2632 3.1656 3.0552 3.0347 3.2406 3.2756 3.2089 3.2814   3.2593 3.2737 3.2345 3.2148 3.0873 3.3296 3.089  3.2788 3.1488 2.874   3.3019 3.3712 3.3834 3.3514 3.353  3.2903 3.3267 3.3148 3.2723 2.7668   3.3013 3.3424 3.3509 3.0962 3.2849 3.2648 3.0983 3.2892 3.0402 3.2483   2.8052 3.2467 3.2161 3.3029]]
407                   2.96254         1.47902         0.96288         -0.03804          -0.03803          0.22022          1.56362          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1164 3.1469 3.1217 3.1207 3.1348 3.1219 3.135  3.1715 3.1467 3.1467   3.1541 3.1591 3.1027 3.1405 3.1036 3.0782 3.1018 3.1029 3.0789 3.1032   3.0842 3.0781 3.0837 3.0837 3.1269 3.1657 3.1355 3.1463 3.1227 3.1413   3.1658 3.1839 3.1651 3.1842 3.1669 3.1806 3.1786 3.1654 3.1461 3.1723   3.1658 3.1583 3.166  3.1346 3.14   3.1528 3.1339 3.141  3.0785 3.0973   3.0952 3.1034 3.0969 3.089 ]]
408                   2.96273         1.47912         0.96301         -0.0381          -0.0381          0.22024          1.56362          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1162 3.1465 3.1203 3.1217 3.1352 3.1215 3.1357 3.1729 3.1464 3.1471   3.1537 3.1598 3.1013 3.1411 3.1039 3.0788 3.1024 3.1034 3.0775 3.1041   3.0847 3.0766 3.0849 3.0853 3.1281 3.1657 3.1346 3.1472 3.1207 3.1405   3.1644 3.1854 3.1653 3.1847 3.1654 3.179  3.1787 3.1669 3.1465 3.1724   3.1661 3.1596 3.1663 3.1346 3.1413 3.1542 3.1347 3.1401 3.0785 3.0958   3.0974 3.1027 3.0965 3.0903]]
409                   2.9624         1.47897         0.96293         -0.03799          -0.03798          0.22022          1.56402          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1159 3.1463 3.1216 3.122  3.1346 3.1236 3.1357 3.1718 3.1475 3.1467   3.1517 3.1601 3.1018 3.1403 3.1028 3.078  3.1021 3.103  3.0775 3.1025   3.084  3.0787 3.0847 3.0847 3.1283 3.1658 3.1348 3.1473 3.1212 3.1404   3.1663 3.1849 3.1652 3.1853 3.1665 3.1792 3.1774 3.1658 3.1466 3.1711   3.1667 3.1595 3.1663 3.1339 3.1411 3.1528 3.1339 3.1414 3.0795 3.0966   3.0979 3.1035 3.0962 3.0899]]
410                   2.96269         1.47908         0.96295         -0.03809          -0.03808          0.22024          1.56397          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1154 3.1455 3.1221 3.122  3.1358 3.1243 3.1341 3.1728 3.1481 3.1479   3.1541 3.1611 3.103  3.1408 3.1024 3.0768 3.1033 3.103  3.0786 3.1023   3.0861 3.0795 3.0848 3.0841 3.1282 3.1661 3.1335 3.1472 3.1209 3.1405   3.165  3.184  3.1671 3.1851 3.1678 3.1787 3.1785 3.1638 3.1483 3.172   3.1656 3.1594 3.1653 3.1354 3.1406 3.1538 3.1343 3.1403 3.078  3.0971   3.0959 3.1016 3.0968 3.0891]]
411                   3.50905         1.5212         0.76039         -0.22952          -0.03819          0.2237          1.24722          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4358 2.429  2.3716 2.3298 2.3892 2.3676 2.3924 2.4814 2.4748 2.4176   2.4289 2.4363 2.334  2.4861 2.4022 2.3767 2.3848 2.442  2.3368 2.3523   2.3127 2.3185 2.3758 2.3002 2.4372 2.3231 2.4254 2.4022 2.4673 2.1841   2.3976 2.4279 2.3962 2.5021 2.4667 2.4866 2.4515 2.328  2.3998 2.4335   2.4439 2.5133 2.423  2.4028 2.371  2.3903 2.3978 2.4309 2.3662 2.3434   2.3704 2.3922 2.3283 2.35  ]]
412                   3.53423         1.5322         0.75968         -0.23835          -0.03866          0.225          1.28507          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.2524 2.4002 2.4051 2.3002 2.4113 2.3581 2.3697 2.417  2.487  2.4004   2.4745 2.4505 2.3897 2.3479 2.3414 2.3267 2.343  2.3641 2.3262 2.3825   2.3611 2.3648 2.2834 2.359  2.3899 2.4384 2.3695 2.4603 2.3407 2.2267   2.4389 2.4742 2.377  2.459  2.3173 2.4277 2.3075 2.4993 2.3727 2.4712   2.438  2.4363 2.4261 2.405  2.3683 2.3463 2.3716 2.4128 2.387  2.3443   2.3332 2.3156 2.3054 2.3912]]
413                   3.53227         1.52457         0.76069         -0.23766          -0.04013          0.22534          1.25022          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.346  2.3122 2.3821 2.4508 2.3126 2.3769 2.4228 2.4007 2.38   2.4713   2.4593 2.3397 2.3984 2.3967 2.3926 2.4047 2.342  2.3308 2.3169 2.2833   2.4134 2.3423 2.3778 2.2876 2.3816 2.4236 2.3214 2.4092 2.3761 2.3127   2.3848 2.4576 2.4321 2.4892 2.3924 2.4843 2.4279 2.401  2.4042 2.4496   2.4827 2.2889 2.53   2.4243 2.397  2.3825 2.395  2.4397 2.3548 2.3245   2.3275 2.3724 2.2596 2.3209]]
414                   3.52781         1.52502         0.76294         -0.2361          -0.04415          0.22507          1.24687          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.3581 2.4002 2.3738 2.4356 2.4004 2.404  2.3801 2.392  2.4082 2.4751   2.3619 2.4019 2.3706 2.2897 2.3811 2.1831 2.3626 2.3877 2.3123 2.4027   2.3742 2.347  2.4009 2.2378 2.4093 2.4256 2.3898 2.4536 2.334  2.4136   2.4859 2.4772 2.4824 2.5046 2.4788 2.4796 2.4098 2.3049 2.4279 2.4164   2.431  2.3972 2.4526 2.3868 2.4174 2.458  2.3862 2.4399 2.4381 2.3543   2.4043 2.4074 2.3474 2.3103]]
415                   9.77734         2.63042         0.77184         -2.42586          -0.0256          1.09491          2.31393          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.3724 1.1442 0.8254 1.2077 0.432  0.4365 0.8671 0.396  0.1581 0.5938   0.1163 0.8369 0.7428 0.7659 0.8663 0.0638 0.3821 0.1298 0.402  0.3653   0.2766 0.2093 1.0512 0.5182 0.192  0.6451 0.2595 0.5596 0.3939 0.613   0.4536 0.3878 0.5519 0.6329 0.3443 0.3627 0.3774 0.8356 0.6182 0.7172   0.5205 0.5298 0.0563 0.7857 0.2531 0.0839 0.8295 0.2236 0.5839 0.9006   0.7517 0.5094 0.8614 0.0049]]
416                   3.04969         1.5259         1.06332         -0.06857          -0.04216          0.23698          1.47055          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4787 3.473  3.3834 3.2677 3.3481 3.4099 3.446  3.427  3.5582 3.3828   3.6106 3.4855 3.4007 3.4007 3.2785 3.3533 3.319  3.411  3.4011 3.5134   3.479  3.4228 3.2195 3.3371 3.3034 3.4646 3.4432 3.3728 3.3405 3.4213   3.4195 3.5031 3.4164 3.4479 3.2846 3.3861 3.5236 3.4811 3.2757 3.4172   3.6299 3.4304 3.4405 3.5331 3.4863 3.4473 3.2669 3.3887 3.3644 3.3448   3.5062 3.4626 3.2853 3.2647]]
417                   3.09768         1.53455         1.08356         -0.08539          -0.053          0.24108          1.493          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3068 3.3968 3.4156 3.54   3.3551 3.4417 3.594  3.5355 3.3853 3.3954   3.602  3.5707 3.4594 3.4747 3.4849 3.5547 3.4458 3.4503 3.2731 3.4055   3.3962 3.349  3.3215 3.2461 3.375  3.4437 3.3568 3.3887 3.32   3.3216   3.3473 3.5318 3.5117 3.7042 3.5251 3.4513 3.4288 3.5021 3.418  3.4516   3.396  3.5366 3.414  3.4696 3.5075 3.5623 3.5728 3.4494 3.3635 3.5763   3.3398 3.3793 3.4101 3.2967]]
418                   3.06801         1.53296         1.08363         -0.07499          -0.04356          0.23976          1.41343          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3244 3.5541 3.4417 3.2466 3.625  3.2917 3.3965 3.4975 3.3817 3.3963   3.4318 3.4919 3.3886 3.5221 3.3904 3.2652 3.4029 3.4806 3.3584 3.2716   3.4247 3.2997 3.5744 3.3806 3.5233 3.5935 3.578  3.4457 3.4448 3.3751   3.4109 3.7173 3.5496 3.5314 3.6121 3.5127 3.3627 3.333  3.472  3.4527   3.4811 3.3729 3.4364 3.3029 3.3414 3.3832 3.361  3.3639 3.4828 3.4636   3.4633 3.3965 3.3786 3.5253]]
419                   2.99179         1.5197         1.06647         -0.04828          -0.01936          0.23409          1.41538          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4398 3.4848 3.3913 3.3908 3.5035 3.3888 3.4978 3.4658 3.4296 3.4009   3.4311 3.3957 3.4062 3.4798 3.3848 3.4228 3.4177 3.4256 3.5516 3.5173   3.3967 3.3703 3.3886 3.3801 3.2969 3.3252 3.4988 3.5921 3.3784 3.558   3.4279 3.4996 3.381  3.6756 3.2957 3.3804 3.4002 3.3579 3.4202 3.3452   3.4222 3.4249 3.4825 3.3709 3.4087 3.3979 3.5597 3.4754 3.3877 3.3035   3.3844 3.267  3.3864 3.3819]]
420                   3.27857         1.48621         0.79786         -0.14877          -0.03739          0.2152          1.27207          MLPRegressor(activation='logistic',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5307 2.5512 2.5652 2.5785 2.6249 2.5364 2.5658 2.6094 2.603  2.5706   2.6035 2.6295 2.5622 2.5707 2.5184 2.597  2.5    2.5583 2.5322 2.528   2.5197 2.5236 2.54   2.5085 2.5615 2.5406 2.5207 2.5978 2.5687 2.6593   2.6161 2.6436 2.5756 2.6166 2.6198 2.6093 2.5959 2.5947 2.5857 2.6613   2.5482 2.5812 2.6629 2.5593 2.6104 2.6221 2.5754 2.5819 2.4952 2.5746   2.5002 2.5431 2.5234 2.516 ]]
421                   3.27752         1.485         0.79624         -0.1484          -0.03685          0.21482          1.27612          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5629 2.5913 2.6196 2.5858 2.5822 2.5627 2.5995 2.5991 2.6156 2.6009   2.51   2.6197 2.5488 2.547  2.5261 2.5058 2.546  2.5389 2.5304 2.5512   2.5239 2.4998 2.5355 2.5084 2.565  2.6424 2.5802 2.6096 2.563  2.5905   2.5998 2.6464 2.6172 2.6092 2.5855 2.5466 2.6212 2.5826 2.5876 2.5911   2.6696 2.5885 2.6017 2.5611 2.5885 2.5583 2.6122 2.5597 2.4963 2.5384   2.5244 2.5666 2.4911 2.5592]]
422                   3.25507         1.48329         0.79999         -0.14053          -0.032          0.21416          1.25142          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5308 2.5823 2.5477 2.5338 2.593  2.564  2.5696 2.6298 2.5853 2.6246   2.598  2.6191 2.5262 2.604  2.5827 2.5353 2.5343 2.5736 2.5286 2.5419   2.5555 2.5251 2.5751 2.5405 2.5522 2.5544 2.56   2.5556 2.5772 2.5992   2.6465 2.6333 2.6334 2.6267 2.5866 2.6435 2.6479 2.566  2.5726 2.6789   2.5829 2.6237 2.5593 2.5875 2.5948 2.6045 2.5787 2.5398 2.5187 2.5339   2.6033 2.5559 2.6142 2.5468]]
423                   3.28604         1.49192         0.8017         -0.15139          -0.03911          0.216          1.29012          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5206 2.5701 2.5568 2.5746 2.5634 2.5802 2.5834 2.6332 2.6371 2.6103   2.6027 2.5889 2.523  2.5451 2.5417 2.5113 2.5734 2.5433 2.5377 2.5397   2.5398 2.536  2.5131 2.5973 2.55   2.5989 2.5558 2.529  2.5177 2.6083   2.6277 2.6036 2.6197 2.6538 2.6543 2.6549 2.6297 2.5419 2.5759 2.6117   2.6272 2.5975 2.5898 2.5028 2.5354 2.5731 2.5904 2.5786 2.5042 2.5053   2.5248 2.5421 2.4917 2.5466]]
424                   3.59591         1.64621         1.12448         -0.25996          -0.25371          0.26446          1.45227          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[2.4641 2.0454 3.0448 3.2511 2.7948 2.6277 3.2996 3.0338 3.2214 3.3288   3.2924 3.0969 3.2053 3.3844 3.2235 3.1138 3.6001 3.2568 2.9002 2.9707   2.9868 2.9787 2.9519 2.4807 3.1314 3.4959 3.1236 3.4476 3.1235 3.4333   3.2646 3.7952 3.2586 4.0219 3.6818 3.8147 3.3546 4.154  3.522  3.1511   3.0443 3.502  3.0569 3.7748 3.8393 3.6765 3.8813 3.7691 2.7801 2.8539   3.6677 3.6571 3.8766 2.8382]]
425                   3.56411         1.58159         1.13374         -0.24882          -0.21037          0.26703          1.26673          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.0233 3.4811 3.2804 2.4573 3.0115 3.0465 3.054  3.3273 2.8928 3.2791   3.5213 3.1337 2.9466 3.6151 4.5251 2.4766 3.4445 3.3643 3.2691 3.5037   3.7776 3.6611 2.9068 2.6856 3.6523 3.6793 3.6174 3.8187 3.4687 3.4985   4.1686 4.3948 3.5321 3.7156 4.3073 3.7092 2.665  2.5396 3.2482 3.8522   3.508  3.9947 2.3762 3.9241 3.9015 3.7977 3.7975 3.9653 1.8298 4.4793   4.4788 3.7548 3.6651 4.1955]]
426                   3.17589         1.51695         0.99054         -0.11279          -0.11275          0.23283          1.54722          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.1466 3.2701 3.1824 3.1919 3.2079 3.2003 3.2708 3.3943 3.3088 3.3373   3.3425 3.3525 3.2288 3.348  3.2305 3.1127 3.2523 3.2395 2.9307 3.0101   2.9745 2.914  2.9862 2.9771 3.1288 3.1674 3.1322 3.1468 3.1208 3.1407   3.2714 3.3171 3.3061 3.3425 3.2741 3.3121 3.1183 3.0456 2.9722 3.0945   3.0492 3.0121 3.0686 2.969  3.0072 3.0497 3.001  2.9904 2.8145 2.8914   2.8984 2.9173 2.8921 2.8594]]
427                   3.25886         1.54247         1.01492         -0.14186          -0.14161          0.23952          1.55632          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False)            [[3.2545 3.3988 3.191  3.2685 3.3416 3.2693 3.264  3.4704 3.3998 3.3988   3.416  3.4325 3.2885 3.3186 3.1514 3.2047 3.2888 3.2844 2.8865 3.0693   3.0315 3.0142 3.0432 2.9061 3.211  3.2415 3.2005 3.2182 3.0584 3.2084   3.3465 3.3838 3.3375 3.3953 3.3353 3.3902 3.1723 3.1251 3.041  3.18   2.9812 3.1258 3.1235 2.9082 2.9106 3.1064 3.0486 3.0512 2.6959 2.7879   2.9401 2.8036 2.9359 2.9103]]
428                   3.45995         1.60678         1.11954         -0.21232          -0.20165          0.2581          1.46713          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1799 3.3415 2.5101 3.2044 3.2697 2.7768 3.2739 3.0561 3.2705 2.8854   3.5043 2.9207 3.2386 4.1784 3.2367 3.506  3.4909 3.6091 2.9058 2.8374   2.9782 2.8011 3.3377 2.7915 3.4969 3.1844 3.4409 3.1329 3.1165 3.5221   3.7532 4.0806 3.7809 3.7743 3.2755 3.9347 3.404  3.0543 2.9287 3.0529   3.0365 3.4915 4.0179 3.5675 3.6525 3.5383 3.6093 2.9968 2.7942 2.8409   2.8437 3.5997 3.8119 3.9168]]
429                   3.14599         1.50912         1.06724         -0.10232          -0.06735          0.239          1.5575          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[2.489  3.0528 3.8056 2.9979 3.1842 3.0855 3.1686 2.9912 3.4954 3.88   2.6756 3.2751 3.4917 3.5026 4.0503 2.9305 3.1242 4.1487 3.3489 2.9762   3.0272 3.3252 3.1753 3.3467 3.5464 3.1353 3.2953 3.7102 3.6505 3.8185   2.9235 4.1699 3.7763 3.257  3.1431 3.5275 3.0679 3.3003 3.0354 2.7389   3.9962 3.0231 4.6258 2.8153 4.2479 3.6422 4.0284 4.235  3.6988 3.0174   3.6973 4.3966 4.6371 3.6855]]
430                   3.18548         1.522         0.99026         -0.11615          -0.1161          0.23316          1.57902          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1612 3.3058 3.1647 3.1661 3.2379 3.186  3.2864 3.4266 3.3064 3.3152   3.3394 3.3645 3.2389 3.4109 3.2345 3.1325 3.2347 3.1898 2.9154 2.9855   2.9512 2.9033 2.9607 2.9536 3.1287 3.1665 3.1346 3.1452 3.1203 3.1383   3.2769 3.3261 3.2826 3.3024 3.2788 3.3066 3.1058 3.0169 3.0063 3.1122   3.0372 3.0257 3.06   3.0015 3.0192 3.03   3.0015 3.0123 2.8198 2.9151   2.8857 2.9105 2.8812 2.8856]]
431                   3.18763         1.52903         0.99541         -0.11691          -0.11669          0.23445          1.54847          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2313 3.3737 3.2657 3.2726 3.3298 3.1663 3.3788 3.4668 3.4032 3.3998   3.4239 3.4381 3.3154 3.3217 3.1607 3.202  3.3056 3.2966 3.0147 3.0757   3.032  3.0012 3.0285 3.0119 3.1904 3.2397 3.0538 3.2178 3.0648 3.0767   3.3295 3.2361 3.3324 3.2309 3.3479 3.3804 3.1702 2.9979 3.0554 3.1623   3.1216 3.118  3.121  2.9145 3.0552 3.0838 3.0335 3.061  2.6948 2.9206   2.9211 2.8017 2.9402 2.8983]]
432                   3.41222         1.57662         1.03658         -0.1956          -0.19501          0.246          1.64375          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1378 3.2946 3.3088 3.4283 3.2208 3.1657 3.3938 3.3429 3.4796 3.5742   3.3114 3.2998 2.8818 3.4627 2.8401 2.8593 3.1988 2.8165 2.6498 2.9354   2.9123 2.5767 2.8099 2.6497 2.9489 3.2138 3.3606 2.9732 2.992  3.1826   2.7744 3.4998 3.2641 4.024  3.0474 3.3482 2.9652 2.9539 3.2027 2.7382   3.2205 3.0764 3.1471 2.7253 2.5951 2.9484 3.1906 3.2828 3.2293 2.8031   3.1208 3.0123 2.6964 3.0288]]
433                   5.52521         1.874         1.27731         -0.93596          -0.93431          0.37524          1.57408          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4461 4.6008 5.2332 3.3361 1.4608 3.7253 4.7609 4.5299 2.651  7.2153   1.894  3.2483 2.6738 2.5675 1.8633 1.8725 1.9479 2.6774 2.2854 2.7969   1.5099 3.6498 2.3006 2.1454 2.8576 3.0761 2.6801 3.676  2.7818 1.0585   5.2341 5.2881 2.3025 4.1316 1.7246 4.0274 3.8819 2.4138 2.6711 5.0278   2.1376 2.3808 1.9186 1.5202 3.3238 2.8977 0.6595 2.5206 1.9857 4.5754   3.8159 4.0444 4.4786 2.1434]]
434                   3.08577         1.48643         0.96963         -0.08121          -0.08099          0.22386          1.47792          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.0945 3.469  3.1331 3.1993 3.2869 3.2161 3.2944 3.4637 3.0121 3.3489   3.1426 3.225  3.1867 3.2701 3.1908 3.148  2.6128 3.1326 3.3716 3.0224   3.7672 2.834  2.9397 3.1377 3.1323 3.1266 3.138  3.2009 3.0195 3.5808   4.5167 3.7289 2.0999 3.2613 2.6267 3.2562 1.5991 3.1711 3.537  3.282   3.095  2.7956 3.0598 3.1069 3.2459 3.9267 3.0086 2.9438 3.539  2.7085   4.5439 2.8555 2.8687 2.2324]]
435                   3.37184         1.60777         1.09559         -0.18145          -0.15893          0.25231          1.47865          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.6188 3.5956 3.5084 2.7494 3.5646 3.5206 3.6497 2.7998 3.6973 3.6572   3.6449 3.6578 2.6019 3.7567 3.5393 2.6238 3.6379 3.5072 3.364  3.3826   3.3454 3.3067 3.3913 3.4943 3.4133 3.4039 3.6476 3.5691 3.4576 3.5403   3.6291 3.7314 3.8249 3.6203 3.7715 3.6202 3.6128 3.3736 3.3361 2.6588   3.5419 3.3328 2.5589 3.2332 3.7456 3.4629 3.558  3.3792 2.3494 3.3234   3.5056 3.4885 3.2303 3.4897]]
436                   3.16113         1.51152         0.97142         -0.10762          -0.10746          0.2297          1.5316          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1631 3.1237 3.4719 3.1    3.1308 3.5198 3.8343 3.5564 3.0672 3.5945   3.2895 3.5492 3.1761 3.6488 3.1289 3.0549 3.6146 2.9618 3.2318 3.16   2.6961 2.9005 3.2431 3.1901 3.3305 3.1083 3.1083 2.7193 2.7948 3.113   3.6018 3.4125 2.8766 3.1712 3.1341 2.856  3.1851 2.7704 3.2605 2.7645   3.1293 3.1921 2.9072 2.4075 3.0308 3.166  3.1102 2.8233 2.3453 2.777   2.9351 2.9478 3.1376 2.658 ]]
437                   3.73244         1.63313         1.1024         -0.3078          -0.305          0.26957          1.64722          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1922 3.3338 3.7491 3.101  3.1571 3.2333 3.2991 3.091  3.3273 3.9847   3.3176 3.3755 2.7312 3.3258 3.2293 3.6307 3.2346 3.4109 2.947  3.0236   3.1369 2.8898 2.8961 1.3723 3.0273 4.354  3.2678 3.1968 3.6299 3.1941   3.8973 3.7797 2.622  4.3835 4.0442 3.2336 2.9771 3.1101 3.3125 2.7382   3.0771 3.0577 2.3936 3.5393 3.1804 3.2868 3.2292 4.3377 2.8374 2.847   2.8599 2.8742 2.9748 2.9052]]
438                   3.46377         1.60441         1.10855         -0.21366          -0.19801          0.25901          1.32087          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.5555 3.599  3.5804 3.5005 3.5686 2.6059 3.6649 3.7625 3.6864 3.622   3.5981 3.6915 3.661  3.7143 3.7469 2.5312 3.5436 3.4983 3.151  3.3929   3.2484 3.3634 3.3069 3.246  2.5472 2.5876 3.4501 3.4812 3.4834 3.5125   3.7602 3.8065 3.6596 3.6755 3.717  3.7139 3.4147 3.5425 2.3947 3.4194   3.5456 3.5844 2.5293 3.5428 3.3556 2.4674 3.5969 3.3609 3.111  3.2219   3.3803 3.5621 3.2374 2.2456]]
439                   3.42364         1.57769         1.04503         -0.1996          -0.19759          0.25245          1.66782          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.0875 2.5016 2.3335 3.1453 2.5765 3.0388 3.1355 3.4047 3.026  3.4269   3.4343 3.6181 3.4151 3.5206 2.9915 3.1396 3.4415 4.3037 2.9447 2.9928   2.9514 2.6658 2.9893 2.9794 3.4517 3.179  3.4362 3.4285 3.3678 3.4958   3.2463 3.3274 3.7195 3.3078 4.0174 3.6431 3.6044 3.3784 2.9589 3.077   2.9951 3.0329 3.0571 3.421  2.9947 3.7313 2.9628 3.4037 2.7992 2.8553   2.8656 3.9088 3.8579 2.8324]]
440                   3.51275         1.58351         1.14974         -0.23082          -0.19401          0.26676          1.2952          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0419 2.4383 2.7557 2.5212 2.476  2.5235 3.1796 3.4434 3.8209 3.7763   3.066  2.95   4.0877 3.8035 4.1845 2.7274 3.3895 3.1456 2.7301 2.7656   3.5115 3.2668 3.1389 3.0585 3.7671 2.4281 3.7059 3.6404 3.6959 3.2782   4.1807 3.867  3.5434 3.81   4.2844 4.1585 3.6957 3.9138 2.4721 3.2961   4.0483 4.0462 3.66   3.911  4.068  2.5067 3.6076 3.4431 3.8742 3.5551   4.1821 4.153  4.1388 4.1022]]
441                   3.19459         1.52191         0.99209         -0.11934          -0.11927          0.2338          1.5693          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1518 3.2889 3.1795 3.214  3.239  3.1694 3.2774 3.3624 3.3253 3.32   3.323  3.3351 3.1965 3.3911 3.2249 3.1031 3.208  3.2611 2.9342 2.974   2.9409 2.9296 2.9566 2.9322 3.1259 3.1643 3.1366 3.145  3.122  3.1404   3.2958 3.321  3.2481 3.3477 3.2823 3.3116 3.1539 3.0626 2.9619 3.085   3.0316 3.0223 3.0904 2.9872 3.0021 3.0252 2.9994 3.0047 2.7894 2.894   2.9095 2.9071 2.885  2.8496]]
442                   3.21046         1.53342         1.01196         -0.1249          -0.12408          0.23685          1.51008          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2455 3.383  3.2791 3.2909 3.3188 3.1742 3.3696 3.3426 3.4027 3.4034   3.4244 3.4293 3.3104 3.4726 3.3127 3.1972 3.2808 3.2928 2.9074 3.0709   3.0269 2.9986 3.0249 3.024  3.1917 3.2308 3.2008 3.2092 3.2025 3.2216   3.3376 3.3896 3.3274 3.3753 3.3511 3.4009 3.1668 3.1076 3.049  3.1624   3.1299 3.0829 3.1191 3.0472 3.062  3.0907 3.0531 3.0471 2.6991 2.9285   2.9496 2.9972 2.9432 2.8893]]
443                   3.26232         1.51851         1.07019         -0.14308          -0.13291          0.24553          1.31502          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2112 3.0002 3.0908 3.0239 3.0172 2.997  3.2124 2.9732 3.1183 3.18   3.4682 3.0561 3.5825 3.887  3.661  3.1055 3.457  4.1612 2.9789 3.002   2.967  2.9993 2.9767 3.1039 3.4549 3.4793 3.4636 3.493  3.4015 3.1411   3.8242 3.9702 3.7215 3.7119 3.7263 3.306  3.0671 3.0584 2.9872 3.6503   3.4817 3.02   3.0719 2.9641 3.6009 3.0541 2.9729 3.7356 2.7673 3.7233   4.1907 2.8858 3.5386 2.8367]]
444                   3.67483         1.58245         1.194         -0.28761          -0.25164          0.27711          1.34155          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9592 2.9484 3.4339 3.1256 3.4384 3.617  3.0325 3.388  2.9055 3.0612   3.953  2.2286 3.3104 4.0131 2.7841 3.2919 2.7329 3.6526 3.3798 3.5569   3.2216 3.2012 3.4269 2.7381 3.5642 2.6566 2.7861 3.6168 3.535  2.3133   4.0962 3.9828 4.1953 4.3149 4.3368 4.1826 4.0119 2.67   3.7813 4.1159   3.8185 2.792  4.4165 3.2167 2.2317 3.737  3.9712 3.9315 4.2486 4.6184   3.963  3.7104 2.5229 3.8971]]
445                   3.19722         1.52257         0.9932         -0.12027          -0.12021          0.23408          1.57022          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1368 3.2787 3.1739 3.1926 3.2028 3.1639 3.2853 3.3867 3.332  3.3167   3.334  3.3617 3.2076 3.3645 3.2681 3.1236 3.2417 3.1941 2.9325 2.9988   2.919  2.9234 2.9439 2.9261 3.1281 3.165  3.1322 3.1453 3.1235 3.1394   3.2996 3.3182 3.2855 3.3542 3.2916 3.3375 3.0898 3.0536 2.9696 3.0869   3.0893 3.0597 3.0796 2.9909 2.9906 3.0301 2.9886 3.0034 2.7977 2.9005   2.8905 2.9422 2.896  2.8941]]
446                   3.19235         1.52644         1.00978         -0.11856          -0.11803          0.23575          1.50685          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2571 3.3941 3.2753 3.2762 3.201  3.2748 3.3763 3.4716 3.3983 3.4125   3.3105 3.4294 3.3014 3.4586 3.2869 3.0786 3.2933 3.2911 3.0053 3.0768   3.0317 3.0169 3.0222 3.0446 3.1989 3.2378 3.206  3.2172 3.2025 3.0783   3.3349 3.3971 3.3631 3.3794 3.3418 3.391  3.1845 3.1301 3.0641 3.1487   2.9771 3.0905 2.98   2.8807 3.0741 3.0961 3.0533 3.0637 2.8604 2.9306   2.936  2.8096 2.9249 2.8909]]
447                   3.17135         1.50817         0.99134         -0.1112          -0.11118          0.23342          1.54312          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1333 3.9823 3.4618 3.5769 3.3616 3.2325 3.1044 3.7595 3.6033 3.4369   3.0001 3.3601 3.1656 2.9798 2.8295 3.4387 3.1418 3.4828 3.1365 3.1322   2.6526 3.3167 2.8595 3.5566 2.9512 2.8851 2.985  3.2473 2.956  2.7396   3.5905 3.1311 3.3545 3.6439 3.1807 3.1701 3.019  3.0011 2.7051 2.9832   3.1338 2.9938 2.8463 2.8844 3.1628 2.8658 2.895  3.2965 3.0557 2.7979   2.9398 2.8303 2.3445 2.6734]]
448                   3.32894         1.54738         0.96894         -0.16642          -0.16621          0.24697          1.47328          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.5672 1.4533 2.1646 4.0005 2.3756 1.6675 3.0091 2.204  3.4684 4.4951   3.4049 4.9806 1.6888 1.3903 4.7251 4.2662 4.4288 2.2544 3.7023 2.5644   2.1431 3.3499 4.4991 4.2067 1.2317 2.3239 2.4493 2.6055 1.8578 2.9695   4.3186 1.6082 4.453  4.0463 2.9752 4.5177 2.3538 1.2094 4.1831 3.1014   3.0998 3.4987 0.7799 4.0757 2.8041 2.9511 5.1716 1.6248 4.5134 4.19   2.9025 4.1188 6.097  3.617 ]]
449                   3.59545         1.60417         1.05465         -0.2598          -0.25928          0.26309          1.6485          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.9812 3.133  3.2529 1.8597 3.1562 1.5699 3.38   3.4513 2.8415 3.4808   3.3903 3.2398 3.6818 3.1511 3.2498 2.8703 3.1197 3.3717 2.8087 3.8932   2.8337 3.6396 3.0115 2.933  2.9967 3.2221 3.2113 2.1357 3.0625 2.4692   3.2632 3.3199 4.6436 3.7847 3.3386 3.3192 3.1665 3.5807 2.9653 3.0632   2.8484 3.0583 3.0791 2.7979 3.2293 3.8717 3.0385 3.0416 2.0273 2.9501   2.8561 2.9428 2.8464 2.8162]]
450                   3.17264         1.52046         1.03423         -0.11165          -0.1012          0.23704          1.39547          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4662 3.7278 3.515  3.5105 2.4989 3.5074 3.6642 3.6445 3.6165 3.6473   3.6837 3.6403 3.6495 2.765  3.5791 3.6811 2.7122 3.5387 3.2273 3.3484   3.272  3.3651 3.2538 3.2308 3.4568 3.5608 3.4405 3.5128 3.4728 3.4362   2.7298 3.8353 3.9216 3.5858 3.8606 2.7406 2.636  2.5637 3.3617 3.3532   3.3895 3.4907 2.5585 3.4058 3.5285 2.4121 3.3171 3.5632 3.134  3.5864   2.3011 3.233  3.3677 2.1609]]
451                   3.39162         1.56951         1.02828         -0.18838          -0.18838          0.24709          1.46217          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1478 3.2712 3.0348 3.0414 3.0742 3.2693 3.7073 3.3569 3.4588 3.5169   3.0637 3.5959 3.1629 3.3113 2.9262 2.9686 3.5176 3.4112 2.9271 3.2461   3.2292 3.1322 3.0495 2.6681 2.9474 3.5284 3.0807 2.8562 2.8168 3.3917   3.5663 3.5046 3.146  3.5195 3.831  2.9694 3.2414 2.7332 2.5857 3.4498   2.9204 2.6889 3.2768 3.0875 3.0925 3.1461 3.2014 3.1159 2.5889 3.3884   2.4567 2.3119 2.9447 2.6827]]
452                   5.29015         1.79269         0.98633         -0.8536          -0.78894          0.4072          1.40862          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.3378 5.0459 3.6678 3.6935 3.8509 0.4073 2.135  1.7018 2.2042 4.2351   2.6443 3.8514 4.2889 1.4957 2.2173 2.4208 3.1384 2.7193 2.3959 2.8192   2.3641 2.9515 2.5794 1.1052 3.9047 0.9917 0.967  1.325  3.4505 1.0337   2.6223 2.2394 2.468  4.3736 5.6785 1.2003 3.7992 3.1627 2.733  1.1462   2.4939 2.8385 5.2768 3.1288 3.2786 1.7257 4.088  3.0142 0.0173 4.138   1.     4.5414 1.0893 3.1391]]
453                   3.2554         1.51472         1.01298         -0.14065          -0.13986          0.23873          1.49118          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7628 3.163  3.7973 2.7688 3.8625 3.2326 3.2429 3.4269 3.2319 3.24   3.2745 3.4977 3.0775 3.2318 3.061  3.2043 3.2269 3.1117 2.9504 3.0271   2.9745 2.8141 2.9946 2.9348 2.4554 1.566  3.1058 4.2398 3.1093 3.1763   4.832  3.3069 3.8035 3.6115 3.3153 3.1952 3.1376 3.0599 3.2064 3.6559   3.2292 2.0175 2.2246 1.4574 2.9872 3.1408 2.8995 3.0636 2.8324 3.7153   4.0979 3.0311 4.0408 3.2682]]
454                   3.37348         1.59629         1.10735         -0.18202          -0.16406          0.25396          1.41958          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5483 3.5819 3.5385 3.483  3.5732 3.4825 3.6282 3.7185 3.6891 3.6482   3.7225 3.833  3.6202 3.7705 3.56   3.4109 3.5553 2.6559 3.2585 2.4613   3.3044 3.3437 3.3255 3.3676 2.4759 2.6837 3.5777 3.5224 3.4929 3.5629   3.6272 3.7486 3.826  3.7764 3.9281 3.7758 3.4598 3.3354 3.2632 3.3461   2.5408 3.3802 2.4314 3.5702 3.4104 3.3045 3.3104 2.4377 3.0921 3.5166   3.3178 2.3254 3.2631 3.1763]]
455                   3.48715         1.59786         1.11234         -0.22185          -0.21348          0.26118          1.48312          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[1.8793 2.4829 3.2018 3.2087 3.2625 2.6684 3.4584 3.0728 3.032  2.9975   3.1393 3.4323 3.4011 3.3513 3.3426 3.0996 3.2255 3.3017 2.9479 3.0131   2.9482 3.2481 2.6416 3.0942 3.3796 3.1648 3.1457 3.551  3.4599 3.3436   3.2531 3.8339 3.7528 3.8746 3.6093 3.7755 3.451  3.3298 3.2293 3.5933   3.0064 3.3318 3.892  2.962  4.1309 3.502  3.8567 3.4119 2.7952 3.9054   3.5738 2.8866 3.8763 3.3493]]
456                   3.30983         1.52053         1.099         -0.15972          -0.09498          0.25426          1.1834          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.5717 2.8489 3.5273 2.5846 2.589  3.9518 3.4857 3.5802 3.3748 3.1085   3.2331 3.3348 3.8957 3.5898 3.7674 3.1838 3.6212 3.7655 3.3594 2.9099   2.612  3.1735 3.2548 2.866  3.3977 3.529  3.7652 3.6208 3.8084 3.5743   3.5524 3.2224 4.0471 3.9752 4.4436 2.6793 3.5379 3.2994 2.7879 3.9092   3.5629 4.3565 4.5675 3.8338 4.0869 2.591  4.1337 3.5374 4.3771 4.7561   4.5532 3.6307 4.83   4.3897]]
457                   3.18785         1.52207         0.98991         -0.11698          -0.11691          0.2332          1.55742          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1461 3.285  3.196  3.1905 3.2262 3.1668 3.2918 3.3539 3.3075 3.3016   3.3409 3.3511 3.2012 3.3816 3.2044 3.1196 3.2287 3.2138 2.9362 3.0173   2.9322 2.9191 2.9372 2.9517 3.1261 3.163  3.1335 3.1468 3.1206 3.1421   3.2727 3.3418 3.2643 3.3    3.2854 3.3109 3.104  3.0292 2.9839 3.0715   3.0437 3.1159 3.0857 3.0079 3.0036 3.0534 2.9826 3.0082 2.7876 2.8911   2.8794 2.9204 2.8903 2.8896]]
458                   3.18664         1.52872         1.00639         -0.11656          -0.11613          0.2349          1.54222          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2313 3.3825 3.2773 3.2878 3.3189 3.2813 3.3706 3.4643 3.394  3.4069   3.417  3.4326 3.2905 3.4648 3.2947 3.1844 3.3009 3.1753 3.0096 3.0736   3.0187 2.9105 3.0207 3.0286 3.0623 3.2474 3.202  3.0877 3.1915 3.21   3.1913 3.3915 3.1895 3.3896 3.3511 3.3619 3.0429 3.1042 3.0525 3.158   3.1292 3.0887 3.1098 3.0359 3.0549 3.0759 3.0348 3.0552 2.8633 2.7812   2.9513 2.9514 2.9144 2.8976]]
459                   3.65355         1.64868         1.16308         -0.28016          -0.26272          0.27335          1.52567          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.3961 3.3045 2.6003 2.3499 2.8403 2.9844 3.0356 3.3819 3.3806 2.9022   3.0017 3.3546 3.4978 3.6019 3.2447 3.0723 3.3241 3.6349 2.9904 2.9721   2.9115 3.2044 3.1979 2.9815 3.3951 3.4539 3.5142 3.4672 3.3324 3.4569   3.869  3.8657 3.7116 4.0086 3.4792 4.0106 3.8316 3.6989 3.4022 3.5092   3.0644 3.7522 3.0621 3.9222 4.1141 3.8863 3.4449 2.9882 2.7364 4.3517   2.872  4.1946 2.8608 3.9585]]
460                   3.71548         1.69712         1.17499         -0.30186          -0.2687          0.27729          1.60842          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4219 2.8646 3.0429 3.0086 2.4035 2.7484 3.4841 3.1505 3.4036 3.6749   3.3286 3.2542 3.778  3.5768 2.9394 3.4373 3.7161 3.2525 2.6505 3.4018   3.0071 3.2905 3.4131 2.2468 3.7977 3.7083 4.0517 3.5161 3.2533 3.5157   4.1273 3.9302 3.6442 3.8932 4.1119 3.8937 3.2819 3.4991 3.3516 3.1691   3.4826 3.489  3.8506 3.9575 4.2983 4.0274 2.8634 4.1266 4.3707 2.5322   3.9976 3.751  2.5566 3.3998]]
461                   3.19367         1.52207         0.99313         -0.11902          -0.11893          0.23376          1.56262          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1438 3.2946 3.1845 3.1672 3.2216 3.1532 3.2692 3.3933 3.2945 3.3025   3.3293 3.3426 3.2364 3.385  3.1879 3.0909 3.211  3.2225 2.9165 3.0202   2.9264 2.947  2.9542 2.9269 3.1262 3.1657 3.1345 3.146  3.1235 3.1414   3.2722 3.3592 3.2724 3.3367 3.2841 3.3293 3.1346 3.0724 2.9573 3.0608   2.988  3.0122 3.0711 2.9796 3.0215 3.0457 3.0055 3.0023 2.8341 2.8862   2.8882 2.9079 2.8845 2.868 ]]
462                   3.20224         1.53493         1.0057         -0.12202          -0.12141          0.23595          1.57277          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2446 3.3792 3.2798 3.2763 3.3088 3.2805 3.3769 3.4727 3.4044 3.4005   3.4297 3.4401 3.299  3.4563 3.1705 3.2041 3.2912 3.3053 3.007  2.972   3.0332 3.0043 3.0277 3.0316 3.1944 3.2472 3.1992 3.213  3.1885 3.2083   3.3358 3.3898 3.3463 3.242  3.3382 3.3606 3.1775 3.1174 3.0506 3.1496   2.9827 3.1006 3.1283 3.0443 3.0707 3.1008 3.0504 3.0523 2.8529 2.7789   2.9256 2.7972 2.9513 2.9052]]
463                   3.1356         1.51681         1.0019         -0.09867          -0.09712          0.23293          1.49858          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.136  3.2887 3.4333 2.9653 3.5882 3.3528 3.0265 3.3521 3.4615 3.3987   3.4088 3.5949 3.3944 3.3995 3.5332 3.424  3.0783 3.4423 3.0388 3.285   2.6311 3.1137 2.7707 3.4001 3.0608 3.4592 3.3849 2.9015 2.7998 3.0902   3.1892 2.8395 3.46   3.6561 3.1376 3.2326 3.2085 2.9727 2.8398 3.8275   3.1274 2.6844 3.5025 3.112  3.1708 3.0711 3.1445 3.2225 3.0048 3.0002   3.1125 3.0342 3.1204 3.0473]]
464                   4.61479         1.80505         0.91279         -0.61696          -0.5475          0.33688          1.75037          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8187 2.984  2.0645 1.4909 2.9824 1.0287 2.4696 2.7261 3.9668 6.1481   2.043  1.4021 1.8911 4.4759 1.0623 4.6542 2.6953 1.4763 1.9455 2.8823   1.5836 3.5663 3.1331 2.6241 1.5587 1.8772 2.7382 1.7177 2.7499 2.3838   3.2158 1.9348 4.9407 2.3134 2.9182 2.1142 2.218  4.2924 3.4193 4.8886   3.3687 2.6971 1.7776 0.3746 3.8953 2.0062 2.2576 0.4452 2.6379 2.2866   3.7125 1.4605 2.4808 5.4929]]
465                   3.31481         1.53371         0.96619         -0.16147          -0.16145          0.24029          1.42137          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.201  3.3688 3.1156 3.3461 3.7133 1.8899 3.4708 3.4973 3.5756 3.2481   3.3408 3.4042 3.2432 3.1707 4.3527 1.7853 3.2614 3.2474 3.0059 3.5117   3.8686 3.0927 2.1179 2.8767 3.2173 3.1749 3.1169 2.9806 2.9704 2.4317   3.5785 2.99   3.188  3.2724 4.09   3.3782 2.0853 3.1359 2.98   3.1406   3.0111 3.0065 3.0491 3.1187 2.9102 3.1077 3.2356 3.2315 2.8981 3.0943   2.9356 2.8756 3.2584 2.8202]]
466                   3.40775         1.61426         1.1138         -0.19403          -0.17715          0.25608          1.44743          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5408 3.593  2.6244 2.6609 3.5919 3.52   3.6277 3.8336 3.7318 3.6907   3.7055 3.7296 2.6039 3.7193 3.5952 3.4941 3.5606 3.4972 3.2751 3.3162   3.4292 2.381  3.3343 3.2557 3.4867 3.5616 2.5629 3.6422 3.5664 3.6191   3.8003 3.8274 3.7016 3.7517 2.5897 3.7481 2.5564 3.6317 3.458  3.4836   3.445  3.3086 3.7172 2.4351 3.4343 2.4491 2.4837 3.4095 3.1621 3.4635   3.5036 3.3015 3.2524 3.5217]]
467                   3.19001         1.51777         0.98218         -0.11774          -0.11772          0.23383          1.61767          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.4413 3.154  3.2773 3.2765 3.187  3.3085 3.0988 3.3273 3.4384 3.3979   2.9724 3.6588 3.0609 3.6922 3.8035 2.9982 3.3555 3.2827 2.7369 2.9776   2.6395 3.5116 2.8973 3.1725 3.1821 3.46   3.0839 3.4414 3.0688 2.7356   3.3194 3.5689 3.1776 2.9169 3.3045 3.1542 2.8685 3.163  3.0905 3.3142   3.209  2.9641 2.9897 3.2138 2.9307 3.2419 2.3976 3.0927 3.091  3.062   2.2816 3.0371 3.0496 2.6313]]
468                   3.35291         1.51094         0.981         -0.17482          -0.17429          0.2559          1.39168          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2665 3.4154 3.3801 3.3527 3.1637 3.1244 3.0769 3.2162 3.3489 3.2514   2.9905 3.4656 3.1812 2.6836 3.3188 2.9126 3.2332 3.7285 3.1525 3.5511   2.9853 2.9107 2.9692 3.1154 2.991  2.1247 3.1188 2.7468 3.0265 3.3416   3.2543 3.2743 3.3459 3.3075 3.4263 3.241  3.2434 3.0599 2.8829 3.6725   2.8172 3.0162 3.01   2.8139 3.6906 3.4227 2.6893 3.135  2.8755 3.0398   2.797  3.306  3.1717 0.5937]]
469                   3.32656         1.59389         1.11343         -0.16558          -0.14528          0.25402          1.4602          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.5355 2.8195 2.5912 3.4554 2.518  3.5422 2.5791 3.7603 3.7003 3.6825   3.7096 3.7465 3.5905 3.9573 3.7695 3.5471 3.5937 3.5721 3.2951 3.3945   2.4913 3.3406 3.2799 3.363  3.6094 3.4983 2.5275 3.461  3.7013 3.4436   3.6942 3.7205 2.6375 3.6929 3.6297 3.6655 3.4248 3.4389 3.3558 3.4956   3.4263 3.4196 3.3741 3.237  3.487  3.4559 3.6362 3.6534 3.4482 3.2567   3.3096 3.2886 3.2246 3.2841]]
470                   3.18767         1.5219         0.98973         -0.11692          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.3399 3.2333 3.2335 3.287  3.2334 3.3174 3.4142 3.3494 3.3495   3.3657 3.3819 3.2333 3.3933 3.2334 3.1267 3.2334 3.2333 2.9579 3.0227   2.9742 2.9579 2.9741 2.9741 3.1321 3.1698 3.1383 3.151  3.1257 3.1446   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.9801 3.0867   3.06   3.0333 3.0485 2.9676 2.9837 3.0163 2.9676 2.9837 2.7667 2.8467   2.8466 2.8733 2.8466 2.82  ]]
471                   3.18772         1.52191         0.98974         -0.11694          -0.11691          0.23329          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3401 3.2333 3.2333 3.2868 3.2334 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1267 3.2333 3.2334 2.958  3.0227   2.974  2.958  2.9741 2.9741 3.132  3.1698 3.1384 3.1509 3.1259 3.1447   3.2621 3.3107 3.2621 3.3107 3.2622 3.2946 3.1133 3.06   2.9802 3.0867   3.0601 3.0334 3.0486 2.9676 2.9838 3.0162 2.9677 2.9839 2.7666 2.8467   2.8466 2.8733 2.8466 2.82  ]]
472                   3.18772         1.52191         0.98974         -0.11693          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2869 3.2333 3.3173 3.4141 3.3496 3.3495   3.3657 3.3819 3.2335 3.3934 3.2333 3.1266 3.2331 3.2333 2.9579 3.0228   2.9741 2.958  2.9741 2.974  3.1321 3.1699 3.1384 3.1509 3.1257 3.1446   3.2621 3.3107 3.2621 3.3108 3.2623 3.2945 3.1133 3.06   2.9798 3.0866   3.06   3.0334 3.0486 2.9676 2.9838 3.0161 2.9677 2.9837 2.7667 2.8467   2.8467 2.8733 2.8467 2.8198]]
473                   3.18759         1.52189         0.98971         -0.11689          -0.11687          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2867 3.2334 3.3171 3.4142 3.3495 3.3495   3.3659 3.3819 3.2333 3.3934 3.2332 3.1267 3.2337 3.2333 2.958  3.0228   2.9742 2.9579 2.9739 2.9744 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3106 3.2621 3.3105 3.2621 3.2944 3.1133 3.06   2.98   3.0867   3.06   3.0334 3.0486 2.9676 2.984  3.0162 2.9676 2.9837 2.7667 2.8467   2.8468 2.8733 2.8465 2.8201]]
474                   3.18761         1.52189         0.98972         -0.1169          -0.11687          0.23328          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2334 3.2867 3.2333 3.3173 3.4142 3.3499 3.3496   3.3657 3.3819 3.2334 3.3933 3.2334 3.1267 3.2334 3.2333 2.9579 3.0226   2.9744 2.9579 2.9743 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3105 3.2622 3.2945 3.1132 3.0601 2.9801 3.0867   3.06   3.0333 3.0485 2.9678 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8467 2.8734 2.8466 2.82  ]]
475                   3.18778         1.52194         0.98975         -0.11696          -0.11693          0.23329          1.53882          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2331 3.2333 3.2871 3.2331 3.3172 3.4142 3.3496 3.3495   3.3657 3.3819 3.2333 3.3933 3.2333 3.1268 3.2334 3.2331 2.9579 3.0226   2.9741 2.9579 2.9741 2.974  3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2622 3.3107 3.2622 3.3107 3.262  3.2945 3.1133 3.06   2.98   3.0867   3.0607 3.0333 3.0488 2.9677 2.9838 3.0162 2.9676 2.9838 2.7668 2.8466   2.8464 2.8733 2.8467 2.82  ]]
476                   3.18767         1.52189         0.98974         -0.11692          -0.11689          0.23329          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2331 3.2333 3.2866 3.2334 3.3172 3.4142 3.3495 3.3495   3.3656 3.3818 3.2333 3.3934 3.2334 3.127  3.2333 3.2335 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.262  3.3107 3.2621 3.3106 3.2621 3.2946 3.114  3.06   2.9799 3.0866   3.06   3.0333 3.0486 2.9676 2.9838 3.0161 2.9676 2.9838 2.7666 2.8467   2.8464 2.8735 2.8467 2.8201]]
477                   3.18766         1.52188         0.98971         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3398 3.2336 3.2333 3.2866 3.2334 3.3172 3.4142 3.3495 3.3495   3.3657 3.3819 3.2333 3.3934 3.2333 3.1267 3.2333 3.2333 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3107 3.2622 3.3106 3.2622 3.2945 3.1134 3.0597 2.98   3.0863   3.06   3.0334 3.0485 2.9676 2.9837 3.0162 2.9677 2.9838 2.7666 2.8467   2.8468 2.8733 2.8467 2.8196]]
478                   3.18769         1.5219         0.98973         -0.11693          -0.1169          0.23329          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3397 3.2334 3.2334 3.2868 3.2333 3.3169 3.4143 3.3495 3.3496   3.3657 3.3821 3.2334 3.3933 3.2333 3.1266 3.2333 3.2334 2.9579 3.0226   2.9743 2.9579 2.9742 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1134 3.0602 2.98   3.0864   3.06   3.0334 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8466   2.8466 2.8733 2.8467 2.82  ]]
479                   3.18766         1.52189         0.98973         -0.11692          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2335 3.2867 3.2333 3.317  3.4142 3.3495 3.3498   3.3657 3.3818 3.2334 3.393  3.2333 3.1267 3.2333 3.2334 2.9579 3.0227   2.9741 2.9579 2.974  2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1134 3.0599 2.98   3.0867   3.0598 3.0333 3.0485 2.9676 2.9839 3.0162 2.9676 2.9838 2.7667 2.8466   2.8467 2.8733 2.8466 2.82  ]]
480                   3.18771         1.5219         0.98973         -0.11693          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2332 3.2334 3.2867 3.2333 3.3172 3.4142 3.3495 3.3495   3.3657 3.3819 3.2332 3.3933 3.2332 3.1266 3.2336 3.2334 2.9578 3.0227   2.974  2.958  2.9741 2.9742 3.1321 3.1698 3.1383 3.1509 3.1258 3.1446   3.2621 3.3107 3.2622 3.3106 3.2621 3.2945 3.1134 3.0597 2.98   3.0867   3.06   3.0334 3.0486 2.9677 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8464 2.8733 2.8463 2.82  ]]
481                   3.18772         1.5219         0.98974         -0.11694          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2334 3.2868 3.2334 3.3172 3.4142 3.3495 3.3495   3.3657 3.3821 3.2333 3.3933 3.2334 3.1267 3.2333 3.2334 2.9579 3.0226   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2621 3.3108 3.2621 3.2945 3.1134 3.06   2.9799 3.0867   3.06   3.0332 3.0486 2.9676 2.9837 3.0162 2.9676 2.9837 2.7666 2.8467   2.8465 2.8734 2.8467 2.8199]]
482                   3.18772         1.52191         0.98974         -0.11694          -0.11691          0.23329          1.53877          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2332 3.2333 3.2867 3.2331 3.3171 3.4143 3.3495 3.3495   3.3657 3.3819 3.2332 3.3934 3.2334 3.1267 3.2333 3.2333 2.9579 3.0226   2.9741 2.9578 2.9742 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3107 3.2621 3.3107 3.2622 3.2946 3.1134 3.06   2.98   3.0867   3.0599 3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8467   2.8468 2.8734 2.8467 2.8198]]
483                   3.18772         1.52191         0.98973         -0.11694          -0.11691          0.23329          1.53887          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2332 3.2333 3.2866 3.2333 3.3172 3.4142 3.3496 3.3494   3.3656 3.3819 3.2333 3.3936 3.2333 3.1268 3.2333 3.2331 2.958  3.0225   2.9741 2.9578 2.9741 2.974  3.1321 3.1698 3.1383 3.1509 3.1258 3.1447   3.2621 3.3107 3.262  3.3107 3.2621 3.2943 3.1133 3.06   2.98   3.0866   3.06   3.0334 3.0485 2.9676 2.9838 3.0162 2.9677 2.9838 2.7665 2.8466   2.8466 2.8732 2.8465 2.82  ]]
484                   3.18767         1.52189         0.98972         -0.11692          -0.11689          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.3399 3.2334 3.2334 3.2867 3.2333 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2333 3.3933 3.2333 3.1267 3.2334 3.2333 2.9579 3.0226   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1257 3.1447   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1132 3.06   2.9799 3.0867   3.06   3.0333 3.0485 2.9677 2.9837 3.0162 2.9677 2.9838 2.7667 2.8467   2.8466 2.8734 2.8467 2.8199]]
485                   3.1876         1.52188         0.98972         -0.11689          -0.11687          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2335 3.2334 3.2867 3.2331 3.3173 3.4143 3.3495 3.3494   3.3657 3.3819 3.2333 3.3934 3.2334 3.1266 3.2334 3.2334 2.9582 3.0227   2.9743 2.9579 2.9742 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2621 3.3106 3.262  3.2946 3.113  3.06   2.98   3.0867   3.0601 3.0335 3.0486 2.9677 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8467 2.8733 2.8466 2.82  ]]
486                   3.18769         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2332 3.2333 3.2867 3.2333 3.3172 3.4142 3.3494 3.3495   3.3658 3.3817 3.2333 3.3933 3.2333 3.1267 3.2333 3.2333 2.9579 3.0226   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1447   3.2622 3.3107 3.2621 3.3107 3.2623 3.2944 3.1133 3.0601 2.98   3.0866   3.06   3.0332 3.0485 2.9676 2.9839 3.0163 2.9676 2.9838 2.7667 2.8465   2.8467 2.8733 2.8467 2.82  ]]
487                   3.18767         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53877          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2332 3.2334 3.2867 3.2333 3.3171 3.4143 3.3494 3.3494   3.3657 3.3819 3.2333 3.3933 3.2333 3.1267 3.2333 3.2331 2.958  3.0227   2.9741 2.9579 2.9742 2.9742 3.132  3.1698 3.1383 3.1509 3.1258 3.1447   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0334 3.0485 2.9676 2.9839 3.0161 2.9676 2.9839 2.7666 2.8466   2.8467 2.8733 2.8467 2.82  ]]
488                   3.18767         1.5219         0.98973         -0.11692          -0.11689          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2865 3.2336 3.3172 3.4143 3.3496 3.3496   3.3657 3.3823 3.2333 3.3934 3.2333 3.1267 3.2333 3.2333 2.9579 3.0226   2.9741 2.9581 2.9741 2.9741 3.1322 3.1698 3.1384 3.1509 3.1258 3.1446   3.262  3.3106 3.2622 3.3107 3.2621 3.2945 3.1133 3.0601 2.9804 3.0867   3.06   3.0333 3.0485 2.9676 2.9838 3.0161 2.9677 2.9838 2.7667 2.8469   2.8467 2.8734 2.8466 2.82  ]]
489                   3.18766         1.5219         0.98972         -0.11692          -0.11689          0.23328          1.53857          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3398 3.2334 3.2333 3.2867 3.2333 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1263 3.2333 3.2333 2.9578 3.0229   2.9742 2.958  2.9741 2.9741 3.1321 3.1697 3.1384 3.151  3.1258 3.1446   3.2621 3.3107 3.2621 3.3104 3.2621 3.2945 3.1134 3.06   2.9797 3.0867   3.06   3.0333 3.0487 2.9674 2.9838 3.0162 2.9675 2.9839 2.7667 2.8467   2.8467 2.8733 2.8466 2.82  ]]
490                   3.1876         1.52188         0.98971         -0.1169          -0.11687          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3399 3.2333 3.2333 3.2867 3.2336 3.3171 3.4142 3.3495 3.3495   3.3656 3.3819 3.2333 3.3933 3.2333 3.1267 3.2333 3.2334 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3105 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.9799 3.0867   3.0601 3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9839 2.7671 2.8466   2.8466 2.8733 2.8467 2.8199]]
491                   3.18771         1.5219         0.98973         -0.11693          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3399 3.2333 3.2333 3.2865 3.2333 3.3172 3.4142 3.3495 3.3495   3.3657 3.3819 3.2333 3.3933 3.2333 3.1266 3.2333 3.2333 2.9579 3.0226   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1383 3.151  3.1258 3.1446   3.262  3.3107 3.2621 3.3107 3.2619 3.2945 3.1133 3.0604 2.9801 3.0867   3.06   3.0336 3.0485 2.9676 2.9838 3.0162 2.9677 2.9838 2.7666 2.8467   2.8467 2.8733 2.8466 2.82  ]]
492                   3.18766         1.5219         0.98973         -0.11691          -0.11689          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3398 3.2335 3.2333 3.2867 3.2333 3.3172 3.4142 3.3496 3.3495   3.3657 3.3819 3.2334 3.3937 3.2333 3.1267 3.2333 3.2333 2.9581 3.0226   2.9741 2.9579 2.9741 2.9741 3.132  3.1698 3.1383 3.1509 3.1257 3.1447   3.2621 3.3106 3.2622 3.3107 3.2621 3.2946 3.1133 3.06   2.98   3.0866   3.06   3.0334 3.0486 2.9676 2.9838 3.0162 2.9676 2.9839 2.7667 2.8467   2.8467 2.8733 2.8467 2.82  ]]
493                   3.18768         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3401 3.2334 3.2333 3.2867 3.2333 3.3171 3.4142 3.3495 3.3495   3.3657 3.3818 3.2333 3.3933 3.2333 3.1267 3.2333 3.2333 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2622 3.2946 3.1133 3.06   2.98   3.0867   3.06   3.0332 3.0485 2.9675 2.9838 3.0161 2.9676 2.9838 2.7667 2.8466   2.8468 2.8733 2.8467 2.8199]]
494                   3.1877         1.52189         0.98973         -0.11693          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2334 3.2334 3.2867 3.2334 3.3171 3.4142 3.3495 3.3495   3.3659 3.3818 3.2334 3.3933 3.2333 3.1267 3.2332 3.2333 2.9579 3.0227   2.9741 2.9578 2.9741 2.9741 3.1322 3.1699 3.1383 3.1509 3.1258 3.1446   3.2622 3.3107 3.2622 3.3107 3.2621 3.2945 3.1134 3.06   2.9799 3.0867   3.06   3.033  3.0486 2.9677 2.9838 3.016  2.9676 2.9838 2.7666 2.8467   2.8466 2.8734 2.8466 2.82  ]]
495                   3.18758         1.52188         0.98972         -0.11689          -0.11686          0.23328          1.53882          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.3401 3.233  3.2335 3.2866 3.2336 3.3171 3.4142 3.3495 3.3495   3.3657 3.3819 3.2331 3.3933 3.2333 3.1268 3.2333 3.2336 2.9581 3.0226   2.9743 2.958  2.9741 2.9741 3.132  3.1698 3.1384 3.151  3.1258 3.1446   3.262  3.3106 3.262  3.3107 3.2621 3.2945 3.1133 3.06   2.9799 3.0867   3.0601 3.0334 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8467 2.8734 2.8467 2.82  ]]
496                   3.18771         1.5219         0.98974         -0.11693          -0.11691          0.23329          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2068 3.3402 3.2333 3.2335 3.287  3.2333 3.3171 3.4141 3.3495 3.3494   3.3657 3.3819 3.2334 3.3934 3.2334 3.1267 3.2333 3.2334 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2622 3.3107 3.2622 3.3108 3.2621 3.2945 3.1133 3.0601 2.9801 3.0867   3.06   3.0332 3.0486 2.9676 2.9838 3.0162 2.9677 2.9838 2.7666 2.8467   2.8467 2.8733 2.8466 2.8199]]
497                   3.18767         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3399 3.2333 3.2333 3.2868 3.2333 3.3173 3.4143 3.3495 3.3495   3.3657 3.382  3.2337 3.3932 3.2333 3.1266 3.2334 3.2332 2.9579 3.0227   2.9741 2.9579 2.9742 2.9742 3.132  3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0485 2.9676 2.984  3.0162 2.9676 2.9839 2.7667 2.8467   2.8467 2.8731 2.8467 2.8199]]
498                   3.18768         1.52189         0.98973         -0.11692          -0.1169          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3399 3.2333 3.2334 3.2867 3.2333 3.3172 3.4143 3.3494 3.3495   3.3657 3.3819 3.2333 3.3933 3.2333 3.1267 3.2333 3.2334 2.9579 3.0227   2.9741 2.9579 2.974  2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2622 3.2945 3.1133 3.06   2.98   3.0867   3.0599 3.0333 3.0485 2.9678 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8467 2.8732 2.8466 2.82  ]]
499                   3.18773         1.52191         0.98974         -0.11694          -0.11692          0.23329          1.53877          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2867 3.2334 3.3172 3.4145 3.3495 3.3495   3.3659 3.3819 3.2334 3.3934 3.2334 3.1267 3.2332 3.2332 2.9579 3.0226   2.9741 2.9579 2.974  2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0486 2.9676 2.9838 3.0161 2.9677 2.9838 2.7667 2.8467   2.8467 2.8733 2.8467 2.82  ]]
500                   3.18773         1.52191         0.98974         -0.11694          -0.11692          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3398 3.2335 3.2335 3.2867 3.2333 3.3171 3.4142 3.3494 3.3496   3.3657 3.3819 3.2333 3.3933 3.2332 3.1268 3.2334 3.2333 2.9579 3.0227   2.9741 2.9579 2.974  2.9741 3.1321 3.1697 3.1384 3.1509 3.1258 3.1446   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.9801 3.0868   3.0604 3.0333 3.0485 2.9676 2.9838 3.0162 2.9675 2.9839 2.7667 2.8466   2.8466 2.8733 2.8464 2.8199]]
501                   3.1876         1.52189         0.98973         -0.1169          -0.11687          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2333 3.2333 3.2867 3.2334 3.3172 3.4143 3.3499 3.3495   3.3657 3.3818 3.2333 3.3933 3.2333 3.1267 3.2332 3.2333 2.9581 3.0227   2.9741 2.958  2.9741 2.9743 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.262  3.3107 3.2619 3.3107 3.2621 3.2945 3.1134 3.0599 2.98   3.0867   3.06   3.0333 3.0485 2.9676 2.9838 3.0161 2.9675 2.9839 2.7667 2.8467   2.8466 2.8734 2.8467 2.8201]]
502                   3.18774         1.52192         0.98974         -0.11694          -0.11692          0.23329          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3402 3.2335 3.2333 3.2869 3.2333 3.3172 3.4142 3.3495 3.3495   3.3657 3.3819 3.2334 3.3934 3.2333 3.1265 3.2336 3.2333 2.9579 3.0227   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2622 3.2945 3.1133 3.06   2.98   3.0868   3.06   3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9839 2.7666 2.8466   2.8465 2.8732 2.8466 2.8199]]
503                   3.18764         1.52188         0.98972         -0.11691          -0.11688          0.23328          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2069 3.34   3.2333 3.2335 3.2867 3.2334 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2333 3.3933 3.2333 3.1266 3.2333 3.2333 2.958  3.0227   2.9742 2.9579 2.9743 2.9742 3.1321 3.1698 3.1383 3.151  3.1258 3.1447   3.262  3.3107 3.2621 3.3107 3.2621 3.2944 3.1133 3.06   2.98   3.0867   3.0599 3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8466   2.8467 2.8733 2.8466 2.8199]]
504                   3.18765         1.5219         0.98972         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2332 3.2334 3.2865 3.2332 3.317  3.4142 3.3495 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1268 3.2334 3.2333 2.9581 3.0227   2.9741 2.958  2.9741 2.9741 3.1322 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3106 3.2622 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0866   3.06   3.0333 3.0486 2.9676 2.984  3.0162 2.9676 2.984  2.7667 2.8467   2.8464 2.873  2.8467 2.82  ]]
505                   3.18768         1.52189         0.98972         -0.11692          -0.1169          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2335 3.2866 3.2333 3.3172 3.4142 3.3495 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1266 3.2335 3.2333 2.9579 3.0226   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1446   3.2621 3.3106 3.2622 3.3107 3.2622 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0332 3.0486 2.9676 2.9838 3.0162 2.9675 2.9838 2.7667 2.8464   2.8467 2.8733 2.8467 2.82  ]]
506                   3.18766         1.5219         0.98973         -0.11692          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2335 3.2333 3.287  3.2333 3.3172 3.4142 3.3495 3.3495   3.3656 3.3819 3.2333 3.3933 3.2333 3.1267 3.2333 3.2334 2.9579 3.0227   2.9741 2.9578 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3106 3.2621 3.3107 3.2622 3.2945 3.1133 3.06   2.9799 3.0867   3.06   3.0333 3.0486 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8466   2.8467 2.8733 2.847  2.82  ]]
507                   3.18778         1.52192         0.98973         -0.11696          -0.11693          0.23329          1.53882          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3401 3.2333 3.2333 3.2867 3.2333 3.3171 3.4142 3.3495 3.3495   3.3657 3.3819 3.2334 3.3934 3.2334 3.1265 3.2335 3.2333 2.958  3.0224   2.9741 2.958  2.9737 2.9742 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2624 3.3106 3.2621 3.3107 3.2621 3.2945 3.1133 3.0601 2.98   3.0867   3.06   3.0333 3.0483 2.9674 2.9838 3.0162 2.9677 2.9838 2.7663 2.8466   2.8467 2.8733 2.8464 2.82  ]]
508                   3.18767         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2064 3.3398 3.2332 3.2333 3.2866 3.2333 3.3172 3.4144 3.3495 3.3495   3.3657 3.3819 3.2333 3.3933 3.2334 3.1266 3.2333 3.2333 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.262  3.3107 3.262  3.3107 3.2621 3.2945 3.1133 3.06   2.9801 3.0867   3.06   3.0334 3.0485 2.9676 2.9839 3.0162 2.9676 2.9838 2.7668 2.8467   2.8467 2.8733 2.8467 2.82  ]]
509                   3.18773         1.52192         0.98974         -0.11694          -0.11692          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2064 3.34   3.2333 3.2333 3.2867 3.2333 3.3171 3.4142 3.3494 3.3496   3.3657 3.3817 3.2332 3.3942 3.2335 3.1267 3.2334 3.2333 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1257 3.1447   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0866   3.06   3.0334 3.0485 2.9676 2.9838 3.0162 2.9677 2.9838 2.7667 2.8465   2.8467 2.8733 2.8464 2.8199]]
510                   3.18762         1.52188         0.9897         -0.1169          -0.11688          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2866 3.2334 3.3172 3.4143 3.3495 3.3495   3.3658 3.3819 3.2333 3.3933 3.2338 3.1267 3.2334 3.2334 2.9579 3.0227   2.9742 2.9579 2.9741 2.974  3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3103 3.2621 3.3106 3.2621 3.2945 3.1133 3.0601 2.98   3.0867   3.0601 3.0333 3.0485 2.9677 2.9839 3.0162 2.9677 2.9838 2.7666 2.8467   2.8466 2.8733 2.8466 2.82  ]]
511                   3.18762         1.52188         0.98972         -0.1169          -0.11688          0.23328          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2337 3.2334 3.2867 3.2334 3.3171 3.4142 3.3495 3.3495   3.3658 3.3819 3.2333 3.3933 3.2333 3.1267 3.2334 3.2333 2.9579 3.0227   2.9742 2.9579 2.9739 2.9743 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2622 3.3107 3.2621 3.2943 3.1134 3.06   2.98   3.0863   3.0598 3.0334 3.0486 2.9676 2.9838 3.0162 2.9677 2.9839 2.7666 2.8467   2.8467 2.8733 2.8467 2.82  ]]
512                   3.18762         1.52189         0.98973         -0.1169          -0.11688          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2334 3.2334 3.2867 3.2333 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2333 3.3934 3.2334 3.1268 3.2333 3.2333 2.958  3.0226   2.9741 2.958  2.9742 2.9742 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3106 3.2621 3.2944 3.1133 3.06   2.98   3.0867   3.0601 3.0336 3.0485 2.9676 2.9839 3.0161 2.9676 2.9838 2.7666 2.8466   2.8468 2.8734 2.8467 2.82  ]]
513                   3.1877         1.52191         0.98974         -0.11693          -0.11691          0.23329          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2334 3.2334 3.2867 3.2333 3.3173 3.4142 3.3494 3.3495   3.3658 3.3819 3.2334 3.3936 3.2333 3.1267 3.2333 3.2333 2.9579 3.0227   2.9741 2.9579 2.9742 2.9742 3.1321 3.1699 3.1384 3.1509 3.1258 3.1447   3.2622 3.3108 3.2621 3.3107 3.2621 3.2944 3.1133 3.06   2.98   3.0868   3.0601 3.0332 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8467   2.8467 2.8733 2.8465 2.82  ]]
514                   3.18763         1.52189         0.98973         -0.1169          -0.11688          0.23328          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3401 3.2333 3.2335 3.2867 3.2333 3.3172 3.4143 3.3495 3.3495   3.3658 3.382  3.2333 3.3933 3.2333 3.1267 3.2333 3.2333 2.958  3.0226   2.9741 2.958  2.9743 2.9742 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1134 3.06   2.98   3.0865   3.06   3.0334 3.0485 2.9677 2.9838 3.0162 2.9677 2.9838 2.7667 2.8467   2.8467 2.8734 2.8467 2.82  ]]
515                   3.18776         1.52192         0.98974         -0.11695          -0.11693          0.23329          1.53872          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2867 3.2334 3.3172 3.4144 3.3497 3.3496   3.3657 3.3821 3.2334 3.3933 3.2333 3.1267 3.2332 3.2333 2.9578 3.0227   2.974  2.958  2.9741 2.9742 3.1321 3.1698 3.1384 3.1509 3.1259 3.1446   3.2621 3.3107 3.262  3.3107 3.2622 3.2945 3.1133 3.0599 2.98   3.0867   3.06   3.0333 3.0486 2.9676 2.9838 3.0161 2.9676 2.9838 2.7667 2.8464   2.8467 2.8733 2.8467 2.8196]]
516                   3.18763         1.52188         0.98971         -0.1169          -0.11688          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2867 3.2334 3.3172 3.4143 3.3494 3.3495   3.3656 3.3819 3.2333 3.3933 3.2334 3.1266 3.2333 3.2334 2.958  3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3106 3.262  3.3105 3.2623 3.2945 3.1133 3.06   2.9798 3.0866   3.06   3.0333 3.0485 2.9676 2.9838 3.0161 2.9677 2.9838 2.7665 2.8468   2.8467 2.8733 2.8467 2.82  ]]
517                   3.18768         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53877          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2868 3.2333 3.3171 3.4142 3.3496 3.3495   3.3657 3.3819 3.2333 3.3933 3.2334 3.1266 3.2332 3.2334 2.958  3.0226   2.9741 2.9579 2.9742 2.9741 3.1321 3.1698 3.1384 3.1509 3.1257 3.1446   3.2621 3.3107 3.2621 3.3107 3.2621 3.2944 3.1133 3.0606 2.9799 3.0866   3.06   3.0332 3.0485 2.9677 2.9838 3.0162 2.9676 2.9838 2.7667 2.8468   2.8467 2.8733 2.8466 2.8199]]
518                   3.21133         1.56001         1.11251         -0.12521          -0.09749          0.2482          1.40972          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[2.7445 2.6101 2.8639 3.6476 3.2008 2.7461 3.333  3.2414 3.2989 3.3196   3.2787 3.3359 3.2747 3.7548 3.2392 3.5536 3.889  2.9115 2.9015 2.9219   3.1053 2.884  3.1435 3.3268 3.4037 3.5484 3.5577 3.4262 3.1195 3.4631   3.2943 3.9922 3.8069 3.938  3.4357 3.324  3.1435 3.5134 3.5919 3.1984   3.6849 3.5052 3.6203 3.661  3.6816 3.5578 3.6957 3.6311 3.9707 3.9216   3.8436 3.9613 3.843  3.6614]]
519                   3.46996         1.56827         1.16202         -0.21583          -0.18146          0.26706          1.28952          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[2.5518 3.2502 3.0766 2.7468 3.1688 3.3582 3.1322 3.3818 3.4511 2.9225   3.3271 3.3275 4.079  3.5749 3.7772 3.3809 3.3338 3.3826 3.016  2.9928   2.923  2.6121 2.9288 2.8579 3.1269 3.3909 3.1316 3.3489 3.1195 3.3924   3.7598 4.0893 3.8975 4.086  3.9991 3.8784 3.3546 3.4411 3.6283 3.8839   3.3697 3.9851 3.7567 3.8974 3.6224 3.074  3.2537 3.022  4.1425 3.8307   4.0646 4.0923 3.8963 4.1554]]
520                   3.117         1.51799         1.05786         -0.09216          -0.08024          0.23773          1.34848          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[2.9229 3.2283 2.6089 3.3325 2.7803 3.0888 3.0502 3.0625 3.1245 3.2881   3.3162 3.0876 3.8253 3.4233 3.5371 3.4746 3.4418 3.0944 3.1923 3.2859   2.923  2.79   3.1778 3.0635 3.3994 3.5763 3.3292 3.5513 3.2019 3.1389   3.2972 4.0532 3.6739 3.3343 3.908  3.5934 3.0314 2.9344 3.7995 3.0961   2.9812 3.3938 3.5874 3.7134 3.0851 3.0597 3.3626 3.8181 3.7215 2.9192   4.0254 3.9548 3.7366 2.8951]]
521                   3.31422         1.56065         1.14516         -0.16126          -0.13175          0.25751          1.30125          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,shuffle=False,solver='sgd')            [[3.1149 3.2512 3.163  2.7664 2.6857 2.3544 3.5839 3.3585 3.182  3.4707   3.1434 3.0372 3.5991 3.334  3.735  3.2379 3.2438 3.26   3.094  3.151   3.0403 3.111  3.058  2.8977 3.4202 3.6349 3.357  3.402  3.3121 3.3501   3.9535 3.8076 3.9583 4.1323 3.3002 3.8265 3.8417 3.2494 3.0398 3.543   3.4576 3.5024 3.5119 3.8519 3.0284 3.5664 3.5877 3.6227 3.9109 3.9605   4.0629 3.9549 3.9414 4.0431]]
522                   3.27522         1.54345         1.01181         -0.1476          -0.14699          0.2396          1.56018          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7743 3.0072 2.8172 2.8639 2.9634 2.8897 3.1047 3.181  3.108  3.1233   3.0607 3.2279 3.1249 3.3769 3.1802 3.0155 2.9871 3.1482 2.7331 2.9233   2.7784 2.7307 2.7825 2.7734 3.1137 3.1487 3.121  3.1317 3.1011 3.1231   3.392  3.538  3.3849 3.3355 3.4158 3.3807 3.3106 3.0614 2.8802 2.9846   3.0958 3.2258 3.1797 3.1183 3.1087 3.1231 3.0681 3.2295 3.0792 3.0811   3.2001 3.2236 3.1    3.1496]]
523                   3.22765         1.53107         1.00619         -0.13093          -0.13079          0.23689          1.5075          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.883  2.9242 3.3012 2.9379 2.9441 2.8993 3.1432 3.2157 3.1953 3.2082   3.2412 3.1735 3.2356 3.2959 3.0581 3.0227 3.1695 3.1585 2.7028 2.8941   2.9219 2.7666 2.9135 2.6651 3.1037 3.1397 3.1112 3.1364 3.1085 3.1288   3.323  3.3969 3.2845 3.411  3.3039 3.4382 3.2775 2.9774 3.2968 3.045   3.1904 3.0376 3.2149 3.1032 3.1468 3.2074 3.1181 3.1146 3.1166 3.0683   3.1989 3.1707 3.144  3.0712]]
524                   3.19461         1.5344         0.99925         -0.11935          -0.11907          0.2346          1.5265          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7555 3.0173 2.9518 2.8854 2.8794 2.8893 3.0787 3.3053 3.1595 3.2419   3.1679 3.1974 3.1197 3.3048 3.1842 2.9171 3.1604 3.1941 2.7516 2.8869   3.0172 2.8178 2.9487 2.9492 3.1063 3.1528 3.1184 3.1324 3.0979 3.1209   3.3604 3.2646 3.3815 3.4197 3.3542 3.3268 3.1159 3.1985 2.9759 2.9804   3.2562 3.059  3.2294 3.097  3.1162 3.1821 3.1622 3.1849 3.1465 3.0808   3.2024 3.1444 2.9691 3.0825]]
525                   3.18435         1.51833         1.00237         -0.11575          -0.1154          0.23473          1.52967          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8871 2.9431 2.8849 2.8612 2.8406 3.0284 3.0692 3.1877 3.1225 3.1252   3.1269 3.2833 3.2092 3.2733 3.1993 3.3242 3.2458 3.1487 2.7353 2.8119   2.7358 2.7864 3.002  2.7613 3.1124 3.1605 3.1135 3.1278 3.1042 3.1217   3.3162 3.4257 3.4387 3.4201 3.4703 3.4363 3.1094 2.9778 2.971  3.1215   2.9552 3.1264 3.2398 3.0476 3.1132 3.1993 3.0257 3.0857 3.0908 3.176   3.1605 3.1253 3.1856 3.0614]]
526                   3.22392         1.52897         0.98634         -0.12962          -0.12961          0.23496          1.55242          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3382 3.5434 3.3221 3.198  3.2885 3.3847 3.4637 3.4825 3.4769 3.4174   3.4264 3.4382 3.2723 3.4142 3.2607 3.1219 3.2334 3.1803 3.0289 3.0157   3.0072 3.0051 3.0599 3.0022 3.1334 3.169  3.1405 3.1529 3.1401 3.1456   3.208  3.2409 3.2781 3.2711 3.2385 3.2679 3.0997 3.0644 2.9323 3.0708   3.1784 3.0365 2.9518 2.9124 2.9171 2.9284 2.9957 2.8958 2.6255 2.6553   2.7857 2.7726 2.7016 2.7552]]
527                   3.20946         1.52616         0.99179         -0.12455          -0.12453          0.23483          1.54928          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2164 3.5085 3.3485 3.3154 3.4162 3.3124 3.4131 3.4049 3.4673 3.3875   3.4947 3.4574 3.3647 3.3603 3.2194 3.1491 3.211  3.35   2.9852 3.0628   3.0031 3.0085 3.0712 2.9913 3.1394 3.1685 3.1415 3.1561 3.1387 3.1456   3.2543 3.2972 3.2181 3.2986 3.2073 3.2973 3.1269 3.1481 2.9459 3.09   3.0945 3.0267 3.0567 2.9269 2.8969 2.9874 2.9739 2.9351 2.7064 2.7704   2.7157 2.8851 2.7565 2.7015]]
528                   3.23842         1.53011         0.9892         -0.1347          -0.13469          0.23589          1.51877          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3667 3.2991 3.3126 3.4073 3.499  3.3499 3.4305 3.5748 3.4479 3.4165   3.4711 3.3978 3.1776 3.4355 3.1628 3.1209 3.2508 3.2604 3.0263 3.133   2.9795 2.9857 3.0015 2.9315 3.1361 3.1715 3.1446 3.1592 3.1288 3.1299   3.2253 3.223  3.1898 3.3164 3.2906 3.3142 3.1067 3.0746 3.0353 3.1521   3.0384 3.0012 2.9187 2.9232 2.966  2.9044 2.9432 2.8681 2.7014 2.708   2.7449 2.8217 2.6742 2.6616]]
529                   3.19089         1.5239         0.99516         -0.11805          -0.11802          0.23391          1.56535          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.103  3.2747 3.163  3.1438 3.2202 3.1948 3.2801 3.3755 3.31   3.3584   3.3407 3.3306 3.2282 3.3704 3.1999 3.1332 3.245  3.2243 2.9343 2.9764   2.9319 2.9515 2.9114 2.9289 3.1296 3.1661 3.1339 3.1456 3.1213 3.1396   3.3085 3.3577 3.3007 3.3478 3.3012 3.2936 3.112  3.126  2.9295 3.0647   3.0682 3.0267 3.0961 3.0092 3.0211 3.05   3.0283 3.014  2.8677 2.9268   2.9022 2.9288 2.8988 2.8993]]
530                   3.17463         1.51799         0.99099         -0.11235          -0.1123          0.23273          1.5813          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1272 3.2551 3.1234 3.1678 3.1556 3.2147 3.2739 3.3648 3.3075 3.3012   3.2995 3.3415 3.1789 3.4119 3.2482 3.1632 3.2418 3.2484 2.891  2.9905   2.9517 2.9246 2.9529 2.9276 3.1272 3.1655 3.1343 3.1474 3.1199 3.1415   3.284  3.3371 3.2724 3.3443 3.2813 3.3145 3.0837 3.0224 2.9631 3.0817   3.0965 3.0792 3.0855 3.0119 3.0384 3.0465 3.0113 3.0175 2.832  2.9071   2.9274 2.9756 2.894  2.898 ]]
531                   3.19109         1.52272         0.99679         -0.11812          -0.11809          0.23405          1.5599          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1292 3.2588 3.1599 3.1534 3.2193 3.1915 3.2609 3.3667 3.3653 3.2907   3.3262 3.3239 3.2042 3.3762 3.236  3.1487 3.217  3.2041 2.9152 2.9684   2.9623 2.9234 2.9308 2.9233 3.1287 3.1665 3.1302 3.1473 3.1236 3.1431   3.2777 3.3755 3.2966 3.3636 3.2966 3.3402 3.1167 3.0396 2.9668 3.1123   3.0532 3.0506 3.0646 3.0134 3.0264 3.0517 3.0256 3.0175 2.8421 2.9254   2.8986 2.9219 2.9734 2.8889]]
532                   3.19309         1.52442         0.99484         -0.11882          -0.11878          0.234          1.5676          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1469 3.2749 3.1585 3.1576 3.1924 3.1706 3.3199 3.3864 3.2983 3.3014   3.2979 3.3209 3.2307 3.3851 3.2331 3.1261 3.1857 3.2285 2.9658 2.9861   2.9198 2.9192 2.933  2.9214 3.1265 3.1662 3.135  3.1473 3.1224 3.1413   3.2804 3.3238 3.2869 3.3534 3.3035 3.3205 3.1626 3.0691 3.0306 3.0866   3.0426 3.0435 3.0818 3.0278 3.0201 3.0539 2.9898 3.0332 2.8113 2.9148   2.9409 2.9136 2.9077 2.892 ]]
533                   3.27767         1.52399         0.91143         -0.14845          -0.12363          0.22964          1.54922          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.6408 2.8917 2.1067 2.5309 2.2418 2.4059 2.9286 2.4355 3.0279 2.4814   2.8265 2.8996 3.0059 2.7155 3.2995 2.6544 2.5727 2.7818 2.4219 2.7446   2.9545 2.8022 2.6164 2.2562 3.1271 3.1544 3.0286 2.9742 3.0543 3.1385   3.2871 3.0317 3.3327 2.9842 3.3288 3.1458 2.6349 3.1126 2.9966 2.9902   2.6823 2.8445 3.035  3.1488 2.9547 2.9473 2.9084 2.9305 2.7814 3.191   3.0593 3.1282 2.8795 2.9053]]
534                   3.09485         1.47977         0.93905         -0.08439          -0.06983          0.22398          1.48137          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.5523 2.5727 2.2667 3.1879 2.4675 2.9464 2.9422 3.3903 2.8858 2.7462   3.0134 2.7015 3.1754 2.9706 2.8322 2.9116 3.0324 3.1952 2.7366 2.5529   2.5416 2.4656 3.1021 2.9817 2.6603 3.1653 2.6155 2.9321 2.855  2.8275   3.002  3.3287 3.2702 3.1613 2.8505 3.253  2.8528 2.7254 3.2239 3.0667   2.7178 2.9077 3.1711 2.9815 2.7474 2.909  3.0105 3.0464 3.2002 2.9605   2.9396 2.99   3.3244 3.458 ]]
535                   3.28168         1.53012         0.94612         -0.14986          -0.13091          0.23322          1.62312          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.4246 2.6042 2.9685 2.479  2.6861 2.2637 2.9731 2.8582 2.6132 3.3164   2.6112 3.3394 2.8809 3.035  3.0856 2.7498 3.1894 2.8648 2.5821 2.5821   2.6513 2.6323 2.3854 2.9448 2.6346 2.8523 2.8141 2.6137 2.8474 3.0722   3.2815 3.3246 2.7894 3.0611 3.4094 3.3442 2.8579 3.2818 3.0357 2.9376   3.0136 2.6559 2.9985 3.0163 2.9598 3.1119 2.8458 3.0393 3.0143 3.1022   2.8959 2.9251 3.2121 3.106 ]]
536                   3.27905         1.49678         0.91851         -0.14894          -0.1253          0.23049          1.48072          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.1386 2.5237 2.867  2.5294 2.7291 3.1132 2.5032 3.3994 2.5949 2.6554   2.7974 3.1467 2.6152 2.8331 2.9171 2.7661 3.2527 2.8598 2.4705 2.399   2.7577 2.6634 2.5565 2.3502 3.1189 2.7728 2.9476 2.9011 2.8209 2.8971   3.3921 2.982  3.0485 3.1576 3.1874 3.1206 3.1766 2.9525 3.0164 2.4814   3.0838 2.6635 2.6909 2.759  2.7454 2.9623 3.2169 3.0017 2.8153 3.0124   3.0412 2.9144 3.1292 2.8609]]
537                   3.18627         1.52018         1.00394         -0.11643          -0.11637          0.23505          1.54452          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8803 3.0037 2.9644 2.8775 2.9387 2.9581 3.087  3.2327 3.0809 3.1503   3.1716 3.2378 3.1131 3.4039 3.5021 2.9697 3.1339 3.3152 2.7924 2.9435   2.8848 2.8225 3.0372 2.7746 3.1046 3.145  3.1251 3.1311 3.1046 3.1218   3.3217 3.4293 3.4522 3.3041 3.396  3.4609 3.317  3.2274 2.9672 3.1009   2.8719 2.9828 3.2865 3.1919 3.0519 3.2176 3.1    3.1127 3.0509 3.1666   3.1447 3.1162 3.1897 3.1413]]
538                   3.27781         1.54525         1.01316         -0.1485          -0.14816          0.2398          1.58695          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8108 2.9867 2.9613 2.9144 2.9123 2.8994 3.2246 3.234  3.1369 3.134   3.3001 3.1174 3.1958 3.1345 3.0882 2.9343 3.4292 3.0101 2.7532 2.912   2.74   2.9007 2.7722 2.7669 3.1097 3.1517 3.1164 3.1274 3.1004 3.1243   3.4001 3.4363 3.3201 3.4223 3.2666 3.4975 3.2225 2.9924 3.1876 3.0297   3.1535 3.2621 3.1713 3.0604 3.1555 3.2229 3.1224 3.1679 2.9199 3.1563   3.1101 3.1245 3.0583 3.1887]]
539                   3.30841         1.5498         1.01457         -0.15923          -0.15898          0.24176          1.5772          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8493 3.0981 2.899  2.9149 2.9535 3.0272 3.128  3.4289 3.1929 3.2264   3.1586 3.1475 3.2159 3.2351 2.8707 2.9332 3.2776 3.1779 2.7213 2.8273   2.8099 2.8114 2.7666 2.7982 3.115  3.1516 3.1134 3.1236 3.1098 3.1224   3.3949 3.4828 3.4231 3.3321 3.453  3.4212 3.1246 3.1196 3.0616 3.0965   3.0768 3.2455 3.2339 3.0048 3.0732 3.1929 3.1719 3.0907 2.9666 3.0915   3.2995 3.0911 3.1584 3.0839]]
540                   3.20252         1.53391         0.99868         -0.12212          -0.12162          0.23464          1.5759          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8419 2.9843 2.9496 2.8684 2.9184 2.922  3.1258 3.2169 3.14   3.1606   3.2027 3.2712 3.1194 3.2636 3.0588 3.1902 3.2327 3.1593 2.7036 2.8337   2.9075 2.7526 3.004  2.751  3.1052 3.1466 3.1146 3.1254 3.1112 3.13   3.3645 3.3935 3.3882 3.3985 3.3251 3.1642 3.1474 3.0721 3.1267 2.9426   3.2521 3.2092 3.1776 3.1741 3.1114 3.0858 2.9054 3.1804 3.0099 3.1864   3.127  3.1586 3.0204 3.0602]]
541                   3.19738         1.52757         0.98731         -0.12032          -0.12031          0.23348          1.52752          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1827 3.3984 3.226  3.2678 3.3569 3.264  3.2986 3.4218 3.4277 3.3968   3.3959 3.4484 3.2791 3.4238 3.1969 3.1548 3.2882 3.2126 2.9372 3.0814   2.9965 2.9488 3.0309 2.9884 3.1339 3.1709 3.1382 3.1559 3.1184 3.1464   3.2917 3.3088 3.2399 3.2386 3.2177 3.2814 3.0799 2.9924 3.0117 3.0982   3.0339 3.1193 3.065  2.9908 2.946  2.99   2.9133 3.0015 2.7241 2.7935   2.8069 2.8268 2.8042 2.7728]]
542                   3.18269         1.52169         0.98355         -0.11517          -0.11508          0.23243          1.54652          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1857 3.4002 3.2189 3.2749 3.3091 3.2436 3.2917 3.4322 3.3742 3.3723   3.3508 3.3837 3.2399 3.4184 3.2093 3.1433 3.2325 3.2661 3.0198 3.031   3.004  2.9999 2.9881 2.9878 3.1348 3.1687 3.1419 3.1483 3.1272 3.1472   3.2634 3.2684 3.268  3.2817 3.2219 3.2994 3.0753 3.0256 2.984  3.0288   3.0496 2.9884 3.0234 2.9267 2.9627 2.989  2.9855 2.9801 2.7198 2.8011   2.757  2.7781 2.8047 2.7307]]
543                   3.20139         1.52562         0.99407         -0.12173          -0.12167          0.23428          1.59255          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1558 3.2753 3.1665 3.1505 3.2251 3.1765 3.298  3.3749 3.3011 3.3026   3.3456 3.3499 3.1648 3.3957 3.2295 3.0967 3.2084 3.1939 2.9113 2.9822   2.9413 2.9448 2.9159 2.9647 3.1295 3.1649 3.1338 3.1491 3.1208 3.1412   3.2548 3.3377 3.3053 3.3362 3.2853 3.3133 3.1227 3.1102 2.9548 3.1123   3.0573 3.0046 3.0842 3.0078 3.05   3.035  2.9892 3.0031 2.7885 2.9103   2.89   2.9314 2.9213 2.8978]]
544                   3.1963         1.52337         0.99083         -0.11994          -0.11986          0.23379          1.5767          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1194 3.2686 3.2151 3.1616 3.1946 3.155  3.2754 3.3891 3.3189 3.3185   3.3187 3.3412 3.2083 3.4131 3.2198 3.1003 3.2494 3.1878 2.9543 2.9785   2.9018 2.9173 2.9398 2.9255 3.1295 3.1649 3.1356 3.1458 3.1198 3.1413   3.2798 3.3315 3.2862 3.2929 3.2901 3.3025 3.1637 3.0725 2.9589 3.0432   3.0665 3.0315 3.0836 3.0003 2.9883 3.0754 3.0055 3.0145 2.8306 2.9037   2.9111 2.8914 2.8899 2.8741]]
545                   3.18505         1.5212         0.99402         -0.116          -0.11595          0.2336          1.5677          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1076 3.284  3.161  3.1696 3.2149 3.1408 3.2659 3.3767 3.3261 3.3172   3.3062 3.342  3.2136 3.3607 3.2355 3.0984 3.2066 3.233  2.9622 2.9547   2.9531 2.9168 2.9435 3.0154 3.1278 3.1662 3.1336 3.1493 3.1238 3.1406   3.2775 3.3274 3.3006 3.3535 3.2951 3.3044 3.1771 3.058  2.9488 3.0758   3.0792 3.0481 3.0785 3.003  3.0074 3.0308 2.9949 3.0085 2.8135 2.9013   2.9256 2.9327 2.9302 2.884 ]]
546                   3.18397         1.52128         0.99149         -0.11562          -0.11559          0.23328          1.55675          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1244 3.2912 3.1922 3.1659 3.2253 3.1329 3.2748 3.4086 3.3012 3.3137   3.3132 3.3485 3.2617 3.3572 3.2272 3.0839 3.2835 3.2373 2.9088 2.9971   2.9562 2.9189 2.9691 2.9298 3.1284 3.1649 3.1335 3.1473 3.1223 3.1406   3.2913 3.3299 3.3022 3.3098 3.2662 3.3159 3.112  3.0598 3.0029 3.0756   3.0556 3.1106 3.0789 3.0025 3.0316 3.0425 3.0012 3.0253 2.8394 2.8911   2.8925 2.9304 2.9164 2.9087]]
547                   3.2214         1.48392         0.91927         -0.12874          -0.09426          0.2282          1.54628          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4552 2.1374 2.6422 2.0981 2.8345 2.1002 2.6732 2.7953 2.5044 2.8929   2.5778 2.4732 2.5411 2.4522 3.1479 2.465  2.5662 2.755  2.4755 3.028   2.1583 2.9161 2.6867 2.6859 2.8184 2.9388 2.8412 2.9366 2.8806 2.912   3.0594 3.299  2.8419 3.3219 3.1477 3.2839 2.6727 2.8811 2.5009 3.1125   2.3849 2.5148 3.007  3.4184 3.1227 2.7681 3.0597 3.1689 2.8609 3.6107   2.9505 3.6795 3.0925 3.245 ]]
548                   3.18688         1.51258         0.92823         -0.11664          -0.10373          0.22953          1.51847          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6363 2.4443 2.4855 2.3223 2.8005 2.1086 2.3805 2.9799 2.7049 2.6668   2.9162 2.3185 3.0281 3.259  3.1658 3.1221 2.3602 2.5062 2.5419 2.9855   2.7309 2.0374 2.7017 2.562  2.8936 2.8694 2.9061 2.9451 2.9099 2.8669   3.1922 2.9208 3.0937 3.0486 3.5378 3.3471 3.0075 3.1426 2.932  2.7858   2.6485 2.7601 3.6317 3.2222 3.2816 3.4287 3.4739 3.2297 3.3093 3.6606   3.4312 3.6942 3.2982 3.7307]]
549                   3.46051         1.57696         0.9807         -0.21252          -0.18864          0.25009          1.6736          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[1.7405 2.6789 2.6334 1.9294 2.4126 1.9188 2.1728 2.8215 2.9582 2.5006   1.993  2.9571 3.443  3.3487 2.8194 2.7103 2.9289 2.6402 2.7776 2.211   2.6619 2.6803 2.7905 2.4651 2.8335 2.9332 2.9104 2.9637 2.8014 2.9098   3.3354 3.3255 3.2924 3.2577 3.0587 3.2606 3.0734 3.2373 2.5373 3.248   3.0109 2.9223 3.5736 2.9952 2.9644 3.2399 2.8461 3.1204 2.6384 3.3207   3.337  3.036  3.3961 3.6637]]
550                   3.13497         1.4727         0.89807         -0.09845          -0.07226          0.22188          1.3898          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.8325 2.3275 2.3409 2.6357 2.0807 2.5297 2.6796 2.6761 2.3666 2.9618   2.6382 2.4296 3.2284 3.7994 2.356  2.9461 2.3581 3.0018 2.4345 2.7843   2.9574 2.1711 2.4977 2.5128 2.906  2.877  2.8998 2.9017 2.958  2.7972   3.0151 3.4188 3.2961 2.8492 2.9821 3.0405 2.7388 3.2305 2.8361 2.7467   2.5734 3.0339 2.7457 3.0664 2.9903 2.8548 3.0712 3.1101 3.2592 3.9896   3.2763 3.4701 3.3322 2.7554]]
551                   5.59472         1.90256         0.72592         -0.96032          -0.20497          0.41068          1.74913          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.926  1.8048 1.7333 1.6572 1.9845 1.5919 0.981  1.6972 1.8821 2.5103   1.2617 1.1815 1.794  1.0682 1.0213 1.3591 1.3933 0.9605 1.1593 1.7217   1.6233 1.4808 0.6829 1.9585 1.4684 1.6208 1.4081 1.9595 1.2981 1.0226   2.5283 1.1786 2.3093 2.4642 2.0689 1.4859 2.6302 1.7068 0.7655 1.1124   1.2859 1.6304 2.7467 1.1458 1.8813 1.6009 1.7329 2.4087 1.1826 2.7223   2.8289 2.3847 2.2004 1.8342]]
552                   5.61104         1.89542         0.75597         -0.96604          -0.23047          0.41774          1.37458          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.7188 1.2081 1.6317 1.5171 1.4398 1.3367 1.6997 1.9721 0.9408 1.4696   1.9239 1.4569 0.6633 1.8514 1.4129 2.4778 1.8549 1.1586 1.7613 0.3572   1.8627 1.1969 1.0543 1.3505 1.9767 0.9746 2.2435 1.4836 2.1967 1.5528   1.4097 1.8835 2.0397 2.2832 1.5788 2.5966 1.9749 2.0185 1.4998 1.4456   2.6877 1.6219 2.1659 1.9342 2.2651 1.827  1.9305 1.7796 0.8398 1.5552   1.6793 1.6532 2.3147 2.3638]]
553                   5.22586         1.83167         0.76525         -0.83108          -0.15362          0.38521          1.49805          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.4543 1.8014 1.2983 1.781  1.5766 1.1813 2.1553 1.2707 1.6983 1.5033   1.8196 1.3184 2.1031 1.2236 0.5838 2.0351 2.11   1.7647 1.0468 1.0488   1.6329 1.671  1.6924 1.2908 2.0957 1.319  2.1302 2.2508 2.0739 0.9036   2.2402 2.4835 1.3699 2.4294 2.0113 1.9536 2.2197 0.6861 1.7199 1.3731   2.2733 1.9797 2.6408 1.9423 2.323  1.1565 1.3552 2.1273 1.9978 2.7679   1.7541 1.5551 2.76   2.2925]]
554                   5.57076         1.87995         0.72997         -0.95192          -0.18853          0.39779          1.53128          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.449  1.7758 1.443  1.5572 1.5077 1.6426 1.5929 0.8097 1.8232 1.8972   1.3642 1.5051 0.9468 1.7888 2.0436 2.0342 1.5993 0.6639 1.034  1.5613   1.1659 1.1442 1.1619 1.5794 1.7503 2.3368 1.6327 1.6719 1.8492 1.6392   1.935  1.9036 1.5648 2.375  2.3271 1.2334 2.3827 0.8388 1.641  1.4329   1.9614 0.945  2.0428 1.3363 2.1054 2.41   2.1775 1.9916 1.8392 2.9226   1.8258 1.7488 1.4841 1.2312]]
555                   5.63819         1.95482         1.62428         -0.97555          -0.2241          0.38935          1.7677          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.7803 3.1576 3.6957 3.3796 3.8438 3.2728 4.1486 4.6118 4.6584 3.6563   4.4475 4.0899 3.8476 4.6549 4.322  4.2429 5.1757 4.3996 4.1071 3.7256   4.357  4.4241 3.8813 4.0797 4.7067 4.4895 4.6611 4.9861 4.8649 4.8016   4.3684 5.469  4.7231 5.3061 5.4328 4.8243 4.2424 5.1326 4.8658 5.2076   4.4583 4.9905 4.9374 5.1085 5.0169 5.3105 4.7783 4.0551 5.9407 5.292   5.6299 5.8319 5.5597 5.4625]]
556                   5.84734         1.96337         1.66067         -1.04883          -0.23854          0.39938          1.91248          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.7112 3.7532 3.9959 3.9182 3.704  3.6157 4.5656 4.4511 4.0529 4.4886   4.538  4.1952 4.6823 4.5297 4.9488 4.8099 3.8413 4.5838 3.9841 3.9102   4.2882 3.7875 4.1943 4.3229 4.6202 4.9109 4.3273 4.7467 4.0851 4.6286   5.3989 5.6363 5.4032 5.6074 4.8947 4.2583 4.9031 4.3195 4.8426 5.018   4.2333 4.8921 5.3665 5.4839 4.9794 5.0139 5.0818 5.0493 6.1488 5.8709   5.3927 4.3324 5.6071 5.5261]]
557                   5.50462         1.95984         1.58338         -0.92875          -0.19868          0.38227          1.86437          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.5939 3.275  4.3065 4.0325 3.6104 4.1194 4.4514 4.4438 4.5395 4.281   4.5305 4.6547 4.5941 4.6092 4.5994 4.6087 4.8339 3.4397 4.4113 4.0169   4.4503 4.0117 3.8858 3.9758 4.4834 5.0119 4.7862 4.613  4.8288 5.0139   5.1882 4.7222 5.4318 5.246  3.684  5.3805 4.1318 4.7374 4.5468 4.2174   4.3654 4.7371 5.2906 5.0301 4.7553 5.0332 4.5687 5.0112 5.3451 5.4078   5.6832 5.5981 5.0309 5.1252]]
558                   5.36         1.89049         1.57357         -0.87807          -0.26158          0.37391          1.8282          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.8218 2.8935 2.7156 3.9481 3.3755 3.344  3.9844 3.9422 4.5233 4.2191   4.4398 4.1947 5.0836 4.64   5.1749 4.3359 4.7558 4.5203 3.8349 3.9683   3.9299 3.8863 3.4973 4.0761 4.2513 4.5442 4.4825 4.7201 4.3829 3.8816   4.3404 4.9834 4.9864 5.5338 5.0253 5.2148 4.6872 4.8834 4.5423 3.6651   4.598  3.4373 5.921  4.7445 5.0257 4.6387 5.2143 5.1215 5.4833 4.8778   4.1462 5.5572 5.4221 5.544 ]]
559                   3.34671         1.538         1.00162         -0.17265          -0.15777          0.24259          1.57283          MLPRegressor(activation='identity',hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4368 2.0247 2.5073 2.6621 2.6959 2.2952 2.4185 2.8408 2.2484 2.3483   2.5397 2.7219 2.8641 3.6027 2.4645 2.9232 2.8355 2.9727 2.7779 2.7084   2.5503 2.5666 2.6124 2.4311 2.9661 2.9839 3.0054 2.9366 2.9253 2.9546   3.4321 3.7473 3.0612 3.5317 3.2274 3.1785 3.1558 2.9158 2.928  3.2915   3.2065 2.438  3.2673 3.1868 3.1585 3.245  2.9366 3.3908 3.5636 3.4966   3.0568 3.3374 3.6089 3.0238]]
560                   2.94457         1.46156         0.92778         -0.03174          -0.02416          0.21576          1.50152          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.2485 2.622  2.5152 1.9958 2.9991 2.2514 3.0283 2.7514 3.2872 2.8129   2.9493 2.8302 2.7895 3.0557 3.2825 2.8988 3.1289 2.6512 2.9231 2.7644   2.8043 2.8987 2.9178 2.6379 2.9706 2.9751 2.9695 2.9832 2.9011 2.9707   3.3274 2.9523 2.8607 3.5345 3.1591 3.4798 2.7307 2.973  2.7199 2.481   2.6012 2.6668 3.2727 3.3565 3.5294 3.1167 3.1628 3.3014 3.3929 3.7931   3.3095 3.7735 3.2724 3.8113]]
561                   3.16805         1.50579         0.95854         -0.11004          -0.0976          0.23018          1.36743          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4062 2.6272 2.3073 2.6714 1.8094 2.5468 2.6516 2.9217 2.6484 2.9694   2.4176 2.4586 2.6687 2.9272 3.1644 3.1192 3.2514 2.163  2.6007 2.5767   2.6404 2.4968 2.591  2.6531 2.9498 2.9835 2.9812 3.0024 2.9733 2.9683   3.2486 3.2914 3.3459 3.5621 3.3102 3.3648 2.6625 2.5118 3.3005 2.7409   2.5759 3.0131 3.4505 3.2955 3.0455 3.1147 3.2886 3.521  3.1634 3.5058   4.054  3.3867 3.6245 3.6315]]
562                   3.31712         1.54309         0.9808         -0.16228          -0.14785          0.24031          1.6056          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(25,25,25),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4389 2.2047 2.4921 1.8447 2.2878 2.1439 2.9699 2.5469 2.5868 2.5375   2.6989 2.5974 2.9698 2.8473 3.2009 2.7963 3.1574 3.0085 2.8709 2.77   2.2369 2.9436 2.6357 2.5533 2.9354 2.9354 2.9836 3.0013 2.9398 2.92   3.5166 3.2704 3.3961 3.5071 3.2154 3.5695 2.72   3.0629 2.7408 3.2944   3.066  3.2705 3.3168 2.8517 3.2673 3.1756 3.4422 3.3474 3.4171 3.2467   3.3519 3.0593 3.0087 3.2044]]
563                   2.19891         1.10865         0.76279         0.22953          0.23812          0.16748          0.72733          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.2644 2.9188 2.5518 3.3408 2.744  3.0437 3.0654 2.2577 1.9831 2.0106   2.0445 3.1687 3.6038 4.9096 4.5334 3.476  4.538  4.5012 3.1615 2.6708   5.5996 3.0691 5.6044 2.6743 3.1886 3.3073 2.6086 2.7363 2.5543 2.6273   3.7152 1.0524 3.7228 3.8422 0.8733 3.6755 1.5151 3.4861 3.9104 3.6185   1.4014 3.3883 2.6571 3.6739 2.42   3.818  2.3724 3.4986 3.9736 5.0838   5.1977 4.0321 5.1619 3.9396]]
564                   3.5979         1.59555         1.22575         -0.26066          -0.13961          0.27973          1.46352          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.5255 3.2853 3.0795 2.9176 3.1689 3.4783 3.2213 3.4505 3.4747 3.288   3.4655 3.6566 2.9762 3.9947 3.6633 3.6358 3.9288 3.7915 3.215  3.539   3.0455 3.2679 3.2779 3.0707 3.4698 3.462  3.5487 3.5239 3.4469 3.4644   3.8422 4.195  4.1659 4.1127 3.9799 3.8501 3.9241 4.0848 3.8507 3.5621   4.1606 3.8482 4.2275 3.6924 4.1282 3.6079 4.0821 4.4941 4.4161 4.263   4.4819 4.5314 4.5968 4.6412]]
565                   0.5688         0.56115         0.34169         0.8007          0.8007          0.05167          0.41238          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.3276 3.6671 3.2661 3.4179 3.4834 3.4031 1.8423 2.2216 2.0589 2.0481   2.0829 2.0874 4.614  4.9446 4.6076 4.3401 4.6012 4.6143 5.5936 5.9186   5.6529 5.4353 5.4774 5.65   2.3239 2.9146 2.6922 2.566  2.4736 2.7371   0.9056 1.0841 0.8114 1.1901 0.9243 1.0824 1.5839 1.314  1.1464 1.506   1.2793 1.3538 2.7097 2.3537 2.3969 2.5322 2.3608 2.3513 4.8028 5.1437   5.0907 5.1477 5.2065 5.1577]]
566                   0.61178         0.56408         0.37803         0.78564          0.79054          0.05787          0.34985          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.4178 3.8237 3.4487 3.4846 3.5875 3.5649 1.7283 2.3702 2.0872 2.0985   2.1757 2.2218 4.64   5.0535 4.7079 4.2377 4.6453 4.3764 5.6764 5.9653   5.7809 5.635  5.635  5.6557 2.5501 3.1434 2.4856 2.7874 2.6479 2.691   1.0466 1.3246 1.0324 1.3442 0.8051 1.1914 1.7167 1.5587 1.373  1.6612   1.5534 1.5162 2.9335 2.5693 2.6263 2.6798 2.5612 2.6872 5.1008 5.173   5.2981 4.9907 5.3347 5.316 ]]
567                   2.93227         1.43517         0.92375         -0.02743          -0.01131          0.21715          1.22477          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[2.6809 3.5997 2.5793 3.407  3.5432 3.1544 1.8647 3.2336 3.0949 3.1199   2.936  3.1572 3.8927 4.9261 3.1751 3.3588 3.1282 3.1779 2.6873 2.9877   2.5516 3.0088 5.6183 2.9514 3.3495 3.3291 2.641  3.3455 3.184  3.2521   0.8297 1.0361 3.8117 3.8041 3.5908 3.5555 3.5228 3.4154 3.5165 3.3789   3.0788 3.6096 3.8293 3.5371 3.7846 2.5996 2.4291 3.6781 3.6907 4.0044   5.1528 5.2548 5.1644 3.7054]]
568                   3.29441         1.51518         1.15703         -0.15432          -0.04713          0.25864          1.32688          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.4324 3.5308 3.5232 3.7653 2.8744 3.7113 3.5299 3.4381 3.7059 3.7039   3.3295 3.0628 3.6994 3.6183 4.3014 3.6189 3.6345 3.6465 3.2377 3.4125   3.2698 2.7857 3.2097 3.5034 3.6636 3.4832 3.5964 3.5685 3.4502 3.45   4.0744 3.9069 3.9714 3.8757 4.1225 4.0704 4.2424 3.5671 3.6576 3.3195   3.2114 3.3412 2.5402 3.7617 4.2043 4.3615 3.7916 4.3328 4.181  4.3243   4.6827 4.37   4.1932 4.3395]]
569                   0.53537         0.55311         0.34779         0.81241          0.81274          0.05028          0.40145          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3282 3.6543 3.3545 3.3813 3.5289 3.5813 1.8752 2.2839 2.0445 2.0481   2.1665 2.1441 4.3955 4.8372 4.5599 4.1795 4.5973 4.5606 5.4699 5.6163   5.5354 5.6006 5.4761 5.6943 2.8317 2.8576 2.5965 2.6882 2.4882 3.1181   1.547  1.2864 0.8193 1.2766 0.803  0.9641 1.5973 1.3759 1.3226 1.3887   1.3549 1.3792 2.5515 2.3712 2.3613 2.4557 2.3091 2.7883 4.8406 5.2053   5.1666 5.0965 5.112  5.111 ]]
570                   0.57555         0.55442         0.35123         0.79834          0.80254          0.05146          0.35772          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.4646 3.753  3.513  3.4315 3.5687 3.5003 1.9738 2.4333 2.113  2.1238   2.177  2.3024 4.6602 5.1292 4.6219 4.3523 4.6738 4.5977 5.659  5.9137   5.7366 5.662  5.7451 5.3223 2.6502 3.0219 2.6355 2.7166 2.5351 2.7767   0.966  1.2118 0.9824 1.2603 1.0184 0.9375 1.383  1.5121 1.3981 1.6201   1.5785 1.2048 2.8755 2.5998 2.624  2.7626 2.5774 2.5565 5.0639 5.216   5.3346 5.4229 5.1962 5.1795]]
571                   0.54499         0.56258         0.32485         0.80904          0.80905          0.04845          0.45732          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1656 3.5728 3.3444 3.2469 3.4928 3.3529 1.8607 2.2334 2.0164 2.1057   2.032  2.1085 4.5322 4.9064 4.5343 4.2472 4.516  4.5653 5.7302 5.8101   5.614  5.5247 5.5967 5.7301 2.5848 2.9693 2.6606 2.8525 2.5327 2.7519   0.8054 1.025  0.7777 0.987  0.841  0.9243 1.5222 1.3466 1.2132 1.4728   1.3888 1.3515 2.6143 2.3118 2.4038 2.5011 2.3084 2.3881 5.0015 5.1913   5.35   5.2478 5.2784 5.1295]]
572                   5.18348         1.91478         0.81158         -0.81623          -0.48324          0.43169          1.73055          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[1.9064 0.6119 4.6052 1.927  4.9006 2.4009 0.2561 1.1361 0.4116 1.1008   3.3034 0.4287 3.5711 0.7863 1.1716 4.0242 1.6888 6.1672 4.089  1.0999   0.9306 1.8724 1.5949 3.4521 0.6359 2.3243 1.6758 0.4549 0.7813 3.8567   0.6991 2.8341 4.301  1.8411 4.6184 0.4426 0.8122 0.8252 1.5774 0.8164   0.7588 1.1913 1.4887 4.3161 3.9172 4.1379 1.2953 4.8176 1.1395 1.944   4.1583 0.6737 0.6877 4.2316]]
573                   0.81929         0.66867         0.43707         0.71293          0.76194          0.06929          0.49457          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5399 4.0693 3.9476 3.7218 4.0843 3.5757 2.3381 2.4843 2.267  2.235   2.4358 2.4803 5.2616 5.43   5.1555 3.8168 4.8872 4.7705 5.4997 6.0606   5.9818 5.3485 5.6931 5.3025 2.8839 3.3443 2.9657 3.2053 2.8504 2.7524   1.0231 1.4062 1.5532 1.4614 1.5807 1.6322 1.7045 2.094  1.8096 1.7915   1.6584 1.8276 3.3351 3.2337 2.7275 3.2614 3.0936 2.9965 5.2542 5.222   5.6414 5.8014 5.5557 5.4746]]
574                   0.92081         0.73712         0.53047         0.67736          0.78651          0.08607          0.47363          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7384 4.2175 3.9208 3.7184 4.0945 3.7791 2.5657 2.8965 2.4387 2.6554   2.4783 2.9894 5.1039 5.409  5.0198 4.8148 4.9411 4.9066 5.9272 6.0635   6.0624 6.046  6.0685 6.0416 3.1134 3.3669 2.565  3.2972 2.8584 3.106   1.6496 1.9531 1.8023 1.9846 1.6012 1.4337 1.7996 1.9275 1.6287 1.8774   1.9987 1.8781 3.5625 2.9131 3.4446 3.3119 3.3417 3.0287 5.3755 5.7083   6.0074 5.7251 5.8294 5.485 ]]
575                   0.55712         0.56699         0.32431         0.80479          0.80479          0.04882          0.47922          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2316 3.6261 3.2762 3.3458 3.4307 3.3216 1.8789 2.3348 2.0851 1.9902   2.0476 2.1422 4.4809 4.959  4.5292 4.2515 4.5171 4.5347 5.4957 5.8055   5.6025 5.5171 5.5998 5.6141 2.6247 3.0336 2.6803 2.8181 2.5362 2.7524   0.8104 0.963  0.7871 0.9921 0.7976 0.8729 1.4708 1.436  1.2023 1.4832   1.4199 1.4132 2.6403 2.3335 2.385  2.5332 2.3451 2.402  4.9678 5.1361   5.1954 5.2792 5.2799 5.1442]]
576                   3452102.40296         254.93897         55.27717         -1209571.43609          -1187341.5326          1.6321          1.93078          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.85080000e+00 5.65870000e+00 1.68830000e+00 2.31980000e+00   7.23400000e-01 4.72620000e+00 1.35990000e+00 4.84440000e+00   7.34800000e-01 3.20100000e-01 7.32200000e-01 1.70020000e+00   1.28420000e+00 4.21650000e+00 1.68960000e+00 1.55680000e+00   1.27520000e+00 7.23800000e-01 4.37020000e+00 1.36579882e+04   4.82700000e+00 1.72500000e+00 9.74800000e-01 7.55000000e-01   1.49910000e+00 4.24700000e-01 1.09260000e+00 9.22300000e-01   1.42010000e+00 1.38530000e+00 1.71350000e+00 4.40710000e+00   4.44630000e+00 1.52450000e+00 1.21470000e+00 1.47730000e+00   5.31060000e+00 4.36500000e-01 7.03400000e-01 4.57300000e+00   1.08070000e+00 1.28720000e+00 1.08820000e+00 4.64720000e+00   7.12500000e-01 1.94470000e+00 8.05000000e-01 4.22750000e+00   3.75900000e+00 4.51510000e+00 1.04870000e+00 1.22170000e+00   1.48130000e+00 2.46970000e+00]]
577                   0.85868         0.6901         0.47078         0.69913          0.73645          0.07756          0.42447          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.034  4.2776 3.9494 3.6516 3.9116 3.9457 2.1397 2.6778 2.2832 2.3318   2.3318 2.507  5.0447 5.2529 3.4064 4.5164 5.1549 4.8742 5.8926 6.1569   5.9823 5.7688 5.8769 5.8963 3.0256 3.1024 3.0582 3.0677 2.7108 2.9314   1.7128 1.3792 1.471  1.8224 1.1672 1.9041 1.7659 1.8028 1.6144 1.9665   1.5915 1.5281 3.4445 2.7815 1.737  3.2534 2.3871 2.9948 4.3978 5.1622   4.8391 5.5596 5.4931 5.4205]]
578                   0.89703         0.73078         0.51994         0.68569          0.78638          0.08487          0.5612          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7629 4.161  3.9707 3.9321 4.2126 4.0062 2.2577 2.7425 2.4815 2.4783   2.3054 2.9694 4.571  5.6039 5.0507 4.7373 5.0293 5.0951 5.6274 5.8749   6.0248 6.1205 6.1592 6.191  3.2467 3.1523 2.8682 2.9435 2.876  3.1082   1.9314 1.6615 1.5602 1.8386 1.1958 1.9708 2.0749 2.0932 1.6769 1.7515   2.2123 2.1766 3.2971 2.8876 3.0818 3.5341 3.0996 3.322  5.3681 5.6963   5.2441 5.8449 5.6638 5.5367]]
579                   2.12879         1.15545         0.84384         0.2541          0.28107          0.18064          1.0206          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.9329 3.0572 3.3873 2.8892 3.4745 3.3521 1.8271 2.2843 2.9511 3.0051   3.2054 2.1323 3.3737 4.8648 4.4618 4.2564 3.6566 3.5559 2.8507 5.7193   5.6087 5.5376 5.6056 2.8472 3.3576 3.2883 3.2366 2.7373 3.2613 3.3475   0.8522 1.0741 3.6998 3.8412 3.5119 3.726  3.5743 3.4302 1.1984 3.4798   3.6596 3.6106 2.6605 2.3487 3.6978 2.5699 2.3707 2.3961 4.956  5.1584   3.8551 4.3349 4.062  4.183 ]]
580                   3.34707         1.52683         1.18461         -0.17277          -0.06084          0.26675          1.2099          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1109 3.4415 3.5768 3.2158 3.3559 3.5378 2.7742 3.57   3.3296 3.2073   2.9881 3.4256 3.8136 3.6439 3.4039 3.729  4.207  3.7372 3.6362 3.321   3.2124 3.108  3.3888 3.0633 3.4593 3.6032 3.4099 3.6798 3.518  3.6348   4.0303 3.9154 4.1239 3.978  3.8417 3.9549 4.0857 3.9492 3.5499 3.7682   3.5335 3.6597 3.8761 3.9625 3.6457 4.025  3.8271 4.3423 4.8705 4.4288   4.5228 4.4079 4.3217 4.1301]]
581                   0.55455         0.56407         0.34354         0.80569          0.8057          0.05129          0.42047          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.2251 3.581  3.3643 3.4064 3.4617 3.395  1.8768 2.2363 2.0372 2.0477   2.1514 2.1909 4.5538 4.9781 4.4977 4.3078 4.5764 4.496  5.5065 5.8785   5.5332 5.5645 5.5072 5.5805 2.5646 2.9045 2.6332 2.638  2.5476 2.709   0.8035 1.0918 0.753  1.0921 0.8653 1.0965 1.6233 1.5524 1.1768 1.4111   1.5031 1.2805 2.6661 2.3854 2.5271 2.6362 2.2677 2.465  4.9161 5.0416   5.2234 4.6021 5.0822 5.0255]]
582                   0.58861         0.56263         0.36235         0.79376          0.79629          0.05572          0.38685          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4077 3.7162 3.4426 3.4397 3.6147 3.2252 1.9717 2.3819 2.0779 2.1145   2.2549 2.2401 4.5959 5.0543 4.6585 4.3754 4.5851 4.6642 5.6274 5.9152   5.6471 5.5989 5.5892 5.4089 2.6621 2.9886 2.6724 2.7912 2.3612 2.6207   1.0336 1.2261 0.9715 1.2275 1.0497 1.1026 1.7587 1.5414 1.0227 1.5951   1.4971 1.189  2.8877 2.5883 2.6329 2.4048 2.5429 2.7385 5.0681 5.2963   5.3496 4.8671 5.3699 5.259 ]]
583                   2.01305         1.06375         0.70655         0.29465          0.30501          0.14976          0.81227          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.83   2.8893 3.3436 3.3359 2.8195 2.7031 2.9513 2.2661 1.9996 2.9693   3.0614 2.8655 4.5306 3.2498 3.7756 3.3887 4.5096 3.6191 2.9078 5.8001   5.5915 2.866  3.2219 5.5535 2.5623 3.3168 3.2299 2.7299 3.3467 2.6311   3.907  1.0932 4.0569 3.907  0.8065 1.0165 1.5888 3.6528 3.476  3.6259   1.4018 1.3528 3.8557 3.7406 3.7924 3.6855 2.3476 3.7104 4.012  4.1465   5.141  4.2267 4.1362 5.0715]]
584                   3.58048         1.59921         1.19785         -0.25456          -0.16106          0.28005          1.26695          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2462 3.5901 3.6595 3.2067 3.4244 2.7174 3.3257 3.0915 3.3106 3.3024   3.6549 3.1262 3.8169 3.9438 3.6436 3.6582 3.5862 3.6722 3.0067 3.6655   3.3052 3.3196 3.5292 3.1231 3.5487 3.4408 3.6459 3.4956 3.6193 3.5669   3.9972 3.9742 3.9505 4.0331 3.8743 3.9516 4.0209 3.8604 3.7855 3.7375   3.2975 4.1449 3.9579 3.9235 3.908  4.2822 3.9123 3.38   4.5561 1.4978   4.4302 4.3189 4.687  4.5029]]
585                   0.57546         0.58567         0.34225         0.79837          0.79837          0.05068          0.42767          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1946 3.6483 3.3978 3.242  3.6328 3.3718 1.8387 2.3786 1.9511 1.9294   2.1579 2.1581 4.4988 4.8965 4.5038 4.1607 4.4024 4.4258 5.4334 5.8769   5.631  5.626  5.4771 5.4808 2.5888 2.9411 2.6151 2.764  2.5138 2.6889   0.8434 1.1079 0.8712 1.0567 0.9269 0.8541 1.5644 1.4634 1.2957 1.482   1.5489 1.2821 2.7772 2.2998 2.3415 2.4747 2.5151 2.5331 5.0194 4.983   5.128  5.2491 5.2419 4.9379]]
586                   0.53886         0.53718         0.34255         0.81119          0.81506          0.04881          0.42037          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4083 3.7194 3.4876 3.4723 3.6132 3.4379 1.9602 2.3558 2.0932 2.1425   2.163  2.267  4.693  5.1224 4.5418 4.3759 4.6728 4.6653 5.5337 5.8859   5.7365 5.5294 5.728  5.7529 2.6836 2.7007 2.6412 2.7565 2.4209 2.789   1.0935 1.2807 1.123  1.102  0.9138 1.1953 1.6585 1.5406 1.3797 1.545   1.5082 1.5166 2.4885 2.481  2.6011 2.7933 2.5788 2.5923 5.0268 5.3052   5.3103 5.1176 5.2066 5.2999]]
587                   0.56455         0.57855         0.33012         0.80219          0.8022          0.05063          0.47182          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2686 3.6033 3.3129 3.3203 3.4947 3.2037 1.8731 2.2953 1.9954 2.005   2.0441 2.137  4.5502 4.9166 4.5169 4.2773 4.5562 4.5076 5.5219 5.8202   5.7174 5.5267 5.5728 5.5828 2.6306 3.0061 2.6765 2.8972 2.5336 2.7604   0.7998 0.9548 0.8557 0.9702 0.614  0.9073 1.5317 1.392  1.1837 1.4698   1.4155 1.3315 2.733  2.3339 2.3839 2.6985 2.322  2.4798 5.0123 5.2194   5.2099 5.2558 5.3388 5.1319]]
588                   6.6459         2.08703         1.0466         -1.32864          -1.06028          0.5065          1.81793          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[4.5087 1.9242 1.4027 1.0793 1.7385 1.0933 2.1298 0.7793 0.6497 1.0395   5.2007 0.7697 4.0779 4.8728 1.9192 0.8971 1.6624 4.255  5.7316 1.0635   0.917  0.6813 1.1838 3.7294 3.1116 0.4076 0.9442 0.5393 1.659  4.5206   2.6753 1.7721 0.7003 1.798  3.9131 5.0225 6.8615 0.1401 0.8573 3.7013   0.795  1.0703 2.2527 3.3139 4.5085 1.3065 3.0718 4.394  0.991  1.1424   1.7444 1.9775 1.8343 1.7428]]
589                   0.69467         0.63963         0.43529         0.75659          0.80712          0.06607          0.47027          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.703  3.7891 3.8181 4.0029 3.8873 3.8346 2.2095 2.5619 2.3273 2.3953   2.4816 1.7798 5.0716 5.5241 5.0443 4.8033 4.8397 4.8558 5.8767 6.0362   5.9282 5.7579 5.9812 5.995  2.8473 3.1201 2.9755 3.051  2.7886 2.9594   1.0525 1.2849 1.7266 1.646  1.4547 1.7133 1.9115 2.0248 1.4036 1.9289   1.7261 2.1256 2.5603 2.6593 3.2379 3.1142 2.9377 2.047  5.2607 5.7946   5.3228 5.5275 5.5288 5.6042]]
590                   0.86297         0.68722         0.49095         0.69763          0.79878          0.08006          0.51115          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8738 4.2304 3.9958 3.9026 4.256  3.8032 2.926  2.6859 2.34   2.2855   2.6167 3.4474 5.0446 5.3858 4.9928 4.7922 4.9145 4.8411 5.9473 6.1814   6.1164 5.7017 5.9738 6.1942 2.7984 2.6822 2.9352 3.1683 2.7375 3.3088   1.5198 1.7276 1.3767 1.7367 1.5273 1.3956 2.2887 1.8281 2.0393 1.9429   2.0297 1.9133 3.5447 2.9719 3.2976 3.2733 2.8982 3.4014 5.7121 5.3412   5.5735 5.7092 5.7612 5.4585]]
591                   0.54637         0.56554         0.32841         0.80856          0.80856          0.04908          0.44173          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2349 3.6118 3.3557 3.3679 3.4337 3.3415 1.8949 2.1928 1.9788 1.9512   2.2735 2.1753 4.5438 4.9185 4.5346 4.2875 4.5353 4.5249 5.4955 5.8148   5.5995 5.5781 5.6018 5.5966 2.6088 3.027  2.7028 2.7831 2.5557 2.7295   0.8056 0.991  0.7875 1.0271 0.701  0.903  1.5179 1.3948 1.2346 1.4565   1.4224 1.4161 2.6121 2.2223 2.4631 2.5379 2.3153 2.3948 4.9938 5.1664   5.1507 5.2775 5.1998 5.1208]]
592                   14467.71225         17.92265         5.10441         -5068.30094          -4983.75982          0.80971          1.27795          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[4.022000e+00 3.284000e+00 8.874337e+02 6.185400e+00 1.901300e+00   1.167900e+00 3.389200e+00 3.782700e+00 1.150800e+00 1.628500e+00   3.863400e+00 4.015000e-01 1.749900e+00 8.338000e-01 2.039400e+00   4.286200e+00 1.504200e+00 5.125000e+00 1.606500e+00 1.555800e+00   4.804400e+00 9.801000e-01 4.982300e+00 1.587500e+00 6.475000e-01   1.332000e+00 1.174700e+00 6.631000e-01 1.217800e+00 1.031700e+00   9.958000e-01 1.563900e+00 1.609700e+00 1.627800e+00 2.560900e+00   6.217000e-01 6.782000e-01 3.949300e+00 1.650800e+00 8.645000e-01   1.786000e+00 1.095400e+00 7.831000e-01 2.423700e+00 1.205900e+00   4.115000e+00 1.831400e+00 3.957400e+00 4.909400e+00 1.479500e+00   2.136400e+00 4.706700e+00 1.613500e+00 4.625800e+00]]
593                   0.80239         0.65416         0.44981         0.71885          0.77181          0.07395          0.38542          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6225 4.1172 4.0362 3.8335 3.8468 3.9608 2.0952 2.5516 2.3642 2.2804   2.3572 2.5389 4.9053 5.2291 4.7949 4.7432 4.7763 5.104  5.7923 6.2403   5.9489 5.7648 6.0836 6.0058 2.94   2.9666 2.8927 3.0218 2.4983 2.9918   1.3574 1.6451 1.8785 1.6107 3.7169 0.879  1.9555 1.8208 1.5437 0.8419   1.747  1.8521 3.2597 2.9503 2.6709 3.001  3.3136 2.9608 5.2002 4.3353   5.6409 4.8473 5.2992 5.6942]]
594                   0.9748         0.76013         0.57124         0.65844          0.76294          0.09424          0.59473          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6715 4.1573 4.221  3.9468 4.339  3.8083 2.2245 2.9833 2.6038 2.4088   2.423  2.6902 4.9168 5.5374 5.0566 4.8032 5.1441 5.026  5.8597 6.0563   5.8823 5.6306 5.8352 5.9186 2.7121 3.5275 2.8612 2.9916 2.865  3.1924   1.4791 1.5676 1.3829 2.7742 1.9286 2.0948 1.9869 1.9153 1.6538 1.8802   2.2665 2.1782 2.892  3.0766 3.2482 2.9926 2.8814 3.3291 5.3922 5.5942   5.7919 5.9223 5.773  5.5282]]
595                   2.23986         1.15524         0.82095         0.21518          0.24425          0.17942          1.0123          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.8797 3.0022 3.3439 2.6876 2.9804 2.8962 3.0996 2.2445 2.0734 3.1521   3.059  3.3219 3.4886 3.7122 4.5207 4.2725 3.5698 4.5228 2.8417 5.795   5.557  2.7906 5.5978 2.8066 3.3351 2.9129 3.2644 3.2505 3.2655 2.7161   0.8573 3.7381 3.8512 1.1272 3.6273 3.6606 3.446  3.2218 3.6279 3.3959   1.3997 3.225  3.6924 3.7283 2.3964 4.0496 3.564  2.4013 4.9282 5.1699   3.8562 5.2443 4.05   3.6673]]
596                   3.3394         1.48804         1.10843         -0.17008          -0.05912          0.25841          1.21477          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.344  2.8931 2.7975 3.5648 3.0543 3.3698 3.4488 3.2684 3.0821 3.091   3.2329 3.5015 3.9413 3.9985 3.7714 3.5488 4.1602 4.3682 3.1913 3.5493   3.159  3.2054 3.2416 3.2577 3.4456 3.4481 3.5069 3.436  3.5968 3.6785   4.0627 3.9565 4.0374 2.3851 4.2504 4.4387 3.9359 3.9239 4.0462 3.9441   3.8151 4.2125 4.4365 3.93   3.8633 2.5331 3.7126 4.135  4.7116 4.6021   4.8298 4.4824 4.6066 3.7178]]
597                   0.57802         0.56579         0.33771         0.79747          0.79748          0.05064          0.43147          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2989 3.5214 3.4469 3.3849 3.4627 3.3464 2.0701 2.4949 2.1058 1.9243   2.0635 2.1721 4.6021 4.9751 4.5977 3.8966 4.3955 4.3885 5.3953 5.5287   5.6417 5.2995 5.6651 5.6846 2.6098 2.9005 2.5694 2.6947 2.4343 2.6976   0.8981 1.0764 0.901  1.1425 0.8491 1.007  1.4894 1.2706 1.2248 1.3242   1.4094 1.3947 2.7811 2.4523 2.3132 2.7714 2.3951 2.7549 5.021  5.1048   5.2644 5.1948 5.2583 5.0958]]
598                   0.58117         0.55597         0.35585         0.79637          0.80031          0.05254          0.39383          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.4146 3.7234 3.2729 3.4678 3.5892 3.5493 1.9733 2.3789 2.153  2.1677   2.1598 2.2314 4.6379 4.9835 4.6405 4.1258 4.6619 4.7041 5.4934 5.9506   5.6622 5.5767 5.325  5.5217 2.6642 2.9963 2.7119 2.5025 2.5593 2.7521   1.0442 1.2363 0.9675 1.2209 1.0893 1.1181 1.6763 1.5322 1.329  1.6819   1.5618 1.4575 2.8644 2.5614 2.6966 2.6896 2.5345 2.6108 5.1688 5.3939   5.3116 5.4373 5.1477 5.176 ]]
599                   2.78331         1.3394         0.88686         0.02476          0.03155          0.20802          1.13157          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3118 3.29   3.3339 2.6631 2.583  3.3203 3.1063 3.1283 2.1046 3.2648   2.1575 2.9544 4.4683 3.5593 3.6646 2.9344 3.3297 4.5331 2.8883 5.8055   3.2536 3.0823 2.674  3.0859 3.2551 2.9832 2.5647 2.6891 2.4221 2.6379   3.6556 3.7847 3.7634 1.1058 3.8202 3.7146 3.6042 3.1791 1.2084 3.2328   1.4015 3.4374 3.8379 3.5662 3.8646 3.6984 3.3813 2.409  3.7615 4.1523   4.0338 5.269  3.8618 4.0564]]
600                   3.64946         1.58977         1.23636         -0.27873          -0.14001          0.28509          1.3795          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2033 3.9483 3.3464 2.8891 2.9613 3.3744 3.0823 3.7916 3.2777 3.4085   3.3955 3.4826 3.9643 4.5369 4.1556 3.5904 3.8194 4.2152 3.0075 3.0322   2.3735 3.3207 3.4489 3.799  3.6059 3.5285 3.5636 3.4133 3.4986 3.5145   3.9199 4.1214 4.0714 4.1181 4.0999 4.107  4.0242 3.9292 3.7295 4.0016   3.8829 3.6996 3.8538 4.1677 3.6933 4.1894 4.1987 3.8885 4.6365 4.3133   4.5449 4.0799 4.3607 5.1295]]
601                   0.5566         0.56796         0.35362         0.80497          0.80498          0.05262          0.42258          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2792 3.5654 3.4209 3.3595 3.4416 3.3755 1.8492 2.2689 1.9912 2.0438   2.1234 2.0011 4.5395 4.7889 4.5374 4.0882 4.6169 4.3735 5.4411 5.8346   5.5779 5.5066 5.642  5.5308 2.5601 2.874  2.5973 2.8085 2.519  2.7351   0.85   1.1358 0.7847 1.3626 0.8545 0.9548 1.634  1.475  1.1389 1.3941   1.4265 1.2874 2.6296 2.4794 2.3972 2.5149 2.453  2.2631 5.0402 4.8728   5.0554 5.33   5.1952 5.2754]]
602                   0.58113         0.55139         0.36011         0.79638          0.80285          0.05343          0.38027          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.4262 3.7505 3.4516 3.4494 3.6309 3.5046 2.0315 2.3777 2.1456 2.1745   1.9365 2.256  4.6732 5.0579 4.6664 4.3999 4.5892 4.6449 5.4423 5.9072   5.6163 5.5509 5.7348 5.624  2.5894 3.1075 2.7208 2.8535 2.5513 2.761   1.0933 1.1904 1.2144 1.3327 0.9459 1.1789 1.7077 1.5538 1.3583 1.5589   1.5308 1.4692 2.8877 2.5521 2.6836 2.7808 2.6269 2.6326 5.15   5.3167   5.3122 5.3756 5.3699 5.2237]]
603                   0.56521         0.56992         0.32965         0.80196          0.80207          0.05017          0.4396          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2612 3.6468 3.3375 3.327  3.47   3.3348 1.9702 2.4981 1.9564 2.1887   2.0782 2.0913 4.5477 4.8984 4.5452 4.2504 4.5247 4.5548 5.584  5.8959   5.6002 5.5299 5.6058 5.5848 2.6244 3.0602 2.6514 2.7879 2.5193 2.6945   0.8279 0.9546 0.7663 0.9707 0.7732 0.9603 1.5233 1.471  1.2039 1.4835   1.3978 1.366  2.691  2.3099 2.4601 2.5526 2.331  2.4013 5.0231 5.2224   5.2238 5.2497 5.3735 5.1253]]
604                   0.84413         0.68511         0.47573         0.70423          0.73301          0.07718          0.5061          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7955 4.0231 3.9005 3.6445 3.8571 2.8144 2.4323 3.2006 2.2506 2.1267   2.5553 2.3636 5.0811 5.2581 4.9397 4.484  5.0302 4.7619 5.9311 5.8726   6.1896 5.7753 5.7471 5.8807 2.6878 3.3308 2.8687 3.1485 2.7081 3.1018   1.6687 1.7681 1.3438 1.7034 1.0462 1.4137 1.7992 1.8226 1.5307 1.8317   1.7981 1.1215 3.1469 2.7606 2.8175 1.5795 3.2872 2.8467 4.0312 4.0166   4.968  5.452  5.6863 5.6077]]
605                   0.89331         0.69878         0.54094         0.687          0.77358          0.08774          0.46263          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.8636 4.2045 3.8084 3.8641 3.8811 3.7493 2.586  2.8753 2.4424 2.4532   2.7465 2.4797 4.9894 5.5039 4.8166 4.8777 5.0501 5.074  5.8493 6.3956   5.8661 5.3158 5.8043 6.0644 2.5877 2.898  2.9123 2.6369 2.8655 2.9213   1.7738 2.5693 1.5522 1.8368 1.2524 1.5412 2.1706 1.6739 1.6961 2.0352   2.0646 1.7199 3.3084 3.4183 3.3345 3.2309 3.1123 3.5681 5.4149 5.1756   5.603  5.7405 5.4848 5.5166]]
606                   0.53915         0.55708         0.3226         0.81109          0.81109          0.04825          0.44812          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2533 3.5708 3.2988 3.3013 3.4592 3.3511 1.8185 2.254  2.0358 2.0313   2.0221 2.1059 4.5004 4.9321 4.5194 4.2965 4.5396 4.5392 5.5246 5.7408   5.588  5.68   5.599  5.6701 2.5877 3.0072 2.673  2.8429 2.5828 2.7705   0.7954 0.9536 0.7819 0.9964 0.8527 0.922  1.5336 1.3787 1.2226 1.457   1.4065 1.3073 2.6688 2.3053 2.4116 2.5288 2.3574 2.3956 5.0232 5.2158   5.1931 5.2434 5.1805 5.1316]]
607                   5.99657         1.93541         0.89954         -1.10112          -0.83904          0.50051          1.53212          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[0.4626 3.407  2.0052 0.3469 1.6955 4.6263 0.2715 2.0413 4.4223 2.431   0.8699 3.3224 1.0361 2.023  3.7541 0.6717 1.052  4.9956 1.1485 3.7809   0.9448 1.0148 4.4195 1.0668 0.6209 4.3282 1.4848 3.554  3.7828 2.8384   3.9324 1.5968 1.7226 4.1997 0.4799 0.9897 2.708  1.141  1.6776 1.1921   1.4879 1.7981 1.8137 1.5164 4.3738 4.4585 0.8571 4.2157 3.3851 1.24   1.3154 4.0532 3.3606 0.6968]]
608                   0.93108         0.72283         0.50944         0.67376          0.74212          0.08553          0.50707          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7249 4.3551 3.9576 4.1753 3.9124 3.7695 2.1636 2.4732 2.2687 2.403   2.3302 2.5587 4.7592 5.2773 5.0354 4.123  4.3201 5.0711 5.7291 6.2528   5.7045 5.804  5.6463 5.885  2.9735 2.5956 2.917  3.0845 2.6681 2.901   3.131  1.3628 1.4956 2.0685 3.6833 1.6051 1.8919 1.6367 1.7068 1.8705   1.6501 1.9159 3.1291 2.1659 3.3287 3.0314 2.7998 3.093  5.3984 5.2802   5.567  5.6942 5.5055 5.3335]]
609                   0.92966         0.71653         0.53473         0.67426          0.76167          0.08907          0.57443          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8676 4.0854 3.9145 3.9966 4.1106 4.0012 2.2372 3.1601 2.2894 2.4701   2.6459 2.7093 5.0682 5.4962 5.1191 4.7758 5.0514 5.098  5.6043 6.1116   5.2937 5.7986 5.6103 5.7966 2.9303 2.9835 3.0859 3.0084 2.7685 2.728   1.254  1.5958 1.7413 2.4115 1.4369 1.4089 2.024  1.9399 1.7044 1.9648   2.1918 2.3256 3.7599 3.0918 3.3145 3.5615 2.8806 2.945  5.4577 5.3123   5.631  5.4307 5.6555 5.4486]]
610                   0.55009         0.5654         0.32807         0.80726          0.80726          0.04915          0.4667          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3335 3.3334 3.4667 3.3336 1.8668 2.2667 2.     2.0001   2.0667 2.1334 4.5332 4.9332 4.5332 4.2667 4.5334 4.5333 5.5332 5.8001   5.6001 5.5333 5.5999 5.6001 2.5999 2.9999 2.6667 2.7997 2.5332 2.733   0.8001 1.     0.8001 1.     0.8002 0.9334 1.5334 1.4    1.2001 1.4667   1.4    1.3334 2.6667 2.3333 2.4    2.5333 2.3334 2.4003 5.     5.2   5.1999 5.2666 5.2001 5.1335]]
611                   0.55015         0.56545         0.32809         0.80724          0.80724          0.04916          0.4667          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3332 3.3332 3.4667 3.3334 1.8667 2.2669 2.0001 2.   2.0668 2.1335 4.5334 4.9334 4.5334 4.2665 4.5333 4.5332 5.5332 5.8001   5.6    5.5333 5.5998 5.5998 2.6001 2.9997 2.6668 2.8001 2.5334 2.7332   0.8001 1.0002 0.8    1.     0.8    0.9334 1.5332 1.4    1.2    1.4666   1.3999 1.3333 2.6668 2.3333 2.4    2.5334 2.3333 2.4001 5.     5.1999   5.2001 5.2667 5.1999 5.1333]]
612                   0.55014         0.56543         0.32808         0.80724          0.80724          0.04916          0.46663          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.3336 3.3337 3.4667 3.3334 1.8668 2.2667 2.0002 2.0001   2.0667 2.1334 4.5333 4.9333 4.5332 4.2666 4.5334 4.5335 5.5334 5.8   5.5999 5.5331 5.5999 5.5999 2.5999 3.0002 2.6667 2.8    2.5331 2.7332   0.8001 1.0001 0.8001 1.     0.8001 0.9334 1.5334 1.4001 1.2001 1.4666   1.4    1.3333 2.6667 2.3333 2.4001 2.5333 2.3333 2.4    4.9999 5.2   5.1997 5.2668 5.2    5.1333]]
613                   0.55013         0.56543         0.3281         0.80724          0.80724          0.04916          0.46662          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3334 3.4666 3.3333 1.8665 2.2667 2.     2.0001   2.0667 2.1333 4.5333 4.9333 4.5332 4.2666 4.5332 4.5333 5.5333 5.8   5.5999 5.5333 5.6001 5.6001 2.6001 2.9999 2.6665 2.7996 2.5332 2.7332   0.8    1.0005 0.8006 1.     0.8    0.9335 1.5333 1.4001 1.2    1.4667   1.4001 1.3333 2.6668 2.3334 2.4001 2.5334 2.3334 2.4    5.     5.2   5.2    5.2666 5.1999 5.1333]]
614                   0.55011         0.56545         0.32808         0.80725          0.80725          0.04916          0.46665          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3333 3.3334 3.4666 3.3333 1.8665 2.2668 2.0001 2.0001   2.0669 2.1334 4.5331 4.9332 4.5332 4.2667 4.5333 4.5332 5.5333 5.7999   5.6    5.5332 5.6    5.5999 2.5999 2.9999 2.6666 2.8001 2.5335 2.7333   0.8001 1.0001 0.8    1.     0.8    0.9334 1.5333 1.4001 1.1999 1.466   1.4003 1.3332 2.6666 2.3333 2.4002 2.5333 2.3334 2.3998 4.9999 5.2   5.2001 5.2665 5.2001 5.1334]]
615                   0.55012         0.56543         0.32808         0.80724          0.80724          0.04916          0.46675          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3333 3.4668 3.3334 1.8667 2.2667 2.0002 2.0001   2.0668 2.1334 4.5334 4.9333 4.5333 4.2666 4.5332 4.5332 5.5332 5.8   5.6    5.5332 5.6001 5.6002 2.5998 3.     2.6666 2.8001 2.5333 2.7333   0.8001 1.     0.8001 1.0002 0.8003 0.9334 1.5333 1.3999 1.1998 1.4665   1.4    1.3333 2.6662 2.3333 2.4    2.5332 2.3332 2.4001 4.9999 5.2001   5.2    5.2667 5.2    5.1333]]
616                   0.5501         0.56544         0.3281         0.80725          0.80725          0.04916          0.4666          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3333 3.3332 3.4667 3.3332 1.8669 2.2666 2.     2.0003   2.0667 2.1334 4.5333 4.9334 4.5332 4.2666 4.5332 4.5332 5.5332 5.8   5.6    5.5334 5.6    5.6002 2.6    2.9995 2.6665 2.7999 2.5333 2.7334   0.8    1.0001 0.8001 1.0004 0.8    0.9334 1.5333 1.4    1.1999 1.4666   1.4001 1.3334 2.6667 2.3334 2.3999 2.5333 2.3334 2.3999 4.9999 5.2   5.1999 5.2666 5.2    5.1333]]
617                   0.55012         0.56543         0.32809         0.80724          0.80724          0.04916          0.4667          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3334 3.4666 3.3333 1.8668 2.2668 2.0001 2.   2.0666 2.1334 4.5334 4.9333 4.5332 4.2667 4.5332 4.5333 5.5333 5.8   5.5999 5.5333 5.6    5.6    2.5998 2.9999 2.6666 2.8001 2.5332 2.7331   0.8    1.0001 0.8    1.0001 0.8    0.9334 1.5333 1.3999 1.2001 1.4667   1.4001 1.3333 2.6667 2.3335 2.4    2.5333 2.3333 2.4001 5.     5.2   5.1999 5.2667 5.2    5.1335]]
618                   0.55015         0.56545         0.32809         0.80724          0.80724          0.04916          0.4667          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6    3.3333 3.3333 3.4667 3.3333 1.8666 2.2667 2.0001 2.0001   2.0667 2.1334 4.5333 4.9334 4.5334 4.2667 4.5332 4.5327 5.5333 5.8001   5.5999 5.5333 5.5999 5.5999 2.6    2.9999 2.6667 2.8    2.5332 2.7331   0.8002 1.0002 0.7999 1.0001 0.7999 0.933  1.5334 1.4001 1.2    1.4667   1.3999 1.3333 2.6667 2.3332 2.4    2.5333 2.3332 2.4002 5.     5.2   5.2    5.2666 5.2    5.1333]]
619                   0.55016         0.56546         0.32811         0.80723          0.80723          0.04916          0.4666          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3334 3.3333 3.4666 3.3334 1.8666 2.2668 2.0001 2.0001   2.0666 2.1334 4.5332 4.9333 4.5332 4.2667 4.5332 4.5333 5.5333 5.8001   5.6001 5.5334 5.6    5.5998 2.5999 3.     2.6665 2.7992 2.5331 2.7333   0.8    1.     0.8    1.0002 0.8001 0.9335 1.5334 1.4001 1.1999 1.4668   1.4    1.3332 2.6668 2.3332 2.4    2.5332 2.3333 2.3997 5.     5.2   5.2001 5.2666 5.2001 5.1333]]
620                   0.5503         0.56557         0.32848         0.80718          0.80718          0.04921          0.46668          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.3333 3.3334 3.4667 3.3332 1.8667 2.2667 2.0004 2.0001   2.0668 2.1335 4.5332 4.9334 4.5333 4.2666 4.5333 4.5333 5.5331 5.7999   5.6    5.5334 5.6    5.6001 2.6001 2.9998 2.6666 2.8    2.5332 2.7331   0.7999 1.0001 0.8    1.007  0.8001 0.9336 1.5332 1.3999 1.2    1.4672   1.4    1.3334 2.6666 2.3335 2.4    2.5334 2.3332 2.4    4.9999 5.1999   5.2    5.2666 5.2    5.1334]]
621                   0.55014         0.56546         0.3281         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6004 3.3333 3.3332 3.4669 3.3334 1.8668 2.2669 2.0001 2.   2.0668 2.1337 4.5333 4.9333 4.5333 4.2667 4.5333 4.5332 5.5333 5.8   5.6    5.5332 5.6    5.6    2.6002 2.9999 2.6667 2.7999 2.5334 2.7335   0.8001 1.0002 0.8    1.0001 0.8001 0.9333 1.5334 1.4    1.2    1.4666   1.3999 1.3334 2.6666 2.3333 2.4    2.5333 2.3333 2.3999 5.     5.2   5.2    5.2667 5.2    5.1332]]
622                   0.5501         0.56545         0.32809         0.80725          0.80725          0.04916          0.46663          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3333 3.4666 3.3333 1.8669 2.2666 2.     2.   2.0667 2.1335 4.5333 4.9333 4.5332 4.2666 4.5333 4.5333 5.5333 5.7999   5.6001 5.5334 5.6    5.5999 2.5999 2.9997 2.6663 2.8    2.5333 2.7335   0.8002 1.0003 0.8    0.9999 0.8001 0.9334 1.5333 1.4001 1.2    1.4668   1.4001 1.3333 2.6667 2.3334 2.4002 2.5333 2.3334 2.3996 5.     5.2   5.2    5.2667 5.2    5.1333]]
623                   0.55014         0.56544         0.32809         0.80724          0.80724          0.04916          0.4666          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3334 3.4666 3.3334 1.8667 2.2668 2.0003 2.0001   2.0668 2.1334 4.5332 4.9334 4.5334 4.2665 4.5333 4.5332 5.5334 5.8   5.5998 5.5333 5.6001 5.5998 2.5999 3.     2.6665 2.7999 2.5333 2.7333   0.8    1.0002 0.8002 1.     0.8001 0.9335 1.5333 1.4    1.2002 1.4667   1.4    1.3334 2.6667 2.3333 2.4    2.5333 2.3334 2.4    4.9998 5.2   5.2    5.2665 5.2    5.1334]]
624                   0.55012         0.56541         0.32806         0.80724          0.80724          0.04916          0.46657          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3334 3.4668 3.3333 1.8668 2.2666 2.0001 2.0017   2.0666 2.1332 4.5333 4.9334 4.5332 4.2665 4.5332 4.5333 5.5333 5.8   5.5999 5.5333 5.6001 5.5999 2.5997 2.9999 2.6667 2.7998 2.5332 2.7332   0.8001 0.9999 0.7999 1.0001 0.8001 0.9334 1.5333 1.3999 1.1999 1.4666   1.4    1.3332 2.6666 2.3334 2.3999 2.5333 2.3332 2.4    4.9998 5.2   5.2    5.2667 5.2    5.1333]]
625                   0.55012         0.56543         0.32809         0.80725          0.80725          0.04916          0.46662          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.5999 3.3334 3.3333 3.4667 3.3333 1.8667 2.2672 2.     2.   2.0669 2.1333 4.5333 4.9332 4.5331 4.2665 4.5333 4.5332 5.5334 5.8   5.6    5.5332 5.6    5.6    2.5999 2.9999 2.6667 2.8    2.5333 2.7333   0.8    1.     0.8001 1.0001 0.8001 0.9335 1.5333 1.4    1.2001 1.4666   1.3999 1.3334 2.6666 2.3333 2.4002 2.5332 2.3335 2.4    5.     5.2   5.2    5.2666 5.2    5.1334]]
626                   0.55012         0.56543         0.32809         0.80725          0.80725          0.04916          0.46658          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3334 3.3333 3.4668 3.3334 1.8667 2.267  1.9999 2.   2.0666 2.1334 4.5331 4.9331 4.5333 4.2666 4.5331 4.5333 5.5335 5.8   5.6002 5.5334 5.6    5.6002 2.5996 2.9999 2.6667 2.7999 2.5333 2.7331   0.8    1.0001 0.8002 1.     0.8    0.9332 1.5335 1.4    1.2    1.4667   1.4    1.3331 2.6665 2.3333 2.4    2.5334 2.3334 2.4002 5.     5.2   5.2    5.2665 5.2    5.1332]]
627                   0.55008         0.56541         0.32809         0.80726          0.80726          0.04916          0.46672          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6002 3.3333 3.3335 3.4668 3.3332 1.8668 2.2667 2.     2.   2.0667 2.1334 4.5333 4.9332 4.5333 4.2667 4.5334 4.5332 5.5332 5.8001   5.5999 5.5333 5.6001 5.5999 2.6    2.9999 2.6666 2.8001 2.5333 2.7332   0.8    1.0002 0.8001 1.0002 0.8    0.9334 1.5333 1.3999 1.2    1.4667   1.4001 1.3335 2.6667 2.335  2.4001 2.5332 2.3334 2.3999 5.0002 5.2   5.2001 5.2667 5.2    5.1333]]
628                   0.55012         0.56544         0.32809         0.80725          0.80725          0.04916          0.46662          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6001 3.3334 3.3334 3.4667 3.3335 1.8667 2.2664 2.     1.9998   2.0667 2.1333 4.5333 4.9332 4.5333 4.2665 4.5332 4.5331 5.5333 5.8   5.6001 5.5332 5.6    5.6    2.5999 2.9999 2.6666 2.7999 2.5333 2.7333   0.8004 1.0001 0.8    1.0001 0.8001 0.9335 1.5335 1.4001 1.2001 1.4666   1.4002 1.3334 2.6667 2.3334 2.4    2.5332 2.3332 2.4    4.9999 5.2   5.2    5.2666 5.2    5.1334]]
629                   0.55021         0.56552         0.32815         0.80721          0.80721          0.04917          0.46658          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3333 3.3334 3.4668 3.3334 1.8667 2.2668 2.0001 2.0001   2.0666 2.1333 4.5333 4.9333 4.5333 4.2666 4.5334 4.5332 5.5335 5.8   5.6    5.5334 5.6    5.6    2.5999 3.0003 2.663  2.7999 2.5332 2.7333   0.8002 1.0004 0.8    1.0002 0.8001 0.9336 1.5335 1.4    1.2001 1.4668   1.4    1.3334 2.6666 2.3333 2.3999 2.5333 2.3334 2.4    5.     5.2   5.2003 5.2667 5.2    5.1334]]
630                   0.55017         0.56548         0.32812         0.80723          0.80723          0.04917          0.4666          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3333 3.4667 3.3334 1.8666 2.2668 2.0002 2.0001   2.0671 2.1336 4.5332 4.9333 4.5332 4.2666 4.5333 4.5333 5.5334 5.8001   5.5998 5.5333 5.5999 5.6    2.5989 3.0001 2.6664 2.7998 2.5335 2.7333   0.8001 1.0001 0.8    1.0002 0.7998 0.9336 1.5334 1.4    1.2    1.4666   1.4001 1.3333 2.6667 2.3335 2.4001 2.5333 2.3334 2.4    5.     5.2   5.1999 5.2666 5.1999 5.1333]]
631                   0.55008         0.56538         0.32807         0.80726          0.80726          0.04915          0.4667          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3334 3.4668 3.3332 1.8666 2.2668 2.     2.   2.0667 2.1335 4.5333 4.9334 4.5333 4.2666 4.5333 4.5334 5.5333 5.8   5.6003 5.5333 5.6001 5.6    2.5994 3.0001 2.6666 2.7999 2.5333 2.7333   0.8001 1.0001 0.8    1.0001 0.8003 0.9333 1.5332 1.4    1.1999 1.4667   1.4    1.3334 2.6667 2.3331 2.4    2.5334 2.3369 2.4001 5.0001 5.2   5.1999 5.2665 5.2    5.1332]]
632                   0.55012         0.56545         0.3281         0.80724          0.80724          0.04916          0.4666          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3334 3.4665 3.3334 1.8666 2.2667 2.0001 2.   2.0667 2.1333 4.5333 4.9332 4.5332 4.2667 4.5333 4.5333 5.5333 5.8   5.5999 5.5333 5.5999 5.5999 2.6    3.     2.6667 2.7999 2.5333 2.7334   0.8    1.0002 0.8001 1.     0.8001 0.9335 1.5333 1.4001 1.1999 1.4667   1.4    1.3332 2.6667 2.3334 2.3999 2.5334 2.3332 2.4    5.     5.2   5.2    5.2667 5.2    5.1334]]
633                   0.55012         0.56544         0.32809         0.80724          0.80724          0.04916          0.4666          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3333 3.3334 3.4667 3.3333 1.8666 2.2669 2.0003 2.   2.0669 2.1334 4.5333 4.9333 4.5332 4.2667 4.5333 4.5333 5.5334 5.7999   5.6    5.5334 5.5999 5.5999 2.5999 3.0001 2.6666 2.7999 2.5333 2.7334   0.8001 1.0001 0.7999 1.0001 0.8001 0.9333 1.5333 1.4    1.2001 1.4666   1.4    1.3335 2.6667 2.3334 2.3998 2.5333 2.3332 2.4001 5.0001 5.2   5.2    5.2666 5.1999 5.1333]]
634                   0.55011         0.56544         0.32809         0.80725          0.80725          0.04916          0.46668          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3334 3.3333 3.4666 3.3334 1.8668 2.2666 2.0001 2.0001   2.0665 2.1335 4.5332 4.9334 4.5333 4.2667 4.5331 4.5333 5.5333 5.8   5.5999 5.5333 5.6    5.6    2.6    2.9999 2.6666 2.8    2.5332 2.7334   0.8001 1.     0.8    1.0002 0.8001 0.9336 1.5334 1.4001 1.2    1.4667   1.4    1.3333 2.6666 2.3332 2.4001 2.5333 2.3334 2.3999 5.0001 5.2   5.1999 5.2666 5.1999 5.1333]]
635                   0.55012         0.56543         0.32807         0.80725          0.80725          0.04916          0.46663          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3333 3.4667 3.3334 1.8667 2.267  2.     2.0001   2.0668 2.1332 4.5333 4.9332 4.5333 4.2666 4.5336 4.5333 5.5333 5.8   5.5999 5.5333 5.6    5.6    2.5999 2.9999 2.6666 2.7999 2.5333 2.7334   0.8001 0.9998 0.7999 0.9999 0.8    0.9335 1.5333 1.4    1.2    1.4667   1.3999 1.3333 2.6666 2.3334 2.3999 2.5334 2.3334 2.4    4.9999 5.2001   5.2    5.2666 5.2    5.1334]]
636                   0.55012         0.56543         0.32809         0.80725          0.80725          0.04916          0.4667          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.5999 3.3335 3.3332 3.4668 3.3334 1.8666 2.2669 1.9997 2.0002   2.0668 2.1335 4.5334 4.9333 4.5334 4.2665 4.5332 4.5332 5.5332 5.7999   5.6    5.5333 5.5999 5.6    2.6001 2.9997 2.6666 2.7999 2.5331 2.7332   0.8001 1.0001 0.8002 1.     0.8001 0.9334 1.5334 1.4    1.2    1.4667   1.4001 1.3334 2.6666 2.3334 2.4    2.5333 2.3333 2.4    5.     5.1999   5.1998 5.2667 5.1999 5.1333]]
637                   0.5501         0.56544         0.32808         0.80725          0.80725          0.04915          0.4667          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3334 3.3333 3.4667 3.3333 1.8668 2.2667 1.9999 2.0003   2.0668 2.1335 4.5332 4.9331 4.5332 4.2666 4.5332 4.5333 5.5333 5.8001   5.5999 5.5333 5.5999 5.5999 2.6    2.9998 2.6667 2.8    2.5332 2.7332   0.8002 0.9999 0.8001 1.0001 0.8002 0.9334 1.5334 1.4    1.2001 1.4667   1.4    1.3333 2.6667 2.3334 2.4    2.5333 2.3331 2.4    5.     5.2   5.2    5.2667 5.2    5.1333]]
638                   0.55012         0.56544         0.32809         0.80724          0.80724          0.04916          0.4667          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.3333 3.3333 3.4667 3.3333 1.8665 2.2667 2.0001 2.0002   2.0665 2.1334 4.5335 4.9333 4.5331 4.2666 4.5331 4.5333 5.5331 5.8   5.5999 5.5332 5.6    5.5999 2.6    2.9999 2.6666 2.7998 2.5333 2.7333   0.8001 1.     0.8    1.0002 0.8002 0.9335 1.5332 1.4    1.2001 1.4667   1.3999 1.3333 2.6666 2.3334 2.3999 2.5334 2.3334 2.4    5.     5.2001   5.2    5.2666 5.2    5.1334]]
639                   0.55011         0.56542         0.32809         0.80725          0.80725          0.04916          0.4667          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3331 3.3334 3.4668 3.3334 1.8669 2.2666 2.     2.0002   2.0666 2.1334 4.5333 4.9333 4.5333 4.2666 4.5334 4.5334 5.5333 5.8   5.6001 5.5333 5.5999 5.6001 2.5997 2.9998 2.6666 2.7999 2.5334 2.7332   0.8001 1.0001 0.8    1.0001 0.8001 0.9335 1.5334 1.4    1.2001 1.4668   1.4    1.3334 2.6668 2.3333 2.4    2.5333 2.3334 2.4002 5.     5.1999   5.2    5.2667 5.2    5.1333]]
640                   0.55008         0.56542         0.32811         0.80726          0.80726          0.04916          0.46668          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6001 3.3334 3.3332 3.4667 3.3334 1.8668 2.2667 2.     2.0001   2.0666 2.1334 4.5333 4.9333 4.5334 4.2667 4.5333 4.5332 5.5333 5.7985   5.5999 5.5334 5.6    5.5999 2.6001 2.9998 2.6666 2.8    2.5333 2.7331   0.7999 1.0003 0.8    1.0003 0.8    0.9334 1.5334 1.3999 1.2001 1.4667   1.4002 1.3334 2.6669 2.3334 2.3999 2.5334 2.3334 2.4    4.9999 5.2001   5.2    5.2667 5.1999 5.1333]]
641                   0.55011         0.56543         0.3281         0.80725          0.80725          0.04916          0.4666          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3335 3.3334 3.4665 3.3333 1.8667 2.2666 2.0001 2.0001   2.0666 2.1333 4.5333 4.9332 4.5333 4.2667 4.5333 4.5331 5.5334 5.8   5.6    5.5334 5.6    5.6    2.5999 3.     2.6666 2.8    2.5333 2.7333   0.8    1.0003 0.8001 1.0002 0.8003 0.9335 1.5332 1.4    1.2    1.4667   1.4    1.3332 2.6667 2.3333 2.4001 2.5333 2.3334 2.4    4.9999 5.2   5.1999 5.2667 5.2    5.1333]]
642                   0.55014         0.56546         0.3281         0.80724          0.80724          0.04916          0.46672          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3333 3.4667 3.3333 1.8667 2.2668 1.9997 2.0001   2.0667 2.1334 4.5331 4.9333 4.5333 4.2666 4.5332 4.5333 5.5332 5.8   5.5999 5.5332 5.5999 5.6002 2.5999 2.9996 2.6667 2.8    2.5331 2.7331   0.7999 1.0001 0.8001 1.0001 0.7996 0.9333 1.5333 1.4    1.2    1.4668   1.4001 1.3333 2.6667 2.3334 2.4001 2.5332 2.3333 2.4    4.9999 5.2   5.1999 5.2666 5.2    5.1334]]
643                   0.55011         0.56542         0.32807         0.80725          0.80725          0.04916          0.46667          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3335 3.3333 3.4667 3.3333 1.867  2.2668 2.0002 2.   2.0667 2.1333 4.5332 4.9333 4.5332 4.2666 4.5333 4.5333 5.5333 5.8   5.5999 5.5334 5.6001 5.6002 2.6    2.9998 2.6668 2.8001 2.5332 2.7333   0.8    0.9997 0.8002 1.0001 0.8    0.9334 1.5334 1.4001 1.1999 1.4667   1.4    1.3334 2.6667 2.3334 2.4001 2.5332 2.3332 2.4    5.     5.2   5.2    5.2666 5.2001 5.1333]]
644                   0.55013         0.56545         0.32811         0.80724          0.80724          0.04916          0.46665          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5998 3.3336 3.3334 3.4667 3.3334 1.8667 2.2666 2.0001 2.0002   2.067  2.1334 4.5334 4.9334 4.533  4.2667 4.5332 4.5331 5.5334 5.8001   5.6    5.5333 5.6    5.5999 2.5999 2.9999 2.6666 2.7999 2.5332 2.7332   0.8003 1.0002 0.8002 1.0003 0.8    0.9335 1.5333 1.4002 1.2001 1.4667   1.4    1.3334 2.6668 2.3333 2.3999 2.5333 2.3334 2.3999 5.     5.2   5.1999 5.2668 5.2    5.1333]]
645                   0.55014         0.56545         0.32809         0.80724          0.80724          0.04916          0.46663          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6002 3.3334 3.3334 3.4667 3.3332 1.8667 2.2669 2.0001 2.0003   2.0667 2.1334 4.5333 4.9334 4.5333 4.2666 4.5333 4.5331 5.5333 5.7999   5.5999 5.5334 5.5999 5.5999 2.5999 2.9998 2.6666 2.8    2.5334 2.7334   0.8    1.     0.8    1.0001 0.8002 0.9334 1.5333 1.4    1.2001 1.4666   1.4    1.3333 2.6667 2.3333 2.4    2.5333 2.3333 2.3999 4.9999 5.2   5.2    5.2666 5.2    5.1333]]
646                   0.55012         0.56544         0.32808         0.80724          0.80724          0.04916          0.46652          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3334 3.3339 3.4667 3.3334 1.8666 2.2667 2.0001 2.   2.0669 2.1331 4.5333 4.9333 4.5331 4.2666 4.5329 4.5331 5.5334 5.8   5.5999 5.5333 5.5998 5.5999 2.6001 2.9999 2.6665 2.7997 2.5332 2.7333   0.8    1.     0.7999 1.     0.8002 0.9335 1.5334 1.3999 1.1999 1.4667   1.4    1.3333 2.6668 2.3334 2.4001 2.5334 2.3334 2.4    5.     5.2001   5.2    5.2666 5.1999 5.1334]]
647                   0.54999         0.56538         0.32807         0.80729          0.80729          0.04915          0.46665          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2668 3.5999 3.3332 3.3333 3.4667 3.3334 1.8669 2.2667 2.     2.   2.0666 2.1334 4.5333 4.9333 4.5333 4.2683 4.5333 4.5333 5.5332 5.7999   5.5999 5.5334 5.6001 5.6    2.5999 2.9998 2.6666 2.7999 2.5334 2.7331   0.8001 1.     0.8    1.0001 0.8001 0.9334 1.5333 1.4    1.2    1.4667   1.4    1.3335 2.6668 2.3334 2.4002 2.5332 2.3333 2.4    5.     5.1999   5.2    5.2668 5.2    5.1334]]
648                   0.55013         0.56544         0.32808         0.80724          0.80724          0.04916          0.46662          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6    3.3332 3.3332 3.4668 3.3336 1.8666 2.2667 2.0002 2.   2.0666 2.1333 4.5332 4.9333 4.5331 4.2666 4.5331 4.5332 5.5333 5.8   5.6001 5.5333 5.6    5.5999 2.5999 3.     2.6666 2.7998 2.5334 2.7333   0.8    1.0001 0.8001 1.     0.8001 0.9333 1.5333 1.4001 1.2001 1.4666   1.4    1.3333 2.6667 2.3333 2.4001 2.5334 2.3333 2.4    5.     5.2   5.2    5.2667 5.1999 5.1335]]
649                   0.55016         0.5655         0.3281         0.80723          0.80723          0.04916          0.4666          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3334 3.3335 3.4667 3.3333 1.8667 2.2666 2.0001 2.0001   2.0667 2.1334 4.5332 4.9333 4.5333 4.2666 4.5333 4.5331 5.5334 5.8001   5.6    5.5333 5.5998 5.5999 2.6001 2.9998 2.663  2.7998 2.5332 2.7334   0.8002 1.     0.8    1.0001 0.8    0.9334 1.5334 1.3999 1.2    1.4666   1.3997 1.3333 2.6666 2.3332 2.4    2.5333 2.3332 2.3996 5.     5.1998   5.1999 5.2665 5.2    5.1333]]
650                   0.55017         0.56547         0.32811         0.80723          0.80723          0.04916          0.46658          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6002 3.3334 3.3333 3.4665 3.3332 1.8668 2.2666 2.0001 1.9999   2.0668 2.1333 4.5332 4.9333 4.5333 4.2665 4.5331 4.5332 5.5334 5.7999   5.6001 5.5332 5.5999 5.5999 2.6    3.     2.6668 2.7999 2.5329 2.7334   0.8001 1.0003 0.7998 1.0001 0.8    0.9334 1.5333 1.4001 1.1999 1.4667   1.4    1.3331 2.6667 2.3334 2.3997 2.5333 2.3333 2.4    4.9999 5.2   5.2    5.2667 5.1999 5.1335]]
651                   0.55009         0.56542         0.32808         0.80726          0.80726          0.04916          0.46658          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3334 3.3334 3.4665 3.3334 1.8673 2.2668 2.0001 2.0001   2.0667 2.1335 4.5333 4.9331 4.5332 4.2665 4.5335 4.5332 5.5334 5.8   5.5999 5.5333 5.6    5.6    2.5999 2.9999 2.6664 2.7999 2.5333 2.7331   0.8001 1.     0.7999 1.     0.8    0.9334 1.5334 1.4    1.2001 1.4667   1.4001 1.3333 2.6666 2.3334 2.4002 2.5332 2.3333 2.4    5.     5.2   5.2    5.2669 5.2    5.1334]]
652                   0.55012         0.56542         0.32809         0.80724          0.80724          0.04916          0.4666          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3334 3.4666 3.3334 1.8666 2.2668 2.     1.9999   2.0665 2.1333 4.5333 4.9332 4.5333 4.2666 4.5333 4.5334 5.5334 5.8002   5.5999 5.5333 5.6001 5.6    2.5999 3.0001 2.6666 2.7998 2.5335 2.7334   0.8002 1.0001 0.7999 1.0001 0.8002 0.9334 1.5333 1.4    1.2002 1.4667   1.4    1.3333 2.6667 2.3335 2.4    2.5333 2.3333 2.4001 4.9999 5.2   5.1999 5.2667 5.2    5.1333]]
653                   0.55012         0.56542         0.32808         0.80725          0.80725          0.04916          0.4666          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3334 3.4666 3.3334 1.8666 2.2667 2.0001 2.0001   2.0667 2.1334 4.5334 4.9333 4.5333 4.2665 4.5333 4.5332 5.5334 5.7999   5.6002 5.5335 5.6    5.6    2.5999 2.9998 2.6666 2.8    2.5333 2.7333   0.8001 1.0001 0.8002 1.0001 0.8002 0.9334 1.5333 1.3998 1.2    1.4667   1.3999 1.3333 2.6667 2.3333 2.4    2.5334 2.3333 2.4001 4.9998 5.2   5.2    5.2665 5.2    5.1331]]
654                   0.55014         0.56543         0.32809         0.80724          0.80724          0.04916          0.46662          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3335 3.3333 3.4668 3.3334 1.8667 2.2666 2.     2.0001   2.0667 2.1333 4.5333 4.9333 4.5332 4.2667 4.5334 4.5333 5.5334 5.8005   5.6001 5.5333 5.5999 5.6002 2.5999 3.0001 2.6668 2.7998 2.5333 2.7334   0.8    1.0001 0.8002 1.0001 0.8003 0.9332 1.5335 1.4    1.2    1.4667   1.4002 1.3334 2.6667 2.3334 2.4    2.5334 2.3333 2.4001 5.     5.2   5.2    5.2666 5.1999 5.1333]]
655                   0.5501         0.56545         0.32808         0.80725          0.80725          0.04916          0.46668          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5999 3.3333 3.3331 3.4668 3.3333 1.8666 2.2666 2.     2.   2.0666 2.1335 4.5334 4.9331 4.533  4.2666 4.5333 4.5333 5.5333 5.8   5.5999 5.5334 5.5999 5.6    2.6    2.9999 2.6664 2.8    2.5333 2.7334   0.8001 1.0001 0.8001 0.9999 0.8    0.9334 1.533  1.4    1.2    1.4668   1.4001 1.3332 2.6666 2.3333 2.4    2.5334 2.3334 2.3999 4.9999 5.2   5.2    5.2667 5.2    5.1333]]
656                   0.55012         0.56545         0.32809         0.80724          0.80724          0.04916          0.4666          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3333 3.4666 3.3334 1.8668 2.2667 2.0001 2.0001   2.0667 2.1334 4.5331 4.9333 4.5332 4.2666 4.5331 4.5333 5.5332 5.7999   5.6    5.5334 5.6    5.6    2.6001 2.9999 2.6665 2.8    2.5332 2.7336   0.8001 1.     0.8004 1.0001 0.8001 0.9334 1.5334 1.4001 1.2001 1.4666   1.4001 1.3335 2.6668 2.3332 2.4    2.5335 2.3333 2.4001 4.9999 5.2   5.2    5.2667 5.2    5.1332]]
657                   0.55012         0.56544         0.32809         0.80725          0.80725          0.04916          0.46665          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3334 3.3334 3.4667 3.3334 1.8667 2.2668 2.0001 1.9998   2.0667 2.1334 4.5333 4.9332 4.5332 4.2666 4.5333 4.5333 5.5333 5.7999   5.6    5.5333 5.6    5.5999 2.5999 2.9999 2.6666 2.7997 2.5333 2.7332   0.7999 1.0001 0.8    1.0002 0.8003 0.9333 1.5333 1.4001 1.2001 1.4666   1.4    1.3333 2.6667 2.3332 2.4    2.5334 2.3334 2.4    4.9999 5.1999   5.2    5.2667 5.2    5.1333]]
658                   3.19962         1.55386         1.11086         -0.12111          -0.09428          0.24871          1.34923          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.7038 2.8721 3.3207 2.9968 2.8179 2.8344 3.3458 3.3271 3.0876 3.182   3.2238 3.1314 3.4264 3.4524 3.5023 3.3854 3.2284 3.3368 3.1592 3.3026   3.2965 3.1525 2.9609 3.241  3.4136 3.5216 3.5303 3.4169 3.4202 3.4838   3.6189 3.6309 3.6723 3.7706 3.6864 4.0133 3.5868 3.435  3.1544 3.3934   3.2613 3.4316 3.7793 3.618  3.5735 3.6667 3.7304 3.747  3.8445 3.6176   3.6656 3.689  3.8221 3.7916]]
659                   3.11947         1.51919         1.10591         -0.09302          -0.05913          0.2448          1.29233          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.1195 3.0573 2.8429 3.1002 2.9994 3.0685 3.2683 3.2094 3.1515 3.2323   3.3638 3.2392 3.4678 3.5105 3.8777 3.4691 3.6015 3.3367 3.1421 3.2298   3.2481 2.9847 3.1805 3.2984 3.3597 3.4636 3.3864 3.4475 3.3676 3.4215   3.588  3.7347 3.6843 3.8955 3.6215 3.7163 3.5452 3.437  3.2043 3.4387   3.2118 3.3533 3.7386 3.6622 3.6572 3.7292 3.5423 3.8783 3.6543 3.8923   3.9424 4.0348 3.7453 3.7763]]
660                   3.24843         1.57813         1.11042         -0.13821          -0.11178          0.25091          1.48432          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.7212 2.9638 2.8525 3.0938 2.912  3.0462 3.333  3.4204 3.2877 3.3376   3.2813 3.2826 3.4505 3.5009 3.2303 3.282  3.1908 3.3808 3.4299 3.1739   3.16   3.1479 2.9983 3.3731 3.5058 3.458  3.359  3.4463 3.394  3.3984   3.7234 3.754  3.694  3.5068 3.6109 3.8558 3.4436 3.3449 3.1328 3.4862   3.7496 3.4511 3.6886 3.4761 3.7329 3.6945 3.6505 3.7877 3.7909 3.8646   3.4192 3.8615 3.2981 3.7346]]
661                   3.11022         1.53246         1.08768         -0.08978          -0.05768          0.24314          1.21458          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.0753 2.9934 3.229  2.8673 3.0587 2.9387 3.3785 3.2021 3.4464 3.1215   3.2139 3.2588 3.2389 3.6398 3.5517 3.4463 3.5193 3.4719 3.3446 3.1666   3.1204 3.1684 3.3668 3.1366 3.3507 3.4356 3.366  3.4065 3.3408 3.4013   3.4757 3.6202 3.8738 3.429  3.7161 3.6558 3.7709 3.711  3.5486 3.3405   3.2334 3.5631 3.7884 3.4524 3.7111 3.5926 3.4778 3.6486 3.6657 3.7919   4.1074 3.6285 3.8518 3.7679]]
662                   3.09098         1.50547         0.98898         -0.08304          -0.08304          0.22887          1.61185          MLPRegressor(hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.012  4.1277 2.847  3.039  2.9015 3.2547 2.7987 2.8745 3.0699 3.0751   3.105  3.073  2.9811 3.1924 2.9631 3.0032 3.1705 3.3276 2.8313 2.8994   2.7662 2.9269 2.931  2.9195 3.0893 3.1343 3.0942 3.0883 3.061  3.1002   3.2803 3.3091 3.2978 3.2832 3.2684 3.4194 3.1193 3.1691 3.0402 3.3202   3.1655 3.1822 3.276  3.2565 3.0917 3.1788 2.7535 3.1504 3.1795 3.3522   3.4241 3.7091 3.3196 3.3194]]
663                   2.81117         1.43884         0.9449         0.015          0.015          0.21059          1.4126          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8528 2.8924 2.9276 2.8376 3.9771 2.8182 3.1777 3.3026 3.0258 3.1527   2.9941 3.0744 3.2492 3.2796 3.0196 3.1094 3.1658 3.2183 2.9174 2.8488   2.9739 2.9612 2.916  3.0139 3.0745 3.1339 3.1092 3.1411 3.1217 3.0758   3.2864 3.3451 3.2766 3.3219 3.3689 2.3224 3.1911 3.2153 1.7665 2.4437   3.0775 3.0265 3.1437 3.316  3.1171 3.2835 3.2181 3.2641 3.1493 3.4268   4.466  3.3766 3.3468 4.2992]]
664                   2.924         1.45914         0.92583         -0.02453          -0.02117          0.21518          1.48733          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8723 2.8689 3.1905 2.7372 2.6976 2.9505 3.0112 2.7492 3.0203 2.8952   2.5968 3.1723 3.296  3.4042 3.238  2.9395 3.2989 3.091  2.8284 2.8893   2.9121 2.9448 2.8103 2.8603 3.1042 3.1403 3.1108 3.1754 3.0958 3.1046   3.2717 3.2077 3.1493 2.6936 3.304  3.3828 2.9825 3.0189 1.4626 3.1194   3.2766 3.1357 3.2276 3.0838 3.2932 3.1723 2.6205 2.8493 3.2212 3.3751   3.1966 3.3226 3.3155 3.353 ]]
665                   2.9582         1.45523         0.94745         -0.03652          -0.03576          0.21948          1.52332          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8227 3.067  3.0787 2.9853 2.9894 2.6521 2.9521 3.2744 2.9482 3.0854   3.037  3.3097 3.1696 3.1408 3.1171 3.1269 3.2147 2.9619 2.8834 2.9509   2.7783 2.684  2.8987 2.9941 3.1099 3.1757 3.107  3.1332 3.1076 3.1124   3.1918 3.4035 2.8208 2.8044 3.2142 3.2897 3.2621 3.2031 2.7417 3.1512   3.0413 3.0848 3.2381 3.0805 2.6772 2.8852 3.2879 3.2704 3.3001 3.278   3.3852 3.2493 3.3279 3.7719]]
666                   0.5606         0.56822         0.3482         0.80357          0.80365          0.0511          0.47017          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2792 3.5971 3.0435 3.3428 3.4585 3.3091 1.8678 2.2266 2.0081 1.9892   2.0507 2.1331 4.5483 4.9334 4.6031 4.2619 4.57   4.5032 5.5261 5.8162   5.6248 5.7569 5.593  5.5895 2.5979 3.1772 2.662  2.8522 2.5698 2.7356   0.7928 1.4174 0.7845 1.0248 0.7839 0.9294 1.3455 1.3938 1.5719 1.4855   1.4002 1.2916 2.6753 2.3298 2.4106 2.5441 2.3385 2.398  4.9829 5.1971   5.2033 5.272  5.1975 5.1187]]
667                   0.4626         0.51315         0.31328         0.83791          0.83859          0.04284          0.45645          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.264  3.6043 3.3339 3.3337 3.4435 3.5885 1.8223 2.2131 1.993  2.5804   2.0462 2.1376 4.5511 4.9569 4.5453 4.7457 4.5373 4.5304 5.5306 5.8203   5.6055 5.6384 5.5965 5.5759 2.7907 1.9682 2.9803 2.8149 2.5608 2.6928   1.2569 0.9771 0.8017 1.0187 0.8028 1.5393 1.549  1.4001 1.6635 1.4704   1.4049 1.2994 2.671  2.3365 2.4093 2.5476 2.3317 2.422  4.9989 5.1936   5.2014 5.2478 5.2115 5.1541]]
668                   0.56259         0.57658         0.33192         0.80288          0.80291          0.05004          0.4694          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.258  3.6032 3.203  3.3365 3.4756 3.3318 1.8584 2.2811 1.986  1.9986   2.653  2.1418 4.4946 4.9516 4.5383 4.2744 4.4949 4.5411 5.522  5.806   5.6173 5.5846 5.6035 5.6173 2.5464 3.0348 2.6721 2.7855 2.5234 2.7324   0.797  1.0128 0.797  0.9959 0.7784 0.8127 1.5358 1.3964 1.2141 1.4627   1.4003 1.3384 2.668  2.3307 2.3971 2.5406 2.5132 2.416  4.9883 5.1963   5.2051 5.2678 5.2163 5.1344]]
669                   0.55793         0.56115         0.34292         0.80451          0.80451          0.05332          0.45632          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.535  3.6055 3.5029 3.3915 3.462  3.3528 1.8604 2.2574 2.0057 2.0674   2.1093 2.1023 4.5354 4.9259 4.5814 4.2672 4.5355 4.5236 5.5306 5.7998   5.5438 5.524  5.5972 5.6447 2.593  2.9991 2.6828 2.813  2.5537 2.7437   0.8032 0.9925 0.8827 1.3009 0.8087 0.9062 1.5325 1.313  1.2005 1.4358   1.3956 0.7328 2.6637 2.3255 2.5068 2.5346 2.3304 2.3986 5.0059 4.9861   5.1908 5.2638 5.1898 5.1324]]
670                   0.63936         0.61579         0.41175         0.77598          0.77766          0.06158          0.50245          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3419 3.6158 3.3694 3.3806 3.6293 3.4185 2.3472 2.3304 2.0494 2.1207   2.6878 2.3154 4.4396 4.8626 4.4927 4.0982 4.4203 4.4055 5.4442 5.787   5.5014 5.5686 5.6295 5.5857 2.4831 3.0399 2.0987 2.9721 2.4578 2.5371   1.7288 1.9225 0.9123 1.1718 1.1991 1.7446 1.4725 1.3949 1.3972 1.4491   1.3724 1.3399 2.7181 2.3832 2.4501 2.615  2.3305 2.5317 4.756  5.2212   5.1573 5.29   4.9882 5.101 ]]
671                   0.60003         0.59405         0.37179         0.78976          0.79068          0.05679          0.45038          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3328 3.624  3.427  3.2816 3.5048 3.5673 1.9839 2.7981 2.1142 2.2665   2.5813 2.1123 4.4543 4.4546 4.4369 4.0721 4.4857 4.3962 5.5478 5.6684   5.5221 5.4165 5.7159 5.5611 2.5256 2.8446 2.6072 2.7819 2.0558 2.7945   0.9456 1.1697 1.0876 1.2398 1.9032 1.0674 1.864  1.3819 1.3769 1.7153   1.4315 1.6211 2.7051 2.3819 2.0955 2.7775 2.3319 2.4302 4.9572 5.1668   5.1965 5.2573 4.9961 5.0656]]
672                   0.67635         0.62402         0.4251         0.76301          0.76302          0.06371          0.461          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3133 3.6446 3.2115 3.3507 3.5449 3.4257 2.4152 2.4255 1.9932 2.0322   2.2341 2.201  4.3963 4.9316 4.0815 4.0368 4.3239 4.3563 5.4279 5.7373   5.4997 5.4102 5.4335 5.0954 2.5618 2.5596 2.5816 2.2677 2.247  2.6869   0.8909 2.2413 1.7169 1.5695 1.1185 1.0414 1.4571 1.3806 1.323  1.4886   1.3765 1.3725 2.7819 2.1623 2.4883 2.64   2.464  2.5315 4.2604 5.0785   5.2208 5.1335 5.0427 5.0318]]
673                   0.55141         0.5749         0.37923         0.80679          0.80764          0.05551          0.42902          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.5012 3.5697 3.7011 3.3724 3.3696 3.299  1.9875 2.3073 2.271  2.1078   2.1151 2.209  4.4345 4.7111 4.4287 4.2383 4.4666 4.5227 5.3693 5.8352   5.5482 5.5619 5.5718 5.5312 2.5134 2.7224 2.5485 2.4042 2.7524 2.8032   0.9136 1.0983 0.9197 1.45   0.9134 1.8826 1.5011 1.3846 1.2462 1.7296   1.9992 1.3538 2.6677 2.3745 2.4831 2.5336 2.3458 2.5392 4.9994 5.1901   5.1363 5.398  5.1322 5.0249]]
674                   2.70325         1.37438         0.92107         0.05282          0.05328          0.20403          1.37068          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.7456 3.1922 2.9183 2.9701 2.7747 3.1549 2.9939 2.915  3.028  3.2982   3.2302 3.1269 3.3286 3.1801 3.1213 3.0316 3.3631 3.2949 3.0142 2.966   2.8976 3.1379 3.0366 2.807  3.086  3.1278 3.1814 2.6503 2.2431 3.2339   1.3132 3.3539 3.2809 3.4068 3.3237 3.2406 3.0751 3.3477 2.8935 1.5934   3.0646 3.1106 3.3401 3.0777 3.2359 3.3696 3.2527 2.5299 4.4702 3.5047   3.3845 3.3865 4.5092 3.2638]]
675                   2.68407         1.37577         0.92312         0.05954          0.06064          0.2068          1.28827          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9681 3.0187 2.9657 3.0904 2.7687 2.8402 3.0009 3.1827 2.2766 3.0901   3.1344 3.1896 3.0305 4.6706 3.6268 2.961  3.7434 3.2062 2.8956 5.063   2.8814 2.9929 4.9874 3.1582 3.113  3.1883 3.1852 3.2018 2.3411 3.1051   3.4688 3.4194 3.4778 2.5573 3.3863 3.4017 3.2419 1.7629 3.2583 3.1283   3.2635 3.2672 2.6735 3.1778 2.4981 3.1462 2.3561 2.5771 4.8226 3.2112   3.5214 3.4157 3.2328 3.2209]]
676                   2.54162         1.28285         0.88605         0.10945          0.10995          0.19365          1.14773          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.5113 3.0127 3.     3.11   2.8794 2.9294 3.0512 3.2594 2.1118 3.1373   3.1525 3.0893 3.0092 3.3073 3.1554 2.979  3.5237 3.1894 5.1932 4.8841   3.0102 3.137  2.9098 3.0506 3.2079 3.1693 3.2372 3.1082 3.1332 2.5629   3.3473 3.3625 1.3951 3.3684 3.1047 3.3147 3.0274 3.2587 2.9792 1.4906   2.971  1.5383 3.4083 3.3404 2.4868 2.6703 3.1568 3.3457 3.0912 3.3898   3.3545 3.2041 3.3582 3.3159]]
677                   2.72212         1.37987         0.9382         0.0462          0.0462          0.20909          1.2004          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.9232 3.0635 3.0159 2.8496 2.9878 2.9104 3.155  3.1512 3.108  2.1587   3.1838 3.1488 3.0117 3.0663 3.5181 3.1658 3.317  3.7727 2.9787 5.3601   2.8468 2.9467 2.9106 3.1032 3.0978 3.2811 3.1547 3.2297 2.7307 2.4394   3.3944 3.3591 3.5358 3.3337 3.3699 3.3537 3.0336 2.974  1.2667 1.6703   3.1547 1.6316 3.4359 3.2583 3.2124 3.2401 3.369  3.3076 4.783  3.3235   3.3992 3.5323 3.3778 3.3929]]
678                   3.0213         1.46823         0.98129         -0.05863          -0.05839          0.22575          1.56385          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.8286 3.8824 3.124  3.254  3.0405 2.7262 3.0285 2.8139 3.0965 3.1328   3.0264 3.2453 3.1436 3.3025 2.9632 3.0121 3.0442 3.1218 2.8071 2.9865   2.8348 2.9385 2.7837 2.9643 2.9565 3.139  3.0827 3.1141 3.0262 3.0955   3.3254 3.3923 3.2788 3.3128 3.2556 3.4601 3.0734 3.0614 2.9225 3.1989   3.1562 2.9075 3.3832 3.2668 2.8118 3.2569 3.1724 3.1091 3.5092 3.3179   4.2293 3.1519 3.3465 3.3239]]
679                   3.1327         1.51239         0.98496         -0.09766          -0.09763          0.23008          1.50082          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9836 3.8032 3.0327 2.9748 3.7646 2.9821 2.9585 3.2385 3.1423 2.9795   3.0576 3.0286 3.148  3.1703 3.0861 2.6199 2.994  3.1837 2.7518 2.9746   2.9116 2.8434 2.8905 2.8417 3.0632 3.1738 3.1016 3.1194 3.0882 3.1213   2.771  3.3203 3.3505 3.2481 3.2718 3.3937 3.2516 3.1292 2.904  2.9659   3.0509 3.2528 3.2878 3.2854 2.6787 3.2834 3.1854 3.2657 3.1662 3.6015   3.3238 3.3658 3.1949 3.2804]]
680                   2.79944         1.43912         0.92764         0.01911          0.01984          0.20833          1.4896          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.6994 3.1229 2.8749 2.7535 2.706  2.974  3.1133 3.2315 2.9812 3.0675   3.242  3.2387 3.1705 3.1868 3.0691 3.0543 3.2366 3.1244 3.0765 2.9245   2.9419 2.9937 2.9136 2.8243 3.1344 3.1552 3.0953 3.1256 3.1296 3.2771   3.3781 2.8399 3.2736 3.4492 2.0158 2.5656 3.2161 3.0662 3.2456 3.025   3.0511 3.1497 3.3614 2.6979 3.0611 2.7399 3.1871 3.1679 3.703  3.3185   3.2665 3.2617 3.2378 4.1648]]
681                   2.90007         1.45586         0.96679         -0.01615          -0.01608          0.21757          1.52943          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9951 4.0676 3.5956 2.9805 4.336  3.2269 2.9794 3.0554 3.2405 3.0615   3.0985 2.9394 3.1273 2.9496 3.071  3.0008 3.0904 3.065  2.9767 4.1999   2.9573 2.8245 3.0114 2.9371 3.0292 3.1181 3.257  3.1076 3.1143 3.0443   2.0256 3.2908 3.2497 3.4147 3.2874 3.2481 3.1535 3.276  1.3791 2.9971   3.0583 3.1771 2.9899 3.1851 3.2463 3.2344 2.4725 3.2336 3.7272 3.4805   3.342  3.7139 3.1753 3.254 ]]
682                   0.55372         0.56911         0.33202         0.80598          0.80598          0.04962          0.46418          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2964 3.5941 3.3536 3.3323 3.4925 3.3424 1.8328 2.2285 1.9737 1.9964   2.0439 2.163  4.5522 4.9481 4.538  4.2952 4.4505 4.5449 5.376  5.8049   5.6052 5.5361 5.5968 5.5833 2.6129 3.0041 2.691  2.7978 2.5316 2.7366   0.8096 1.0969 0.7862 0.9873 0.8151 0.9108 1.5435 1.4047 1.2101 1.4591   1.3986 1.34   2.647  2.3302 2.4098 2.5366 2.3307 2.4082 4.9867 5.1996   5.2099 5.2693 5.2005 5.1441]]
683                   0.55918         0.57077         0.33648         0.80407          0.80408          0.05058          0.46708          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2542 3.6008 3.3453 3.335  3.552  3.3348 1.8787 2.2611 2.0011 1.9986   2.0412 2.1237 4.5504 4.934  4.5464 4.2672 4.5377 4.5506 5.5228 5.8055   5.5986 5.5181 5.5893 5.5968 2.6398 3.0137 2.6617 2.8011 2.5009 2.762   0.7854 1.1429 0.8202 0.9864 0.7935 0.9238 1.5368 1.401  1.1891 1.4664   1.4169 1.3407 2.6982 2.3074 2.3958 2.5617 2.3395 2.4069 5.0078 5.2023   5.2103 5.2632 5.196  5.1316]]
684                   0.55961         0.57218         0.33072         0.80392          0.80392          0.05016          0.46835          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2498 3.5926 3.3235 3.3468 3.4742 3.2963 1.8691 2.3622 1.9904 1.9766   2.0345 2.1189 4.5304 4.938  4.5298 4.271  4.4733 4.5417 5.5375 5.7784   5.5979 5.5184 5.5806 5.5924 2.5106 3.0208 2.6707 2.8262 2.5506 2.7504   0.7924 0.9902 0.7986 0.9902 0.7842 0.928  1.5335 1.4035 1.1777 1.4839   1.4145 1.3302 2.667  2.332  2.41   2.5166 2.3249 2.437  5.011  5.2151   5.2357 5.2684 5.198  5.1545]]
685                   0.54585         0.56118         0.32517         0.80874          0.80874          0.04879          0.46245          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2703 3.5924 3.3349 3.331  3.4739 3.339  1.8923 2.2878 2.008  2.1698   2.0291 2.1335 4.5369 4.9035 4.5426 4.2667 4.5401 4.5461 5.5301 5.7983   5.5733 5.5375 5.591  5.6031 2.6167 3.0175 2.6729 2.775  2.5397 2.729   0.7811 0.9695 0.8203 1.0077 0.7967 0.917  1.5405 1.398  1.1989 1.4624   1.4125 1.3089 2.6611 2.3328 2.3954 2.5253 2.3199 2.3973 4.991  5.2138   5.2062 5.2692 5.2036 5.1057]]
686                   0.59943         0.58895         0.37661         0.78997          0.79023          0.05631          0.41185          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.363  3.6471 3.3137 3.3417 3.6514 3.6885 2.1712 2.7961 2.0725 2.1458   2.2726 2.2445 4.2615 4.8936 4.2586 4.1145 4.4365 4.5035 5.5172 5.7438   5.6344 5.5203 5.5209 5.5989 2.5524 2.897  2.6143 2.7462 2.4989 2.4949   0.9225 1.4511 0.905  1.3054 0.9696 0.9529 1.5186 1.3952 1.1995 1.5094   1.4326 1.3285 2.6766 2.4306 2.4358 2.648  2.3307 2.4871 4.9409 4.8941   5.1249 5.2405 5.1326 5.0529]]
687                   0.57685         0.58514         0.35751         0.79788          0.79798          0.05183          0.45505          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2084 3.6244 3.3621 3.3899 3.4723 3.3688 2.1187 2.3605 2.1615 2.0905   2.1793 2.1649 4.1428 4.8168 4.3232 3.8138 4.3432 4.423  5.5441 5.5963   5.6036 5.426  5.5985 5.4304 2.5777 2.8124 2.5458 2.706  2.4564 2.4205   0.9207 1.2956 1.0842 1.1446 1.0678 1.3296 1.5739 1.4106 1.2446 1.4855   1.4201 1.3451 2.6889 2.3536 2.4385 2.5557 2.3697 2.3984 4.9327 4.8996   5.1642 5.1897 5.0251 5.0149]]
688                   0.58272         0.59946         0.35462         0.79582          0.79587          0.05163          0.48155          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2449 3.7218 3.34   3.3194 3.5361 3.3013 1.9394 2.3508 2.0442 2.2164   2.4365 2.5228 4.4002 4.819  4.3993 4.0107 4.357  4.2072 5.5181 5.7969   5.5881 5.5188 5.5941 5.492  2.638  2.8128 2.5158 2.9833 2.5804 2.5527   0.9204 1.1276 0.9489 1.1217 0.9809 1.2207 1.5425 1.4098 1.2109 1.4849   1.4165 1.3668 2.676  2.3876 2.4157 2.538  2.3869 2.4688 4.8951 5.1525   5.1727 5.2319 5.0836 5.0276]]
689                   0.58528         0.59241         0.37741         0.79493          0.79496          0.056          0.43062          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.2738 3.6979 3.2946 3.41   3.3683 3.3259 2.0115 2.6169 2.1057 2.1613   2.6577 2.1623 4.427  4.698  4.3059 4.1129 4.4143 4.3997 5.4353 5.6198   5.5721 5.4643 5.5951 5.5709 2.4187 2.923  2.5861 2.6869 2.5152 2.6006   0.8585 1.5519 0.9589 1.1275 0.9212 1.114  1.5447 1.4293 1.2128 1.4717   1.5931 1.35   2.6973 2.4033 2.4584 2.5741 2.3764 2.5007 4.8908 5.075   4.9261 5.1743 5.1304 5.0659]]
690                   3.67633         1.56537         0.83237         -0.28814          -0.13542          0.24904          1.46232          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.3982 1.9728 2.3125 2.1962 2.3337 1.9802 2.2636 2.5921 2.2546 2.4976   2.3777 2.4843 2.5294 2.5867 2.5358 2.5942 2.6534 2.1742 2.5522 2.1723   2.335  2.3704 2.2566 1.7857 2.6316 2.6775 2.4178 2.5808 2.5926 2.6422   2.4121 2.7453 2.7875 2.7478 2.9026 2.7799 2.6691 2.504  2.2259 2.5423   2.4503 2.5362 2.6387 1.9518 2.8286 2.6855 2.8368 2.5859 3.1463 2.8003   3.1201 2.7857 2.0059 1.2426]]
691                   3.5288         1.55203         0.82478         -0.23645          -0.08182          0.23338          1.50143          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.2679 2.009  2.0789 2.3422 2.1966 2.0987 2.3221 2.507  2.3775 1.7473   2.5293 2.0377 2.7905 2.6075 2.0889 2.5779 2.3341 2.6357 2.4029 2.4537   2.272  2.3132 2.318  2.3884 1.8624 2.6498 2.4903 2.6768 2.3105 2.5748   2.9583 2.9916 2.8439 2.6622 2.8292 2.485  2.4013 2.4425 2.4785 2.4255   2.6487 2.1746 2.5003 2.8    2.8866 2.7952 2.6584 2.5818 2.5549 2.5889   2.2525 2.6355 2.8701 2.7332]]
692                   3.65602         1.55914         0.85642         -0.28102          -0.14849          0.2464          1.52533          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.2393 2.0589 2.2731 1.8911 2.3965 1.7915 2.5134 2.5069 2.2507 2.4888   2.4626 2.285  2.652  2.7292 2.4874 2.5641 2.1273 2.5547 2.1387 2.4563   2.2175 1.6125 2.3495 2.3505 2.0384 2.6597 2.5416 2.7386 2.6337 2.5781   2.6296 3.0015 2.8771 2.999  2.9502 2.7    2.7689 2.3974 2.5668 2.66   2.1517 2.3802 2.632  2.7888 2.7702 2.9023 2.765  2.9004 2.5588 2.888   2.8397 2.5299 2.973  2.9047]]
693                   3.46221         1.50001         0.76293         -0.21311          -0.07515          0.22469          1.46172          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.1869 2.2548 2.0078 2.2321 2.3943 2.1778 2.3786 2.4176 2.4053 2.3682   2.2133 2.2676 2.4157 2.8671 2.4856 2.7736 2.669  2.5546 2.1486 2.2776   2.4402 2.1664 2.3381 2.2649 2.5894 2.6379 2.6103 2.2727 2.455  2.6497   2.8425 2.732  3.0444 1.8812 3.0295 2.6346 2.5651 2.4851 2.5861 2.2415   2.4755 2.5729 2.762  3.0344 2.8049 2.6891 2.8248 2.5992 2.5179 2.6586   1.8387 2.998  2.9599 2.7497]]
694                   3.03346         1.50243         1.02192         -0.06289          -0.05943          0.23095          1.60463          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2834 2.9276 2.7552 3.0584 2.8283 2.7685 2.9219 3.2251 3.1036 3.0272   3.1578 3.4963 3.3736 3.1635 3.0492 3.3949 3.0407 3.289  3.0889 2.9449   3.0217 2.9467 3.02   2.9764 3.7169 3.1964 3.1048 3.122  3.3532 3.377   3.4255 3.4289 3.3468 3.4402 3.4676 3.4692 3.3243 3.1603 2.9386 3.2516   3.0245 3.1667 3.3995 3.2512 3.2776 3.6731 3.4706 3.4468 3.3238 3.6128   3.4082 3.5851 3.3657 3.7061]]
695                   2.9409         1.4699         1.02434         -0.03045          -0.02661          0.22648          1.39282          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.88   2.8552 2.9559 2.7663 2.9027 3.1    2.9485 3.1478 2.9636 3.2034   3.1542 2.9795 3.2796 3.1182 3.2681 2.8913 3.3759 3.5348 3.3835 2.9825   2.945  3.0857 3.1058 3.0961 3.1574 3.1491 3.1287 3.3087 3.2551 3.0314   3.4747 3.4943 3.4184 3.8435 3.2501 3.3505 3.0872 3.1593 3.1576 3.0389   3.0917 3.7606 3.2351 3.371  3.8067 3.2691 3.063  3.6037 3.9466 3.5122   3.4422 3.2215 4.028  3.4093]]
696                   3.06587         1.49468         1.00255         -0.07424          -0.0735          0.2305          1.35762          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.7298 2.8727 2.7251 3.1831 2.7642 2.7423 3.1446 3.1219 2.769  3.0078   2.9524 3.1117 3.5926 3.1029 3.1803 3.1292 3.1755 3.7073 2.9554 2.8805   2.8801 2.7289 2.8145 3.1761 3.0733 3.5392 3.0753 3.0954 3.1953 3.1814   3.3206 3.3151 3.7476 3.3804 3.4371 3.4421 3.2224 3.2213 3.3867 3.0903   3.399  2.9043 3.1318 3.7852 3.2138 3.2241 3.2548 3.1461 3.2953 3.3638   3.2808 3.4522 3.9266 3.2656]]
697                   3.10499         1.50889         1.03296         -0.08795          -0.08328          0.2359          1.42383          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.7116 2.7677 3.0919 2.8755 2.9555 2.7459 3.0739 2.9621 2.8697 3.2385   3.3532 3.0179 3.4861 3.3051 3.8707 3.0032 3.2324 3.1038 2.9929 2.9391   2.8628 3.2739 2.7678 2.8913 3.4646 3.7645 3.103  3.2415 3.0837 3.3599   3.6268 3.6067 3.279  3.4023 3.8294 3.1684 3.3621 3.4482 2.9466 3.2279   3.1143 3.1633 3.7316 3.3256 3.3757 3.1392 3.3259 3.5955 3.7528 3.5105   3.5866 3.4428 3.4324 3.7637]]
698                   3.25124         1.50204         0.86029         -0.13919          -0.06891          0.22351          1.56698          MLPRegressor(hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.2948 2.0697 2.2079 2.2841 2.4657 2.274  2.5939 2.5532 2.5799 2.6136   2.6429 2.5358 2.8439 2.5411 1.8776 2.5453 2.8199 2.4548 2.3964 2.5063   2.4421 2.4794 2.5442 2.4941 2.7575 2.7755 2.802  2.6901 2.7886 2.6498   2.9924 2.9618 2.9141 2.9122 2.9999 2.849  2.5281 2.6134 2.7564 2.7414   2.6001 2.9293 3.0118 2.7277 2.9687 2.6465 2.7585 2.9797 3.1127 3.135   3.1458 3.006  3.1477 3.1858]]
699                   3.3881         1.52367         0.88058         -0.18715          -0.12386          0.23311          1.55137          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.2799 2.2908 2.1955 2.1136 2.3414 2.3577 2.6953 2.5738 2.5142 2.5424   2.5801 2.541  2.7318 2.9628 2.6321 2.3761 2.5515 2.5727 2.3398 2.6039   2.4555 2.3922 2.3387 2.417  2.7397 2.883  2.7565 2.7433 2.7681 2.6677   2.815  2.8858 3.019  2.8863 2.8217 3.1327 3.0856 2.6599 2.814  2.6936   2.7695 2.551  3.3269 3.0305 2.8911 3.1608 2.8498 2.7788 3.1728 3.0421   3.1834 2.7345 3.1116 3.0085]]
700                   3.31447         1.52715         0.87138         -0.16135          -0.09097          0.22601          1.47213          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5006 2.7024 2.3726 2.3282 2.278  2.4738 2.6042 2.5792 2.5117 2.6982   2.5431 2.7215 2.542  2.5723 2.9601 2.6333 2.7047 2.8486 2.5461 2.4361   2.3963 2.386  2.5705 2.5065 2.5779 2.7782 2.6767 2.7676 2.758  2.7342   3.1912 2.7295 2.9957 3.1087 3.0568 2.8822 2.6577 2.7175 2.6629 2.7959   2.6964 2.6046 2.7406 2.1676 2.8907 2.6754 2.8792 3.024  2.6295 2.9903   2.8325 2.5193 2.8872 3.0886]]
701                   3.41287         1.53653         0.89606         -0.19583          -0.13124          0.23448          1.55268          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.2798 2.6269 2.3856 2.4719 2.4891 2.3595 2.4678 2.5729 2.6654 2.8108   2.4427 2.4425 2.7663 2.9631 2.3564 2.5979 2.8454 2.4156 2.4645 2.4471   2.4341 2.5729 2.3269 2.5105 2.6682 2.7369 2.7961 2.7716 2.7587 2.6674   3.1008 3.126  2.954  3.0613 2.9533 3.0002 2.9285 2.8684 2.5735 2.5368   2.7331 2.6221 2.9667 2.7928 2.9687 3.0617 2.9363 2.7385 3.026  2.7256   2.9571 3.0981 2.3188 2.9854]]
702                   3.16228         1.55447         1.00462         -0.10802          -0.05934          0.23429          1.31382          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.2262 3.2075 3.0112 3.295  2.8724 3.1648 3.4545 3.4925 3.4037 3.4798   3.4803 3.6686 3.6819 3.6959 3.7054 3.2797 3.5344 3.4745 3.4832 3.5198   3.2644 3.2204 3.0603 3.3116 3.6479 3.6857 3.6084 3.6721 3.6638 3.7391   3.9088 3.8168 3.8381 1.0242 3.9028 3.7046 3.6256 3.4752 3.4547 3.5748   3.6476 3.3917 3.8794 3.8829 3.9722 3.6533 3.7917 3.5875 3.5843 3.569   3.8086 3.8091 3.6779 3.8751]]
703                   3.21355         1.52529         1.04414         -0.12599          -0.11091          0.24459          1.35145          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.5204 2.9694 3.53   3.343  3.7069 3.0868 3.6104 3.4524 3.0484 4.116   3.08   3.3881 3.3421 2.4356 4.5352 3.3847 3.0923 2.8631 3.1998 2.6066   3.6837 3.2735 3.0899 3.223  2.6864 3.7496 3.0557 3.5682 3.2274 3.2322   3.951  3.6364 1.0703 3.2676 3.4171 3.0439 3.4385 3.4636 3.6178 3.4602   4.4418 3.4774 3.2335 3.7369 3.3319 2.5701 3.9037 3.8139 3.6459 3.8661   1.6095 3.6374 3.8426 3.955 ]]
704                   0.89737         0.71572         0.41674         0.68557          0.68656          0.07695          0.5927          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[2.9942 3.2919 3.1623 2.9697 2.7809 3.0898 3.133  2.3592 2.7761 2.6366   2.8615 2.8727 4.4272 5.0395 3.9605 3.7835 3.6501 3.5731 5.5368 6.4066   5.2487 5.3238 5.2041 5.354  2.6763 2.9499 3.1858 3.1493 2.5774 2.7319   0.7225 1.0472 1.2014 1.1123 0.4859 0.5872 3.1027 1.4138 0.9122 1.3007   1.4371 1.2775 3.7149 2.8963 2.3488 2.7204 2.9666 2.7513 4.9758 5.1795   5.0552 5.2752 5.2553 4.7574]]
705                   0.52828         0.57607         0.33806         0.8149          0.81494          0.04745          0.44615          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.3438 3.4282 3.2769 3.2092 3.2608 3.3729 2.0666 2.2843 2.1678 2.0278   2.2447 2.3872 4.4845 4.7315 4.5028 4.2473 4.4978 4.46   5.4635 5.9757   5.5019 5.3896 5.4173 5.4052 2.5067 2.868  2.525  2.6318 2.747  2.9316   0.9422 1.0473 1.0065 1.1136 0.8985 1.0643 1.5861 1.5041 1.2758 1.5445   1.3216 1.2036 2.5802 2.3531 2.5534 2.6366 2.2426 2.6016 5.0576 5.3517   5.021  5.3675 5.2775 4.9938]]
706                   3.35457         1.57142         1.17256         -0.1754          -0.10361          0.26235          1.21712          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.3818 3.0209 3.4091 3.244  2.9543 3.1619 3.5155 3.576  3.5303 3.4758   3.399  3.6042 3.6433 3.498  3.7619 3.6386 3.626  3.6162 3.1101 3.485   3.3943 3.393  3.2515 3.1578 3.6243 3.6875 3.632  3.5706 3.7017 3.6331   4.0572 3.8399 3.7719 4.1487 3.8046 3.9791 3.5669 3.6037 3.6723 3.5613   3.5338 3.4689 3.6167 3.6953 3.7102 3.7866 3.6092 3.7542 3.4799 3.8348   3.8895 3.9771 3.9263 3.7899]]
707                   3.18191         1.47959         1.05881         -0.1149          -0.09394          0.24757          1.45567          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.6314 3.9484 3.67   3.7559 3.0738 3.3183 3.3402 4.1475 3.3112 3.3799   2.7897 3.4116 4.2015 3.1149 3.0537 3.4057 3.8137 2.6047 5.58   3.4506   2.843  3.2132 5.7568 2.7202 2.5289 3.7339 3.4371 3.8169 3.8227 3.4961   0.6245 3.4245 3.6568 3.6895 2.7695 3.8481 3.4695 3.5005 3.9315 3.3842   2.9505 3.1482 3.3382 3.5983 3.6383 3.2013 2.6094 3.3305 3.0084 2.3129   3.9091 3.1915 2.1851 3.4489]]
708                   1.02348         0.7806         0.37887         0.64139          0.64539          0.07174          0.61763          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0176 3.8524 2.7229 3.3024 3.0257 3.3111 2.0194 2.3391 2.8807 2.3745   2.773  3.001  4.0804 4.5966 3.6436 3.9424 3.5251 3.9419 4.9735 5.6552   5.4323 2.9643 5.6694 5.8415 1.979  3.3409 1.894  2.733  2.8712 2.8933   1.0617 0.4638 0.5436 1.2752 0.6757 1.0852 1.4368 1.1452 2.9712 1.5125   1.4361 1.5574 3.2122 2.4669 2.4403 2.5974 2.7106 2.2691 4.5887 2.8574   5.1515 5.1826 5.2224 5.0995]]
709                   0.56405         0.57148         0.33869         0.80236          0.80244          0.05106          0.50007          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.321  3.4918 3.1109 3.3793 3.5597 3.3952 2.1033 2.2759 2.1584 2.1809   2.0391 2.3838 4.5329 4.9029 4.5118 4.2178 4.5195 4.4787 5.3763 5.7158   5.7623 5.3412 5.4514 5.7373 2.4298 3.1548 2.8197 2.9721 2.4905 2.7005   0.6796 1.0452 0.8503 1.0963 0.7027 1.0328 1.3935 1.4609 1.2507 1.5524   1.4085 1.2321 2.6171 2.478  2.575  2.4726 2.4829 2.5195 4.8459 5.2845   5.0287 5.1141 5.2939 5.2015]]
710                   0.82319         0.63936         0.35763         0.71156          0.71172          0.06389          0.48017          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3509 3.5834 3.3688 3.3663 3.5198 3.3556 1.6909 2.1545 1.872  1.8467   1.944  2.1625 4.6581 4.9584 4.5135 4.3008 4.5281 4.6744 5.5263 5.8008   5.58   5.5331 5.6354 5.6183 2.5529 2.9672 2.6607 2.7759 2.5037 2.6862   0.8155 0.9839 0.8105 1.0518 0.7982 0.9943 1.4221 3.1501 1.1952 1.3985   1.4116 1.3976 2.6667 2.3237 2.4243 2.492  2.3286 2.362  2.4731 5.169   5.1931 5.2885 5.182  5.1598]]
711                   4.07416         1.72166         0.92965         -0.42754          -0.36906          0.29403          1.61728          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.095  3.9785 1.3278 3.4313 3.2027 2.1912 3.5759 1.809  3.7875 3.1635   3.5894 4.054  2.1018 2.9579 1.9846 3.3913 1.9574 2.7194 2.322  2.1808   4.2269 4.1809 2.1132 3.0547 2.5477 4.1519 3.721  2.9689 1.0191 2.438   2.4793 1.6442 2.2992 3.6123 3.2396 2.856  4.1344 2.2193 2.6535 1.1174   3.2534 2.7748 3.2151 1.81   2.0219 2.9027 3.093  1.3564 3.7943 0.7984   1.8988 2.6263 2.0274 2.2017]]
712                   1.71727         1.00011         0.679         0.39829          0.39837          0.13409          0.71165          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5241 3.6085 3.5065 3.1979 3.3829 3.0929 3.203  3.6722 3.2995 2.9897   2.825  3.7756 4.2608 4.0369 3.1584 3.5701 2.7517 3.1685 4.9532 5.2888   5.524  5.4362 3.088  5.4135 3.7222 3.2596 2.593  3.5655 3.6906 2.679   1.0196 3.6966 0.7035 2.2852 0.9578 1.565  1.6969 1.2729 1.5664 1.0488   1.6467 2.828  2.8785 4.0698 3.2666 1.7108 2.0157 2.7686 2.6231 2.7591   3.4506 5.1786 3.4055 5.4679]]
713                   1.91708         1.05278         0.59413         0.32828          0.33227          0.13872          0.84802          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.2778 3.3632 3.5216 3.7375 2.6059 2.6309 2.7098 2.71   1.7372 3.8274   2.7146 2.7594 3.7052 4.9565 2.497  3.9855 2.3841 4.5847 5.8281 2.4193   2.3122 5.6117 5.9109 2.3748 2.4673 2.3026 3.83   2.1779 2.5522 2.2875   2.6085 2.5555 2.5748 1.447  3.8034 0.7579 1.3898 1.3884 0.9894 2.37   2.4177 1.3574 3.1372 2.4532 2.4534 2.4501 2.5756 2.243  2.2986 5.3318   5.3312 4.9311 5.2709 4.6528]]
714                   0.78614         0.66916         0.3766         0.72455          0.72481          0.06471          0.4683          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2491 3.6703 3.3291 3.322  3.505  3.4127 1.7213 2.1574 1.9353 1.8956   2.0757 1.9852 4.6516 5.0237 4.5883 4.231  4.5076 4.5928 5.557  5.8427   5.5841 5.5406 5.5973 5.6062 2.6165 3.0153 2.6708 2.7815 2.5077 2.7405   0.8155 0.971  0.7642 1.0021 0.7928 0.9558 1.5543 1.4705 1.1806 1.4555   3.3239 3.239  2.6566 2.302  2.3545 2.4772 2.3427 2.3673 4.9459 5.2138   5.2099 5.2616 5.2269 3.0318]]
715                   3.47698         1.47936         0.95559         -0.21829          -0.21168          0.24643          1.31678          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.8691 4.0491 2.714  3.5678 3.4662 3.7007 3.0542 3.4043 3.7457 3.2005   3.0601 3.878  2.3662 2.3344 2.1348 3.409  2.406  2.9475 3.4902 2.4523   2.9905 1.8617 3.7179 3.6515 3.7828 3.5422 1.9208 2.4009 2.3284 1.9767   1.7737 3.818  2.3322 2.5752 2.1005 4.9049 2.4153 1.2776 2.5229 3.01   4.0934 2.4173 3.8373 3.407  2.9871 2.4208 2.5948 2.6458 2.3516 3.7047   3.8008 4.3644 3.2751 1.8614]]
716                   1.64555         1.02046         0.73414         0.42342          0.43043          0.14511          0.86342          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.6745 3.526  2.9801 2.5403 2.5644 2.9866 2.7417 3.3434 3.5313 2.8518   2.8211 2.5724 3.5666 3.4598 4.0517 3.1732 3.1512 4.4209 5.5631 4.9451   3.2517 5.5072 5.1709 5.7866 2.796  4.1832 3.2232 3.4417 3.301  1.6894   2.8964 3.4927 3.6206 1.7919 3.5497 1.765  1.5947 1.1859 1.3416 3.5315   2.3417 1.4024 2.4018 3.3644 1.869  2.7325 3.4871 1.9963 4.9083 3.5556   3.2994 4.7587 5.0246 5.2448]]
717                   1.65604         0.95449         0.51729         0.41975          0.43001          0.11948          0.694          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3761 3.845  2.5891 2.989  2.6079 3.5609 3.7611 2.4159 2.5954 1.5827   2.4751 2.377  4.5265 4.9249 2.4155 2.435  4.1148 4.0042 6.0084 5.7071   2.4265 5.3568 5.437  2.3205 2.9966 2.5782 2.4095 2.6049 3.3518 2.6464   2.6101 0.8613 0.6645 1.7701 1.2246 2.6671 1.6252 2.4204 1.3288 2.244   2.2899 0.8513 2.3771 2.1376 2.3504 2.4436 2.4178 2.564  4.8542 2.2956   5.2144 2.1925 4.9887 5.2567]]
718                   3.402         1.61267         1.17318         -0.19202          -0.12245          0.26466          1.30367          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.9848 3.1409 3.2137 3.0453 3.0137 3.3537 3.5104 3.6343 3.5187 3.577   3.4781 3.434  3.6925 3.6142 3.4301 3.4561 3.5081 3.4101 3.4023 3.4004   3.2805 3.3618 3.3535 3.1941 3.6287 3.6858 3.5662 3.6744 3.7342 3.7121   3.8875 3.7746 3.811  3.8254 3.8703 4.0583 3.6658 3.5218 3.5722 3.6783   3.9133 3.479  3.6024 3.6788 3.8692 3.9198 3.751  3.7716 3.9405 3.6357   3.8844 3.7537 3.7749 3.7459]]
719                   3.12112         1.46767         1.05204         -0.0936          -0.05448          0.24451          1.30722          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[4.0054 3.5008 3.3689 3.4731 2.5471 3.5198 3.8027 3.4311 3.5237 3.8162   3.9456 3.8373 3.7769 3.8842 1.7995 4.055  3.7962 3.9284 3.3166 5.6304   2.4056 3.461  3.7509 3.5319 3.4088 3.2068 3.7441 3.1076 3.6777 3.3278   3.7663 3.3786 3.689  3.5417 3.9362 4.0849 3.1957 1.9205 2.6743 3.6244   3.1571 2.9226 3.5354 2.5764 2.9893 3.46   3.7122 2.8765 3.8114 3.6398   3.6415 3.4496 2.1674 5.0438]]
720                   1.0222         0.76245         0.44861         0.64183          0.64341          0.08363          0.5544          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.7523 3.5878 2.7979 3.2967 3.4676 3.2335 1.989  2.9952 2.0977 2.8969   2.8694 3.0961 4.1313 4.55   4.03   3.5113 4.4213 3.7816 5.38   5.9283   5.3899 2.978  5.8236 5.596  3.221  3.0147 2.9317 2.8306 2.9094 3.2119   0.8267 1.657  0.8311 1.1072 0.5268 0.632  1.3625 1.4093 1.2941 3.0612   1.3637 1.3683 3.3097 3.125  2.3961 2.8526 3.1918 2.9378 5.0994 5.7951   4.8755 5.1693 5.1169 4.927 ]]
721                   0.56424         0.58634         0.35124         0.8023          0.80342          0.05235          0.4365          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1633 3.7276 3.2422 3.4013 3.4923 3.3267 2.033  2.2465 2.2162 2.165   2.3747 2.3744 4.4398 4.6536 4.519  4.2226 4.5119 4.3947 5.3986 5.9453   5.7709 5.6628 5.433  5.7606 2.7818 3.1727 2.9128 2.7093 2.7325 2.9236   0.6498 1.0663 0.8718 1.1545 0.8848 1.0321 1.5424 1.5045 1.1715 1.3645   1.4547 1.179  2.8035 2.5233 2.5352 2.7422 2.325  2.367  5.093  5.3396   5.2813 5.3373 5.2496 5.2042]]
722                   3.25657         1.5711         1.14603         -0.14106          -0.08668          0.25486          1.32657          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9965 3.2257 2.9512 3.3271 3.1069 3.1145 3.1424 3.3969 3.5045 3.4153   3.3296 3.2529 3.3224 3.4462 3.6127 3.7063 3.2909 3.4835 3.2279 3.3805   3.1232 3.2259 3.2383 3.3193 3.6448 3.0846 3.5959 3.6958 3.6006 3.6599   3.9081 3.8815 3.8032 3.898  3.7776 3.8698 3.4083 3.4762 3.3459 3.6156   3.6445 3.605  3.6923 3.7466 3.8306 3.8675 3.6688 3.8486 3.815  3.7303   3.9193 3.8094 4.012  4.0098]]
723                   2.97463         1.4388         0.95273         -0.04227          -0.04223          0.2254          1.24667          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.9728 2.4087 3.3975 3.283  3.7041 4.126  1.4361 2.9535 3.5447 1.7119   3.6366 2.7581 1.7696 3.6816 2.0754 3.6488 3.9802 3.4271 5.2788 3.3743   3.4186 2.3221 2.5421 3.5109 3.2336 3.6025 2.8515 3.5898 3.4311 3.7379   2.8701 3.1396 0.8896 3.7106 2.0838 2.5518 3.4744 3.7144 3.2014 3.198   2.5838 3.5084 2.383  3.0773 3.8992 3.6101 2.9688 3.3935 3.4316 3.3258   3.7579 3.4238 2.3622 2.9562]]
724                   0.81447         0.72335         0.39078         0.71462          0.71711          0.06699          0.53235          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.8734 4.1389 2.7442 3.2655 3.2561 2.971  2.3079 2.3516 2.6946 2.7083   2.9129 2.7113 4.2452 4.2755 3.8852 3.7393 4.2524 4.0423 5.6959 5.7926   5.5654 5.0516 6.0055 5.6327 2.6037 3.2861 2.6708 2.8595 2.7204 3.1472   0.9481 1.0545 0.967  0.8491 1.1975 0.8172 1.266  3.04   0.9382 1.46   3.0022 1.2971 3.2657 2.7138 2.8807 2.3897 2.4491 2.4755 4.8664 5.3024   5.2762 5.2052 5.189  4.6239]]
725                   0.5339         0.5487         0.32696         0.81293          0.81388          0.04856          0.35135          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3239 3.6584 3.4008 3.4275 3.2879 3.4029 2.0456 2.2339 2.2435 2.4278   2.4863 2.3177 4.4845 4.9225 4.5628 4.1059 4.4012 4.5033 5.7109 5.9503   5.7556 5.6709 5.4888 5.749  2.7545 2.79   2.8706 3.0474 2.6646 2.8285   0.6237 0.9625 0.8752 1.1396 0.8919 1.0456 1.4401 1.441  1.0857 1.3299   1.4107 1.3828 2.5823 2.2877 2.3319 2.671  2.5015 2.5753 5.0807 5.204   5.215  5.0346 5.2877 5.2242]]
726                   0.72482         0.6191         0.46665         0.74603          0.74764          0.07377          0.47198          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3041 3.6809 3.2083 3.4054 3.5193 3.4148 1.8826 2.1666 1.8563 1.8664   1.9719 2.0405 4.5583 4.917  4.695  4.4158 4.6439 4.6422 5.5499 5.8154   5.5845 5.5149 5.5993 5.5985 2.5713 2.9949 2.6377 2.7701 2.526  2.8084   0.7812 0.9561 0.7937 3.3623 0.7772 1.0227 1.5387 1.4243 1.1959 1.4601   1.4337 2.6695 2.6712 2.3463 2.4009 2.5183 2.2655 2.3907 4.9385 5.0848   5.2096 5.2899 5.1634 5.1391]]
727                   1.67205         1.06294         0.60763         0.41414          0.4142          0.12847          0.87072          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.7326 3.2755 2.7958 3.0898 3.554  2.9261 3.2012 3.5052 3.3601 3.2039   3.5937 3.4468 4.8091 4.9242 4.1968 3.2514 3.0818 3.2909 2.9982 3.162   2.9639 5.4684 5.5812 5.3033 2.0225 3.2942 3.0081 3.6417 1.6976 2.1333   1.6521 1.844  0.4688 1.6923 3.4039 1.576  1.2271 1.8265 1.156  1.778   3.1635 1.1259 1.9591 2.1445 3.1922 3.4327 2.4599 2.0942 4.7897 5.3262   3.5199 5.0098 5.108  5.1557]]
728                   2.48151         1.26307         0.71024         0.13051          0.16528          0.17932          1.10153          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.7958 3.5815 2.5209 2.4268 2.5364 2.4985 2.5755 2.0683 1.9632 2.7076   2.7994 2.6879 4.1481 2.7304 4.4732 2.2312 4.2094 2.5085 4.0458 2.3969   3.4964 2.3106 5.8759 5.2848 2.5317 3.7334 3.2132 2.5485 2.6183 2.1636   2.6832 2.6415 3.7674 1.8046 2.5194 2.7474 1.4108 2.4681 0.7971 2.3249   1.128  1.3129 3.6388 2.2242 3.625  2.4709 3.2166 2.4286 4.6904 2.164   2.3683 3.6102 2.3272 2.2724]]
729                   0.84887         0.64845         0.37051         0.70257          0.7028          0.0662          0.4589          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3334 3.6789 3.3697 3.3528 3.4159 3.4077 1.7686 3.5874 1.8585 1.8827   1.9285 2.0657 4.5474 4.991  4.5503 4.3285 4.664  4.6939 2.7791 5.8048   5.6281 5.5254 5.6089 5.5979 2.5822 3.0016 2.5837 2.8005 2.5152 2.7955   0.8387 1.0591 0.92   1.0639 0.7948 0.9264 1.5163 1.4037 1.2043 1.5557   1.4306 1.3191 2.6377 2.2231 2.3381 2.5128 2.2572 2.3214 4.9879 5.2159   5.2087 5.222  5.2171 5.105 ]]
730                   4.17846         1.66803         1.08761         -0.46408          -0.43749          0.3043          1.26612          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.8622 3.3451 2.7789 4.0089 3.1909 3.1842 2.8493 2.8472 4.4146 1.9309   1.4242 0.7585 2.4695 3.1516 2.5843 1.7909 3.6699 2.2117 2.947  2.0428   1.4462 1.6248 2.7947 3.5579 1.7252 3.2658 1.8753 1.7295 3.7813 1.7524   3.4387 3.6192 2.9745 4.3157 4.3265 3.7346 3.0357 2.2951 3.3652 3.6111   1.8372 3.8373 2.9303 2.4481 3.0504 1.864  1.7461 3.5558 1.8895 4.1299   4.2188 3.726  2.4379 4.055 ]]
731                   1.43511         0.93399         0.57179         0.49715          0.49725          0.11634          0.69198          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5978 3.4336 3.1224 3.0866 3.6885 2.9938 3.3548 2.5934 1.5777 2.6136   2.9873 3.1271 3.3278 3.368  3.2698 3.0445 4.249  3.5155 3.4319 3.2442   5.2224 5.3975 5.9396 5.8963 3.6773 3.3421 1.9414 3.0288 2.7556 2.9936   3.7244 1.5694 1.6378 1.5711 1.5212 3.6407 1.622  1.2814 0.9223 2.0727   1.4547 1.3351 3.019  2.6481 3.0785 2.3275 1.6873 2.2573 3.1916 5.0334   4.7513 5.2125 5.2421 3.8168]]
732                   2.75011         1.31911         0.76254         0.0364          0.09418          0.19324          1.11115          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.5006 2.6504 3.6828 2.6608 2.6315 3.0197 2.3012 2.6648 2.5376 2.748   2.6602 2.7552 2.4526 2.7282 4.3106 3.7413 2.5352 2.5169 2.3059 2.5675   2.3272 3.4832 5.3699 2.3508 2.1809 2.5358 2.1114 2.3174 2.4383 3.7733   2.668  2.8074 0.7872 2.8114 3.8685 2.6197 1.9537 1.4056 2.2    1.545   3.5527 2.196  2.449  2.3343 3.5917 2.3606 2.1875 2.3424 4.7978 2.2656   2.2847 2.2427 5.0855 2.1876]]
733                   3.32992         1.58898         1.15529         -0.16676          -0.08946          0.25896          1.22862          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1086 3.181  2.9682 3.2202 3.0726 3.2118 3.3834 3.5878 3.5419 3.3941   3.5503 3.4917 3.6616 3.5927 3.6757 3.3951 3.418  3.7287 3.2928 5.7924   3.2272 3.1472 3.3295 3.1061 3.6519 3.6539 3.6136 3.6982 3.5517 3.7225   3.8833 3.7001 3.8038 3.9488 3.7807 3.9826 3.5123 3.501  3.3606 3.3082   3.4602 3.7657 3.7878 3.7624 3.7171 3.7347 3.8117 3.8351 3.7588 3.8071   3.8157 3.938  3.8549 3.8955]]
734                   3.23253         1.52176         1.0478         -0.13264          -0.12199          0.2434          1.60412          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.711  3.7055 3.6913 3.1318 3.539  3.7183 2.9289 2.7952 3.9608 3.1691   3.5255 3.9682 3.6854 3.6035 4.2968 3.1278 3.0859 4.1851 2.4634 3.3656   3.3975 3.3118 3.5808 3.194  3.7562 3.1587 3.7122 3.8097 3.3223 3.2077   3.4565 3.4968 3.5122 3.5374 0.9632 3.4475 3.4573 3.3447 3.2583 3.8659   3.2993 3.4731 3.6074 3.0469 2.4344 3.6697 2.5216 2.2844 3.4885 3.8525   3.1374 2.4736 3.3627 2.6459]]
735                   1.12796         0.78247         0.4603         0.60478          0.60851          0.08984          0.50607          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2401 2.9263 3.2745 3.3099 3.436  3.0413 2.0325 2.823  2.064  3.106   2.1503 3.1603 4.0032 5.0737 3.8363 3.5401 4.4157 4.4036 5.5808 5.9083   5.6449 5.5533 5.7302 5.5723 3.3954 3.6432 2.7988 3.588  2.7164 2.7961   0.835  0.8266 0.947  1.5143 0.9202 0.7666 1.8952 1.3468 1.1776 3.0203   3.0203 1.0821 3.0331 2.7911 2.405  3.2464 2.5431 2.3266 2.7706 5.5138   5.2343 5.2505 5.1733 4.4989]]
736                   0.53349         0.55746         0.34268         0.81307          0.81352          0.05099          0.45922          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3428 3.3771 3.4011 3.0889 3.5078 3.1702 2.1445 2.2583 1.9481 1.9382   2.0471 2.4036 4.5237 4.7104 4.5789 4.2528 4.4979 4.5152 5.3953 5.6702   5.7561 5.7142 5.7938 5.7699 2.7532 3.1832 2.6009 2.6936 2.8258 2.5961   0.8992 1.0835 0.9362 1.0841 0.5896 1.0203 1.6107 1.4725 1.2534 1.4843   1.4396 1.3787 2.8501 2.1911 2.5731 2.7194 2.4649 2.64   5.1424 5.2896   5.0363 5.37   5.0469 5.219 ]]
737                   3.35977         1.58635         1.16246         -0.17722          -0.11834          0.26203          1.28893          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1513 3.1993 2.7218 3.1096 3.0374 3.2891 3.5706 3.5151 2.0003 3.5174   3.6234 3.5231 3.5334 3.6184 3.832  3.5709 3.395  3.878  3.2953 3.4913   3.1917 3.2017 3.2892 3.3365 3.6734 3.6869 3.6806 3.6419 3.5499 3.579   4.0216 3.6925 3.9678 3.97   3.8104 3.819  3.7218 3.6804 3.6003 3.7719   3.4502 3.3412 3.7867 3.737  3.6409 3.7488 3.4819 3.7902 3.6685 3.7455   3.6938 3.8426 3.8787 3.9036]]
738                   3.30414         1.5311         1.03945         -0.15773          -0.15097          0.24729          1.65353          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.103  4.1408 3.2369 3.5983 3.8873 3.4197 3.3753 3.3333 3.1919 3.1478   2.3814 3.8567 3.6371 2.9143 1.9376 4.0092 3.8304 2.9646 3.1111 2.97   3.0107 3.0585 3.3937 2.9378 3.513  3.764  3.365  3.5377 3.3754 3.2843   3.1575 3.6451 3.7517 3.4718 3.4795 2.5286 3.1168 3.7284 3.4091 3.8676   3.6363 1.165  3.1597 2.2826 3.6269 3.5907 3.0337 2.8594 2.1481 3.9387   3.3896 3.7622 3.2995 3.4964]]
739                   0.99165         0.76759         0.38918         0.65254          0.65492          0.07388          0.59963          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9232 3.5878 2.7564 2.7825 3.4342 2.7915 3.333  3.2833 2.0958 3.1297   3.2949 3.0591 4.4216 3.3457 4.3722 3.8848 3.6364 4.0835 5.3839 3.047   2.9972 5.6646 5.749  5.4567 2.5965 3.0735 2.6859 3.0287 2.8544 2.1056   3.2826 0.8743 0.8668 0.7943 0.5267 0.717  1.4688 1.1167 1.9458 1.1231   1.1549 2.2877 3.1816 2.3346 2.1772 2.5458 2.8005 2.7024 4.9549 5.1693   5.2062 4.8269 2.8574 5.1074]]
740                   0.58973         0.58712         0.34552         0.79337          0.79373          0.05162          0.43748          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3365 3.5977 3.368  3.1631 3.5419 3.4254 2.0044 2.6559 2.2233 2.0277   2.3136 2.1212 4.5263 4.7524 4.29   4.1315 4.5653 4.5104 5.3752 5.9439   5.4318 5.3662 5.475  5.745  2.7315 3.136  2.8814 2.722  2.6543 2.9368   0.8937 1.0723 0.8664 1.1036 0.898  1.0529 1.4301 1.2897 1.2465 1.3321   1.4343 1.2318 2.8064 2.2665 2.573  2.719  2.5219 2.3088 4.8518 5.2652   5.021  5.3567 5.3256 5.2456]]
741                   0.76163         0.64452         0.35102         0.73313          0.73492          0.05937          0.51082          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3142 3.5817 3.3585 3.3829 3.5232 3.3563 1.7952 2.2501 1.8338 1.9237   1.901  2.024  4.5466 5.0817 4.6401 4.3641 4.6687 3.2262 5.5397 5.8328   2.7503 5.4779 5.6172 5.5949 2.6064 2.9293 2.6556 2.7788 2.5163 2.6955   0.8062 1.0596 0.795  1.062  0.6826 0.9114 1.5605 1.4018 1.1834 1.4801   1.3991 1.3562 2.6733 2.2455 2.7632 2.6222 2.3261 2.3257 5.0378 5.1534   5.2124 5.2555 5.2183 5.1749]]
742                   3.44062         1.43239         0.84429         -0.20555          -0.17867          0.24837          1.19517          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.9384 2.0329 4.3843 3.127  1.5187 3.9238 2.1615 1.4189 2.248  3.6821   1.9864 4.1302 2.3884 2.6112 3.2951 3.7834 4.1136 2.5807 3.6541 1.436   2.6139 3.277  2.3352 2.5197 3.5453 1.771  4.0214 1.9388 3.5433 2.9927   1.5292 2.1057 3.398  3.9381 1.6614 4.0342 1.7866 3.7426 2.6308 2.2704   2.0733 2.7573 4.2657 2.2612 3.1357 2.0158 4.8685 1.0617 3.1244 3.5507   3.4019 5.1139 2.1044 0.5734]]
743                   1.28949         0.92079         0.50952         0.54818          0.54955          0.09685          0.79052          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8374 3.5322 3.1496 3.0808 2.8276 3.0827 3.7966 2.8473 2.4913 3.4311   3.4043 3.261  3.1517 3.993  3.2726 3.6017 3.1683 3.1485 5.3605 3.1461   5.3094 3.2945 4.7151 5.6211 2.5489 2.5871 3.007  3.4663 2.8402 2.8998   1.0969 1.26   3.8329 0.8976 0.9542 2.7185 1.5906 1.1253 1.6483 1.5922   3.2811 1.2821 2.3021 2.4287 3.0758 2.4648 3.4371 4.6049 5.0619 4.9613   4.68   5.225  5.2174 5.0988]]
744                   2.51282         1.19928         0.74638         0.11954          0.14186          0.17678          0.76428          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8176 2.615  3.5817 3.0603 2.6762 3.3091 2.6542 2.8473 2.6829 2.0411   2.6412 2.5994 4.1231 4.8543 4.027  3.5238 4.3335 4.2602 2.364  2.3821   2.4893 5.2937 2.3928 2.425  1.5421 2.7015 2.5159 2.5014 2.5174 2.4425   2.6096 2.7119 2.6242 3.9265 3.8755 1.2195 1.3173 2.3014 2.1832 1.6993   1.7937 2.3319 2.1556 2.7618 1.7462 2.3176 1.9543 3.6007 5.1729 2.3168   5.0328 5.272  2.1914 2.3721]]
745                   0.56745         0.56324         0.33076         0.80117          0.80153          0.0501          0.4521          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.3354 3.6719 3.3758 3.3712 3.4757 3.3984 1.8728 2.2162 2.0453 1.8928   1.9296 2.084  4.593  5.0445 4.5715 4.2775 4.6551 4.6119 5.5384 5.8213   5.5939 5.521  5.6169 5.7006 2.577  3.0804 2.6631 2.7867 2.5303 2.7346   0.841  0.9931 0.794  1.0702 0.8825 0.932  1.5381 1.39   1.1679 1.5341   1.3123 1.3871 2.6669 2.3138 3.2357 2.4442 2.3217 2.4505 5.0174 5.2546   5.2001 5.2749 5.2525 5.1951]]
746                   3.26166         1.43807         0.76587         -0.14284          -0.11167          0.25279          1.3695          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9711 4.0222 3.2999 3.358  3.0152 0.9875 3.862  1.8309 2.7519 2.0382   3.4045 2.1426 4.1627 5.4748 2.6446 2.5793 2.1748 2.4413 3.5879 3.5379   3.9194 2.4356 3.0563 3.9215 1.9395 2.7668 3.8915 2.914  2.2541 3.239   3.6154 1.6785 1.9308 2.5999 3.108  3.0835 3.4125 1.6939 2.1213 1.8777   1.7829 2.1208 3.2392 3.0303 3.6341 1.8165 3.1566 2.8282 4.1553 2.9109   1.74   0.0343 4.9773 2.0532]]
747                   1.54596         0.99701         0.7175         0.45832          0.46857          0.13858          0.8803          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.222  3.6508 3.2551 2.838  3.076  3.7112 1.9259 3.4    3.092  3.6306   3.1056 2.4435 3.274  4.1141 3.3934 4.0949 4.2338 3.2498 5.4937 4.1918   5.8764 5.365  3.6997 5.6257 2.2623 2.9182 2.9576 3.2723 2.2334 3.5986   3.5121 1.8253 3.311  3.7308 3.3111 1.3089 1.4406 0.8257 1.927  2.745   2.3312 2.9001 2.4581 2.172  2.1723 2.6525 3.1489 2.6187 4.9198 4.8761   4.927  4.9735 2.1298 5.1488]]
748                   2.44058         1.18244         0.5026         0.14485          0.24421          0.14941          0.848          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.541  3.3908 2.6432 2.6475 2.655  2.5285 1.6233 3.845  1.7801 1.7148   2.7532 2.4894 2.9675 2.6603 2.5008 3.7581 2.4796 2.4913 2.4039 6.3684   5.4686 5.3679 2.3271 2.2926 2.126  2.6116 2.5852 2.6801 1.722  2.3779   2.5875 1.2066 0.9522 0.7252 0.6793 0.647  1.2291 2.3769 2.3081 3.738   1.1988 0.9818 2.3927 2.3462 2.1795 2.5835 2.4042 2.5026 2.1479 5.1296   5.107  2.3234 4.7928 2.2371]]
749                   0.55015         0.56546         0.32811         0.80724          0.80724          0.04916          0.4666          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.266  3.6    3.3325 3.3333 3.4667 3.3334 1.8665 2.2666 2.0003 2.0002   2.0666 2.1335 4.5328 4.9336 4.5334 4.2668 4.5328 4.533  5.5332 5.8   5.5998 5.5335 5.6001 5.6004 2.5998 2.9999 2.6668 2.8002 2.5338 2.7335   0.7999 1.0002 0.8    1.0005 0.7999 0.9333 1.5334 1.3999 1.2003 1.4658   1.4    1.3334 2.6667 2.3332 2.4    2.5329 2.3335 2.4001 4.9998 5.2   5.2    5.2668 5.1999 5.1335]]
750                   0.5501         0.56543         0.32808         0.80725          0.80725          0.04916          0.46655          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5997 3.3333 3.333  3.4665 3.333  1.867  2.2673 2.0005 1.9997   2.0667 2.1331 4.5332 4.9331 4.5335 4.2664 4.5328 4.5331 5.5334 5.8   5.5995 5.5333 5.5997 5.6001 2.5999 3.0003 2.6669 2.8    2.5332 2.7334   0.8001 1.     0.8    1.0002 0.8006 0.9333 1.5333 1.4    1.2002 1.4667   1.3999 1.3335 2.6666 2.3337 2.4    2.533  2.3333 2.4001 5.     5.2001   5.1999 5.2663 5.2    5.1335]]
751                   0.55009         0.56546         0.32811         0.80725          0.80725          0.04916          0.46668          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2659 3.5999 3.3332 3.3331 3.4664 3.3334 1.8673 2.2666 2.0004 2.0004   2.0671 2.1335 4.5335 4.9328 4.533  4.2668 4.5332 4.5329 5.5331 5.8001   5.6    5.5333 5.6001 5.6001 2.6008 3.0001 2.6666 2.8    2.5331 2.7334   0.7994 1.0001 0.7995 1.0001 0.7998 0.9334 1.5334 1.4    1.2001 1.4667   1.4    1.3333 2.6668 2.3334 2.4    2.5333 2.3334 2.4001 4.9999 5.1999   5.1998 5.2666 5.1998 5.1326]]
752                   0.55014         0.56548         0.32814         0.80724          0.80724          0.04917          0.46673          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.5998 3.3328 3.3332 3.4666 3.3333 1.8676 2.2669 2.0005 2.0001   2.0668 2.1336 4.5332 4.9329 4.5331 4.2662 4.5329 4.533  5.533  5.8002   5.5997 5.5328 5.6    5.6001 2.6009 3.0001 2.6665 2.8002 2.5334 2.7332   0.7996 1.0002 0.7997 1.0003 0.8    0.9338 1.5335 1.4    1.1995 1.4664   1.3999 1.3326 2.6666 2.333  2.4005 2.5329 2.3337 2.3999 5.0002 5.1999   5.1997 5.2671 5.2001 5.1334]]
753                   0.55015         0.56548         0.32807         0.80723          0.80723          0.04916          0.46662          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2662 3.6    3.3332 3.3331 3.4668 3.3335 1.8671 2.267  2.0005 2.0003   2.0678 2.1332 4.533  4.9332 4.5333 4.2665 4.5329 4.5326 5.5333 5.8001   5.6001 5.533  5.6    5.599  2.6    3.     2.6667 2.8002 2.5328 2.7334   0.8002 1.0002 0.8001 0.9999 0.8002 0.9328 1.5333 1.3997 1.2001 1.4665   1.3998 1.3333 2.6666 2.3333 2.4002 2.5333 2.3333 2.4    4.9999 5.2001   5.2    5.2667 5.1997 5.1335]]
754                   0.55005         0.56542         0.32808         0.80727          0.80727          0.04916          0.46653          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5995 3.3332 3.3333 3.4665 3.3336 1.867  2.2671 2.0004 2.0003   2.0668 2.1331 4.5326 4.9327 4.5329 4.2665 4.5332 4.5331 5.5334 5.8001   5.6001 5.5334 5.6    5.6    2.6001 2.9999 2.6669 2.7999 2.5333 2.7333   0.8001 1.0001 0.7999 1.     0.7996 0.9334 1.5333 1.4001 1.2003 1.4668   1.3998 1.3333 2.6668 2.3333 2.3999 2.5333 2.333  2.4    5.0003 5.1996   5.2003 5.2671 5.1998 5.1336]]
755                   0.55012         0.56547         0.32811         0.80724          0.80724          0.04916          0.46663          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2659 3.6    3.3331 3.3329 3.4665 3.3327 1.8671 2.2671 2.0002 2.0003   2.0673 2.1336 4.5332 4.9326 4.5331 4.2667 4.5331 4.533  5.5333 5.8   5.5999 5.5331 5.6005 5.6003 2.6    3.     2.6664 2.8    2.5333 2.7334   0.8002 1.0003 0.7996 1.0002 0.8003 0.9327 1.5335 1.4    1.1999 1.4666   1.4    1.3334 2.667  2.3337 2.4004 2.5333 2.3335 2.4002 4.9999 5.2   5.2006 5.2667 5.1999 5.1334]]
756                   0.55014         0.56546         0.32811         0.80724          0.80724          0.04916          0.46655          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5997 3.3332 3.3333 3.4667 3.3335 1.8674 2.2668 2.0006 2.0005   2.0668 2.1337 4.5331 4.9332 4.5331 4.2659 4.5331 4.5326 5.5335 5.8002   5.6001 5.5334 5.6    5.5999 2.5998 2.9999 2.666  2.7992 2.533  2.7336   0.7995 1.0001 0.8003 1.0004 0.8005 0.9334 1.5333 1.3999 1.1998 1.4668   1.4001 1.3337 2.6667 2.3338 2.4    2.5335 2.3334 2.4    5.     5.2   5.2007 5.2666 5.1999 5.1334]]
757                   0.55015         0.56548         0.32812         0.80723          0.80723          0.04916          0.4666          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2663 3.5998 3.3326 3.3335 3.4659 3.3334 1.8663 2.267  2.0006 2.   2.0673 2.1336 4.5332 4.9329 4.5335 4.2668 4.5331 4.5327 5.5332 5.8002   5.6002 5.533  5.5999 5.5999 2.5999 3.     2.6669 2.8006 2.5333 2.7333   0.8003 1.     0.8005 1.0004 0.8    0.9336 1.5332 1.4002 1.1999 1.4664   1.3998 1.3332 2.6671 2.333  2.4    2.5334 2.3333 2.3998 5.0002 5.1997   5.1999 5.2666 5.2    5.1333]]
758                   0.55017         0.56544         0.3281         0.80723          0.80723          0.04916          0.46645          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3325 3.333  3.4661 3.333  1.8668 2.2666 2.0004 2.0005   2.067  2.1331 4.533  4.9335 4.5328 4.2661 4.5332 4.5336 5.5334 5.7999   5.5999 5.5335 5.6002 5.6001 2.5999 3.     2.6668 2.7998 2.5332 2.7334   0.8003 0.9997 0.7995 1.0006 0.7999 0.9335 1.5335 1.3995 1.2002 1.4667   1.3997 1.3334 2.6666 2.3333 2.4001 2.5336 2.333  2.4002 5.0002 5.1998   5.1999 5.2666 5.2001 5.1334]]
759                   0.5501         0.56542         0.32806         0.80725          0.80725          0.04915          0.46663          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.5997 3.3327 3.3328 3.4662 3.3333 1.8671 2.2666 2.0001 2.0015   2.0674 2.1342 4.5331 4.9334 4.5331 4.2661 4.5325 4.5334 5.5333 5.8002   5.6    5.5333 5.6    5.6001 2.5998 2.9995 2.6669 2.7999 2.5334 2.7329   0.8002 1.     0.7999 1.     0.7999 0.9329 1.5332 1.4    1.1997 1.4667   1.4    1.3332 2.6667 2.3328 2.4    2.5329 2.3342 2.4001 5.     5.2001   5.1996 5.2664 5.2001 5.1339]]
760                   0.55011         0.56539         0.32808         0.80725          0.80725          0.04916          0.46655          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.5999 3.3332 3.3334 3.4666 3.3334 1.8674 2.2672 2.0007 2.0006   2.0666 2.1333 4.5334 4.9332 4.5327 4.2666 4.5332 4.5332 5.5335 5.8   5.6003 5.5335 5.6002 5.6    2.5998 3.0001 2.6671 2.8003 2.5333 2.7334   0.8005 1.     0.7999 1.0002 0.8    0.9338 1.5331 1.3998 1.1999 1.4666   1.3995 1.3333 2.6671 2.3334 2.4001 2.5331 2.3333 2.4    5.     5.1999   5.1998 5.2664 5.2    5.1333]]
761                   0.5501         0.56541         0.32811         0.80725          0.80725          0.04916          0.46668          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.6002 3.3336 3.3332 3.4664 3.3331 1.8676 2.2668 2.0005 2.0003   2.0668 2.1343 4.5332 4.9332 4.5334 4.2668 4.533  4.5335 5.5334 5.7999   5.6001 5.5332 5.6002 5.6001 2.5999 3.0001 2.667  2.8001 2.5332 2.7333   0.7999 0.9999 0.8001 1.0005 0.8    0.9337 1.5332 1.4    1.2    1.4668   1.3998 1.3334 2.6668 2.3335 2.4    2.5332 2.333  2.4002 5.0001 5.1999   5.1994 5.2666 5.2    5.1334]]
762                   0.55001         0.5654         0.32807         0.80728          0.80728          0.04915          0.46663          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5997 3.3334 3.3329 3.4665 3.3327 1.8673 2.2666 2.0005 2.0004   2.0668 2.1338 4.5334 4.9331 4.5334 4.2667 4.5336 4.5333 5.5332 5.7999   5.5999 5.5335 5.5999 5.6004 2.5997 2.9996 2.6673 2.8001 2.5331 2.7335   0.8006 0.9998 0.7999 1.     0.7998 0.9336 1.5334 1.4001 1.2002 1.4668   1.4    1.333  2.6665 2.3333 2.3997 2.5336 2.3334 2.4002 5.0006 5.2002   5.1999 5.2667 5.2001 5.1334]]
763                   0.55018         0.56548         0.32813         0.80723          0.80723          0.04917          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.6    3.333  3.333  3.4666 3.3337 1.8671 2.2681 2.0006 2.0001   2.0675 2.1333 4.5328 4.9329 4.5331 4.2666 4.5334 4.533  5.5329 5.8   5.6001 5.5333 5.6002 5.6    2.5996 3.0001 2.6667 2.7993 2.5333 2.7337   0.7999 1.0002 0.8001 1.0001 0.8002 0.9337 1.5333 1.3999 1.2001 1.4666   1.4002 1.3333 2.6669 2.3335 2.3998 2.5333 2.3333 2.4004 4.9998 5.1998   5.2003 5.2667 5.1997 5.1334]]
764                   0.5501         0.56546         0.3281         0.80725          0.80725          0.04916          0.4665          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5996 3.3338 3.3332 3.4665 3.3326 1.867  2.267  2.0002 2.0002   2.0672 2.1342 4.5332 4.9333 4.5332 4.2664 4.5329 4.533  5.5334 5.7999   5.6002 5.5333 5.6001 5.5992 2.5994 2.9998 2.6667 2.7997 2.5334 2.7337   0.8008 1.0003 0.8002 1.0002 0.7999 0.9334 1.533  1.4    1.2    1.4665   1.4002 1.3335 2.6666 2.3337 2.4    2.5336 2.3334 2.3999 5.0001 5.2   5.2001 5.2665 5.1999 5.1335]]
765                   0.55014         0.56546         0.32808         0.80724          0.80724          0.04916          0.46652          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2661 3.5998 3.3331 3.333  3.4664 3.3328 1.8667 2.2665 2.0003 2.   2.0667 2.1332 4.5331 4.9327 4.5331 4.2656 4.533  4.533  5.5335 5.8   5.6    5.5333 5.6002 5.6    2.5999 3.0001 2.6668 2.8    2.5333 2.7333   0.8002 0.9997 0.8005 1.0002 0.7996 0.9336 1.5332 1.3999 1.2001 1.4668   1.4003 1.3338 2.667  2.3334 2.4002 2.5336 2.3336 2.3995 5.     5.1997   5.1999 5.2661 5.2002 5.1332]]
766                   0.55008         0.56543         0.32805         0.80726          0.80726          0.04915          0.46655          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6006 3.3326 3.3332 3.4666 3.333  1.8671 2.2674 1.9998 2.0001   2.0667 2.1329 4.5334 4.9327 4.5332 4.2663 4.5328 4.5331 5.5334 5.8   5.5998 5.5331 5.6001 5.6    2.5995 3.     2.6673 2.8002 2.5337 2.7333   0.8003 0.9998 0.8004 1.     0.8006 0.9332 1.5333 1.4    1.2004 1.4665   1.3998 1.3332 2.6664 2.3336 2.4001 2.5333 2.3333 2.4002 5.     5.1999   5.2002 5.2669 5.1998 5.1329]]
767                   0.55003         0.56543         0.32807         0.80728          0.80728          0.04915          0.46652          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.6003 3.3333 3.3334 3.4665 3.3332 1.8674 2.2669 2.0007 2.0005   2.0676 2.1332 4.5331 4.9329 4.5329 4.2671 4.5329 4.533  5.5334 5.7999   5.6    5.5332 5.6    5.6002 2.5994 3.0002 2.6667 2.8004 2.534  2.7334   0.8003 1.0003 0.8003 0.9998 0.8005 0.9334 1.5331 1.3997 1.2    1.4665   1.4001 1.333  2.6666 2.3334 2.4003 2.5334 2.3333 2.3992 5.     5.2002   5.1996 5.2666 5.2002 5.1332]]
768                   0.55012         0.56544         0.32813         0.80724          0.80724          0.04916          0.46658          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3334 3.3328 3.4663 3.3334 1.867  2.2671 2.0002 2.0003   2.067  2.1339 4.5326 4.9329 4.5332 4.2663 4.533  4.533  5.5327 5.7998   5.5999 5.5334 5.6001 5.6    2.6005 3.0002 2.6668 2.7999 2.5332 2.7334   0.7998 1.0002 0.8003 1.0008 0.8    0.9333 1.5331 1.3998 1.2002 1.4666   1.4    1.3334 2.6669 2.3333 2.3999 2.5332 2.3334 2.4003 4.9998 5.2   5.1998 5.2655 5.1999 5.1336]]
769                   0.55005         0.5654         0.3281         0.80727          0.80727          0.04916          0.4666          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.5996 3.3334 3.3328 3.4663 3.3332 1.8668 2.2668 2.0007 2.0006   2.0662 2.1337 4.5332 4.9332 4.533  4.2668 4.5331 4.533  5.5332 5.7999   5.6006 5.5334 5.6002 5.5999 2.6003 2.9997 2.6667 2.8    2.5334 2.7331   0.8    1.0006 0.7995 1.     0.8    0.9335 1.5334 1.4001 1.1999 1.4666   1.4002 1.3333 2.6663 2.3334 2.4001 2.5334 2.3335 2.4005 5.0002 5.1996   5.1994 5.2666 5.2007 5.133 ]]
770                   0.55008         0.56545         0.32807         0.80726          0.80726          0.04915          0.46668          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2662 3.6    3.3332 3.3334 3.4667 3.3329 1.8668 2.2667 2.0002 2.0005   2.0672 2.1342 4.5331 4.9327 4.533  4.2663 4.5332 4.5327 5.5333 5.8001   5.5998 5.5333 5.6001 5.6001 2.6004 2.9998 2.6669 2.8    2.5334 2.7334   0.8002 0.9999 0.7999 0.9999 0.8002 0.9336 1.5333 1.4001 1.1998 1.4666   1.3991 1.3331 2.6664 2.3338 2.4    2.5333 2.3334 2.3999 4.9999 5.2   5.1996 5.267  5.2001 5.1333]]
771                   0.55012         0.56544         0.32806         0.80724          0.80724          0.04916          0.4664          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5998 3.3328 3.3332 3.4665 3.3332 1.8673 2.2669 2.     2.0009   2.0668 2.1332 4.5331 4.9334 4.5329 4.2664 4.5331 4.5327 5.5334 5.8   5.5996 5.5337 5.5999 5.6001 2.6002 3.0002 2.6668 2.8    2.533  2.7332   0.8    0.9998 0.8    0.9999 0.7999 0.9332 1.5336 1.4    1.2    1.4663   1.4    1.3332 2.6666 2.3334 2.3996 2.533  2.3333 2.4    4.9997 5.1999   5.1998 5.2663 5.1999 5.1333]]
772                   0.55014         0.56546         0.3281         0.80724          0.80724          0.04916          0.46663          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3333 3.3335 3.466  3.3334 1.8668 2.2671 2.0006 1.9999   2.0675 2.1337 4.5332 4.9333 4.5332 4.2666 4.5332 4.5332 5.5332 5.8   5.5999 5.5333 5.6    5.5999 2.6    3.     2.6668 2.7999 2.5331 2.7332   0.8001 1.0001 0.7997 0.9999 0.799  0.9331 1.5333 1.4001 1.1999 1.4668   1.4    1.3333 2.6662 2.3334 2.4001 2.5337 2.3336 2.4    4.9999 5.2   5.2001 5.2669 5.1995 5.1335]]
773                   0.55005         0.56546         0.32812         0.80727          0.80727          0.04915          0.46665          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.6001 3.3332 3.3327 3.4668 3.3331 1.867  2.2666 2.0003 2.0001   2.0669 2.1334 4.5332 4.933  4.533  4.2667 4.5331 4.5332 5.5336 5.8   5.6    5.5334 5.5999 5.5999 2.6002 3.0001 2.6665 2.8002 2.5348 2.7337   0.8003 1.0004 0.8    1.0002 0.8002 0.9337 1.5334 1.4001 1.2002 1.4667   1.3999 1.3334 2.6663 2.3333 2.3999 2.5334 2.3332 2.4001 4.9995 5.2001   5.2001 5.2668 5.1999 5.1329]]
774                   0.55012         0.5654         0.32806         0.80724          0.80724          0.04915          0.4667          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2662 3.6    3.3336 3.3332 3.4666 3.3332 1.8671 2.2681 2.0003 2.0007   2.0675 2.1339 4.5332 4.9332 4.5336 4.2665 4.5331 4.5334 5.5333 5.8002   5.6002 5.5333 5.5997 5.6005 2.6001 2.9999 2.6673 2.8006 2.5332 2.7332   0.8006 0.9998 0.8001 0.9999 0.8003 0.9329 1.5333 1.3998 1.2    1.4667   1.4002 1.3334 2.6665 2.3334 2.4001 2.5332 2.3335 2.4002 5.0002 5.1994   5.2004 5.2663 5.1996 5.1329]]
775                   0.5502         0.56547         0.32807         0.80722          0.80722          0.04916          0.46653          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3327 3.3328 3.4664 3.3331 1.8668 2.2665 2.0002 2.0001   2.0665 2.1335 4.5333 4.9331 4.533  4.2661 4.5327 4.5332 5.5333 5.7999   5.5997 5.5334 5.5998 5.5998 2.6005 3.0008 2.6666 2.7999 2.5333 2.7334   0.8001 1.     0.8004 1.     0.8    0.9333 1.5333 1.4    1.1999 1.4665   1.3991 1.3336 2.6666 2.3331 2.4001 2.5335 2.3332 2.3999 4.9993 5.2   5.2001 5.2667 5.1994 5.1332]]
776                   0.55019         0.56545         0.32808         0.80722          0.80722          0.04916          0.46647          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.6    3.3333 3.3338 3.467  3.3337 1.8673 2.2674 2.     1.9999   2.0668 2.1331 4.5334 4.9334 4.5333 4.2664 4.5329 4.5331 5.5335 5.7999   5.6    5.5332 5.6002 5.5999 2.5999 3.0005 2.6664 2.7993 2.5333 2.7336   0.8002 0.9998 0.8001 1.     0.7999 0.9332 1.5331 1.4001 1.1998 1.4668   1.3998 1.3331 2.6669 2.3335 2.3999 2.5334 2.3335 2.3999 4.9996 5.2   5.2002 5.2666 5.1999 5.1333]]
777                   0.55007         0.56539         0.32806         0.80726          0.80726          0.04915          0.46653          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.5992 3.3336 3.3335 3.4664 3.3332 1.8666 2.2672 2.0007 2.0005   2.0678 2.1341 4.5332 4.9334 4.5335 4.2669 4.5332 4.5332 5.5333 5.8002   5.6    5.5333 5.6    5.6003 2.6003 3.0003 2.6675 2.7999 2.5333 2.7333   0.8003 0.9998 0.7997 1.     0.8002 0.9337 1.533  1.4    1.2003 1.4665   1.4    1.3334 2.6666 2.3331 2.4001 2.5327 2.3333 2.3999 5.0003 5.2   5.1998 5.2669 5.2002 5.1333]]
778                   0.55015         0.56542         0.32809         0.80723          0.80723          0.04916          0.46665          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2662 3.5997 3.3333 3.3328 3.4667 3.3333 1.8671 2.2668 2.0009 2.0002   2.0656 2.1335 4.5333 4.9332 4.5332 4.2662 4.5331 4.533  5.5336 5.8   5.6    5.5332 5.6002 5.5998 2.6    3.0003 2.6667 2.8002 2.5332 2.7335   0.8001 1.0001 0.8    1.0003 0.7999 0.9332 1.5333 1.3996 1.2002 1.4666   1.4    1.3332 2.6668 2.3333 2.4004 2.5337 2.3333 2.4001 4.9999 5.1998   5.2001 5.266  5.2001 5.1333]]
779                   0.55013         0.56545         0.32814         0.80724          0.80724          0.04916          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5996 3.3335 3.3326 3.4667 3.3327 1.8675 2.2672 2.0007 2.0003   2.0669 2.134  4.5331 4.9332 4.533  4.2668 4.5333 4.5338 5.5334 5.8002   5.6004 5.5334 5.6001 5.6003 2.5999 3.     2.6665 2.7996 2.5333 2.7335   0.8004 1.0007 0.7997 1.0002 0.8006 0.9337 1.5334 1.4    1.1998 1.4669   1.4001 1.3339 2.6669 2.3333 2.4002 2.5334 2.3335 2.4004 5.0001 5.2006   5.1999 5.2668 5.2001 5.1327]]
780                   0.55018         0.56545         0.32814         0.80723          0.80723          0.04917          0.46655          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3327 3.3335 3.4665 3.3329 1.8669 2.2669 2.0006 2.0004   2.0669 2.134  4.5334 4.9331 4.5334 4.2663 4.5332 4.5332 5.5334 5.8001   5.6    5.5334 5.5999 5.5998 2.5996 3.     2.6673 2.7998 2.5333 2.7331   0.7995 1.     0.8001 1.0008 0.8    0.9336 1.5333 1.4001 1.2    1.4669   1.3997 1.3338 2.6669 2.3334 2.4004 2.5334 2.3331 2.4003 5.0001 5.1996   5.2002 5.2668 5.1997 5.1334]]
781                   0.55005         0.56542         0.32806         0.80727          0.80727          0.04915          0.46657          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2671 3.5997 3.3333 3.3332 3.4667 3.3331 1.8666 2.2672 2.0008 2.0005   2.0676 2.1332 4.5334 4.933  4.5332 4.2667 4.5327 4.5331 5.5333 5.7999   5.6    5.5339 5.5999 5.6    2.5998 2.9999 2.6666 2.8003 2.5335 2.7333   0.8002 1.0005 0.8    0.9996 0.8002 0.9334 1.5325 1.3999 1.2001 1.4666   1.4    1.3332 2.6667 2.3332 2.4003 2.5333 2.3332 2.4002 5.     5.2001   5.2001 5.2667 5.2002 5.1333]]
782                   0.55014         0.56549         0.32811         0.80724          0.80724          0.04916          0.46653          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5999 3.3331 3.3332 3.4667 3.3328 1.8672 2.2671 1.9992 2.0005   2.0669 2.133  4.5332 4.9331 4.5328 4.266  4.5333 4.5327 5.5329 5.7999   5.6001 5.5335 5.5997 5.6    2.6003 2.9994 2.6661 2.7999 2.533  2.7332   0.8005 1.     0.8001 1.0003 0.8004 0.9336 1.5333 1.4001 1.1996 1.4667   1.3997 1.3328 2.6667 2.3335 2.3999 2.5332 2.3332 2.3999 5.0003 5.2001   5.1998 5.2667 5.1999 5.1329]]
783                   0.55015         0.56546         0.32814         0.80723          0.80723          0.04917          0.46658          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.5997 3.3334 3.3331 3.4662 3.3335 1.8671 2.2673 2.0009 2.0002   2.0668 2.1339 4.5333 4.9334 4.5331 4.2663 4.5331 4.5327 5.5333 5.8   5.5999 5.5332 5.5998 5.6001 2.6003 3.     2.6666 2.7998 2.5336 2.7334   0.8    1.0003 0.8002 1.0007 0.8    0.9333 1.5334 1.4001 1.2001 1.4667   1.3999 1.3329 2.6665 2.3332 2.3999 2.5335 2.3335 2.4    4.9999 5.2002   5.1999 5.2668 5.1999 5.1334]]
784                   0.55013         0.56543         0.32806         0.80724          0.80724          0.04915          0.46645          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2663 3.5997 3.3331 3.3332 3.4665 3.3322 1.8675 2.2668 1.9999 2.0002   2.0664 2.1335 4.5334 4.9334 4.5328 4.2663 4.5331 4.5333 5.5336 5.8001   5.5999 5.5336 5.5998 5.5998 2.5997 3.0002 2.6668 2.8    2.5334 2.7333   0.8001 0.9997 0.8001 1.0001 0.8002 0.9333 1.5331 1.4003 1.1997 1.4666   1.3999 1.3332 2.6668 2.3332 2.4003 2.5328 2.3334 2.4001 4.9999 5.2   5.1999 5.2665 5.1998 5.1338]]
785                   0.55001         0.56541         0.32806         0.80729          0.80729          0.04915          0.4668          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2666 3.5995 3.3333 3.3333 3.4659 3.3328 1.8677 2.2666 2.0004 1.9999   2.0674 2.1343 4.5332 4.9331 4.5331 4.2666 4.5333 4.533  5.5331 5.8003   5.5999 5.5332 5.5995 5.6001 2.6003 2.9997 2.6668 2.8002 2.5333 2.7333   0.8001 1.0003 0.8006 0.9996 0.8002 0.9334 1.5333 1.3999 1.1999 1.4668   1.3999 1.3334 2.6667 2.3343 2.3999 2.5334 2.3332 2.4    5.0002 5.2   5.1999 5.2665 5.1998 5.1331]]
786                   0.55014         0.56547         0.32807         0.80724          0.80724          0.04916          0.4663          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2661 3.5999 3.3333 3.333  3.4665 3.3327 1.8663 2.2665 2.0006 2.001   2.0672 2.1335 4.5331 4.9335 4.5332 4.2668 4.533  4.5325 5.533  5.8004   5.5999 5.5337 5.5997 5.5999 2.6004 2.9998 2.6667 2.7996 2.5332 2.7337   0.7997 0.9998 0.8007 1.0002 0.8001 0.9334 1.5331 1.4    1.1997 1.4663   1.4    1.3334 2.6667 2.3333 2.3998 2.5334 2.3333 2.4001 4.9998 5.1999   5.1996 5.2668 5.1997 5.133 ]]
787                   0.55005         0.56543         0.32809         0.80727          0.80727          0.04915          0.46652          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.6    3.3327 3.333  3.4665 3.3333 1.867  2.2669 2.0001 1.9997   2.0669 2.1332 4.5333 4.9324 4.5332 4.2669 4.5332 4.5331 5.5334 5.8   5.5999 5.5332 5.6001 5.6002 2.5999 3.0001 2.6668 2.7998 2.5333 2.7334   0.8006 1.0006 0.8    0.9999 0.8004 0.9331 1.5332 1.4    1.2    1.4666   1.4    1.3331 2.6666 2.3333 2.4    2.5334 2.3328 2.4002 4.9998 5.1995   5.2001 5.2665 5.1999 5.1329]]
788                   0.55         0.56538         0.32802         0.80729          0.80729          0.04914          0.4665          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2671 3.5996 3.3331 3.3334 3.4667 3.3334 1.8681 2.2669 2.0005 2.   2.0674 2.1333 4.533  4.9333 4.5329 4.2665 4.5329 4.5332 5.5334 5.7999   5.6    5.5335 5.5996 5.6001 2.5999 3.0002 2.6668 2.7997 2.534  2.7341   0.8001 0.9995 0.7999 0.9998 0.7998 0.9333 1.533  1.3996 1.1998 1.4665   1.4    1.3333 2.6666 2.3337 2.4    2.5334 2.3332 2.4001 5.     5.1999   5.1999 5.2666 5.1997 5.1335]]
789                   0.55021         0.56552         0.32813         0.80721          0.80721          0.04917          0.46675          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2663 3.5998 3.3331 3.3333 3.4669 3.3332 1.8667 2.2676 2.0006 2.0004   2.0675 2.1333 4.5335 4.9334 4.5329 4.2664 4.533  4.533  5.5332 5.7998   5.5998 5.5333 5.5999 5.6    2.6    3.0001 2.6666 2.8006 2.5337 2.7333   0.8001 0.9997 0.8    1.0003 0.7994 0.9335 1.5334 1.3999 1.1999 1.4671   1.4001 1.3328 2.6666 2.3332 2.3999 2.5333 2.3334 2.4001 5.     5.1995   5.2    5.2666 5.2001 5.1335]]
790                   0.5501         0.56547         0.3281         0.80725          0.80725          0.04916          0.4666          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2671 3.5998 3.3331 3.3326 3.4664 3.3331 1.8669 2.267  2.     2.0001   2.0676 2.1336 4.5326 4.9333 4.533  4.2668 4.5331 4.5332 5.5334 5.7999   5.6002 5.5332 5.5999 5.6    2.6003 2.9995 2.6666 2.8    2.5332 2.733   0.8003 1.0001 0.7997 0.9999 0.8001 0.9336 1.5333 1.4001 1.2001 1.4666   1.4003 1.3332 2.667  2.3336 2.4002 2.5333 2.3332 2.4    4.9996 5.1998   5.1999 5.2663 5.2001 5.1333]]
791                   0.55018         0.56552         0.32811         0.80722          0.80722          0.04917          0.4667          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2664 3.6001 3.3334 3.3328 3.4663 3.3331 1.8671 2.2669 2.0002 1.9999   2.0672 2.1334 4.5329 4.9331 4.5332 4.2663 4.5328 4.5327 5.5329 5.8   5.5994 5.5333 5.6001 5.6001 2.6001 3.0001 2.6666 2.8006 2.5333 2.7332   0.7998 1.0002 0.7997 1.     0.8    0.9326 1.5336 1.4    1.2    1.4667   1.4001 1.3333 2.6665 2.3325 2.3998 2.5332 2.3333 2.3998 5.     5.1999   5.1998 5.2659 5.1999 5.1333]]
792                   0.55008         0.56544         0.32804         0.80726          0.80726          0.04915          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2666 3.5998 3.333  3.3332 3.4661 3.3331 1.8668 2.2668 2.0002 2.0002   2.0674 2.1338 4.533  4.9333 4.5331 4.2665 4.5335 4.5333 5.5334 5.8001   5.6    5.5334 5.5996 5.5997 2.6    2.9999 2.6666 2.8001 2.5334 2.7336   0.8002 0.9996 0.8001 0.9997 0.8009 0.9331 1.5335 1.4002 1.2001 1.4666   1.4006 1.3333 2.6668 2.3336 2.4001 2.5335 2.3336 2.4002 5.     5.1999   5.2002 5.2666 5.2001 5.1336]]
793                   0.55007         0.56543         0.32808         0.80726          0.80726          0.04915          0.46653          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.5997 3.3332 3.3335 3.4666 3.3331 1.8667 2.2663 2.0005 2.0005   2.0669 2.1341 4.5332 4.9331 4.533  4.2665 4.5331 4.5329 5.5334 5.8001   5.6007 5.5334 5.6002 5.5999 2.6    3.     2.6666 2.7998 2.5336 2.7342   0.7998 1.0002 0.8003 1.0001 0.7998 0.9329 1.5336 1.3999 1.2003 1.4662   1.3999 1.3335 2.6665 2.3334 2.3999 2.5335 2.3338 2.4    4.9995 5.2004   5.2    5.2667 5.1999 5.1331]]
794                   0.55012         0.56546         0.3281         0.80725          0.80725          0.04916          0.46665          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2663 3.5999 3.3335 3.3327 3.4666 3.3329 1.8671 2.2679 2.0005 2.0001   2.0677 2.1341 4.533  4.9332 4.5335 4.2665 4.5331 4.5326 5.5333 5.7999   5.5999 5.5334 5.6    5.5997 2.6    2.9998 2.6669 2.8001 2.5335 2.7334   0.8003 1.0002 0.8009 0.9999 0.7998 0.9332 1.5335 1.3998 1.2002 1.4667   1.4    1.3333 2.6666 2.3333 2.3996 2.5332 2.3337 2.4001 5.0001 5.1998   5.2    5.2663 5.1998 5.1335]]
795                   0.54995         0.56535         0.32801         0.8073          0.8073          0.04914          0.46663          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.6    3.3331 3.3333 3.4664 3.333  1.8672 2.2669 2.0005 2.0005   2.0672 2.134  4.5332 4.9326 4.5334 4.2667 4.5331 4.5331 5.5333 5.7998   5.6    5.5333 5.6001 5.6005 2.6006 2.9995 2.6667 2.7999 2.5335 2.7332   0.8007 1.     0.8    0.9996 0.8002 0.9333 1.5325 1.3998 1.1996 1.4668   1.4    1.3332 2.6667 2.3334 2.4002 2.5335 2.3335 2.4    4.9998 5.1999   5.1998 5.2662 5.1999 5.1331]]
796                   0.55009         0.56543         0.32809         0.80725          0.80725          0.04916          0.4666          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2665 3.6    3.3331 3.3333 3.4663 3.3332 1.8669 2.2665 1.9998 2.0004   2.066  2.1337 4.5328 4.9329 4.5334 4.2663 4.5329 4.5333 5.5333 5.7997   5.6002 5.5335 5.5999 5.6    2.6001 2.9999 2.6668 2.8002 2.5331 2.7334   0.8002 1.0002 0.8    1.0003 0.8008 0.9331 1.5334 1.3998 1.2    1.467   1.4002 1.3333 2.6669 2.3334 2.4001 2.5336 2.3335 2.4001 5.0003 5.2008   5.1998 5.2668 5.1997 5.1332]]
797                   3.30512         1.58953         1.17618         -0.15807          -0.07509          0.261          1.37007          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.9862 3.2919 3.1821 2.9376 3.1162 3.2815 3.5811 3.4576 3.3873 3.1596   3.6747 3.4702 3.5792 3.6122 3.4265 3.627  4.0307 3.7762 3.4738 3.2912   3.4306 3.4043 3.3932 3.4626 3.6902 3.7339 3.7487 3.698  3.6091 3.5651   3.7661 3.9691 3.8161 3.847  3.9535 3.8673 3.7536 3.4722 3.7496 3.6893   3.556  3.567  3.8242 3.872  3.9188 3.9309 3.9445 3.706  3.9429 3.978   3.8904 3.8344 3.9737 3.7109]]
798                   3.26651         1.56445         1.16663         -0.14454          -0.05991          0.25896          1.21648          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.1479 3.2599 3.0383 3.437  3.1264 3.3641 3.4779 3.3438 3.387  3.2338   3.255  3.5841 3.7739 3.7901 3.4887 3.7308 3.6035 3.6658 3.5823 3.5589   3.3751 3.2798 3.3761 3.3939 3.6367 3.7407 3.7449 3.7558 3.6454 3.745   3.991  3.8352 3.7506 3.9087 3.9901 3.9304 3.648  3.3723 3.3597 3.8698   3.6704 3.5162 3.9378 3.5999 3.6972 3.8459 3.8915 3.947  4.0734 4.0654   3.8523 3.7558 3.9008 3.92  ]]
799                   3.36572         1.59534         1.18786         -0.17931          -0.08643          0.26468          1.36498          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.141  3.1947 3.193  3.3195 3.3176 3.1353 3.4855 3.6523 3.4097 3.4493   3.6097 3.5279 3.5812 3.4373 3.4544 3.3666 3.6704 3.8004 3.3246 3.4431   3.4296 3.5261 3.4611 3.4665 3.683  3.7637 3.6437 3.7443 3.7243 3.7551   3.827  3.949  3.9177 3.9839 3.9162 3.8613 3.7395 3.7542 3.7535 3.4502   3.3489 3.7906 3.9485 3.8299 3.9088 3.8122 3.7857 3.9995 3.8208 4.0456   4.0596 3.9916 3.9931 3.9362]]
800                   3.33843         1.60362         1.1816         -0.16974          -0.08039          0.26287          1.26413          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.     3.186  3.3407 3.044  3.344  3.3524 3.6474 3.5802 3.3022 3.4765   3.6579 3.4204 3.4826 3.6227 3.569  3.4962 3.6814 3.55   3.685  3.435   3.5427 3.313  3.4375 3.4505 3.6517 3.7899 3.7423 3.7687 3.7409 3.7208   3.8887 3.9948 4.009  3.7967 3.8797 3.9098 3.6408 3.4813 3.7365 3.5587   3.671  3.7517 3.7981 3.9017 3.8091 3.8174 3.9228 3.7134 3.8412 3.8006   3.8172 3.9272 3.7034 4.2008]]
801                   3.15736         1.52367         1.00582         -0.1063          -0.10605          0.23356          1.60512          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9777 2.9887 2.9009 2.7516 2.8721 2.8437 3.0828 3.2081 3.1355 3.1037   3.0975 3.1123 3.046  3.1149 3.0771 3.0898 3.083  2.9842 2.9809 2.8569   2.8203 2.8534 2.927  2.8792 3.1673 3.1818 3.1709 3.1938 3.1533 3.168   3.3191 3.4703 3.1715 3.3883 3.3431 3.3643 3.2432 3.1021 2.8501 3.1278   3.1342 3.0659 3.346  3.1856 3.1828 3.1676 3.1743 3.2287 3.1644 3.2129   3.2029 3.2356 3.1748 3.2232]]
802                   3.17433         1.5273         1.00881         -0.11224          -0.11206          0.23464          1.5385          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7346 2.8084 2.8605 2.778  2.876  2.7857 3.0913 3.168  3.1476 3.0842   3.0518 3.0396 3.2626 3.1775 3.0471 2.9216 3.1783 3.1362 2.8345 2.9198   2.9852 2.8392 2.8399 3.0928 3.156  3.1981 3.1536 3.1716 3.1606 3.1754   3.371  3.421  3.3421 3.4425 3.3103 3.4019 3.2738 3.1173 3.0896 3.1184   2.9554 3.2132 3.2974 3.2215 3.2165 3.2539 3.0414 3.2584 3.1226 3.1803   3.1547 3.239  3.1692 3.1973]]
803                   3.15956         1.5273         0.99931         -0.10707          -0.10664          0.23264          1.61557          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7167 2.8687 2.9284 2.8621 2.8925 2.8019 3.0664 3.1121 3.0948 3.0904   3.0445 3.1463 2.9694 3.1835 3.0064 3.0158 3.1476 3.0318 2.8533 2.9009   2.9478 2.9144 2.8362 2.8079 3.1468 3.224  3.1776 3.1573 3.1654 3.1689   3.4054 3.4011 3.1708 3.4305 3.2506 3.2814 3.082  2.9296 3.0652 3.2619   3.2082 3.0571 3.3072 3.2536 3.1836 3.1794 3.2512 3.2357 3.1205 3.1572   3.1375 3.2682 3.2405 3.279 ]]
804                   3.12249         1.51668         0.98375         -0.09408          -0.09349          0.22947          1.54967          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7341 2.9552 2.9156 2.9407 2.8164 2.8649 3.0739 3.1694 3.1304 3.084   3.1337 3.107  3.1878 3.0378 3.1037 3.0411 3.1303 3.0451 2.7648 2.8801   2.818  2.8708 3.0252 2.8524 3.1538 3.2045 3.1857 3.1969 3.1592 3.1829   3.3168 3.3042 3.4316 3.254  3.1927 3.3413 3.2345 3.0185 3.0374 2.9874   3.0039 2.9528 3.3003 3.2205 3.2691 3.1145 3.1519 3.2522 3.1211 3.1494   3.2251 3.1846 3.1184 3.1752]]
805                   0.60311         0.5999         0.33676         0.78868          0.78899          0.05244          0.4706          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2617 3.5467 3.2611 3.3241 3.4327 3.2843 1.8263 2.3768 2.0472 2.092   2.1168 2.2741 4.4647 4.8636 3.2106 4.1971 4.471  4.4552 5.5311 5.7963   5.5917 5.5277 5.5953 5.5919 2.7107 3.1021 2.7538 2.8591 2.5106 2.841   0.7681 1.0203 0.7194 0.9995 0.7245 0.8968 1.3861 1.3485 1.1988 1.4588   1.4046 1.2927 2.6749 2.3692 2.4266 2.5317 2.3288 2.4046 4.9427 5.1793   5.1444 5.2518 5.2256 5.1202]]
806                   0.93063         0.6929         0.36384         0.67392          0.67538          0.06658          0.47292          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1594 3.5788 3.2331 3.3315 3.4714 3.2706 1.8851 2.4771 2.1899 2.0822   2.0887 2.2121 4.4862 4.9098 4.5448 4.2475 4.4797 4.4991 5.5348 5.7919   5.5903 2.9805 2.7798 5.5912 2.7497 3.0774 2.7508 2.7942 2.632  2.795   0.8589 0.9968 0.8025 0.9143 0.8025 0.8664 1.5367 3.039  1.1983 1.4413   1.4014 1.3357 2.7165 2.3297 2.4142 2.5364 2.3437 2.403  4.9414 5.1649   5.1516 5.1846 5.1517 5.1   ]]
807                   0.81765         0.66993         0.3495         0.7135          0.71748          0.06428          0.4797          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2667 3.5934 3.2897 3.3029 3.4385 3.294  1.8602 2.4052 2.2039 2.0741   2.1732 2.2098 3.1913 4.9039 4.4859 4.206  1.8885 4.4865 5.5295 5.797   5.595  5.5111 5.591  5.5937 2.669  3.1047 2.6608 2.7741 2.5969 2.858   0.7456 0.9337 0.7054 0.95   0.797  0.8576 1.5005 1.3856 1.1886 1.4599   1.373  1.3321 3.0398 2.3458 2.4486 2.6165 2.4035 2.497  4.9921 5.1362   5.1654 2.8549 5.2042 5.0967]]
808                   0.90005         0.69367         0.36518         0.68463          0.68533          0.06482          0.4739          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.27   3.5992 3.2103 3.2648 3.4663 3.3064 1.8724 2.3898 2.047  2.0558   2.2539 2.1164 4.486  4.888  4.4516 4.2051 4.4752 4.4656 5.5302 5.7948   2.9951 3.0039 5.6047 5.5946 2.596  3.1019 2.6925 2.8254 2.5441 2.8509   0.7642 1.0057 0.7696 1.0113 0.7754 0.9357 1.5263 1.4016 1.1886 1.478   1.4013 3.011  2.6761 2.8414 2.4558 3.0035 2.436  2.4521 4.9486 5.1682   5.1817 5.2711 5.166  5.0962]]
809                   3.19733         1.52951         0.99241         -0.12031          -0.12025          0.23374          1.58302          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0934 3.3709 3.1556 3.1602 3.2151 3.1393 3.2872 3.401  3.3211 3.3366   3.3323 3.3683 3.1387 3.3373 3.1621 3.0283 3.1477 3.1784 3.0067 3.0286   2.967  2.9667 2.9614 2.9837 3.183  3.2019 3.1982 3.1806 3.1568 3.2042   3.2589 3.3264 3.2807 3.3187 3.2633 3.288  3.0861 3.0458 2.9464 3.0848   3.0561 3.0199 3.0952 3.0176 3.0336 3.0344 3.0296 3.0304 2.7591 2.9018   2.8812 2.9239 2.9    2.8868]]
810                   3.02566         1.48741         0.98359         -0.06015          -0.05994          0.22693          1.54877          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1406 3.2767 3.143  3.163  3.2119 3.228  3.2797 3.4022 3.3518 3.3269   3.3739 3.3628 3.1562 3.302  3.1613 3.0554 3.1031 3.1327 2.9737 3.0593   2.9509 2.9651 2.9736 2.979  3.1654 3.2494 3.1772 3.1847 3.1557 3.1724   3.2906 3.3089 3.2656 3.3079 3.2861 3.2944 3.1003 3.0511 2.9714 3.0013   3.0388 3.0193 3.1244 3.0131 3.0062 3.0346 3.0108 3.0355 4.8194 2.9032   2.8706 2.9575 2.8773 2.9111]]
811                   3.17518         1.51994         0.98735         -0.11254          -0.11244          0.23214          1.58772          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1919 3.3056 3.1901 3.1398 3.2069 3.2144 3.2875 3.3649 3.3017 3.3034   3.3614 3.3359 3.1348 3.316  3.183  3.0284 3.1662 3.1032 2.9537 3.0547   2.9597 2.9736 2.9575 2.9802 3.1726 3.2039 3.1795 3.1831 3.1475 3.1871   3.2736 3.3052 3.2271 3.3353 3.2569 3.3035 3.1152 2.9828 2.9552 3.0079   3.0519 3.0202 3.0596 2.9914 3.0436 3.051  2.997  3.0387 2.8483 2.9063   2.8476 2.9492 2.8578 2.8722]]
812                   3.18546         1.52439         0.99307         -0.11614          -0.11611          0.23349          1.59582          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.148  3.2486 3.1596 3.1841 3.2436 3.1635 3.2603 3.3822 3.3131 3.3272   3.3416 3.3671 3.1583 3.3454 3.1859 3.1155 3.1961 3.138  2.969  3.0037   2.9665 2.9878 2.9829 3.0157 3.1714 3.1917 3.1749 3.2013 3.1603 3.1807   3.2954 3.3322 3.2983 3.3201 3.2395 3.3018 3.1378 3.0655 2.9767 3.0998   3.0602 3.0175 3.0858 3.0113 3.007  3.0497 3.0219 3.0102 2.8216 2.8786   2.8705 2.909  2.8758 2.8631]]
813                   3.12485         1.52591         1.02704         -0.09491          -0.09448          0.23454          1.53527          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.8352 2.935  2.8132 2.6965 2.8779 2.8352 3.2279 3.1839 3.2074 3.1256   3.0109 3.0533 3.1738 3.1679 3.1017 3.0395 3.1611 3.2275 2.8605 2.9378   3.0295 2.9732 3.0224 3.1297 3.2579 3.2178 3.217  3.1943 3.2497 3.2509   3.3982 3.4758 3.3701 3.5628 3.5173 3.5075 3.1925 3.1368 3.1735 3.2303   3.0916 3.1119 3.2683 3.1868 3.3579 3.4108 3.1222 3.2315 3.3367 3.4148   3.2582 3.0879 3.3361 3.416 ]]
814                   3.15932         1.54754         1.01975         -0.10699          -0.10638          0.23528          1.56133          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.7789 3.006  2.7406 2.8709 2.9509 2.9772 3.0872 3.2255 3.2317 3.2006   3.233  3.1673 3.1426 3.3348 2.9773 3.4116 3.0557 3.2187 2.8896 2.9632   2.9819 2.8015 3.0878 2.935  3.1697 3.219  3.2775 3.2253 3.2064 3.2476   3.233  3.4079 3.5748 3.3514 3.1999 3.4046 3.2378 3.2323 3.2205 3.2059   3.1508 3.082  3.4093 3.2732 3.4742 3.3135 3.347  3.3351 3.0425 3.4014   3.3559 3.2853 3.1949 3.2355]]
815                   3.15764         1.52765         1.02323         -0.1064          -0.10533          0.23602          1.5837          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.932  2.8668 2.8654 2.8807 2.9354 3.0479 3.0616 3.1427 3.1416 3.0819   3.1944 3.2259 3.3132 3.2219 3.2091 2.9965 3.1991 3.0062 2.9397 3.0585   2.9552 2.92   2.962  3.0089 3.3365 3.2755 3.2529 3.1913 3.3134 3.2899   3.5083 3.4642 3.3193 3.4224 3.3914 3.4435 3.2167 3.1977 3.1664 3.2858   3.305  3.3346 3.2529 3.3159 3.2423 3.3644 3.3824 3.1719 3.2738 3.1208   3.28   3.3913 3.2349 3.3975]]
816                   3.1741         1.53758         1.02485         -0.11217          -0.11164          0.23685          1.6198          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.8883 2.9158 2.6725 3.0576 2.8895 3.0488 3.0544 3.1712 3.2088 2.9993   3.0446 3.2838 3.0424 3.2277 2.9987 3.1017 3.161  3.3099 2.8851 3.0271   2.9896 2.8948 2.9766 3.0369 3.2174 3.2114 3.1811 3.3517 3.1659 3.3104   3.4812 3.4058 3.4719 3.4451 3.3455 3.3715 3.3521 3.343  3.1709 3.3035   2.9558 3.0272 3.4677 3.3171 3.2617 3.4208 3.272  3.1834 3.3872 3.3466   3.1437 3.1324 3.1877 3.299 ]]
817                   3.16111         1.52984         0.99287         -0.10761          -0.10721          0.23224          1.57577          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7573 3.0251 2.9798 2.7929 2.8745 2.778  3.0957 3.1273 3.0643 3.107   3.0912 3.0874 3.0847 3.0919 2.9838 2.9614 3.0971 3.109  2.8251 2.9392   2.9073 2.8722 2.9211 2.9125 3.1788 3.2024 3.1705 3.1999 3.1612 3.1737   3.4076 3.3096 3.2565 3.3339 3.357  3.2445 3.2053 3.0353 3.0733 3.0837   3.1249 3.1606 3.2773 3.2382 3.224  3.3162 3.1598 3.1408 3.1505 3.2577   3.1808 3.1129 3.2722 2.9971]]
818                   3.16503         1.52633         0.99826         -0.10899          -0.10873          0.23294          1.60507          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.859  2.945  2.7776 2.8409 3.0085 2.9293 3.024  3.2562 3.0908 3.0558   3.1496 3.1875 3.2135 3.4003 3.0496 2.9489 2.977  3.0736 2.7576 2.8447   2.9878 2.7967 2.9889 2.9591 3.1726 3.2219 3.1707 3.185  3.1582 3.1944   3.3325 3.3531 3.3292 3.4203 3.3495 3.3188 3.0858 2.9756 3.0667 3.1119   3.108  2.9106 3.2889 3.1812 3.177  3.231  3.1246 3.2293 3.1675 3.1262   3.2504 3.1422 3.2239 3.1502]]
819                   3.14052         1.52421         0.99342         -0.1004          -0.10026          0.23175          1.53312          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8134 2.987  2.8157 2.7672 2.9239 2.9586 3.0412 3.2357 3.093  3.0339   3.1719 3.1129 3.2136 3.0521 3.0243 2.9921 3.0535 3.2488 2.8761 2.8942   2.7938 2.929  3.0534 2.8917 3.1634 3.2022 3.1742 3.1676 3.1565 3.1538   3.1307 3.3174 3.328  3.2787 3.3875 3.2614 3.2001 3.2048 3.1439 3.2278   3.2826 2.9322 3.2771 3.3107 3.2045 3.2714 3.2322 3.1944 3.1377 3.1325   3.1793 3.2299 3.207  3.1812]]
820                   3.13313         1.52671         0.98641         -0.09781          -0.09718          0.22986          1.64057          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7952 2.8873 2.7957 2.8271 2.8622 2.7974 3.0666 3.169  3.1661 3.0906   3.1583 3.1079 2.9724 3.1821 3.0779 2.8747 3.0449 3.0073 2.9023 2.9395   2.9091 3.0376 2.9553 2.86   3.1264 3.1957 3.1614 3.1907 3.1508 3.1835   3.301  3.3373 3.4394 3.2992 3.3178 3.3263 2.9498 3.0573 3.0681 2.953   3.0802 3.0954 3.3036 3.2105 3.1837 3.1765 3.228  3.1895 3.0059 3.2625   3.259  3.1574 3.2037 3.1425]]
821                   0.68097         0.62784         0.37601         0.7614          0.76216          0.06261          0.4718          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2746 3.6045 3.2616 3.3339 3.4645 3.2972 1.8293 2.3194 2.0081 1.979   2.1459 3.1955 4.4877 4.9212 4.4857 4.1917 4.5013 4.4917 5.5292 5.7995   5.5992 5.5272 5.616  5.5986 2.6129 3.0063 2.6639 2.8223 2.5356 2.735   0.8007 1.0234 0.769  0.9964 0.7586 0.9467 1.4914 1.3984 1.2001 3.0596   1.4002 1.2476 2.7465 2.3585 2.5051 2.5712 2.3215 2.3948 5.0111 5.2235   5.194  5.2688 5.212  5.118 ]]
822                   0.72895         0.63071         0.40108         0.74458          0.7457          0.07004          0.4742          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2747 3.5563 3.3355 3.2137 3.4344 3.3257 1.8991 2.3519 2.0874 1.9974   2.1937 2.1555 4.4929 4.931  4.5427 4.2007 4.4883 4.5371 5.5197 5.7963   5.5827 5.5319 5.6112 5.6054 2.6038 3.0033 2.6729 2.9423 2.5393 2.7722   0.7722 0.9437 0.8042 0.9889 0.7133 0.9072 3.0841 1.3832 1.1937 3.0579   1.4065 1.3332 2.6685 2.3337 2.4773 2.5339 2.2944 2.401  4.9747 5.1854   5.1943 5.2211 5.1746 5.1348]]
823                   0.69177         0.61606         0.37797         0.75761          0.7577          0.06428          0.47          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.263  3.3407 3.282  3.2486 3.4672 3.3017 1.948  2.401  2.0176 2.1589   2.1406 2.1254 4.5341 4.9298 4.5145 4.1971 4.4936 4.4989 5.525  3.0368   5.5966 5.5272 5.5864 5.6062 2.6636 3.0307 2.6729 2.9451 2.5309 2.7663   0.7118 0.9926 0.7754 0.9517 0.7916 0.8904 3.0975 1.3711 1.1847 1.4807   1.403  1.3401 2.7483 2.3648 2.4042 3.0027 2.3342 2.4015 4.9612 5.1817   5.1975 5.2609 5.1431 5.1276]]
824                   0.61426         0.60465         0.3546         0.78477          0.78768          0.05461          0.46868          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2004 3.5313 3.1902 3.3361 3.4647 3.2201 3.3335 2.3165 3.3672 2.6167   2.2063 2.1609 4.4753 4.9589 4.5037 4.2225 4.5209 4.4887 5.5538 5.7924   5.5979 5.5323 5.582  5.6213 2.5992 3.039  2.7273 2.803  2.5322 2.7338   0.7954 0.9659 0.8411 1.0127 0.7981 0.9206 1.537  1.3946 1.2031 1.4665   3.0628 1.2894 2.6813 2.3405 2.4357 2.5849 2.3734 2.3991 4.9896 5.1746   5.1854 5.2786 5.196  5.098 ]]
825                   3.16627         1.51678         0.98548         -0.10942          -0.10929          0.23156          1.59312          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1819 3.2439 3.1757 3.1741 3.2233 3.1468 3.2471 3.3834 3.3001 3.304   3.3139 3.3532 3.1695 3.2857 3.1405 3.0414 3.1094 3.1473 2.9386 3.0377   2.9816 2.9685 3.0218 2.9979 3.1748 3.2062 3.1782 3.183  3.1832 3.1767   3.2069 3.3315 3.2399 3.323  3.2793 3.264  3.0415 3.0508 2.9675 3.0391   3.0574 2.9794 3.0909 3.0157 3.0282 3.0664 3.0028 3.0438 2.7604 2.9072   2.9076 2.9274 2.8571 2.9037]]
826                   3.18464         1.52472         0.99333         -0.11586          -0.11585          0.23348          1.58102          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1154 3.3177 3.2079 3.1815 3.2397 3.1949 3.2862 3.3981 3.3101 3.3295   3.325  3.3725 3.1353 3.285  3.1461 3.1547 3.176  3.1567 2.949  3.036   2.9529 2.9753 2.9942 2.9685 3.1581 3.2005 3.1781 3.2094 3.1469 3.2137   3.2848 3.3311 3.3167 3.3092 3.3041 3.3045 3.1151 3.0745 2.9588 3.1263   3.0033 3.0094 3.104  2.998  3.0218 3.048  3.02   3.0296 2.8121 2.8666   2.9478 2.9265 2.9113 2.9132]]
827                   3.18519         1.52499         0.98858         -0.11605          -0.11595          0.23289          1.61012          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1608 3.2785 3.1685 3.1709 3.2578 3.152  3.2856 3.3762 3.2977 3.3276   3.3243 3.3613 3.145  3.2793 3.1524 3.0491 3.1537 3.0986 2.9732 3.0145   2.958  2.9675 2.9948 3.0186 3.1676 3.2063 3.1864 3.1905 3.1564 3.1929   3.2594 3.3035 3.2751 3.3    3.284  3.2999 3.1099 3.0425 2.9328 3.0559   3.0209 3.0573 3.0884 3.0321 3.0308 3.045  2.9989 3.0033 2.8414 2.8527   2.8806 2.8869 2.8865 2.8404]]
828                   3.18166         1.52249         0.99071         -0.11481          -0.11477          0.23297          1.56852          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1373 3.284  3.1691 3.1903 3.2177 3.1477 3.3048 3.3696 3.3136 3.3072   3.3442 3.3515 3.1917 3.3534 3.1502 3.0442 3.1587 3.1471 2.9991 3.0492   2.9632 2.9652 2.9692 3.0226 3.1668 3.1895 3.1861 3.203  3.179  3.1753   3.285  3.3063 3.2589 3.3335 3.328  3.2991 3.1242 3.0403 2.9491 3.0738   3.0475 3.0046 3.0735 3.0144 3.0048 3.0608 3.0026 3.0113 2.7965 2.903   2.8675 2.9301 2.9629 2.826 ]]
829                   3.17231         1.49328         0.88187         -0.11154          -0.06825          0.22093          1.54287          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4383 2.2644 2.3894 2.4691 2.3591 2.333  2.6879 2.8171 2.7432 2.7453   2.6031 2.6928 2.5867 2.8336 2.7472 2.7628 2.7535 2.6046 2.4894 2.752   2.5018 2.6458 2.5029 2.6149 2.825  2.9002 2.7999 2.9051 2.8045 2.869   2.8232 2.936  2.8716 2.9817 2.94   2.9626 2.8293 2.8503 2.6753 2.9691   2.8808 2.5581 3.0036 3.1645 3.0185 2.9791 3.0294 2.9124 3.0343 3.1638   2.7971 3.1936 3.1658 3.1712]]
830                   3.24267         1.5139         0.897         -0.13619          -0.08876          0.2266          1.54838          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4669 2.3198 2.322  2.2046 2.2577 2.1661 2.6073 2.67   2.4616 2.6817   2.8733 2.6418 2.672  2.8504 2.6617 2.8375 2.414  2.6783 2.6466 2.6704   2.2832 2.5845 2.5831 2.5895 2.8292 2.8125 2.842  2.8045 2.8474 2.8399   3.0088 2.9895 2.7819 3.1176 2.9642 2.8471 3.0498 2.897  2.7587 2.8176   2.7538 3.0534 2.9456 2.8816 3.0393 2.9774 3.0356 2.9352 3.1494 3.0383   3.1164 3.0374 3.0741 3.0764]]
831                   3.16937         1.49435         0.89206         -0.11051          -0.07087          0.22203          1.53993          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4821 2.3364 2.3028 2.3725 2.1731 2.5949 2.5991 2.5571 2.7968 2.6659   2.7248 2.8913 2.9033 2.7009 2.595  2.7159 2.6095 2.6858 2.702  2.476   2.894  2.4444 2.7261 2.7385 2.8292 2.8561 2.9068 2.925  2.8077 2.7875   3.1611 2.9309 3.0303 3.0855 3.0489 3.1607 2.7776 2.9696 2.7906 2.7554   2.7159 2.8843 2.9464 3.0319 2.816  3.0176 3.0648 2.837  2.9835 2.7734   3.2299 3.1648 3.0989 3.0958]]
832                   3.23156         1.51666         0.90894         -0.1323          -0.09106          0.22625          1.60257          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.4387 2.6605 2.3404 2.3213 2.4812 2.3694 2.6003 2.7838 2.5881 2.648   2.6419 2.8107 2.8115 2.8849 2.6904 2.7956 2.7374 2.7317 2.5272 2.5364   2.6944 2.5357 2.572  2.734  2.8399 2.961  2.8586 2.8722 2.7926 2.8429   2.9331 3.189  3.0053 3.0384 2.9759 3.0756 2.8945 2.8872 2.9764 2.809   2.7245 2.6756 2.9387 2.7978 3.0264 2.9842 2.9806 2.86   3.0294 3.0346   3.1656 2.7278 3.0142 2.9629]]
833                   6.39879         2.03602         0.68586         -1.24206          -0.0449          0.49598          1.6147          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.2618 0.8057 1.0226 1.59   0.4331 0.9456 1.3788 1.0193 1.8498 1.4814   1.2884 0.9072 0.5196 1.6382 1.054  1.2092 1.3426 1.8192 0.9594 1.4876   1.1368 1.2667 1.0687 0.6868 1.4484 0.7273 0.9785 1.1155 1.2562 0.8594   1.1328 1.581  1.7872 1.4025 0.8793 1.6963 1.5644 0.9167 1.2199 1.3478   1.0693 1.6093 0.9102 1.3918 1.6975 1.8174 1.4348 1.5875 1.6279 1.5934   1.68   1.3636 2.1118 1.5384]]
834                   6.3127         1.99537         0.66986         -1.21189          -0.13579          0.47348          1.43157          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.028  1.1977 0.9735 1.3426 1.5688 1.0167 1.4185 1.2492 1.1395 1.4715   1.3639 1.7327 0.9173 1.8402 1.1749 1.1143 1.738  1.0782 1.2563 1.4005   1.1383 1.2973 1.4601 0.51   1.4149 1.7541 1.0587 1.6287 1.5332 1.2423   1.3449 1.6952 1.8447 1.3477 1.3787 2.0821 1.3075 1.5133 0.9014 1.5608   1.4141 1.2385 1.2946 1.2131 1.8974 1.4701 1.6633 1.3762 1.799  1.5129   1.0821 1.7465 1.6931 1.2627]]
835                   6.73986         2.08938         0.67098         -1.36156          -0.04803          0.52825          1.58768          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.1362 0.7877 1.299  1.2322 0.9661 0.6593 1.5697 0.9547 1.2909 1.0227   0.9091 0.694  1.3119 1.2184 0.8757 1.1673 1.1633 1.0232 1.579  1.3424   0.9672 1.2668 1.1296 0.6369 1.7036 1.7428 1.1024 1.3592 1.5183 1.4016   1.4524 1.5018 1.4396 1.3314 0.9567 1.1298 1.1624 0.9036 1.3948 1.3313   1.3781 0.9852 0.7959 0.9867 1.6401 1.3668 0.7711 1.5234 0.9079 1.0492   1.1659 2.1212 1.0017 1.4514]]
836                   6.51116         2.05957         0.68904         -1.28143          -0.07909          0.5014          1.75005          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.0218 1.1656 0.9238 1.5358 1.083  0.6833 1.0356 1.4107 1.2554 1.4403   1.5399 1.3894 1.3756 1.3781 1.6611 1.8605 0.931  1.4629 0.7294 1.3164   1.1443 1.0408 1.1578 1.0176 1.2074 1.3528 0.9027 1.3645 1.3001 1.4042   1.2569 1.3499 1.6344 1.7414 1.3259 1.6302 1.3376 0.7668 0.9759 1.4766   1.6597 1.228  0.8712 0.8825 1.1557 1.809  1.4169 1.238  1.6164 1.759   1.401  1.3986 0.9777 1.3018]]
837                   5.14535         1.88367         1.55079         -0.80287          -0.1722          0.36864          1.70258          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.729  3.77   3.9194 3.9779 4.0469 3.9551 4.4263 4.4315 4.3778 3.9963   4.3632 4.444  3.7493 4.8006 4.8418 4.2578 4.1764 4.9215 4.0338 3.8242   4.1486 4.681  4.3676 4.2428 4.6391 4.856  4.5837 4.3535 4.7153 4.4951   4.8425 5.0039 4.8474 4.9181 5.4011 4.7551 4.7792 4.8421 4.375  4.0002   4.5908 3.8498 4.8579 4.5844 4.4464 4.6464 4.8942 4.8017 4.7223 4.7668   4.5813 4.7312 4.5879 4.829 ]]
838                   5.3426         1.92568         1.58386         -0.87198          -0.16375          0.37788          1.70727          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.1736 3.8373 4.1956 4.4318 4.1751 4.4399 4.3612 4.3554 4.7355 4.4682   4.4779 3.7404 4.3891 4.494  4.5192 4.2926 4.3878 3.8475 4.3565 4.0475   4.1162 4.4431 4.3733 4.5292 4.52   4.8815 4.3799 4.8125 4.444  4.3738   4.7597 5.2587 5.3451 4.8289 4.9471 4.6469 4.9691 5.0906 4.671  4.6143   4.2354 4.334  5.0505 4.8395 4.4029 4.4023 5.3631 4.6851 5.1759 4.0961   5.5917 4.7128 4.8815 4.6042]]
839                   5.21117         1.90056         1.54175         -0.82593          -0.13801          0.37081          1.82555          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.1046 4.0365 4.3443 3.9858 4.1155 4.1829 4.474  4.635  4.2851 4.6614   4.7187 4.426  4.9026 4.8433 4.501  4.1046 4.3128 4.3307 4.0088 4.6423   4.1765 4.3062 4.37   4.2864 4.2736 5.1098 4.7292 4.5715 4.5604 4.6863   4.6569 4.4091 4.5703 5.1095 4.4934 4.7598 4.838  4.3558 4.9296 4.6873   4.4396 4.1454 4.6787 4.7029 4.6426 4.7993 4.7557 5.0132 4.6033 4.376   4.5333 4.7562 5.0906 4.9648]]
840                   4.82806         1.82441         1.49212         -0.69169          -0.06898          0.35171          1.70448          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.424  3.6709 4.3478 4.3516 3.9996 4.1924 4.5376 4.2297 4.2328 4.5512   4.0471 4.3774 4.582  4.2859 4.4909 4.2605 4.6362 4.2657 4.2035 4.1032   3.9097 4.464  4.247  4.2553 4.4002 4.6036 4.3816 4.0028 4.5987 4.5778   4.9153 4.4809 4.7946 5.0353 4.3044 5.0464 4.3858 4.0367 3.9268 3.9583   4.7035 5.1587 4.3175 4.912  4.6491 4.8055 5.0782 4.7081 4.3879 5.1556   4.7731 4.4797 5.0679 5.01  ]]
841                   3.22435         1.51668         0.91121         -0.12977          -0.10448          0.22611          1.63642          MLPRegressor(activation='tanh',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.6785 2.8675 2.6832 2.6154 2.5953 2.3299 2.5635 2.704  2.7631 2.7204   2.6386 2.5245 2.7271 2.9247 2.7881 2.7135 2.5648 3.0515 2.6421 2.7598   2.4774 2.7191 2.6834 2.4777 2.9512 2.9867 2.9783 2.888  2.9093 2.9861   3.2381 2.925  3.0903 3.1299 3.0373 3.0659 2.8279 3.0047 2.8389 2.8674   2.9528 2.9498 3.2314 2.9447 3.1938 3.2646 3.1205 2.9554 2.837  3.1323   3.1356 3.1298 2.9316 3.1099]]
842                   3.16303         1.5282         0.92313         -0.10829          -0.09022          0.22498          1.62922          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.6266 2.8139 2.5027 2.6748 2.1493 2.3381 2.8183 2.8466 2.7016 2.9051   2.8289 2.8121 2.6973 3.133  3.0186 2.7432 2.5727 2.8678 2.7185 2.664   2.7504 2.6818 2.5219 2.5864 2.9159 2.9366 2.9152 2.9744 2.9121 2.9464   3.2505 3.0176 3.0367 2.9627 3.1278 3.1193 2.9959 3.1149 2.8992 2.9122   2.8189 2.8332 3.2642 3.2918 3.0841 3.0339 3.1833 3.2856 3.1969 3.2561   3.1959 3.0563 3.2141 3.3462]]
843                   3.26451         1.52664         0.9263         -0.14384          -0.11876          0.23065          1.64867          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.5774 2.7245 2.4845 2.3211 2.8675 2.2251 2.5643 2.7903 2.638  2.7038   2.7853 2.6428 2.9563 2.9271 2.7623 2.639  2.7597 2.8965 2.6885 2.7085   2.4151 2.4581 2.6744 2.6867 2.9256 3.0083 2.9498 2.9596 2.8833 2.908   3.1765 3.1363 3.2015 3.0255 3.2288 3.0586 3.0274 2.8818 2.8037 2.9297   2.9557 2.834  3.202  3.1238 3.1404 3.1231 2.8296 3.0591 3.1066 2.9048   3.2496 3.0669 3.2753 3.0138]]
844                   3.07955         1.47843         0.91011         -0.07904          -0.05571          0.21865          1.60893          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4393 2.128  2.6192 2.661  2.4683 2.6867 2.827  2.6119 2.8119 2.795   2.6469 2.7213 2.8917 2.8258 2.6323 3.1816 3.0285 2.9277 2.5961 2.5385   2.7026 2.6745 2.6331 2.6917 2.9404 2.9511 2.9618 2.9564 2.9287 2.9764   3.2288 3.2273 2.9393 3.1529 3.3763 3.0008 2.7612 2.5799 3.0736 2.7422   2.815  3.0723 3.1607 3.0842 3.0164 3.1203 2.9805 2.9701 3.0607 3.2162   3.2966 2.7663 3.0182 3.2858]]
845                   2.96113         1.48734         0.98066         -0.03754          -0.03694          0.22227          1.55395          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1143 3.1142 3.1138 3.1893 3.1557 3.1296 3.1179 3.2112 3.1672 3.2123   3.2855 3.2219 3.1168 3.262  3.1379 3.1763 3.1085 3.1904 3.0774 3.0929   3.1738 3.1608 3.0847 3.1517 3.1143 3.2492 3.1308 3.1648 3.1759 3.17   3.2031 3.3241 3.2423 3.1898 3.236  3.1722 3.1691 3.1449 3.2516 3.2695   3.2642 3.1814 3.1722 3.2779 3.2406 3.1429 3.1854 3.1423 3.0859 3.2212   3.24   3.114  3.1674 3.1523]]
846                   3.43578         1.62385         1.2068         -0.20385          -0.04584          0.27099          1.51795          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.8577 3.9807 3.6039 3.8123 3.8272 3.7721 3.8273 3.8854 3.8546 3.8372   3.9171 3.8665 3.8216 3.8646 3.7908 3.7804 3.8574 3.5722 3.6402 3.568   3.7551 3.8256 3.8286 3.7703 3.7718 3.8317 3.8141 3.7219 3.8791 3.7904   3.7156 3.7647 3.9155 3.8556 3.9064 3.8127 3.8814 3.8206 3.9456 3.9304   3.9171 3.6907 3.6357 3.9098 3.7662 3.8881 3.8824 3.8164 3.5563 3.7705   3.7737 3.8683 3.8284 3.8187]]
847                   2.96431         1.47606         0.95688         -0.03866          -0.03847          0.21953          1.57947          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1027 3.1196 3.0904 3.085  3.1048 3.0992 3.1137 3.1546 3.1259 3.115   3.1182 3.1328 3.087  3.1255 3.0801 3.0541 3.0895 3.0862 3.0529 3.0874   3.0719 3.0444 3.0677 3.0411 3.1156 3.1463 3.1224 3.1299 3.0994 3.1207   3.1553 3.1772 3.146  3.1713 3.1443 3.1619 3.1401 3.1495 3.1273 3.1577   3.1531 3.1437 3.1553 3.1164 3.1308 3.1435 3.1095 3.1156 3.0742 3.0848   3.0803 3.1    3.0903 3.0697]]
848                   2.96068         1.47821         0.96164         -0.03739          -0.03735          0.21993          1.58367          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1441 3.1248 3.0942 3.1008 3.1109 3.0934 3.1104 3.1497 3.1318 3.1266   3.1295 3.141  3.0794 3.1199 3.0845 3.1074 3.1372 3.0811 3.1015 3.0815   3.0564 3.059  3.0613 3.0598 3.1563 3.1466 3.1228 3.1289 3.1138 3.1697   3.1495 3.1619 3.1466 3.2153 3.1884 3.2113 3.1512 3.1403 3.126  3.157   3.1503 3.1831 3.1483 3.1189 3.1717 3.186  3.1688 3.1631 3.1077 3.1201   3.0815 3.0867 3.0746 3.078 ]]
849                   2.97724         1.49086         0.98257         -0.04319          -0.04259          0.2235          1.5638          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1061 3.1707 3.1552 3.1387 3.1484 3.1407 3.2177 3.2759 3.1709 3.241   3.1489 3.2284 3.1517 3.2152 3.199  3.143  3.1114 3.0999 3.1428 3.1486   3.2021 3.1004 3.08   3.0934 3.1177 3.1697 3.1669 3.2096 3.1222 3.1256   3.1892 3.2472 3.2606 3.1941 3.2144 3.2712 3.2347 3.233  3.1675 3.2803   3.2432 3.2733 3.1461 3.1314 3.2432 3.2573 3.1801 3.1117 3.165  3.2273   3.1177 3.1008 3.1277 3.2027]]
850                   3.3354         1.5968         1.2025         -0.16868          -0.01914          0.26627          1.48072          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.8671 3.5334 3.739  3.7946 3.8097 3.8277 3.8587 3.985  3.7845 4.0115   3.8149 3.7712 3.8368 3.7596 3.7315 3.8366 3.7634 3.5027 3.7805 3.7994   3.8722 3.7738 3.8807 3.6685 3.6242 3.9756 3.9411 3.8436 3.367  3.9122   3.8492 3.8703 3.7141 3.9251 3.6475 3.9508 3.8736 3.5623 3.7222 3.6123   3.7099 3.6741 3.8202 3.8619 3.8521 3.8299 3.8841 3.7397 3.7611 3.7804   3.9546 3.8303 3.7307 3.7881]]
851                   2.96074         1.47674         0.95654         -0.03741          -0.03722          0.21933          1.58347          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0849 3.1289 3.0955 3.0899 3.1068 3.0798 3.1136 3.1565 3.1241 3.1339   3.1362 3.144  3.0768 3.1153 3.0811 3.07   3.092  3.0814 3.0624 3.085   3.0618 3.0484 3.0596 3.0726 3.1049 3.1414 3.1221 3.1345 3.0964 3.1278   3.1482 3.1507 3.1543 3.1796 3.1459 3.1523 3.1694 3.1484 3.1241 3.1486   3.1438 3.1397 3.146  3.116  3.1259 3.1312 3.1232 3.1219 3.0713 3.0929   3.0781 3.0916 3.0935 3.0738]]
852                   2.96796         1.47892         0.96223         -0.03994          -0.0399          0.22036          1.56052          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.0938 3.1232 3.1032 3.1012 3.1175 3.0998 3.1117 3.2045 3.1379 3.1774   3.1808 3.1501 3.0883 3.1692 3.0837 3.0593 3.0848 3.124  3.1013 3.129   3.0636 3.0577 3.11   3.0566 3.1532 3.1495 3.1158 3.1251 3.1021 3.1171   3.1443 3.1661 3.1507 3.2084 3.147  3.1627 3.2042 3.1467 3.1183 3.1465   3.1373 3.1909 3.1557 3.1582 3.1191 3.1819 3.1189 3.1219 3.0582 3.081   3.0868 3.1341 3.0766 3.0819]]
853                   3.03909         1.51072         1.04464         -0.06486          -0.04554          0.23446          1.589          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4102 3.5965 3.2367 3.6654 3.3727 3.6517 2.9842 3.064  3.3138 3.6118   3.0528 3.6296 3.3655 3.2208 3.4424 3.4606 2.9551 3.0386 3.3165 3.205   3.4125 3.493  3.3901 3.5763 2.9773 3.7296 2.9885 3.1195 3.5055 3.037   3.4484 3.541  3.6903 3.3899 3.4154 3.1182 3.4964 3.1019 3.6072 3.2779   3.1811 3.6357 3.6467 3.2819 3.5503 3.5763 3.7082 3.7135 3.5686 3.6351   3.3983 3.2973 2.9457 2.963 ]]
854                   3.77588         1.61894         0.93042         -0.32302          -0.27623          0.26203          1.76652          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2795 2.5858 3.422  2.307  3.7624 3.0896 1.9806 3.268  2.2133 2.3746   3.5934 1.8606 2.7345 3.0662 2.4035 2.6753 2.0015 2.1787 2.2024 2.0106   3.3376 2.9831 3.2565 2.3512 2.9534 3.3127 3.1911 3.0696 1.601  2.8308   3.371  2.7381 2.5741 2.9434 2.2385 3.3053 3.7014 3.3686 3.0752 1.9806   3.4695 3.1061 2.9342 3.2759 3.5037 1.9411 3.3437 2.153  2.994  2.071   2.5597 2.6909 2.1447 2.2194]]
855                   2.96751         1.48066         0.96514         -0.03978          -0.03978          0.22071          1.55857          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1128 3.1491 3.1224 3.1245 3.133  3.1194 3.1361 3.1758 3.1499 3.1519   3.1584 3.1609 3.1115 3.1529 3.1082 3.0816 3.1056 3.108  3.0771 3.1013   3.0833 3.0753 3.0783 3.0804 3.1318 3.1697 3.1381 3.1508 3.1256 3.1445   3.1755 3.1929 3.1765 3.1937 3.1738 3.1875 3.1811 3.1669 3.15   3.1742   3.1669 3.162  3.1719 3.1385 3.1435 3.1566 3.1407 3.1416 3.0811 3.1065   3.0979 3.1089 3.1034 3.0977]]
856                   3.08551         1.49347         0.91435         -0.08112          -0.07035          0.21931          1.64742          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.3699 2.9344 2.9459 2.8999 3.4051 2.9139 2.8634 2.9565 2.9898 2.9707   2.9102 2.8965 2.8935 2.9536 2.8694 2.8754 2.9036 2.8392 2.8922 2.9355   2.8201 2.8807 2.87   2.8208 2.8635 2.9495 2.9054 2.9504 2.8469 2.9323   2.9802 2.9575 2.9763 3.0319 2.8976 3.0267 2.9482 3.3616 3.3926 2.9454   3.0369 3.3776 2.9813 2.8857 2.9539 2.9875 2.8909 2.885  2.8255 2.9603   2.8426 2.8477 2.8795 2.9335]]
857                   3.14535         1.5473         1.06167         -0.10209          -0.07568          0.2413          1.4601          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1999 3.4786 3.5552 3.5832 3.2011 3.4936 3.6611 3.4153 3.698  3.217   3.658  3.5946 3.2492 3.7242 3.5408 3.5546 3.5889 3.6227 3.5757 3.3619   3.2257 3.5509 2.9815 3.6627 3.6817 3.4566 3.377  3.2279 3.0551 3.6573   3.5444 3.1981 3.4483 3.5447 3.5735 3.6524 3.2804 3.667  3.1926 3.5966   3.5429 3.1694 3.2272 3.6305 3.6254 3.0763 3.0019 3.503  2.9987 3.0328   2.9745 3.4957 3.3731 2.9588]]
858                   3.46017         1.52031         0.79745         -0.2124          -0.16785          0.23096          1.41152          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.3056 2.1576 3.3761 3.3441 2.8832 2.765  3.5457 3.1931 2.0722 2.1435   2.0008 2.0019 3.2807 3.5214 2.068  2.2133 2.2779 3.3239 2.0839 2.9339   2.5247 1.8438 2.7421 3.4021 3.0534 3.4332 3.4496 3.1275 2.2296 3.5368   3.0935 2.381  2.2202 1.9752 2.6981 2.6622 2.2034 3.2855 2.9396 3.5485   2.2692 3.2432 2.9625 2.6135 3.3005 2.9401 3.2679 3.6208 3.3581 3.2286   2.1956 3.3913 2.1506 1.6956]]
859                   2.96567         1.48041         0.96516         -0.03913          -0.03913          0.22063          1.55772          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1134 3.1461 3.1197 3.1203 3.1335 3.1201 3.1387 3.1783 3.1485 3.1519   3.1583 3.1639 3.1093 3.1538 3.1067 3.0844 3.109  3.1106 3.0764 3.1016   3.0852 3.0757 3.084  3.0842 3.1318 3.1697 3.1381 3.1508 3.1255 3.1445   3.1739 3.1936 3.174  3.1931 3.1746 3.1869 3.1819 3.1688 3.1507 3.1749   3.1669 3.1628 3.1712 3.1408 3.1466 3.156  3.135  3.1425 3.0862 3.1044   3.106  3.1089 3.103  3.0951]]
860                   2.95862         1.44064         0.88852         -0.03666          -0.02283          0.21126          1.60757          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9287 2.9126 2.881  2.9108 2.9142 2.8934 2.9131 2.9881 2.9272 2.939   2.9226 2.9109 2.9375 2.9329 2.8676 2.871  2.9642 2.9018 2.8199 2.8849   3.2831 2.8316 2.9003 2.8426 3.2878 2.9213 2.9162 2.8849 2.9295 2.8869   2.9851 3.0128 2.9763 2.8872 2.9477 2.9215 2.9322 2.9061 2.9134 3.3347   2.947  2.9247 2.9348 2.9239 2.8737 2.9355 2.9628 2.8741 2.9631 2.9466   2.9167 2.894  2.8855 2.9003]]
861                   2.986         1.4914         0.98147         -0.04626          -0.04567          0.22357          1.54087          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1942 3.2436 3.1737 3.1102 3.2011 3.2035 3.1704 3.2436 3.1781 3.1876   3.2179 3.1557 3.2016 3.1885 3.2058 3.0819 3.0997 3.1479 3.0844 3.237   3.0841 3.1592 3.1287 3.0644 3.1081 3.2787 3.1494 3.1531 3.1392 3.2947   3.1935 3.2224 3.2199 3.2499 3.1614 3.2083 3.2117 3.1817 3.2483 3.244   3.2896 3.2411 3.2021 3.1648 3.1911 3.1929 3.1097 3.1791 3.1717 3.0796   3.1447 3.1037 3.1401 3.108 ]]
862                   3.49228         1.64092         1.21672         -0.22365          -0.06765          0.27429          1.50932          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.4932 3.8059 3.7577 3.8    3.9541 3.9118 3.8186 3.957  3.7437 3.8531   3.6056 3.9406 3.7961 3.8957 3.8693 3.7071 3.634  3.7792 3.7947 3.7776   3.455  3.6891 3.811  3.7862 3.8656 3.8317 3.8464 3.8322 3.7417 3.6771   3.944  3.7889 3.8497 3.8368 3.8483 3.8835 3.9129 3.8451 3.8577 3.9261   3.9512 3.9667 3.8126 3.7578 3.9003 3.655  3.8758 3.8697 3.7549 3.6068   3.8724 3.703  3.7357 3.779 ]]
863                   2.97088         1.47913         0.959         -0.04096          -0.0408          0.22006          1.58152          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0741 3.1174 3.1035 3.0758 3.1055 3.0926 3.1027 3.1561 3.1154 3.114   3.1276 3.1492 3.0862 3.1354 3.0757 3.0608 3.0891 3.0895 3.0509 3.0841   3.064  3.0455 3.0639 3.0711 3.1194 3.1577 3.1253 3.1337 3.1034 3.133   3.1572 3.1747 3.1528 3.181  3.1611 3.1644 3.1613 3.1444 3.1413 3.148   3.1419 3.1505 3.1559 3.1246 3.1288 3.1487 3.1265 3.131  3.0677 3.0753   3.0781 3.0819 3.087  3.0877]]
864                   2.96044         1.48019         0.95943         -0.0373          -0.03726          0.21965          1.57832          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.0961 3.1229 3.101  3.0963 3.1123 3.0957 3.1629 3.1998 3.1215 3.1297   3.1328 3.1889 3.0886 3.1698 3.0881 3.0601 3.0847 3.129  3.0571 3.0789   3.1045 3.0549 3.1023 3.0611 3.1091 3.1513 3.1635 3.1297 3.1481 3.1189   3.1502 3.1601 3.1432 3.1673 3.143  3.1636 3.1548 3.1959 3.1222 3.1538   3.1919 3.135  3.1396 3.1621 3.1701 3.1317 3.1644 3.116  3.1058 3.0867   3.0744 3.094  3.0871 3.0686]]
865                   2.94512         1.47972         0.97417         -0.03193          -0.03142          0.22092          1.50507          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2116 3.228  3.1227 3.1996 3.1384 3.1193 3.1517 3.146  3.1682 3.202   3.1558 3.2326 3.1631 3.2165 3.1601 3.186  3.1755 3.2132 3.1405 3.1802   3.2201 3.0522 3.0899 3.0751 3.1419 3.2101 3.2506 3.2192 3.1245 3.1385   3.2118 3.2502 3.1718 3.1937 3.3138 3.2237 3.1721 3.1961 3.1852 3.1847   3.161  3.2116 3.2518 3.1566 3.1361 3.1936 3.1157 3.2027 3.0979 3.1486   3.1633 3.1638 3.1453 3.124 ]]
866                   3.44591         1.61901         1.21044         -0.2074          -0.05887          0.2716          1.37793          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.8107 3.9429 3.734  3.8708 3.8126 3.7118 3.8618 3.9592 3.625  3.6734   3.8822 3.866  3.8091 3.7988 3.7092 3.5337 3.43   3.7915 3.8583 3.6935   3.8351 3.7832 3.7742 3.8254 3.5291 3.8839 3.8784 3.7417 3.7654 3.9014   3.9005 3.8331 3.8897 3.99   3.6832 3.5543 3.8722 3.8164 3.6572 3.9267   3.9722 3.6689 3.951  3.9101 3.8371 3.7975 3.9007 3.6933 3.5823 3.8961   3.6525 3.758  3.8392 3.6173]]
867                   2.9608         1.47616         0.9564         -0.03743          -0.03727          0.21934          1.58277          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0931 3.137  3.0962 3.1019 3.0948 3.0987 3.1109 3.1497 3.1276 3.1405   3.1334 3.1369 3.0847 3.1268 3.0951 3.0646 3.0734 3.0831 3.0618 3.0743   3.072  3.0565 3.0542 3.0735 3.1212 3.1472 3.131  3.1217 3.1148 3.1169   3.1527 3.1622 3.1485 3.1648 3.1541 3.1725 3.1542 3.1506 3.1383 3.1452   3.1507 3.1307 3.1493 3.1303 3.1175 3.1432 3.1173 3.1295 3.0735 3.081   3.0691 3.0991 3.0831 3.0819]]
868                   2.9722         1.47884         0.95984         -0.04142          -0.04137          0.22038          1.58007          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0871 3.1262 3.1368 3.1024 3.1079 3.099  3.1149 3.1526 3.1337 3.1722   3.1306 3.195  3.1291 3.1731 3.1299 3.0615 3.0843 3.0826 3.0506 3.0889   3.0691 3.0551 3.0592 3.0634 3.1117 3.1552 3.1172 3.1192 3.1105 3.1183   3.1586 3.1675 3.1473 3.1649 3.194  3.1582 3.1481 3.1909 3.1185 3.197   3.1933 3.1335 3.1949 3.1082 3.1211 3.1373 3.1261 3.1211 3.0552 3.1261   3.1294 3.0838 3.0811 3.0756]]
869                   3.30181         1.59512         1.10173         -0.15691          -0.13592          0.25015          1.58302          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.6928 3.431  2.9648 3.5284 3.157  3.2089 3.6922 3.4872 3.6554 3.7406   3.2975 3.7095 3.2613 3.5354 3.3733 3.3195 3.0787 3.4884 3.571  3.0289   3.1173 2.9121 3.4684 3.2709 3.1563 3.34   3.471  3.0257 2.9679 3.695   3.6004 3.6638 3.85   3.7109 3.5289 3.4846 3.5115 2.9114 3.5548 3.154   3.6689 2.9745 3.4263 3.3262 3.3779 3.6245 3.5042 3.566  3.0562 3.3174   3.1587 3.3377 3.3001 3.2942]]
870                   3.27298         1.47248         0.8759         -0.14681          -0.09195          0.22594          1.33895          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.2106 3.37   2.9309 3.0742 2.8463 2.8587 2.9897 3.2095 2.9239 2.1438   3.4714 2.0353 1.7985 2.2983 3.0031 2.1576 2.1218 1.9564 3.0984 3.3742   3.0356 3.1571 2.4634 2.9637 2.8278 2.2482 3.6479 2.1728 3.3564 2.1922   3.4855 3.257  3.2842 3.536  1.9951 2.3956 2.0521 2.4631 2.8774 2.6565   2.4177 3.1909 2.466  3.0849 2.922  2.0838 2.0293 2.9994 2.8605 2.4028   3.3918 2.8154 3.3193 2.0422]]
871                   2.96662         1.48071         0.96518         -0.03947          -0.03947          0.22067          1.55907          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1131 3.1446 3.118  3.1217 3.1342 3.1201 3.1376 3.1769 3.1513 3.1527   3.1562 3.1656 3.1078 3.1502 3.1071 3.0835 3.1074 3.1087 3.0779 3.1022   3.0809 3.0757 3.0826 3.0849 3.1319 3.1696 3.1381 3.1507 3.1256 3.1446   3.1756 3.1921 3.1754 3.1931 3.1743 3.1876 3.1834 3.165  3.1493 3.1749   3.1671 3.1595 3.172  3.1398 3.1491 3.1588 3.1389 3.1449 3.0847 3.1048   3.105  3.1092 3.0996 3.0958]]
872                   3.03511         1.4744         0.90784         -0.06346          -0.05066          0.21655          1.62427          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8851 2.971  2.8648 2.9757 2.9478 2.9396 2.939  2.9238 2.942  2.9092   3.4233 2.9543 2.9289 2.9438 2.8351 2.8472 2.8803 2.8969 2.8363 2.8394   2.8754 2.8041 2.9279 3.3258 2.9893 2.9902 2.873  2.8802 2.8886 2.9545   2.9595 2.9763 2.9783 3.0564 3.3202 2.9708 2.9637 2.9381 2.931  3.0231   2.9557 2.932  2.9221 2.887  2.962  2.9027 2.8922 2.9637 2.8533 2.8436   2.8003 2.9622 2.9039 2.9212]]
873                   3.35928         1.59876         1.09476         -0.17705          -0.1568          0.25305          1.50837          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2718 3.1613 3.5427 3.6232 3.3255 3.0095 3.5302 3.5565 3.502  3.0775   3.1827 3.3692 3.6827 3.1197 2.9927 3.4221 3.2334 3.581  2.9645 2.9139   2.9399 3.3386 2.9574 3.0083 3.6313 3.2263 3.6896 3.7015 3.0031 3.6548   3.166  3.5523 3.7489 3.4777 3.5473 3.6438 3.7447 3.6503 3.6128 3.6792   3.5863 3.2127 3.0113 3.5396 3.455  3.4707 3.5649 3.599  3.0228 3.7026   3.1655 2.9374 3.7005 3.3104]]
874                   3.77194         1.57307         0.83645         -0.32164          -0.20793          0.24694          1.39538          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.753  3.4892 2.3986 2.0453 2.2928 3.4368 2.5802 2.8165 2.8925 2.3607   2.3617 2.1234 3.0549 3.5034 2.137  2.0075 3.1143 2.4374 2.0948 2.078   3.1247 2.0824 2.2499 2.2076 2.3644 3.3146 3.3997 2.2668 2.4759 2.0514   3.561  3.5706 2.5916 2.395  3.0345 1.9053 2.2562 2.2355 2.7295 1.8465   1.7057 2.1854 2.9571 2.9871 2.0122 3.5227 2.9711 2.1812 2.1432 2.6779   2.6497 1.8639 3.1445 1.9278]]
875                   2.96671         1.48046         0.96514         -0.0395          -0.0395          0.22068          1.55897          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1148 3.1472 3.1185 3.1255 3.1333 3.1199 3.1365 3.1787 3.1513 3.1506   3.1545 3.167  3.1105 3.1485 3.1081 3.0818 3.1073 3.1063 3.0775 3.1003   3.0815 3.0745 3.0818 3.0831 3.1318 3.1695 3.1383 3.1507 3.1255 3.1444   3.1747 3.1944 3.1729 3.1933 3.1736 3.1883 3.178  3.1693 3.1488 3.1749   3.168  3.1617 3.1703 3.1375 3.1441 3.1587 3.1387 3.1459 3.0848 3.1024   3.1067 3.1083 3.1071 3.0939]]
876                   3.02096         1.46003         0.91988         -0.05851          -0.04725          0.21686          1.63182          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.8938 2.8976 2.8456 2.8636 2.9826 3.3615 2.9769 2.933  3.3799 2.943   3.0087 2.9561 2.8933 2.8661 2.9424 2.8613 2.9263 2.9353 3.272  2.9238   2.8575 2.8508 2.8546 2.8634 2.9267 2.9592 2.8965 2.9508 2.9178 2.9287   2.9786 3.4551 2.9482 2.9651 2.9904 2.9802 2.9716 2.953  2.8739 2.9157   3.0046 2.9679 2.9711 2.9407 2.9228 2.9302 2.943  2.93   2.8868 2.9091   2.8338 2.9285 2.9451 2.8405]]
877                   2.96394         1.48696         0.97809         -0.03853          -0.0377          0.22236          1.53832          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.2141 3.1495 3.1061 3.1889 3.146  3.1348 3.2099 3.1754 3.2719 3.1781   3.224  3.1582 3.148  3.143  3.1854 3.1311 3.1087 3.1686 3.0707 3.0975   3.0755 3.2169 3.0841 3.1882 3.2472 3.3013 3.2267 3.2002 3.1723 3.1966   3.2717 3.1791 3.1729 3.232  3.1823 3.2186 3.2294 3.2226 3.1489 3.2116   3.2344 3.2651 3.2782 3.1392 3.1837 3.2209 3.26   3.2253 3.146  3.2307   3.1196 3.1559 3.1944 3.1093]]
878                   3.28149         1.59264         1.18225         -0.14979          -0.00093          0.26175          1.48518          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.7705 3.6243 3.7149 3.8691 3.7508 3.7445 3.8404 3.9043 3.9126 3.8206   3.4831 3.7164 3.6999 3.7067 3.7804 3.7073 3.7552 3.6059 3.8226 3.7202   3.8506 3.8528 3.8097 3.7474 3.9185 3.8867 3.843  3.7948 3.8173 3.8761   3.97   3.6729 3.8568 3.92   3.5787 3.4701 3.9218 3.9761 3.8629 3.5179   3.5624 3.7305 3.9128 3.8515 3.9696 3.8921 3.9028 3.8067 3.8364 3.759   3.7527 3.8424 3.8592 3.7585]]
879                   2.96567         1.47698         0.95752         -0.03913          -0.03896          0.21966          1.57847          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.105  3.1132 3.1007 3.103  3.1011 3.0903 3.1039 3.1376 3.1369 3.1201   3.1248 3.1475 3.0886 3.1135 3.0921 3.0623 3.0878 3.0833 3.0551 3.0805   3.0563 3.0621 3.0604 3.0552 3.1    3.1406 3.1184 3.1253 3.0989 3.1256   3.156  3.1759 3.1511 3.174  3.1505 3.1683 3.1499 3.1554 3.1419 3.1539   3.156  3.1397 3.1486 3.1243 3.1233 3.1398 3.1272 3.1311 3.0701 3.0712   3.0735 3.0976 3.0862 3.0717]]
880                   2.97538         1.48124         0.95987         -0.04254          -0.04244          0.22034          1.58412          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1388 3.1315 3.1045 3.1412 3.1542 3.0956 3.1153 3.1451 3.1243 3.123   3.1311 3.1875 3.0827 3.1247 3.0804 3.0519 3.0882 3.0824 3.0517 3.0765   3.0622 3.0512 3.057  3.0572 3.1041 3.1498 3.1115 3.1351 3.095  3.1694   3.1417 3.1682 3.1386 3.1682 3.1469 3.2109 3.1637 3.1464 3.1253 3.1507   3.1925 3.143  3.1489 3.1677 3.1258 3.1356 3.1642 3.1167 3.0569 3.1199   3.0795 3.0846 3.0775 3.0649]]
881                   2.96646         1.48252         0.98722         -0.03941          -0.03849          0.22345          1.56083          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2055 3.1513 3.2155 3.1312 3.1498 3.2298 3.1931 3.1659 3.1618 3.1392   3.1344 3.2265 3.2275 3.1763 3.1995 3.1167 3.1937 3.0978 3.1797 3.0773   3.1516 3.125  3.1163 3.2605 3.1442 3.2381 3.2012 3.2316 3.1857 3.2088   3.2888 3.2801 3.1681 3.329  3.3327 3.2439 3.2555 3.2835 3.2237 3.1734   3.1812 3.2285 3.182  3.1917 3.1536 3.2091 3.1656 3.1454 3.148  3.1128   3.146  3.2168 3.1158 3.0943]]
882                   3.42169         1.6209         1.2093         -0.19892          -0.03919          0.27056          1.50575          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.7739 3.9326 3.8201 3.8238 3.7994 3.8456 3.955  3.7722 3.6437 3.8066   3.949  3.9072 3.8461 3.7926 3.8489 3.8393 3.7791 3.7462 3.7407 3.8056   3.8212 3.8055 3.7463 3.7804 3.8621 3.7405 3.7942 3.8792 3.8224 3.573   3.8957 3.899  3.7705 3.7875 3.8408 3.9502 3.8938 3.6783 3.8182 3.8533   3.7954 3.9532 3.7986 4.007  3.9483 3.876  3.8378 3.6708 3.5102 3.7971   3.825  3.7651 3.5613 3.8067]]
883                   2.96162         1.47662         0.95635         -0.03771          -0.03753          0.21937          1.58112          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0898 3.1021 3.0902 3.0889 3.1057 3.089  3.1301 3.1466 3.1223 3.1292   3.1413 3.1339 3.0818 3.1323 3.0825 3.0656 3.0886 3.0896 3.0637 3.0784   3.0643 3.0688 3.0626 3.0462 3.1044 3.1507 3.1027 3.137  3.098  3.1205   3.1549 3.1632 3.1556 3.1641 3.1562 3.1631 3.1502 3.1549 3.1142 3.153   3.1393 3.1371 3.166  3.1253 3.1089 3.1335 3.1216 3.1287 3.0716 3.0752   3.0829 3.1005 3.0798 3.0776]]
884                   2.97357         1.47991         0.96385         -0.0419          -0.04185          0.22068          1.57647          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0909 3.1245 3.0993 3.1464 3.1606 3.1    3.1647 3.1942 3.1316 3.1244   3.1248 3.1394 3.1348 3.1666 3.0834 3.0523 3.0815 3.0849 3.0494 3.1284   3.0588 3.051  3.0633 3.1015 3.1093 3.1451 3.1183 3.1289 3.1014 3.1258   3.1439 3.2128 3.1522 3.2123 3.199  3.1642 3.1612 3.1409 3.1198 3.1535   3.1873 3.1352 3.1442 3.1183 3.161  3.1386 3.1128 3.1221 3.0623 3.0731   3.1214 3.0955 3.0853 3.0723]]
885                   3.06174         1.51523         1.0379         -0.07279          -0.04881          0.23575          1.4814          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7189 3.6478 3.1761 3.5877 3.7475 3.0103 3.5595 3.2399 3.3327 3.5862   3.4689 3.6299 3.682  3.4057 3.0809 3.2614 3.0428 3.5206 2.9709 3.6583   2.9385 3.5177 3.4163 3.6953 3.5893 3.5908 3.4267 3.1761 3.5944 3.0202   3.2218 3.3266 3.4027 3.1039 3.4145 3.5114 3.6856 3.4973 3.3383 3.7279   3.5773 3.1707 3.4053 3.7109 2.9957 3.0947 3.4506 3.2523 3.4957 3.5061   2.9214 3.6471 3.6569 3.0539]]
886                   3.66981         1.59236         0.92922         -0.28585          -0.22887          0.25349          1.32723          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.464  3.4105 1.9871 3.3556 2.1061 3.1324 1.9999 3.1396 3.3883 3.1248   2.2198 3.5131 3.4068 1.9343 2.5272 2.6182 2.3113 2.8053 2.1081 2.1939   1.8175 2.5126 2.2071 2.2095 2.1435 3.3499 2.2608 2.2495 3.0542 2.2374   3.2978 2.9806 2.1158 3.3571 2.2124 2.8363 3.3754 1.9451 3.3288 2.6422   2.3019 3.6833 1.8979 3.221  2.6105 3.3285 3.435  2.2254 3.4248 3.1479   3.4314 3.3407 2.6262 2.002 ]]
887                   2.96592         1.48037         0.96519         -0.03922          -0.03922          0.22065          1.55857          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1132 3.1473 3.1219 3.1246 3.1323 3.1189 3.1395 3.1761 3.1487 3.1526   3.1579 3.1677 3.1084 3.1505 3.1085 3.0832 3.1066 3.1088 3.0767 3.1024   3.0835 3.0763 3.0839 3.0841 3.1318 3.1698 3.1382 3.1507 3.1257 3.1445   3.1755 3.194  3.1733 3.1936 3.1761 3.1871 3.1823 3.1676 3.1497 3.1755   3.1652 3.16   3.1713 3.1389 3.1455 3.1576 3.134  3.1474 3.0852 3.1015   3.1063 3.1078 3.1051 3.0992]]
888                   2.96537         1.462         0.89659         -0.03903          -0.02616          0.21157          1.61787          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.891  2.8708 2.9347 2.9242 2.9614 2.893  2.9364 2.9599 2.866  2.9157   2.9948 2.9551 2.8862 3.336  2.9292 2.8658 2.8854 2.9309 3.2257 2.8804   2.9005 2.8533 2.8297 2.9406 2.9646 2.9964 2.8996 2.931  2.8707 2.8947   2.8894 3.0234 2.9047 2.9833 2.9617 2.923  2.8986 2.9407 2.8933 2.9717   3.026  2.9848 3.     3.3806 2.9422 2.9103 2.916  2.9463 2.8587 2.8392   2.9662 2.9288 2.8243 2.9491]]
889                   3.10367         1.53201         1.07719         -0.08749          -0.04965          0.24208          1.56213          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.7358 3.6443 3.4991 3.267  3.3409 3.5521 3.5293 3.7128 3.5317 3.4438   3.7479 3.4046 3.2788 3.0529 3.6473 3.4009 3.2723 3.4851 3.6545 3.6109   3.2119 3.4292 3.5012 3.3234 3.0147 3.0889 3.519  3.4077 3.0431 3.6246   3.6449 3.6592 3.6413 3.0893 3.7536 3.6972 3.5559 3.297  3.3887 3.524   3.3946 3.7417 3.709  3.2311 3.614  3.7299 3.5714 2.9453 3.6887 3.2669   3.6531 3.6342 3.266  3.405 ]]
890                   3.41133         1.56758         0.87753         -0.19529          -0.13107          0.23614          1.44042          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[1.9431 3.5404 3.455  3.2488 2.1843 2.3591 2.2871 2.8505 2.9495 2.8076   2.3317 3.5283 2.5796 2.2174 3.4068 2.2823 1.913  2.1814 3.42   3.0786   3.5925 3.3646 2.4524 2.4644 3.42   3.1988 2.0461 2.0978 2.506  3.2632   2.2477 2.128  3.4679 3.6192 3.4303 2.7962 2.0704 2.6916 2.3853 2.1318   2.8089 3.5438 2.7386 3.4536 2.054  2.3626 2.4004 2.0544 3.2516 2.0809   1.8904 2.3536 1.966  3.3185]]
891                   2.9664         1.48056         0.96537         -0.03939          -0.03939          0.22068          1.55812          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.1119 3.1463 3.116  3.1203 3.1312 3.1178 3.138  3.1783 3.1531 3.1536   3.1565 3.1613 3.108  3.1471 3.1069 3.0828 3.1091 3.1097 3.0761 3.1025   3.0838 3.0793 3.0828 3.0836 3.132  3.1696 3.1381 3.1507 3.1258 3.1447   3.1734 3.1944 3.175  3.1957 3.174  3.1886 3.1811 3.1685 3.1507 3.1755   3.1688 3.1591 3.1697 3.1409 3.1425 3.1606 3.1369 3.1435 3.0851 3.1011   3.1025 3.1094 3.1043 3.0995]]
892                   2.97596         1.46713         0.9064         -0.04274          -0.03244          0.21377          1.62737          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9904 2.9321 2.8511 2.9331 2.93   2.9458 2.9274 2.9549 3.0157 2.9204   2.9075 3.0438 2.9379 3.2688 2.8683 2.9124 2.8657 2.883  2.915  2.8868   2.8405 3.273  3.3342 2.8552 2.9307 2.9597 3.3537 2.9827 2.9797 2.8963   2.9297 3.019  2.9617 2.9782 3.0131 3.0404 2.9438 2.9867 2.8688 3.015   2.9175 2.9296 3.3749 2.8881 2.9303 2.8868 2.9557 2.9536 2.79   2.8881   2.9184 2.8867 2.8172 2.8885]]
893                   1.35491         0.90836         0.5737         0.52526          0.53265          0.11665          0.6318          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2667 3.151  3.1256 3.1264 3.4658 3.3328 1.8682 2.2663 1.9989 3.1512   2.0673 2.1338 3.1068 4.9332 3.1064 3.0817 3.1072 3.1063 5.5337 3.1069   5.6002 5.5337 5.6006 5.5998 2.6019 2.9995 2.668  2.7992 3.1258 3.1447   3.1695 0.9973 0.8003 0.9993 0.7983 3.1822 3.1819 3.1693 3.1508 3.1751   3.1695 1.3339 3.1703 2.3343 3.1448 3.1574 3.1381 2.401  4.9989 5.1994   5.1993 5.2663 5.2002 5.1334]]
894                   1.68457         0.99352         0.76661         0.40975          0.42351          0.15218          0.70095          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6003 3.3338 3.3345 3.4661 3.3331 1.8665 2.2665 2.0002 2.0005   2.0665 2.134  3.1076 4.9316 3.1075 3.0813 3.1065 3.1068 5.5338 5.7976   5.5999 5.5333 5.5995 3.0879 3.1321 3.0033 3.1384 3.1509 2.5333 2.7337   3.1699 3.1888 3.1697 3.1878 0.7999 0.9345 3.1835 3.1699 1.1976 3.1761   1.3991 3.1638 3.1699 2.3313 3.1453 3.1575 3.1383 2.402  4.9982 5.1995   5.1999 5.267  5.2001 5.1322]]
895                   1.27684         0.87565         0.5218         0.55261          0.56089          0.10622          0.56638          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2652 3.6015 3.3338 3.3327 3.4658 3.3326 1.867  2.2669 2.0002 2.0012   2.0671 2.1346 3.1074 4.9332 3.1068 3.0823 3.107  3.1067 5.5339 5.8003   5.5998 5.5329 5.6001 5.5999 3.1321 3.0004 3.1383 2.8002 2.5322 3.1447   0.7998 1.0015 3.1695 1.0002 0.7996 0.933  3.1822 3.1698 1.2003 3.1766   3.1694 3.1641 3.1698 2.3335 2.402  3.1569 3.1382 3.1448 5.     5.2003   5.1989 5.2657 5.1994 5.1323]]
896                   1.33326         0.87587         0.50445         0.53284          0.53285          0.10469          0.54052          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.12   3.6003 3.3332 3.3335 3.1384 3.1265 1.8675 2.2674 2.0011 2.0001   2.0652 2.1363 3.107  4.9342 3.1072 3.0814 4.5327 3.1063 5.5312 3.1074   5.5997 3.0814 5.6007 5.6015 2.6008 3.0001 3.1383 2.7993 3.1258 3.1447   0.7965 1.0007 0.8003 1.0006 0.8013 0.9334 3.1829 3.1712 1.201  3.1769   3.17   3.1629 3.1694 2.3334 3.1449 2.5333 2.3328 2.4046 5.0015 5.1989   5.2003 5.2659 5.1983 5.1339]]
897                   1.23507         0.84627         0.6034         0.56725          0.57262          0.11383          0.53273          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1189 3.6    3.3325 3.3346 3.4665 3.3324 1.867  2.2658 2.0002 2.0017   2.0647 2.1371 3.1064 3.1446 3.1077 3.081  3.1065 3.1067 5.534  5.7995   5.5996 5.5336 5.5996 5.5985 2.5985 2.9979 2.6668 2.7992 2.5323 3.1447   0.8013 1.0002 0.7999 3.1887 0.7989 0.9338 3.1824 3.1703 3.1512 3.1761   3.1706 3.1629 2.6669 3.1388 2.4024 3.1576 3.1383 2.4002 5.0001 5.2001   5.2005 5.2663 5.2007 5.1324]]
898                   1.5637         0.94464         0.61636         0.4521          0.45689          0.12308          0.56985          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1208 3.6001 3.333  3.3336 3.4675 3.1257 3.1384 2.2658 3.1511 1.9999   2.0648 2.1333 3.1065 4.9333 3.1067 3.0819 3.1072 3.1071 5.5334 5.7978   5.599  3.0821 3.088  5.5998 2.5999 3.1698 2.6663 3.1509 3.1258 3.1446   0.8005 3.1886 0.7993 1.0005 0.801  0.9346 3.1825 3.1704 3.1505 3.1764   1.3999 3.163  3.1705 3.138  3.1443 3.157  3.1379 2.4015 5.0019 5.1998   5.2001 5.2654 5.1998 5.1317]]
899                   1.28382         0.86792         0.51783         0.55017          0.55458          0.10514          0.537          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1198 3.5985 3.1258 3.3338 3.4666 3.3337 1.8671 2.2666 2.0005 2.   2.0684 2.1323 4.5335 4.9333 3.1064 3.0814 3.1067 3.1067 5.5331 3.1075   5.5991 5.5332 5.6002 5.6    3.1321 2.9997 3.1384 2.802  2.5373 2.7338   0.8003 0.9985 0.8002 1.0008 3.1702 0.9326 3.1822 3.1698 3.1511 3.1766   3.1694 3.1644 3.1694 2.3316 3.1447 3.1573 3.138  2.4023 4.9975 5.1998   5.2004 3.1064 5.1996 5.1337]]
900                   1.6401         0.99178         0.54106         0.42533          0.42559          0.11907          0.66458          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2644 3.6004 3.3341 3.3311 3.1383 3.3332 1.8664 2.2683 1.9996 1.9996   2.0669 2.1338 3.107  4.9323 3.1074 3.0813 4.5341 3.1079 3.0819 3.1069   3.0881 5.5327 5.5984 3.0884 3.1321 2.9975 2.667  2.8002 3.1257 3.1447   3.1698 0.9992 0.8002 1.0002 0.8004 0.9335 3.1814 3.1687 1.1995 3.1756   3.1692 3.1633 3.1697 2.3367 2.4002 3.157  2.3318 3.1447 5.0019 5.1996   5.199  5.2676 5.2    5.1337]]
901                   1.44616         0.91275         0.61753         0.49328          0.49589          0.12086          0.5708          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1187 3.1503 3.1259 3.1262 3.1385 3.1253 3.1384 2.2671 2.0007 2.0006   2.0666 3.1635 3.1072 4.9338 4.5334 3.0818 4.5334 3.1065 5.5366 3.1073   5.6001 5.5333 3.0879 5.5999 2.5992 2.9996 2.6668 2.799  3.1258 2.7333   0.7991 3.1885 3.17   0.9983 0.8005 0.9332 3.1832 3.1691 3.1509 1.4669   3.1702 3.1625 3.1705 2.3334 2.3996 3.1571 2.3334 2.4003 5.0001 3.1005   5.1981 5.2669 5.1978 5.1345]]
902                   1.47329         0.95137         0.54659         0.48378          0.48568          0.11563          0.66593          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.1504 3.1259 3.1255 3.4675 3.1256 1.8667 2.2667 1.9999 2.0014   2.0662 2.1331 4.5335 4.9335 3.1063 3.0817 3.1083 3.1067 5.5314 5.8017   5.5998 3.0816 5.6008 5.5997 2.5987 3.0001 2.6653 2.8003 2.5335 3.1446   0.8003 0.9994 3.1697 0.9984 3.17   0.9339 3.1821 3.1699 1.2    3.1751   3.1694 3.1642 3.1695 2.3342 3.1449 2.5336 2.3333 2.4038 4.9975 5.1998   5.1984 3.107  5.1996 5.133 ]]
903                   1.63343         0.9789         0.71341         0.42767          0.45264          0.14537          0.7007          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2665 3.6001 3.126  3.3328 3.4667 3.3334 3.1389 2.2659 3.1506 2.0006   2.0663 2.1319 3.1064 3.1441 3.107  3.0813 3.1069 3.1069 5.5305 5.7991   5.6019 3.0816 5.5997 5.5995 2.6001 3.0008 2.6653 2.8018 2.5334 2.7294   0.7999 3.189  3.1701 1.0015 3.17   3.1822 3.1829 3.1701 3.151  3.1762   3.1698 3.1639 3.1698 3.1384 3.1447 3.1577 3.1379 2.3995 4.9987 5.2001   5.201  5.2662 5.2    5.1329]]
904                   1.26711         0.85797         0.59003         0.55602          0.56114          0.11066          0.53302          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1194 3.6003 3.3327 3.3343 3.4665 3.3335 1.8667 2.2667 2.     2.0004   2.0675 2.1334 3.1072 4.9327 3.1066 3.0809 3.1065 3.1075 5.5333 5.7997   5.5998 5.5341 5.5993 5.6002 2.5988 2.9993 2.6672 3.1509 2.5337 2.7324   0.8008 3.1883 0.8009 1.001  0.8008 0.9339 3.1826 3.1697 3.1509 1.4676   3.1697 3.1626 3.1694 3.1385 2.4006 2.5335 2.3333 3.1447 4.9991 5.1992   5.2005 5.2668 5.2001 5.1335]]
905                   1.19227         0.84168         0.50277         0.58224          0.58727          0.10035          0.53755          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.119  3.6001 3.3332 3.1256 3.4665 3.3334 1.8664 2.2723 1.9991 2.0003   2.0669 2.1329 3.1069 4.9326 3.1069 3.0816 4.5332 3.1071 5.5339 5.8007   5.6005 5.534  5.5991 5.6001 2.6    2.9999 3.1384 2.8004 2.5327 3.1447   0.7996 1.0008 0.7993 0.999  0.7997 0.9332 3.1835 3.1702 1.2007 3.1763   3.1699 3.1629 3.1698 3.139  2.3997 3.1569 2.334  3.1445 4.9977 5.1986   5.1992 5.2681 5.1998 5.1326]]
906                   1.43105         0.9121         0.62508         0.49858          0.50615          0.12249          0.56678          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1202 3.6    3.3336 3.3317 3.4662 3.333  1.8675 2.2653 3.151  2.0014   2.0641 2.1342 3.1061 4.9312 3.1071 3.0813 3.1066 4.5332 5.5332 5.8011   5.6001 5.5332 5.5979 3.0883 2.5993 3.0002 2.667  2.7993 2.5348 2.733   0.8002 0.9975 0.7997 3.1891 0.8001 0.9317 3.1828 3.1704 3.1504 3.1765   3.1703 3.163  3.17   3.1384 3.1448 2.5333 2.3341 2.4001 4.9995 5.1997   5.1998 5.2666 5.1988 5.1329]]
907                   1.17683         0.83462         0.49839         0.58765          0.59868          0.09713          0.63212          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2674 3.6004 3.3336 3.1256 3.4671 3.3325 1.8679 2.2714 2.0003 3.1507   2.0664 2.1349 3.1069 4.9341 4.533  3.0823 3.1071 3.1064 5.5333 5.7991   5.6    5.5337 5.6001 5.6005 2.5995 3.0005 2.6666 3.151  3.1258 2.7342   0.7996 1.0016 3.1691 0.9999 0.7992 0.9326 3.1823 3.1701 3.1511 3.1767   1.4001 3.1632 3.1704 2.3344 3.1447 3.1569 2.3305 2.4006 5.0002 5.1994   5.1995 5.2653 5.1983 5.1346]]
908                   1.36985         0.90308         0.57935         0.52002          0.52907          0.11925          0.63177          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1192 3.5999 3.3336 3.3324 3.4677 3.1255 1.8666 2.2668 1.9988 1.9999   2.068  2.1322 3.1074 4.9344 3.1075 3.082  4.5332 3.106  5.5312 3.1072   5.5998 5.5332 5.5988 5.5997 2.6025 3.1698 3.1384 2.7991 2.5326 2.7332   3.1697 0.9997 0.8009 1.0002 0.8005 3.1824 3.1828 3.1698 3.1507 3.1756   3.1693 3.1632 3.1697 2.3353 3.1445 2.5351 2.3352 2.3995 4.9996 5.2001   5.1998 5.2655 5.2004 5.1336]]
909                   1.19653         0.81383         0.53991         0.58075          0.58971          0.10865          0.53468          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.1254 3.3334 3.4666 3.3336 1.8674 2.268  1.9995 1.9997   2.067  2.1341 4.5332 4.9323 3.1074 3.0813 3.1066 4.5319 5.533  5.7985   5.6002 5.5336 5.5993 5.6003 2.6011 3.0019 3.1384 2.7998 3.1258 2.7332   0.7983 0.9989 0.8014 0.9994 0.799  3.1822 3.1824 3.17   1.2002 3.1755   3.1699 1.3332 3.1689 2.3344 3.1451 3.157  3.1382 2.4016 4.9978 5.1991   5.1998 5.2657 5.1995 5.1328]]
910                   1.2455         0.85863         0.49982         0.56359          0.5673          0.09904          0.54107          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2662 3.5998 3.126  3.1257 3.4659 3.1255 1.8668 2.267  1.9975 2.0024   2.0669 2.1325 3.1068 4.9327 3.107  3.0811 4.5332 4.5333 5.5328 3.1068   5.6006 5.5327 5.5991 3.0886 2.5999 2.9998 3.1384 3.1509 3.1258 3.1447   0.8013 0.9968 0.8003 0.9989 0.7996 0.9347 3.1825 3.1693 3.151  3.176   3.1699 3.1635 2.6665 2.3332 3.1444 3.1578 3.1386 3.145  5.0002 5.2005   5.2    5.2658 5.1985 5.1332]]
911                   1.51306         0.96436         0.59092         0.46984          0.47859          0.12403          0.66547          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1194 3.6002 3.3341 3.1251 3.4662 3.1264 1.8654 2.267  1.9984 1.9998   2.0671 2.1343 3.1063 4.9336 3.1069 3.0818 3.107  3.1072 5.5344 5.7999   5.6011 5.533  5.6008 3.0881 3.1321 2.999  2.666  2.7998 2.5331 2.7337   0.7995 0.998  0.7993 0.9996 3.1704 3.183  3.182  3.1696 3.1512 3.1765   3.1696 3.1631 3.1698 2.333  3.1452 3.1572 3.1381 2.3991 4.9988 5.1995   5.1982 5.2651 5.1995 5.1315]]
912                   1.51044         0.9622         0.64018         0.47076          0.47266          0.12689          0.66635          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.12   3.599  3.1254 3.3335 3.4676 3.3333 1.8674 2.2667 1.9994 1.9983   2.0672 2.1337 3.1062 4.9334 3.1071 3.082  3.1069 3.107  5.5345 3.1072   3.0884 5.5325 5.6004 5.6001 2.6018 3.0003 2.6658 3.151  3.1258 2.7326   0.7988 3.1887 0.8001 1.0004 0.8003 0.9331 3.1827 3.17   3.1502 3.1763   3.1701 3.1628 3.1698 2.334  3.1444 3.157  2.3333 3.1444 4.9989 5.2009   5.1986 5.2662 5.1989 5.132 ]]
913                   1.48542         0.94916         0.62983         0.47953          0.47976          0.1254          0.63337          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1191 3.5988 3.1259 3.1261 3.4657 3.126  3.1381 2.267  3.1507 2.   2.0664 2.1332 3.1066 4.9323 3.1067 3.082  3.1069 3.1078 5.5334 3.1065   5.5979 5.5325 5.5996 3.0883 2.6003 2.9996 3.1384 2.7984 2.5336 3.1447   0.8007 3.1886 0.7989 0.9996 0.8007 0.9331 3.1834 3.1693 1.2    3.1766   3.1696 1.334  3.1698 2.334  3.1447 3.1569 2.332  2.4035 5.     5.2   5.2002 5.2674 5.1995 5.1343]]
914                   1.365         0.91359         0.51507         0.52172          0.52543          0.10529          0.63285          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6009 3.1262 3.1259 3.4677 3.3324 3.1385 2.2667 1.9987 1.9993   2.0667 2.1334 3.1064 4.9333 3.107  3.0812 3.1068 3.1063 5.5342 5.8006   3.0879 5.5316 5.5991 5.6    2.6002 3.0012 2.667  2.8013 2.5322 3.1446   3.1696 1.0013 0.8004 0.9995 3.1693 0.9335 3.1819 3.1697 1.2    1.4662   3.1702 3.164  3.17   2.3311 2.404  3.1569 3.1385 2.4017 4.9994 5.2018   5.1999 5.2662 5.1995 5.1331]]
915                   1.43405         0.89563         0.624         0.49753          0.50117          0.12444          0.53487          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2659 3.5999 3.3333 3.333  3.4683 3.3339 1.8667 2.2676 1.9993 1.9984   2.0679 2.1341 4.5331 4.9339 3.1062 3.0813 4.5334 3.1071 5.5329 5.8004   5.5995 3.082  5.5986 5.6    2.6    3.1698 2.6669 2.8    2.5337 3.1447   0.8021 3.1882 0.7984 1.0007 0.7999 0.9316 3.1824 3.17   1.2002 3.1756   3.1698 3.1629 3.1698 2.332  2.4014 2.5348 2.333  2.4012 4.9993 5.1987   5.2    5.2658 5.1997 5.133 ]]
916                   1.30159         0.89419         0.5278         0.54394          0.54791          0.10778          0.63305          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.267  3.5998 3.3325 3.126  3.1382 3.3326 1.8662 2.265  1.9995 2.0002   2.0661 2.1333 3.1069 4.9341 3.1069 3.0817 3.1061 3.1066 5.5326 3.1062   5.5983 5.5355 5.6005 5.5994 2.6002 2.9997 2.6666 3.1509 3.1258 3.1446   3.1703 0.9996 0.8005 1.0002 0.8001 0.9333 3.1824 3.1703 1.2008 3.1766   3.1701 3.1632 3.169  3.1386 3.1448 3.1578 2.332  3.1443 5.0007 5.2   5.1994 5.2665 5.1999 5.1338]]
917                   1.58415         0.98062         0.66577         0.44493          0.45759          0.13376          0.66563          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1193 3.6001 3.3329 3.3327 3.4658 3.1254 3.138  2.2667 1.9979 2.0008   2.0668 2.1334 3.107  4.9317 3.1069 3.0823 3.1071 3.1077 5.5352 5.7994   3.0884 5.5338 5.6001 5.601  2.6004 3.0017 2.6666 2.8012 2.5336 2.7344   3.1693 3.1887 0.8033 0.9997 3.17   0.9349 3.183  3.1694 3.1506 3.1765   3.171  3.1638 3.1701 2.3361 2.4003 3.1575 2.3351 2.4018 4.9996 5.2002   5.1979 5.267  5.1994 5.1328]]
918                   1.49639         0.9371         0.63455         0.47568          0.4804          0.1262          0.54107          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1199 3.6008 3.1255 3.1257 3.4681 3.1265 1.8667 2.2673 2.0009 2.0003   2.0672 2.1337 3.1078 4.933  3.1081 3.0819 3.1074 3.1069 5.534  5.7982   5.5995 5.5331 3.0878 5.5997 2.6001 3.1698 2.6658 2.8    2.5333 2.7329   3.1696 1.0012 0.7991 3.1883 0.8006 0.9326 3.1827 3.1696 3.1509 3.1762   3.1703 1.3337 3.1704 3.1381 2.401  2.5332 3.138  3.1445 5.0008 5.1999   5.1999 5.2664 5.1994 5.1327]]
919                   0.99607         0.7384         0.44907         0.65099          0.65387          0.08488          0.50583          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1196 3.6004 3.1258 3.3323 3.4665 3.3309 1.8689 2.2666 2.0014 2.001   2.0669 2.1345 4.5344 3.1453 3.1066 3.0821 3.1074 3.1067 5.5345 5.7986   5.5996 5.5345 5.6002 5.5969 2.6016 3.     3.1384 2.8002 3.1258 2.7325   3.1693 0.9989 0.799  0.9977 0.8003 0.933  3.182  1.4013 3.151  3.1758   1.3993 3.1632 3.1694 2.334  2.4013 3.1575 3.1382 2.4001 4.9992 5.1998   5.1992 5.2673 5.1991 5.1343]]
920                   1.51814         0.95951         0.56885         0.46806          0.48841          0.12026          0.69992          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1195 3.6002 3.1266 3.3337 3.1384 3.3342 1.8682 2.2667 3.1509 3.151   2.0671 2.1331 4.5334 4.9329 3.1075 3.0817 4.5318 3.1061 5.5342 3.107   5.5996 3.0816 5.6004 5.5998 2.6006 3.1698 2.666  2.8011 2.5329 2.7336   3.1698 0.9993 3.1702 0.9968 3.1698 0.9335 3.1813 3.1699 3.1501 3.1757   3.169  3.1636 3.1699 2.336  3.1445 3.1569 2.3329 3.1451 4.9999 5.2001   5.2005 5.2673 5.2018 5.1329]]
921                   1.53334         0.94676         0.61959         0.46274          0.46289          0.12331          0.60363          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1199 3.5999 3.1264 3.1254 3.4667 3.3334 3.1383 2.2671 2.0002 1.9997   2.0657 2.1338 3.1069 4.9333 4.5323 3.0815 3.1065 3.1067 5.533  5.7996   3.0881 5.5329 5.6007 3.0887 2.6004 3.1698 3.1384 2.8012 2.5314 2.7327   0.7997 0.9995 0.8015 3.1887 0.8024 0.9327 3.1824 3.1699 3.15   3.1764   3.1694 1.3341 2.6674 2.3337 3.1442 3.1572 2.334  2.4023 4.9988 5.2006   5.1995 3.107  5.1998 5.1315]]
922                   1.66226         0.99457         0.69814         0.41756          0.41948          0.1447          0.6331          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.267  3.5999 3.126  3.1257 3.4676 3.1262 1.8667 2.2667 1.9993 1.9999   2.0657 2.135  3.107  4.9335 3.1072 3.0818 3.1064 3.1065 3.0815 3.1066   5.5994 5.535  5.6023 5.5996 2.6008 3.0028 2.669  2.8003 2.5337 2.7348   0.8015 1.     0.7993 3.1884 0.7986 3.1822 3.1823 3.1699 1.1997 3.1758   3.1693 3.163  3.1704 3.1381 3.1453 3.1573 3.1383 2.4003 4.9991 5.1992   5.1995 5.2662 5.201  5.1328]]
923                   1.39379         0.91091         0.61626         0.51163          0.51366          0.1196          0.63247          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2657 3.6002 3.1256 3.1256 3.4664 3.3336 1.8668 2.2677 2.0004 2.0007   2.066  2.1383 3.1078 4.9331 3.1071 3.0818 3.1055 3.1074 5.5316 5.8009   5.5991 5.532  5.5999 5.6    2.6015 2.9982 2.667  2.7995 2.5333 2.7341   0.7975 3.1886 0.802  0.999  3.1694 0.9343 3.182  1.4003 3.1515 3.1773   3.1697 1.3326 3.1697 2.335  2.3997 3.157  2.3322 3.1444 5.0002 3.1002   5.2004 5.2666 5.2002 5.1338]]
924                   1.14583         0.77449         0.5849         0.59852          0.61158          0.10864          0.50548          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2653 3.1513 3.3337 3.1251 3.4667 3.1262 1.8645 2.2663 1.9998 2.0005   2.0662 2.1312 4.5333 4.9322 4.5334 3.0825 3.1065 4.5325 5.5352 5.7997   5.6001 5.5334 5.5982 5.6004 3.1321 3.1698 2.6695 2.8006 2.5325 2.7325   0.7983 0.9987 0.7995 3.1889 0.8005 0.9298 3.182  3.1705 3.1508 3.1769   3.1704 1.3335 2.6688 2.3328 3.1448 3.1571 3.1385 2.4009 4.9997 5.1986   5.2002 5.2667 5.1993 5.1329]]
925                   1.24583         0.86011         0.50541         0.56348          0.56405          0.10148          0.5706          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2672 3.5992 3.126  3.1254 3.138  3.3336 1.8645 2.2673 2.0048 2.0013   2.066  2.1333 3.1076 4.9333 3.1071 3.082  3.1068 3.1075 5.5331 3.107   5.6002 5.5323 5.5999 5.6    3.1321 3.1698 2.6654 2.8005 2.534  2.7346   0.8005 1.     0.7999 1.0005 0.8001 0.9367 3.182  3.1693 3.1517 3.1755   3.1694 3.1636 3.1698 2.3333 2.4001 3.1568 2.3339 2.4    4.9984 5.1991   5.2    5.2666 5.1998 5.133 ]]
926                   1.21958         0.84402         0.50132         0.57268          0.57941          0.09974          0.53448          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.119  3.6006 3.3333 3.3316 3.4664 3.3337 1.8673 2.2669 1.9999 1.9984   2.0673 2.1332 3.1065 4.932  3.1064 3.0819 3.1066 3.1071 5.533  5.7998   5.6006 5.5345 5.6005 5.6001 3.1321 3.1698 3.1384 2.8009 2.5329 2.7336   0.7981 0.9988 0.8009 1.0003 0.7996 0.9337 3.1829 3.17   3.1515 3.1762   3.1697 3.1633 3.17   2.3318 3.1445 3.1577 3.1384 2.3994 4.9996 5.1999   5.1999 5.2662 5.2003 5.1336]]
927                   1.18237         0.83423         0.47056         0.58571          0.58647          0.09235          0.53745          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1194 3.5998 3.1251 3.3331 3.1387 3.3331 3.1381 2.2657 1.9999 2.001   3.1576 2.1335 3.1076 3.144  3.1076 3.0817 3.1068 3.1073 5.5349 3.1074   5.6002 5.533  5.6003 3.0881 2.6    2.9998 2.6665 2.7995 2.5316 2.7346   0.8017 0.9996 0.8    1.0005 0.8003 0.929  3.1816 1.4004 3.1507 3.1762   3.1697 1.3333 3.1694 2.3325 3.1448 3.1572 2.335  3.1441 4.9994 5.1994   5.1998 5.267  5.1998 5.1318]]
928                   1.19875         0.84698         0.48783         0.57997          0.58005          0.09768          0.57085          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2668 3.6001 3.1249 3.3334 3.4664 3.3337 1.8641 2.2668 2.0001 1.9997   2.0664 2.1335 3.1072 4.9333 3.1069 3.081  3.1063 3.1066 5.5327 3.1071   5.599  5.5325 5.5995 5.5994 3.1321 2.9999 3.1383 3.1509 2.5331 3.1447   0.8018 0.9988 0.8002 1.0005 0.8002 0.9318 3.1835 1.3998 1.195  3.1769   3.171  3.1639 3.1694 2.3339 3.1446 3.1572 2.3342 2.3997 4.9972 5.1997   5.2011 5.2666 5.2001 5.1335]]
929                   1.32616         0.90726         0.52342         0.53533          0.53799          0.10762          0.6332          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2681 3.5998 3.3332 3.3342 3.4674 3.1258 1.8668 2.2677 3.1505 2.0002   2.0669 2.135  3.1069 3.1446 3.1072 3.0819 3.1068 3.1069 5.5304 5.8007   5.5994 5.5314 3.0876 5.5993 2.6    3.1698 3.1384 2.8    2.5323 3.1447   3.1697 1.0002 0.7995 0.9997 0.8007 0.9346 3.1824 3.1699 1.2037 3.1761   3.1694 3.1633 3.1696 2.3331 3.1445 2.5336 3.1387 3.1447 5.0002 5.2003   5.1982 5.2667 5.2003 5.1331]]
930                   1.61495         0.97245         0.6356         0.43414          0.43438          0.12979          0.57115          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2667 3.6001 3.3336 3.1253 3.4671 3.1262 1.8669 2.266  2.0005 1.9999   2.0667 2.1316 3.1068 4.9338 3.1074 3.0817 3.1066 3.1069 3.0821 3.1069   5.599  5.5334 5.5988 5.5975 2.5999 3.1698 2.6663 2.8011 2.5336 2.7327   0.8009 3.1884 0.8026 0.9996 0.8003 0.9318 3.183  3.1698 3.1515 3.1767   3.1697 3.1632 3.17   3.1392 3.1449 2.5327 3.1381 2.4038 4.9988 5.1999   5.1984 5.2676 5.1996 3.0947]]
931                   1.33587         0.90556         0.51094         0.53193          0.53273          0.10463          0.66553          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2657 3.5999 3.1264 3.1255 3.1388 3.1257 1.8668 2.267  2.0002 3.1516   2.065  2.1326 3.1068 4.9326 3.1068 3.0822 3.1071 3.1069 5.5356 5.8014   3.088  5.5328 5.603  5.6005 3.1321 3.0017 2.667  3.1509 2.5341 2.7334   0.8009 0.9993 0.8006 1.0002 0.7985 0.9339 3.183  3.1703 1.1991 3.1767   3.17   3.1633 2.6669 3.1385 2.3991 3.1579 2.3349 3.1444 4.9997 5.1999   5.2002 5.2644 5.2005 5.1316]]
932                   1.18795         0.84347         0.50327         0.58376          0.59228          0.09844          0.54102          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1198 3.5998 3.1257 3.1266 3.4676 3.1256 1.8672 2.2655 1.9981 2.001   2.0674 2.1327 3.1068 4.9342 3.107  3.0815 3.1069 4.5334 5.5337 5.8008   5.6001 5.5334 5.6014 5.6008 3.1321 3.     2.6666 3.1509 2.5342 3.1447   0.801  1.0005 0.8004 1.002  0.8007 0.9312 3.1824 3.1693 3.1503 3.1759   3.1711 3.1631 3.1705 2.3355 2.4001 3.1566 3.1385 3.1447 4.999  5.2001   5.1976 5.2668 5.2    5.1318]]
933                   1.87993         1.07785         0.61085         0.3413          0.34181          0.13722          0.7752          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1197 3.5998 3.1265 3.3333 3.4671 3.3339 1.8688 2.2671 2.0002 2.0011   2.0663 2.1349 3.1064 4.9328 4.5327 3.0815 3.1066 3.1067 3.0819 5.7996   3.0885 5.5334 3.0885 3.088  2.6002 3.1698 3.1384 2.8006 2.5325 2.7331   3.1694 1.0002 0.8016 1.0001 0.8013 3.1825 3.1818 3.1704 3.1506 3.1755   3.1689 3.163  3.1696 2.3321 2.4004 3.1572 3.1381 2.3989 4.9993 5.2002   5.1998 5.266  5.1991 5.1338]]
934                   1.43666         0.94242         0.63625         0.49661          0.4969          0.12635          0.66583          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1199 3.5989 3.1254 3.1259 3.139  3.1264 1.8683 2.2651 3.1511 1.9991   2.067  2.1335 3.1072 3.1438 3.1069 3.0817 3.1063 3.1067 5.5323 5.7989   5.6    5.5341 5.599  5.5993 2.6009 2.9999 3.1384 2.7989 3.1258 2.7346   0.801  3.1887 0.7991 0.999  3.1696 0.9275 3.1818 3.1699 1.2006 3.1763   3.1695 1.3342 3.1697 2.3333 3.1444 3.1574 2.334  2.4005 4.9968 3.1002   3.1008 5.267  5.1991 5.1326]]
935                   1.34979         0.88891         0.61959         0.52705          0.53613          0.11918          0.57145          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1195 3.6006 3.1259 3.3332 3.4668 3.3318 1.8665 2.2667 1.9992 1.9999   2.0663 2.1338 3.1071 4.9334 3.1063 3.0824 3.1069 3.1081 5.534  5.7993   5.5992 5.533  5.5989 5.5998 2.6017 3.002  2.6663 2.8004 3.1258 2.7342   3.1698 1.0003 0.8006 3.1886 0.8003 0.9354 3.182  1.3988 3.151  3.1762   3.1699 3.1634 3.1695 2.3336 3.1444 3.1573 2.336  2.3997 4.9982 5.2   5.2    5.2687 5.2018 5.1324]]
936                   1.22821         0.83875         0.48777         0.56965          0.57287          0.09629          0.53347          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.1203 3.5998 3.1259 3.3333 3.4677 3.3324 3.1383 2.2655 2.0004 1.9991   2.0674 2.1327 3.1077 4.9323 3.1071 3.0817 3.1075 4.5331 5.5347 5.7996   3.0879 5.5347 5.6002 5.5996 2.6009 3.0019 2.6672 2.7994 2.5338 2.7339   0.8003 1.0003 0.7998 1.0002 0.8002 0.934  3.1822 3.1703 3.1511 3.1761   3.1693 3.1641 2.6656 3.1386 2.4011 2.5334 2.334  3.1449 5.0008 5.1995   5.1983 5.2666 5.2012 5.1316]]
937                   1.69003         0.99356         0.74651         0.40783          0.41548          0.14649          0.70062          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1197 3.6001 3.3327 3.3329 3.4664 3.3342 1.867  2.2669 2.0011 3.151   2.0681 3.1633 3.1068 4.9333 3.1065 3.082  4.5327 3.1067 5.5329 5.8006   3.0881 5.5321 3.0879 5.5999 2.5995 3.0007 3.1384 2.8004 2.5335 2.7329   0.8003 3.1884 0.7997 3.1889 0.7999 0.9319 3.1825 1.3998 3.1506 3.1763   3.1698 3.1629 3.1701 2.3326 3.1444 3.1572 3.1384 2.4001 4.9992 5.2003   5.1973 5.2679 5.1996 5.1348]]
938                   1.21612         0.85611         0.50332         0.57389          0.57885          0.09931          0.54032          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2659 3.6    3.1265 3.3336 3.1381 3.1262 1.8648 2.267  2.0007 1.9994   2.0682 2.1346 3.1075 4.9326 3.1079 3.0821 3.1073 3.1077 5.5326 5.7981   5.6003 5.5333 5.5998 5.5991 2.6002 3.1698 2.6667 2.7997 2.5345 3.1447   0.8001 0.9999 0.7994 0.999  0.7999 0.9338 3.1826 3.1698 3.1508 3.1758   3.1693 3.1638 3.1698 3.1385 3.1444 2.5328 2.3348 3.1446 5.0006 5.1998   5.2006 5.2666 5.1993 5.1333]]
939                   1.43165         0.92867         0.53436         0.49837          0.50083          0.11248          0.66433          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2664 3.6004 3.1256 3.3345 3.4667 3.3337 1.8668 2.2649 3.1507 2.   2.0655 2.1349 4.5334 4.9331 3.107  3.0817 3.1063 3.1063 3.0818 3.1066   5.6009 5.5327 5.6001 5.599  2.6002 3.0024 2.6654 2.8004 2.5333 3.1446   0.7998 1.0015 0.8015 0.9986 3.1697 0.9346 3.1827 3.1703 1.2001 3.1767   3.1693 3.1632 3.17   3.1389 3.1448 3.1575 2.3366 2.4027 5.0004 5.1993   5.1992 5.2661 5.1982 5.1334]]
940                   1.48166         0.92499         0.51704         0.48085          0.48164          0.10954          0.54137          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.1192 3.6008 3.1253 3.1253 3.4666 3.1258 1.8674 2.2664 2.0008 2.0007   2.0653 2.1341 4.5315 3.1451 4.5331 3.0818 3.1071 3.107  5.5343 5.8004   3.0874 3.0819 5.5999 3.0876 2.5991 3.0006 2.6656 2.7997 2.5332 2.7329   0.7994 0.9992 0.7999 1.002  3.1694 0.9323 3.1819 3.1701 3.151  3.176   3.1696 3.1642 3.1699 3.1383 3.1447 2.5334 3.1386 3.1444 5.     5.2003   5.1999 5.2654 5.2005 5.1336]]
941                   3.30367         1.59447         1.16987         -0.15756          -0.04954          0.26103          1.43607          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.6039 3.7554 3.5854 3.7522 3.7098 3.7546 3.7103 3.7875 3.7261 3.623   3.7564 3.7796 3.5801 3.7889 3.5414 3.6096 3.6956 3.4724 3.7392 3.6187   3.6358 3.6958 3.7061 3.5012 3.7396 3.6442 3.6743 3.7834 3.6324 3.8145   3.6784 3.7038 3.644  3.7955 3.6658 3.7809 3.7673 3.7561 3.7926 3.7935   3.6831 3.6754 3.7504 3.6311 3.7079 3.7675 3.6563 3.6598 3.6257 3.7383   3.7434 3.6937 3.5989 3.5902]]
942                   3.35943         1.59248         1.17939         -0.1771          -0.07392          0.26445          1.42955          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.6086 3.7402 3.6589 3.5805 3.6475 3.6329 3.7115 3.8299 3.7065 3.7171   3.7208 3.653  3.5168 3.7336 3.66   3.4881 3.7023 3.6471 3.7032 3.6494   3.701  3.669  3.6628 3.529  3.5215 3.8152 3.5871 3.5684 3.712  3.5275   3.6024 3.8083 3.6714 3.8407 3.7943 3.8245 3.7972 3.8681 3.8538 3.803   3.7116 3.7864 3.5745 3.7414 3.6286 3.8461 3.6926 3.612  3.5987 3.552   3.6631 3.7018 3.5889 3.4738]]
943                   3.23113         1.56716         1.15266         -0.13215          -0.02945          0.2564          1.38852          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.7322 3.7402 3.6561 3.7141 3.5924 3.5652 3.6673 3.7034 3.727  3.7167   3.7465 3.7558 3.6996 3.678  3.7784 3.5597 3.7315 3.5537 3.6262 3.6213   3.6002 3.6938 3.7358 3.6733 3.6772 3.7215 3.7614 3.6481 3.7576 3.7177   3.7042 3.6656 3.5761 3.7973 3.8517 3.7386 3.5556 3.7961 3.5824 3.7325   3.5926 3.6785 3.806  3.7069 3.5152 3.609  3.7814 3.5824 3.5651 3.7177   3.6492 3.5939 3.6274 3.5902]]
944                   3.26564         1.57941         1.15319         -0.14424          -0.04385          0.25773          1.38012          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.6423 3.6663 3.686  3.5682 3.7128 3.6989 3.6227 3.7154 3.7307 3.5824   3.8165 3.5465 3.7323 3.8088 3.588  3.6725 3.7109 3.6922 3.6414 3.626   3.6139 3.4235 3.5662 3.5241 3.6912 3.724  3.6713 3.6753 3.6668 3.589   3.6806 3.737  3.6266 3.6582 3.7395 3.5541 3.7656 3.6928 3.6962 3.7391   3.7864 3.7771 3.7719 3.727  3.585  3.8135 3.7263 3.7478 3.7208 3.6387   3.599  3.5295 3.6579 3.6602]]
945                   2.96555         1.47193         0.94643         -0.03909          -0.03817          0.21831          1.61027          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0687 3.0982 3.0752 3.0726 3.0875 3.0754 3.0853 3.1252 3.0997 3.1   3.1051 3.112  3.0539 3.0943 3.0581 3.031  3.0567 3.0565 3.03   3.0563   3.0377 3.028  3.0356 3.0349 3.0808 3.1174 3.0873 3.1004 3.0762 3.0933   3.1187 3.1385 3.1207 3.1375 3.1185 3.1308 3.1328 3.1193 3.0959 3.1238   3.1145 3.1123 3.119  3.0856 3.0928 3.1081 3.0879 3.0941 3.0304 3.048   3.0508 3.0559 3.0491 3.0436]]
946                   2.96674         1.47229         0.9466         -0.03951          -0.03858          0.21838          1.61132          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0693 3.0993 3.0724 3.0736 3.0867 3.0745 3.0863 3.1221 3.0981 3.0978   3.1065 3.1127 3.0548 3.0907 3.0538 3.0306 3.0564 3.0548 3.0282 3.0559   3.0355 3.0281 3.0371 3.0373 3.0813 3.1193 3.086  3.1019 3.0733 3.0939   3.1219 3.1399 3.1193 3.1361 3.1207 3.1329 3.1316 3.1199 3.0994 3.1234   3.1178 3.1138 3.1202 3.0871 3.0938 3.1049 3.086  3.0948 3.0301 3.0492   3.0488 3.0573 3.0519 3.0405]]
947                   2.96577         1.47217         0.94634         -0.03917          -0.03824          0.21831          1.61162          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0709 3.0988 3.0734 3.0742 3.0853 3.0738 3.0896 3.1261 3.1004 3.1008   3.1065 3.1124 3.057  3.0952 3.0549 3.0314 3.0538 3.054  3.029  3.0573   3.0364 3.0282 3.0365 3.0377 3.0788 3.12   3.0867 3.0997 3.0752 3.0942   3.1175 3.1368 3.1181 3.1358 3.1173 3.1309 3.1288 3.1171 3.1015 3.1283   3.1193 3.1137 3.1188 3.0856 3.0935 3.1075 3.0865 3.0894 3.0311 3.0504   3.0489 3.0552 3.048  3.0422]]
948                   2.96687         1.47229         0.94639         -0.03955          -0.03861          0.21836          1.61192          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0679 3.1004 3.0762 3.0743 3.0858 3.0742 3.0849 3.1233 3.0987 3.0987   3.1059 3.1124 3.0533 3.0966 3.0543 3.0293 3.0558 3.0552 3.0291 3.0581   3.0362 3.0299 3.036  3.0326 3.078  3.1164 3.0859 3.0983 3.0755 3.0939   3.1195 3.14   3.1187 3.135  3.1187 3.1306 3.13   3.1191 3.0979 3.1248   3.117  3.1136 3.1201 3.0875 3.0944 3.1062 3.0853 3.0937 3.0274 3.0488   3.0483 3.0533 3.0454 3.0438]]
949                   2.98765         1.49262         0.96881         -0.04684          -0.04683          0.22171          1.60682          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1367 3.0963 3.1435 3.0815 3.3023 3.0767 3.1314 3.1972 3.1705 3.0996   3.1742 3.185  3.0601 3.0912 3.0714 3.0357 3.0596 3.0503 3.0971 3.1255   3.1    3.1002 3.1027 3.0438 3.084  3.185  3.1598 3.1696 3.0833 3.0924   3.1137 3.206  3.1854 3.208  3.1225 3.1336 3.2031 3.1213 3.2901 3.194   3.1192 3.1829 3.1878 3.086  3.3012 3.1778 3.1555 3.1612 3.0989 3.047   3.1177 3.0583 3.0526 3.1091]]
950                   2.92634         1.47189         0.95586         -0.02535          -0.02529          0.21784          1.54137          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.265  3.169  3.1453 3.1439 3.1551 3.1408 3.0892 3.1906 3.2864 3.1666   3.1789 3.1838 3.1192 3.3009 3.1256 3.0951 3.1217 3.125  3.0296 3.2312   3.1039 3.1012 3.1048 3.0334 3.1477 3.187  3.1581 3.1677 3.0721 3.1626   3.1867 3.131  3.3004 3.1356 3.1193 3.1357 3.1414 3.1147 3.1716 3.1288   3.1906 3.1797 3.1075 3.0842 3.1631 3.1073 3.1568 3.1607 3.0989 3.1178   3.2365 3.2427 3.1157 3.045 ]]
951                   2.9834         1.4862         0.96985         -0.04535          -0.0453          0.22218          1.61032          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2772 3.0998 3.0685 3.1397 3.1545 3.0844 3.1577 3.1902 3.17   3.1674   3.0995 3.1785 3.0565 3.0927 3.1238 3.0975 3.0562 3.1223 3.0337 3.0543   3.1036 3.1    3.1031 3.2172 3.0852 3.1818 3.1542 3.255  3.2498 3.0923   3.1187 3.134  3.1104 3.207  3.3135 3.2001 3.3327 3.1119 3.1701 3.1356   3.28   3.1787 3.1901 3.1578 3.3041 3.3077 3.0892 3.0932 3.1007 3.0932   3.1176 3.0522 3.0564 3.1137]]
952                   2.9451         1.47794         0.96317         -0.03193          -0.03193          0.21928          1.54357          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.0592 3.1674 3.0784 3.1431 3.0926 3.1419 3.1544 3.1933 3.2842 3.1698   3.1715 3.1839 3.0529 3.0883 3.1232 3.0341 3.123  3.1232 3.0356 3.0603   3.2205 3.1017 3.1036 3.2009 3.1485 3.1849 3.0959 3.0953 3.0758 3.1616   3.1106 3.2085 3.1888 3.2054 3.1132 3.199  3.1298 3.1175 3.1685 3.1262   3.1212 3.1825 3.1202 3.1567 3.2936 3.1114 3.0908 3.1604 3.0981 3.047   3.0484 3.1247 3.1177 3.1103]]
953                   2.96229         1.47943         0.96396         -0.03795          -0.03795          0.22034          1.56077          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.119  3.1504 3.1247 3.1251 3.1378 3.1243 3.1377 3.175  3.1501 3.1501   3.1571 3.1625 3.1054 3.144  3.1052 3.0812 3.106  3.1061 3.0813 3.1063   3.0877 3.0816 3.0868 3.0877 3.1312 3.1688 3.1377 3.1501 3.1249 3.1437   3.1688 3.1877 3.1686 3.1883 3.1687 3.1814 3.1812 3.1683 3.1495 3.1746   3.1684 3.163  3.1687 3.1378 3.1436 3.1564 3.1374 3.1435 3.0818 3.1002   3.0998 3.1058 3.0991 3.0936]]
954                   2.96291         1.47952         0.96397         -0.03817          -0.03817          0.22038          1.56037          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1189 3.1502 3.1253 3.1247 3.137  3.125  3.1373 3.1749 3.1503 3.15   3.1568 3.1621 3.1063 3.143  3.1063 3.0801 3.1057 3.1051 3.0806 3.1065   3.0867 3.0814 3.0868 3.0871 3.1314 3.1689 3.1375 3.1501 3.1249 3.1436   3.1691 3.1878 3.1688 3.1874 3.1692 3.182  3.1815 3.1687 3.1511 3.1744   3.1692 3.1628 3.1689 3.1376 3.1436 3.1569 3.1374 3.1441 3.0802 3.1001   3.0996 3.1066 3.0995 3.0929]]
955                   2.96258         1.47947         0.96395         -0.03805          -0.03805          0.22036          1.56042          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1188 3.1502 3.1251 3.1249 3.1379 3.1247 3.1372 3.1752 3.1502 3.1502   3.1563 3.1618 3.1065 3.1424 3.1055 3.0806 3.1069 3.1063 3.0806 3.1062   3.0875 3.0812 3.0872 3.087  3.1309 3.1687 3.1376 3.1501 3.1247 3.144   3.1689 3.1875 3.1687 3.1877 3.1688 3.1814 3.1811 3.169  3.151  3.1755   3.1689 3.1624 3.1689 3.1378 3.1436 3.1568 3.1379 3.1434 3.0809 3.1001   3.0993 3.1056 3.0996 3.093 ]]
956                   2.96248         1.47944         0.96395         -0.03801          -0.03801          0.22035          1.56012          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1183 3.1509 3.1239 3.1255 3.1375 3.1248 3.1376 3.1748 3.1502 3.1503   3.1569 3.1621 3.1069 3.144  3.1065 3.0803 3.106  3.1055 3.0811 3.1066   3.0874 3.081  3.0877 3.0873 3.1312 3.169  3.1373 3.1501 3.1248 3.1437   3.1697 3.1877 3.169  3.1877 3.1687 3.1808 3.1813 3.1683 3.1497 3.1753   3.1685 3.1632 3.1693 3.1372 3.1433 3.1565 3.137  3.1434 3.0808 3.0999   3.1004 3.1066 3.0989 3.0934]]
957                   3.04652         1.52472         1.06412         -0.06746          -0.03664          0.23727          1.44915          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.4069 3.365  3.4319 3.4953 3.4494 3.3965 3.3904 3.4741 3.5102 3.4341   3.4112 3.5014 3.3874 3.3817 3.4222 3.364  3.4024 3.3672 3.3803 3.3934   3.3234 3.4107 3.4406 3.3125 3.408  3.4811 3.4849 3.3854 3.4924 3.4499   3.562  3.4611 3.4966 3.4156 3.4458 3.4706 3.5198 3.4698 3.4516 3.4522   3.4492 3.4358 3.4097 3.5063 3.4129 3.4871 3.5366 3.3998 3.3409 3.4236   3.4182 3.3158 3.4909 3.4244]]
958                   3.07244         1.52608         1.07105         -0.07654          -0.04577          0.23906          1.4836          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.3919 3.4019 3.3657 3.5239 3.3902 3.449  3.4789 3.4433 3.4499 3.4429   3.5224 3.4382 3.418  3.4118 3.4229 3.3489 3.3964 3.3923 3.3339 3.4812   3.4011 3.3653 3.3507 3.3394 3.45   3.443  3.3822 3.4493 3.4369 3.3755   3.4738 3.4812 3.4844 3.5358 3.5015 3.4478 3.4794 3.4455 3.4899 3.5294   3.5032 3.451  3.5142 3.3946 3.4849 3.4448 3.3731 3.4244 3.3157 3.4292   3.4065 3.4211 3.4329 3.3739]]
959                   3.05458         1.52661         1.06454         -0.07029          -0.04075          0.23739          1.4768          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.4342 3.4402 3.4754 3.4459 3.4254 3.4454 3.4385 3.4298 3.5156 3.4405   3.5066 3.4105 3.3227 3.512  3.3939 3.3314 3.3318 3.3497 3.25   3.4509   3.4342 3.4196 3.3994 3.3682 3.4528 3.4619 3.3872 3.4468 3.4513 3.4847   3.4888 3.5409 3.4148 3.395  3.408  3.4223 3.5077 3.4565 3.3823 3.4907   3.4293 3.4278 3.514  3.3768 3.4087 3.447  3.4844 3.4436 3.3371 3.3371   3.3361 3.4292 3.4909 3.3863]]
960                   3.03554         1.51831         1.0639         -0.06361          -0.03461          0.23686          1.44935          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[3.379  3.4824 3.3919 3.4628 3.4604 3.3663 3.4312 3.5402 3.4021 3.4055   3.4646 3.427  3.4116 3.4041 3.3588 3.3754 3.44   3.4485 3.3565 3.4244   3.4493 3.3467 3.4039 3.4464 3.3321 3.5254 3.4077 3.4992 3.4772 3.4155   3.421  3.4415 3.3885 3.4881 3.4154 3.4424 3.5105 3.43   3.4424 3.4989   3.4542 3.5129 3.4798 3.3505 3.4044 3.4341 3.3562 3.4261 3.372  3.3848   3.3244 3.3318 3.3991 3.4239]]
961                   2.96599         1.47264         0.94757         -0.03925          -0.03843          0.21847          1.60927          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0725 3.101  3.0791 3.0795 3.0926 3.0775 3.0899 3.1263 3.1035 3.1045   3.1077 3.1138 3.0579 3.0942 3.0574 3.0319 3.058  3.0574 3.031  3.0567   3.0374 3.0317 3.0389 3.042  3.0847 3.1228 3.0881 3.1022 3.0776 3.0961   3.1208 3.1402 3.1228 3.142  3.122  3.1336 3.1342 3.1235 3.1017 3.1273   3.1219 3.1168 3.1225 3.0898 3.0972 3.1107 3.0918 3.0989 3.0336 3.0539   3.0533 3.0574 3.0562 3.0454]]
962                   2.9644         1.47234         0.9472         -0.03869          -0.03786          0.21835          1.60877          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0716 3.102  3.0786 3.0763 3.0918 3.0771 3.0899 3.1247 3.103  3.1003   3.1102 3.1155 3.0582 3.0966 3.0573 3.0335 3.0588 3.0573 3.0334 3.0583   3.0419 3.0339 3.0389 3.0422 3.0837 3.1229 3.091  3.1035 3.0783 3.0962   3.1198 3.1382 3.1199 3.141  3.1217 3.1327 3.1343 3.1223 3.1019 3.1271   3.12   3.1152 3.1203 3.0902 3.0976 3.1076 3.0902 3.0934 3.0329 3.0509   3.054  3.0576 3.0489 3.0443]]
963                   2.96503         1.47238         0.94748         -0.03891          -0.03809          0.21841          1.60732          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0715 3.1016 3.078  3.0765 3.0905 3.0767 3.0904 3.1297 3.1025 3.1005   3.1099 3.1126 3.0594 3.0975 3.0593 3.0313 3.0594 3.0553 3.0339 3.0599   3.0403 3.0351 3.0412 3.0369 3.085  3.1253 3.0895 3.0998 3.0787 3.0974   3.1228 3.1398 3.12   3.1427 3.1206 3.1357 3.1313 3.1231 3.1036 3.1276   3.1194 3.1142 3.1208 3.0914 3.0945 3.1081 3.0897 3.0961 3.0349 3.0544   3.0553 3.0555 3.0518 3.0429]]
964                   2.96515         1.4725         0.94729         -0.03895          -0.03812          0.2184          1.60867          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.0713 3.1008 3.0769 3.0781 3.0905 3.0767 3.0897 3.1294 3.1032 3.1031   3.1097 3.1172 3.0588 3.0968 3.0564 3.0307 3.0585 3.058  3.0328 3.0578   3.0382 3.0338 3.0402 3.0432 3.0844 3.1217 3.089  3.1036 3.0775 3.0954   3.1195 3.1389 3.1214 3.1396 3.1221 3.1335 3.1341 3.1174 3.1021 3.1263   3.1225 3.1141 3.1225 3.0911 3.0979 3.1087 3.0893 3.0965 3.0319 3.0527   3.0525 3.058  3.0519 3.0458]]
965                   2.95835         1.47718         0.96294         -0.03657          -0.03657          0.22          1.55312          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1394 3.1464 3.0723 3.1433 3.1591 3.1442 3.133  3.1381 3.1463 3.1432   3.1751 3.1848 3.128  3.1405 3.1268 3.0789 3.0996 3.1017 3.0786 3.1006   3.082  3.0513 3.0833 3.0821 3.1246 3.1907 3.1307 3.1701 3.1438 3.1429   3.1068 3.208  3.1662 3.1814 3.1646 3.1753 3.1751 3.1816 3.1719 3.1697   3.1887 3.1116 3.1636 3.0791 3.137  3.152  3.1345 3.164  3.0929 3.096   3.0941 3.1254 3.1213 3.0873]]
966                   2.96158         1.4789         0.96305         -0.0377          -0.03767          0.22015          1.56492          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.053  3.1434 3.1187 3.1189 3.0728 3.0717 3.157  3.1697 3.1506 3.0919   3.1802 3.1811 3.1148 3.1391 3.1018 3.1    3.1006 3.1017 3.0754 3.1274   3.1089 3.101  3.028  3.081  3.125  3.1881 3.156  3.144  3.1189 3.1374   3.1625 3.1853 3.1637 3.2088 3.1048 3.1319 3.207  3.114  3.1718 3.1701   3.1892 3.1702 3.1647 3.1333 3.0821 3.1506 3.1313 3.1389 3.0791 3.0934   3.0942 3.0382 3.0993 3.1134]]
967                   2.96968         1.47847         0.96448         -0.04054          -0.04054          0.22085          1.56287          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1401 3.1715 3.1185 3.1208 3.148  3.118  3.1315 3.1931 3.1449 3.1444   3.1523 3.1711 3.1262 3.1385 3.1266 3.0959 3.0999 3.0553 3.0751 3.1024   3.107  3.074  3.0835 3.0795 3.1534 3.1627 3.1325 3.0945 3.1185 3.0945   3.1639 3.1914 3.1636 3.1851 3.1669 3.2017 3.1877 3.187  3.17   3.1817   3.1885 3.1591 3.1638 3.1063 3.1392 3.1498 3.1313 3.1372 3.0279 3.1206   3.0962 3.1052 3.1175 3.0877]]
968                   2.95668         1.48011         0.96245         -0.03598          -0.03598          0.2198          1.56542          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.1133 3.1469 3.1186 3.1181 3.1318 3.1204 3.1324 3.1963 3.1454 3.1468   3.1503 3.1677 3.1252 3.1652 3.1034 3.0947 3.0558 3.042  3.0768 3.1304   3.0814 3.1025 3.0812 3.083  3.1288 3.163  3.1598 3.1436 3.1184 3.1373   3.1315 3.1835 3.1663 3.1851 3.1152 3.1792 3.1583 3.1142 3.1721 3.1695   3.1657 3.182  3.1906 3.1577 3.1624 3.1527 3.135  3.1661 3.078  3.1194   3.0968 3.0991 3.0967 3.097 ]]
969                   2.96254         1.47949         0.96408         -0.03804          -0.03804          0.22037          1.56042          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1182 3.1494 3.1258 3.1254 3.1378 3.1251 3.1369 3.175  3.1501 3.1501   3.1568 3.1632 3.1061 3.1441 3.1072 3.0812 3.1061 3.1063 3.0814 3.1069   3.0877 3.0818 3.0871 3.0871 3.1317 3.1693 3.1379 3.1505 3.1252 3.1441   3.1692 3.1881 3.1692 3.1885 3.1694 3.1811 3.1815 3.1689 3.1503 3.1758   3.1693 3.163  3.1691 3.1382 3.1439 3.157  3.1379 3.1451 3.0812 3.1004   3.0996 3.1062 3.0999 3.094 ]]
970                   2.96286         1.4796         0.96419         -0.03815          -0.03815          0.2204          1.56027          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1192 3.1498 3.1249 3.1257 3.1378 3.1264 3.1378 3.1754 3.1508 3.1503   3.1567 3.1632 3.1063 3.145  3.1061 3.0812 3.1064 3.1064 3.0814 3.1064   3.0881 3.0815 3.0875 3.0879 3.1316 3.1694 3.1378 3.1506 3.1251 3.1442   3.1695 3.1884 3.1696 3.1883 3.1695 3.182  3.1827 3.1697 3.1513 3.1754   3.1688 3.1631 3.1696 3.1382 3.1446 3.1569 3.1376 3.1443 3.0807 3.0996   3.101  3.1064 3.0997 3.0939]]
971                   2.9627         1.47957         0.96409         -0.03809          -0.03809          0.22038          1.56037          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1189 3.1506 3.1251 3.1248 3.1383 3.1253 3.1374 3.1758 3.1501 3.1505   3.1566 3.1637 3.1062 3.1437 3.1063 3.0814 3.1068 3.1064 3.0816 3.1058   3.0874 3.0816 3.0875 3.0869 3.1316 3.1694 3.138  3.1505 3.1253 3.1441   3.1693 3.1875 3.1695 3.188  3.1694 3.182  3.181  3.1698 3.1504 3.176   3.1694 3.1635 3.1691 3.1377 3.1439 3.1571 3.1379 3.1446 3.0819 3.0997   3.1004 3.1063 3.1003 3.0936]]
972                   2.96277         1.47955         0.96414         -0.03812          -0.03812          0.22039          1.56007          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1191 3.1509 3.1258 3.1251 3.1382 3.1249 3.1376 3.1759 3.1505 3.1498   3.1568 3.1631 3.107  3.1441 3.1064 3.0809 3.1069 3.1059 3.0812 3.1068   3.0876 3.0811 3.0882 3.0871 3.1317 3.1694 3.1379 3.1505 3.1254 3.1443   3.1695 3.1886 3.1694 3.1878 3.1697 3.1816 3.1819 3.1695 3.1504 3.1754   3.1697 3.1632 3.1695 3.1377 3.1443 3.1562 3.1378 3.1439 3.0819 3.0998   3.0999 3.1063 3.1    3.0935]]
973                   3.16594         1.46821         0.82722         -0.10931          -0.03757          0.21303          1.37227          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6802 2.6828 2.6794 2.6837 2.7031 2.6527 2.6831 2.7204 2.7038 2.7131   2.7124 2.7419 2.6309 2.666  2.6461 2.6298 2.6716 2.6498 2.6941 2.6508   2.6273 2.6296 2.6315 2.6528 2.7076 2.7134 2.6881 2.6783 2.6351 2.641   2.6978 2.7341 2.7192 2.7721 2.7276 2.7265 2.765  2.6895 2.6527 2.7411   2.7183 2.7378 2.6868 2.7126 2.6645 2.722  2.7057 2.6685 2.6322 2.5979   2.6706 2.6447 2.6696 2.6432]]
974                   3.18287         1.47319         0.82526         -0.11524          -0.0421          0.21356          1.38497          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6932 2.7107 2.6793 2.6627 2.6914 2.6594 2.6595 2.7012 2.6817 2.682   2.6996 2.713  2.6537 2.6619 2.6599 2.6103 2.6504 2.6308 2.639  2.6281   2.6226 2.6063 2.6215 2.6506 2.6783 2.7367 2.6976 2.725  2.6764 2.6786   2.7312 2.7556 2.7432 2.714  2.7179 2.7334 2.6977 2.7015 2.7043 2.7326   2.7187 2.6955 2.692  2.7041 2.7083 2.7205 2.6883 2.6789 2.628  2.6311   2.5996 2.6425 2.6282 2.6336]]
975                   3.16838         1.46939         0.82319         -0.11016          -0.03758          0.21264          1.37712          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6483 2.6804 2.666  2.6845 2.6903 2.6388 2.7044 2.737  2.6702 2.6713   2.7266 2.7237 2.6311 2.6923 2.6697 2.6102 2.6249 2.6864 2.6091 2.6984   2.6338 2.6689 2.6233 2.6077 2.7114 2.6971 2.7237 2.7151 2.6633 2.7042   2.7311 2.716  2.7146 2.7252 2.7063 2.7383 2.72   2.7264 2.6502 2.6969   2.677  2.7249 2.7275 2.6747 2.6807 2.7414 2.6718 2.6908 2.6475 2.6296   2.6492 2.6035 2.6636 2.6376]]
976                   3.17517         1.47406         0.82523         -0.11254          -0.03795          0.21313          1.37258          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.6317 2.6863 2.6774 2.6591 2.658  2.6879 2.6499 2.7168 2.6829 2.6713   2.7055 2.7352 2.6632 2.6853 2.6136 2.6027 2.6347 2.6322 2.6576 2.6867   2.6411 2.6274 2.6475 2.6192 2.6759 2.7102 2.6595 2.6943 2.6474 2.6976   2.6932 2.7254 2.731  2.727  2.7163 2.7465 2.7321 2.7287 2.6909 2.7117   2.6989 2.6912 2.686  2.643  2.6311 2.7164 2.6876 2.6946 2.6222 2.6115   2.6501 2.6176 2.6554 2.6516]]
977                   7.09281         2.17521         0.6528         -1.48523          0.02342          0.57894          1.89548          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.2123 1.1727 1.0723 0.5409 1.3182 1.064  1.5576 1.3747 1.2438 0.2903   1.0061 0.8777 1.1191 1.2544 0.5424 1.53   1.326  1.2389 0.9569 0.9518   1.181  1.1815 0.9848 1.2732 1.0448 0.8004 0.8921 1.1084 1.2685 0.9049   1.3958 0.7901 0.8812 0.8026 0.7569 1.3346 1.3408 1.2164 0.9459 0.5058   0.9176 1.1463 1.2205 1.6389 0.5215 1.0383 0.9708 1.187  1.1819 0.8657   1.0017 1.0174 1.1538 1.1615]]
978                   7.17775         2.17116         0.65923         -1.51499          -0.05049          0.5869          1.7651          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.5288 0.9661 1.2871 1.3876 1.3214 1.1835 1.2717 1.2434 1.4247 0.7826   0.6964 1.2982 0.9055 1.1467 1.1139 1.0848 1.3872 0.8957 1.2921 1.0517   1.0591 0.5223 1.3011 0.9433 1.0053 1.4646 1.2447 0.7733 0.9868 0.8803   0.8813 1.0239 0.9059 1.0209 1.4464 1.3552 1.0758 0.7573 1.0885 1.1688   1.6228 1.3352 1.1899 1.2251 1.4156 0.6447 0.76   0.344  1.2647 1.0811   1.2347 1.021  0.7492 0.8725]]
979                   7.62943         2.20289         0.6744         -1.67325          -0.12472          0.65154          1.77973          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.1444 0.8393 0.9837 1.3206 0.9998 1.2121 0.6931 0.9603 0.8412 1.1167   1.2222 0.924  1.5121 1.5101 1.0991 0.8953 0.7686 0.6909 1.0454 1.4734   0.4387 0.666  0.6472 0.8491 0.9717 1.1044 1.1809 1.474  0.9652 1.4476   1.5124 1.037  0.9895 1.5051 1.2247 0.6823 1.3136 0.8078 1.1086 0.6107   0.7931 1.3742 1.2444 1.0331 1.1791 0.7202 1.4417 0.9263 0.9672 0.9262   0.72   1.5841 0.272  0.8411]]
980                   7.16692         2.19581         0.68421         -1.5112          -0.00587          0.59198          1.85562          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.1834 0.4774 1.7089 1.3262 1.1287 1.3293 1.4069 1.5201 0.8438 0.7539   1.0313 0.9304 1.3337 1.0491 1.1215 1.0847 1.1793 1.0158 0.4722 1.4878   1.2832 1.168  1.2406 1.3593 0.8307 0.9449 1.1447 1.1335 0.8829 0.9556   0.4095 1.1648 1.1383 0.9126 1.0125 1.1966 1.3015 1.2136 1.3392 1.2277   0.6737 0.8911 0.8895 0.7675 1.6609 1.2049 0.5611 0.9898 1.2409 0.6914   0.7405 0.9151 0.7992 1.1364]]
981                   5.29099         1.93095         1.56494         -0.8539          -0.04281          0.376          1.79345          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.8149 4.4605 4.9703 4.4838 4.6373 4.878  4.7756 4.8708 4.5551 4.2716   5.0046 4.996  4.5256 4.4141 4.9265 4.9406 4.8594 4.8372 4.1887 4.4354   4.6331 4.2781 4.7493 4.4612 4.382  4.6736 4.7409 4.5197 4.597  4.6728   4.6948 4.8097 4.7264 4.7521 4.8521 4.6311 4.9913 4.1929 4.221  4.6192   4.4433 4.5015 5.0261 4.7314 4.742  4.3067 4.8807 4.7508 4.7649 4.6501   4.4673 4.6105 4.7362 4.8359]]
982                   5.257         1.93332         1.54352         -0.84198          -0.07737          0.37356          1.78677          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.3357 4.6408 4.4768 4.8889 4.7514 4.2795 4.6804 5.1818 4.5098 4.6259   4.7596 4.5421 4.5616 4.6555 4.5118 4.2888 4.5551 4.2105 4.7465 4.6655   4.6679 4.5473 4.8117 4.4087 4.6885 4.6042 4.4375 4.8239 4.4116 4.4888   4.7594 4.6581 4.871  4.6017 4.6779 4.4443 4.4554 4.8658 4.5325 4.7578   4.4569 4.8975 4.6384 4.886  4.622  4.559  4.5142 4.7417 4.6313 4.2367   4.6274 5.0292 4.2822 4.5991]]
983                   5.23975         1.93762         1.56165         -0.83594          -0.09735          0.37374          1.73627          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.6326 4.4623 4.7435 4.3603 4.7248 4.6203 4.5682 4.4765 4.6838 4.5698   4.581  4.3431 4.5425 4.6351 4.3406 4.4605 4.5354 4.4302 4.3501 4.4223   5.1092 4.298  4.237  4.7674 4.6828 4.7754 4.7268 4.3634 4.6216 4.7633   4.5627 4.7899 4.9405 4.8557 4.8695 4.675  4.7164 4.3374 4.4588 4.771   4.8592 4.7658 4.7424 4.6668 4.4124 4.3099 4.8138 4.6346 4.5748 4.433   4.5638 4.213  4.4486 4.4917]]
984                   5.25239         1.93739         1.55142         -0.84037          -0.0893          0.3731          1.77545          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.512  4.761  4.629  4.676  4.7906 4.6902 4.494  4.7386 4.7577 4.4562   4.7879 4.5073 4.3561 4.8041 4.5947 4.4888 4.3149 4.5326 4.3467 4.5426   4.7625 4.4578 4.4764 4.4465 4.4094 4.6357 4.5407 4.4952 4.7331 4.6234   4.5516 4.6162 4.3863 4.7526 4.9381 5.1544 4.6698 4.5325 4.7782 4.1831   4.6961 4.9397 4.521  4.6211 4.853  4.4295 4.5392 4.5903 4.2397 4.3127   4.5169 4.7115 4.7336 4.7649]]
985                   3.08365         1.46743         0.85927         -0.08047          -0.03936          0.21258          1.49497          MLPRegressor(activation='logistic',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.794  2.811  2.7564 2.774  2.7867 2.7829 2.797  2.8126 2.7955 2.8231   2.7994 2.8359 2.7758 2.7874 2.7718 2.7227 2.7912 2.7546 2.7566 2.7601   2.7402 2.7254 2.7373 2.7334 2.7721 2.8499 2.7975 2.8242 2.7838 2.8085   2.8271 2.8764 2.8135 2.8489 2.8428 2.8476 2.8355 2.8517 2.8124 2.8224   2.8295 2.8202 2.8269 2.7865 2.7739 2.7971 2.809  2.7991 2.7768 2.7507   2.7453 2.778  2.7624 2.7423]]
986                   3.07039         1.46404         0.85678         -0.07582          -0.03511          0.21163          1.49827          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7544 2.8047 2.7829 2.8013 2.8283 2.8036 2.7597 2.8207 2.8199 2.8103   2.8015 2.8255 2.7764 2.8003 2.7713 2.7517 2.7756 2.7218 2.7463 2.7867   2.7401 2.7619 2.7407 2.744  2.8026 2.8393 2.7903 2.8039 2.7921 2.7966   2.8055 2.8595 2.8386 2.8429 2.8259 2.8448 2.8353 2.8112 2.8035 2.8104   2.8373 2.8253 2.8374 2.7926 2.8115 2.8124 2.8143 2.8005 2.7509 2.7717   2.7704 2.7606 2.7517 2.7561]]
987                   3.08345         1.46794         0.85993         -0.0804          -0.04016          0.21267          1.50382          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7633 2.8348 2.7661 2.7864 2.8207 2.776  2.7996 2.8447 2.8049 2.7959   2.8316 2.8018 2.7576 2.8022 2.7676 2.748  2.7795 2.7917 2.7214 2.7492   2.7428 2.7375 2.7569 2.755  2.7824 2.8159 2.8083 2.8004 2.7746 2.8251   2.8307 2.8606 2.8639 2.8577 2.8436 2.8375 2.8395 2.8484 2.7957 2.8422   2.8584 2.8011 2.8192 2.7829 2.817  2.8274 2.804  2.7845 2.7369 2.7644   2.7641 2.7861 2.7794 2.7467]]
988                   3.08904         1.47091         0.86092         -0.08236          -0.04205          0.21297          1.49652          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.7931 2.828  2.7749 2.7906 2.7837 2.7918 2.7865 2.8383 2.8113 2.8189   2.8119 2.8435 2.7836 2.8095 2.7639 2.7562 2.7543 2.772  2.7544 2.7852   2.7469 2.7182 2.7278 2.7131 2.794  2.837  2.7867 2.8206 2.767  2.8041   2.8304 2.8456 2.8413 2.8784 2.8263 2.8367 2.831  2.8293 2.8395 2.8543   2.8223 2.8159 2.8368 2.7943 2.8086 2.8367 2.7847 2.8006 2.7404 2.7233   2.7806 2.7858 2.7505 2.7577]]
989                   3.30148         1.55653         1.13722         -0.15679          -0.11121          0.25712          1.21923          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[2.9545 2.9142 2.9379 3.0933 2.931  2.973  3.3313 3.5174 3.205  3.3024   3.2576 3.4916 3.4858 3.7442 3.1989 3.3818 3.7967 3.5987 2.8861 3.2531   3.0527 2.9484 3.4131 3.183  3.5243 3.504  3.5234 3.513  3.5078 3.4902   3.9335 3.9335 4.0441 3.7107 3.2492 3.7954 3.5753 3.3568 3.7238 3.3383   3.9814 3.5814 3.9958 3.6745 3.6209 3.5627 3.7623 2.9403 4.1423 3.8966   4.0836 3.9667 3.8497 4.1779]]
990                   4.17435         1.67412         1.11341         -0.46264          -0.45784          0.29375          1.51507          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[2.4809 3.3661 3.2186 2.8669 3.3184 3.7907 2.8811 4.4644 4.7534 3.3477   3.5293 2.3819 2.7001 2.7734 4.3864 2.7265 3.1103 3.4171 2.523  2.5332   2.1146 2.1027 4.1895 2.3247 2.356  2.38   2.4559 2.3988 2.1245 2.4357   3.7974 4.534  2.4345 3.9986 2.6429 2.1777 3.2808 3.7102 1.9114 3.0593   3.8476 4.252  2.1927 2.2109 2.4983 3.5482 2.5702 4.0604 3.6006 2.2083   2.0752 4.161  3.2698 1.5181]]
991                   3.19373         1.52329         0.99079         -0.11904          -0.11899          0.23363          1.55262          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.1753 3.3184 3.2146 3.2025 3.2543 3.2139 3.3072 3.3965 3.3399 3.3289   3.3453 3.3669 3.2194 3.3907 3.2274 3.1268 3.2212 3.2341 2.9429 3.0087   2.9621 2.9395 2.9467 2.9593 3.1302 3.1687 3.1368 3.1494 3.1241 3.1429   3.2615 3.3142 3.2636 3.3237 3.281  3.306  3.1143 3.0615 2.9862 3.0849   3.0547 3.0345 3.0609 2.9767 2.9924 3.0219 2.9723 2.9987 2.7828 2.8574   2.8562 2.8911 2.8682 2.8282]]
992                   3.23918         1.54147         1.03264         -0.13497          -0.13173          0.24086          1.5056          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False)            [[3.292  3.413  3.3073 3.2992 3.3689 3.3365 3.4098 3.5183 3.4415 3.447   3.4598 3.4899 3.3745 3.516  3.3433 3.2509 3.3705 3.3739 2.8332 3.1329   3.0691 3.0609 3.0903 3.085  3.2611 3.2883 3.021  3.2655 3.2432 3.2619   3.4103 3.4435 3.3893 3.4459 3.3922 3.4297 3.2308 3.1558 3.0972 3.2172   3.1775 3.1441 3.1937 3.0983 3.1164 3.1681 3.0968 3.1093 2.9166 2.974   2.9768 2.7478 2.9917 2.9801]]
993                   3.61595         1.64869         1.17535         -0.26698          -0.2289          0.27242          1.37207          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[2.9305 3.0015 3.2133 2.8168 3.2046 2.8648 3.4079 3.4426 3.4586 3.4094   3.429  3.4881 3.3281 3.4215 3.4775 3.6195 3.5756 3.2611 2.9951 3.2103   2.994  3.2048 2.9055 3.1804 3.5776 3.1576 3.546  3.5274 3.5731 3.487   3.8556 4.0904 3.8081 3.8299 3.8124 4.1067 3.5289 3.4816 3.3443 3.0635   3.8871 3.6904 3.9088 3.5985 3.6014 3.9187 3.9752 3.6892 2.6214 3.8514   3.8414 4.0111 2.836  4.075 ]]
994                   4.40589         1.73233         1.14665         -0.54377          -0.54061          0.30738          1.36628          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.7119 2.9776 2.3081 3.6965 2.857  2.3188 3.1053 4.1643 3.0015 4.0624   2.7383 4.6379 3.8188 3.6624 3.9824 2.9527 2.5274 2.2212 2.4454 1.7525   2.4745 3.2427 2.1392 2.1495 2.2117 2.501  2.1502 3.1355 3.9992 2.413   2.3321 3.9437 4.6458 4.3603 3.4586 4.4612 2.5479 3.8533 2.3652 1.9736   3.4133 3.0745 2.0476 3.476  2.062  3.8431 4.0641 1.8433 2.8542 2.5705   1.5921 3.821  3.626  2.6171]]
995                   3.18603         1.5215         0.98948         -0.11634          -0.1163          0.23311          1.54832          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.1637 3.3251 3.22   3.2118 3.2514 3.2087 3.2952 3.3984 3.3359 3.3339   3.3556 3.379  3.2328 3.3946 3.2214 3.1268 3.2272 3.2245 2.9535 3.0153   2.9599 2.941  2.9598 2.9494 3.1306 3.1689 3.1357 3.1495 3.1238 3.1421   3.2697 3.3161 3.2669 3.3199 3.2733 3.2919 3.0878 3.0534 2.9763 3.0838   3.0575 3.0336 3.0614 2.9729 2.9931 3.0278 2.976  2.9925 2.7847 2.8784   2.8598 2.8975 2.8629 2.8401]]
996                   3.22482         1.53457         1.03113         -0.12994          -0.12643          0.24009          1.52495          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False)            [[3.2933 3.4244 3.3327 3.3164 3.1917 3.3209 3.4193 3.5258 3.4597 3.4569   3.4787 3.4853 3.3571 3.5177 3.3679 3.2221 3.3594 3.3489 2.853  3.1222   3.0798 3.0586 3.0819 3.0649 3.2479 3.2934 3.0065 3.2627 3.249  3.2629   3.4027 3.4257 3.3807 3.4563 3.4123 3.4291 3.2356 3.1805 3.0993 3.1974   3.1976 3.1721 3.1946 3.079  3.1102 3.1501 3.1114 3.1135 2.9083 2.987   2.9977 3.0308 3.0153 2.9845]]
997                   3.22328         1.52862         0.99623         -0.1294          -0.12938          0.23603          1.59467          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.1173 3.3671 3.2961 3.153  3.0422 3.3547 3.6747 3.4184 3.4081 3.147   3.4327 3.3829 3.3786 3.3988 3.23   3.0207 3.0735 3.3442 2.9792 3.0705   2.9642 2.8145 3.1797 2.9325 3.2048 3.3572 3.275  2.9563 2.9393 3.1342   3.2252 3.1852 3.3307 3.3592 3.4976 3.4156 3.2558 3.0444 3.0244 2.9858   3.0347 2.931  3.175  3.0509 2.9971 2.9498 3.1638 2.8592 2.7016 2.7794   2.8837 2.7835 2.9302 3.1365]]
998                   3.41131         1.55847         1.10688         -0.19528          -0.1647          0.25828          1.43763          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[2.8914 2.5518 3.5947 3.5525 3.6715 3.5761 3.7896 3.9159 3.7179 2.62   3.7651 3.7253 3.7085 3.0361 3.5074 3.5892 3.638  3.769  2.3924 3.3535   3.356  3.3906 3.3536 3.2577 3.5716 2.7099 3.5556 3.7439 3.5752 3.5457   3.86   3.8947 3.898  3.4963 3.7781 3.4632 3.5683 3.4282 3.364  3.562   3.3973 3.4424 3.5841 3.4017 3.329  3.4647 3.3756 3.161  2.5969 3.338   3.3485 3.4533 3.2913 3.364 ]]
999                   3.52639         1.58785         1.15512         -0.2356          -0.17653          0.26923          1.42333          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.7376 2.2668 3.5141 3.6923 3.8153 3.5598 3.6521 2.3853 4.0032 3.7947   3.9471 3.7165 3.8665 3.9718 3.6874 3.6808 3.8894 3.7184 3.4431 2.1483   3.3954 3.488  3.5061 2.0011 3.5361 3.8078 3.6865 3.6208 3.7669 2.145   3.7156 4.0028 4.018  3.9392 3.7779 3.8254 3.5504 3.6363 3.6895 3.6129   3.5926 3.7609 3.8434 3.8178 3.6564 2.0277 3.8284 3.9328 3.3475 3.7922   3.4723 3.7839 3.721  3.716 ]]
1000                   3.21118         1.5171         0.99835         -0.12516          -0.12484          0.23474          1.53082          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.0293 3.3021 3.5108 3.1928 3.2099 3.1659 3.3586 3.4088 3.3387 3.2319   3.3976 3.3307 2.6583 3.3093 3.3783 3.1122 3.3145 3.5477 3.1153 2.8248   3.0806 2.9077 2.8696 2.8054 3.0598 3.2928 3.0595 3.1977 3.1023 3.2384   3.3099 3.436  3.0273 3.5902 3.2661 3.1923 3.0161 2.6735 2.9859 2.9595   3.1367 2.9894 3.0655 2.8656 2.655  3.0699 2.8756 3.0947 2.5641 3.0029   2.8677 2.8952 2.8268 3.004 ]]
1001                   5.33091         1.84456         0.91859         -0.86788          -0.8382          0.37836          1.43082          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[2.9818 4.1888 3.214  2.931  2.0433 5.1034 3.0998 2.2931 1.4024 3.3643   0.4302 4.0085 0.7685 3.0377 2.3239 1.9939 3.1502 4.3984 2.8704 4.9833   1.6893 1.4237 1.9465 6.5109 1.3555 1.7584 2.8385 4.8812 2.1045 1.469   3.3524 2.2756 4.8686 2.6709 2.0386 0.9838 1.7547 3.6741 3.3567 4.5163   4.3111 2.585  1.4975 7.8249 1.5934 0.5751 3.4881 1.5635 0.5732 5.9928   5.1911 1.0876 0.8188 2.4585]]
1002                   3.51387         1.63827         1.14322         -0.23121          -0.2043          0.26538          1.46297          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.363  3.0921 3.5313 3.5762 3.7801 2.6715 2.5941 3.8694 3.7619 3.688   3.7198 3.5626 3.721  3.8812 3.7196 3.4996 3.6473 3.651  3.388  3.3902   3.3257 3.2658 3.3903 3.3429 3.4886 3.6955 3.6288 3.6385 2.5127 3.5927   3.7071 3.7352 3.778  3.8546 3.7652 3.8369 3.6059 3.2112 3.3671 3.5412   2.8307 3.7226 2.3791 3.4349 3.4618 3.5046 3.4521 3.4618 3.3142 3.3498   3.0424 3.4117 2.1425 2.3987]]
1003                   3.30141         1.56273         1.11811         -0.15677          -0.09797          0.25182          1.51582          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.596  2.3023 3.5605 3.5538 3.6227 3.5827 3.7322 3.8704 3.8666 3.7786   3.9036 3.8101 3.8632 4.066  3.862  3.7832 3.7077 3.9346 3.5065 3.4864   3.446  3.4827 2.367  3.5434 3.779  3.7714 3.8044 3.8317 3.6582 3.9009   3.8689 3.7517 2.2478 4.1016 3.6402 2.3702 3.5688 3.6038 3.6098 3.4661   3.4991 3.5151 3.5978 2.2043 3.7708 3.7322 3.4206 3.7525 3.173  3.7503   3.2382 3.7799 3.4413 3.3772]]
1004                   3.45643         1.61507         1.16957         -0.21109          -0.17707          0.26537          1.32367          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.9124 2.6362 2.9558 2.7679 3.0616 2.7137 3.392  3.4909 3.3545 3.4328   3.2145 3.8463 3.5855 3.3759 3.6906 3.4991 3.2593 3.5851 2.9668 3.2101   3.1769 3.1189 3.1833 3.0431 3.6101 3.6538 3.463  3.5733 3.1853 3.4944   3.8912 4.0073 3.9382 4.1705 3.5608 3.28   3.8035 3.582  3.277  3.5946   3.4151 3.1958 3.5476 4.0992 3.6657 3.6879 3.5826 3.4544 4.2209 4.075   3.8718 2.9169 4.1239 2.7434]]
1005                   3.67165         1.60008         0.95016         -0.2865          -0.26555          0.25503          1.4066          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[2.6769 2.8704 2.6816 3.1291 2.665  3.1291 2.9919 2.5851 3.1475 2.1385   3.1669 4.4186 2.5061 2.4236 3.2243 2.7236 2.3312 3.0748 2.1933 2.7738   3.6489 3.52   2.8369 2.5747 2.1046 2.3096 2.2536 2.1558 3.4764 4.0375   2.9842 2.4651 1.9782 2.8367 3.7343 4.5194 3.441  2.8712 2.5097 3.0741   2.5939 3.2833 3.8486 2.174  3.7892 2.4894 3.6471 1.8893 2.1096 2.0554   3.6595 3.9259 1.8469 2.6358]]
1006                   3.18805         1.52162         0.99063         -0.11705          -0.11702          0.23339          1.54492          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1802 3.3041 3.2106 3.205  3.2717 3.2134 3.3022 3.4052 3.3386 3.3298   3.3471 3.3689 3.2359 3.396  3.2423 3.1143 3.2326 3.2345 2.9348 3.0109   2.9638 2.9562 2.9594 2.9684 3.1306 3.1678 3.1355 3.1486 3.1234 3.1428   3.2802 3.3069 3.2649 3.3277 3.2703 3.3098 3.1094 3.0498 2.9809 3.1049   3.0654 3.0264 3.0575 2.9772 2.9897 3.0259 2.9778 2.9933 2.7859 2.8615   2.8646 2.8936 2.8698 2.8404]]
1007                   3.19688         1.54192         1.0119         -0.12015          -0.11777          0.23643          1.5162          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[3.1148 3.4264 3.3111 3.3284 3.3601 3.3253 3.433  3.523  3.4588 3.4471   3.4687 3.4881 3.3784 3.5278 3.354  2.9923 3.3628 3.3402 3.0616 3.1244   3.0754 3.0435 3.0904 3.0891 3.2631 3.2914 3.2665 3.2644 3.2485 3.2665   3.4048 3.1602 3.417  3.4373 3.3991 3.1648 3.2189 3.1601 3.0911 3.1935   3.1617 3.1568 3.1908 3.0929 3.0976 3.1542 2.8278 3.1346 2.9295 2.9832   2.9887 3.0495 2.6883 2.9567]]
1008                   3.36         1.60217         1.10738         -0.1773          -0.1456          0.25454          1.4295          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[2.9526 3.4285 2.6312 3.1644 2.9164 3.0775 3.5087 3.3265 3.4606 3.4893   3.3909 3.468  3.6942 3.4838 3.7791 3.1427 3.2646 3.2272 3.0137 3.2246   2.8058 2.9049 3.1778 3.296  3.6315 3.5347 3.1227 3.5765 3.5333 3.5862   3.7215 3.9606 3.881  3.2786 3.2618 3.7785 3.1321 3.22   3.6309 3.434   3.4554 3.273  3.9129 3.8827 3.759  3.9486 3.706  3.4689 3.6077 2.8023   4.0742 4.2564 3.4023 3.9138]]
1009                   3.98088         1.74216         1.01446         -0.39485          -0.39226          0.2809          1.91977          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1447 3.7082 4.0425 2.4177 2.8083 1.7504 2.832  3.1039 4.4059 4.2566   3.4131 2.6256 2.5286 2.7371 2.5212 3.8697 2.5574 4.3945 3.0783 2.2413   3.5601 3.7995 3.3383 3.155  2.2816 2.6994 2.869  3.3646 2.3727 2.4497   4.0824 3.0611 2.9435 2.0684 3.6361 4.2608 3.1607 3.8505 2.3966 3.5966   2.4549 2.8561 3.7602 2.5782 3.9629 3.5797 3.8017 3.8879 2.013  2.4371   2.0883 1.7988 2.2555 1.8329]]
1010                   3.18972         1.52144         0.9902         -0.11764          -0.1176          0.23342          1.54507          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1771 3.3137 3.229  3.2041 3.2653 3.2119 3.3018 3.4039 3.332  3.3335   3.3548 3.3743 3.2305 3.3861 3.2226 3.1198 3.2294 3.2214 2.9468 3.0218   2.9641 2.9345 2.9492 2.9592 3.1305 3.1685 3.1361 3.1484 3.1242 3.1428   3.2708 3.3229 3.2731 3.3102 3.2598 3.3016 3.1195 3.053  2.9688 3.0872   3.0677 3.0382 3.054  2.9788 2.9991 3.0219 2.9841 2.9764 2.7851 2.8635   2.8737 2.8889 2.8648 2.846 ]]
1011                   3.20308         1.54232         1.03393         -0.12232          -0.11813          0.23909          1.51915          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[3.2975 3.4296 3.1359 3.323  3.3684 3.3154 3.4148 3.5142 3.462  3.4432   3.4623 3.4925 3.3647 3.5127 3.3651 3.2544 3.366  3.3526 3.0617 3.1264   3.0875 3.06   3.0768 3.0621 3.2564 3.2929 3.2602 3.2851 3.2328 3.2617   3.3948 3.4208 3.393  3.4582 3.4066 3.4317 3.2328 3.1858 3.1034 3.2011   3.1954 3.1647 3.1745 3.0906 3.1197 3.181  3.1208 3.1191 2.9262 2.9921   2.9825 3.028  3.0124 2.9621]]
1012                   3.18909         1.51186         0.97068         -0.11742          -0.11725          0.23178          1.40647          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2688 3.3194 3.1913 3.416  3.0951 3.2029 3.0678 3.2719 3.4699 3.2958   3.1767 3.3379 3.3758 3.2842 3.4669 2.8552 3.4942 3.3246 2.8243 2.8641   3.0247 2.8559 3.0738 2.9394 2.9994 3.0877 3.0136 3.2633 3.0069 2.9678   3.3658 3.2507 3.3347 3.1549 3.238  3.1437 3.1277 2.9525 3.3065 3.1184   2.9884 2.9872 3.0978 2.8891 3.1359 3.1804 3.1976 3.0011 2.6415 2.6179   2.8917 3.1958 2.7593 2.746 ]]
1013                   3.37326         1.62685         1.12778         -0.18195          -0.15655          0.25573          1.66085          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.4896 3.718  3.5859 2.5448 3.6956 3.5822 3.7335 3.8027 3.7309 3.7038   3.7595 3.8053 3.7578 3.8042 2.6047 3.6147 3.6105 2.8587 3.3268 3.5951   3.2938 3.2627 3.3732 3.3996 2.4459 2.6042 3.591  3.6439 3.6485 3.6207   3.8177 3.8057 3.7468 3.8445 3.4508 3.4635 3.527  3.2158 3.4298 2.5888   3.5757 3.4298 3.5425 2.3247 3.3855 3.5873 3.1146 3.4547 3.2872 3.3346   3.3437 2.6625 3.2918 3.4384]]
1014                   4.17343         1.77307         1.22406         -0.46232          -0.43548          0.30543          1.56915          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5451 3.7314 3.8165 2.3623 3.8346 3.5164 3.8925 3.9734 2.4145 3.7731   3.9631 3.8811 3.662  3.8567 3.7545 2.0838 2.4039 3.6922 3.348  3.627   2.1453 3.5392 3.5479 3.5687 2.0759 4.0258 2.1155 3.8138 3.5439 3.606   3.9459 4.1058 4.1432 4.0663 4.0257 4.0238 3.9001 2.2562 3.5885 2.1867   3.4736 3.8421 3.5309 3.7624 3.4252 3.7764 3.7166 3.6604 3.2935 3.2697   1.8942 1.9889 3.6132 3.6755]]
1015                   3.30142         1.52917         1.02145         -0.15678          -0.15675          0.24186          1.60437          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2439 3.3867 3.2935 3.1801 3.2326 3.3676 3.3533 3.385  3.2421 3.291   3.3873 3.4015 3.2928 3.3104 3.1277 3.1289 3.3238 2.8431 2.9524 3.1026   2.8961 2.9078 2.9771 2.9617 3.2124 3.0179 3.2644 3.2968 3.1823 2.9462   3.1744 3.4139 3.096  3.6466 3.371  3.5617 3.4378 3.0952 2.7944 2.8972   3.2746 2.9271 2.978  2.9397 2.8885 3.1575 2.9875 2.8082 2.8434 2.7964   2.7794 2.8084 2.8864 2.7607]]
1016                   3.58704         1.62675         1.08613         -0.25685          -0.24425          0.26332          1.53353          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5529 3.6494 2.3887 3.3756 3.5396 3.511  3.7463 2.6793 3.7306 3.7381   2.7906 3.7735 3.5787 3.8103 3.7256 3.507  2.6006 3.6411 2.4877 3.1733   3.337  3.3611 3.1393 3.292  3.7221 3.5707 3.5627 3.4342 3.5813 3.5339   3.8115 3.4569 3.7249 3.9082 3.7889 3.6005 2.5309 3.5293 3.3209 3.4626   3.4717 3.5194 3.5349 3.3763 3.4821 2.4571 3.4469 2.6713 2.0346 2.3743   2.3121 3.3294 3.4263 3.4681]]
1017                   3.77268         1.66879         1.18351         -0.3219          -0.25062          0.28082          1.54385          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6682 3.8855 3.473  3.5265 3.6853 3.7197 3.6798 3.923  3.9213 3.9674   3.7826 3.9048 4.0283 4.0442 3.6398 2.1887 3.7702 3.8718 3.4889 3.5183   3.5343 3.4256 3.3916 3.3336 3.7331 3.7204 3.7794 3.8079 3.6009 3.6877   3.8616 4.0981 4.0659 3.9585 4.1421 4.1073 2.2022 3.6848 3.6344 3.6827   3.7773 3.6805 2.209  3.6492 3.709  3.7618 2.1591 3.7684 3.2636 3.7706   3.6099 3.6796 1.7746 3.7365]]
1018                   3.40841         1.61038         1.12588         -0.19426          -0.16346          0.25993          1.62448          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[2.7121 3.1545 2.8918 3.2146 2.898  3.2826 3.0468 3.625  3.2884 3.2842   3.1633 3.3868 3.2924 3.6211 3.0393 3.1642 3.7673 3.2417 2.9965 3.0171   3.2758 3.3405 3.2336 3.2187 3.392  3.1712 3.1193 3.4527 3.535  3.4559   3.7999 3.2772 3.6349 3.9038 3.9955 3.9887 3.5698 3.2286 3.8799 3.4032   3.3689 3.7864 3.8506 3.6874 3.894  3.829  3.7533 3.8065 4.3784 4.0621   2.7811 2.822  3.7879 3.5725]]
1019                   4.22516         1.65917         1.084         -0.48044          -0.45969          0.29758          1.25832          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.3194 4.5619 2.6659 2.7831 1.6672 2.4015 2.8733 4.3669 2.5677 3.6801   2.7232 3.6759 1.7503 3.644  3.4652 2.2533 2.1182 3.0217 2.4582 3.6861   3.8236 2.1138 2.0953 2.3451 3.3457 2.4176 2.5752 2.4002 2.3226 3.8422   2.5111 4.1657 2.4759 4.3172 2.7486 4.2383 2.3857 2.0343 2.3324 2.5389   3.4498 2.2012 2.5848 2.1499 3.64   2.0538 3.9902 2.073  1.5089 3.7705   1.4502 4.0961 2.7474 3.7649]]
1020                   3.18941         1.52214         0.99001         -0.11753          -0.11749          0.23333          1.55302          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.1826 3.3157 3.2163 3.2136 3.2722 3.2146 3.301  3.4001 3.3455 3.3378   3.3591 3.366  3.2212 3.3909 3.2239 3.1293 3.2349 3.2306 2.9445 3.0061   2.9611 2.9548 2.9537 2.9463 3.1304 3.1681 3.1355 3.1489 3.1241 3.1435   3.2728 3.3205 3.2636 3.3179 3.2757 3.2922 3.1108 3.0512 2.9825 3.0708   3.0542 3.0285 3.0617 2.9779 2.9937 3.0247 2.9815 2.9933 2.7784 2.8516   2.8625 2.8916 2.8686 2.836 ]]
1021                   3.23189         1.54811         1.03592         -0.13241          -0.12858          0.24053          1.5129          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[3.286  3.4382 3.3049 3.12   3.3812 3.3174 3.4165 3.5269 3.4755 3.4669   3.4679 3.4846 3.3587 3.496  3.355  3.2526 3.3385 3.3564 3.0619 3.1239   3.0939 2.8572 3.0619 3.077  3.2528 3.3046 3.275  3.2576 3.2421 3.2772   3.3929 3.4559 3.3956 3.4406 3.4138 3.4288 3.2223 3.1831 3.112  3.2209   3.186  3.1497 3.1789 3.1367 3.1032 3.1323 3.0991 3.1024 2.9009 3.0102   3.0021 3.0294 2.9901 2.965 ]]
1022                   3.59423         1.61097         1.17703         -0.25937          -0.23306          0.27166          1.33528          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[2.7487 3.3827 2.8983 2.7993 3.2111 3.2145 3.4913 3.3412 3.4514 3.3109   3.1864 3.393  3.5198 3.3972 3.635  3.515  3.6387 3.3844 3.0463 3.1434   3.1865 2.9875 2.9856 2.871  3.3698 3.5136 3.1862 3.2991 3.6925 3.5345   3.8067 4.0266 3.9063 4.1946 4.0428 4.0873 3.8553 3.6587 2.8735 3.2206   2.9763 3.4359 3.6599 3.5818 3.8138 3.5804 2.9667 3.4143 2.7337 3.8665   3.7757 2.8032 3.6117 3.9052]]
1023                   3.42095         1.53975         1.02667         -0.19866          -0.19186          0.24835          1.37783          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.0279 3.0646 2.4484 3.5043 3.0081 2.548  4.239  2.522  3.5876 2.7461   2.8343 4.192  3.6917 4.2916 4.2404 4.5143 4.4694 3.2325 3.1367 3.614   2.4721 2.33   2.3204 3.4643 2.578  3.6054 2.353  2.4552 3.9344 2.918   3.4924 2.8945 2.2568 3.8762 3.3777 2.506  3.9166 2.5102 3.1364 3.7953   3.8313 3.5598 4.6465 3.8987 3.1669 2.1754 3.3158 4.2454 2.592  3.6785   2.6983 3.1207 3.0021 3.8169]]
1024                   3.18496         1.5212         0.99119         -0.11597          -0.11593          0.23328          1.55307          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.1547 3.3125 3.2078 3.216  3.2639 3.2193 3.3026 3.4005 3.3444 3.3395   3.3419 3.3686 3.2215 3.3829 3.2338 3.1365 3.2155 3.2271 2.9488 3.0117   2.9626 2.9491 2.9754 2.9601 3.1303 3.1676 3.136  3.1489 3.1235 3.1437   3.2726 3.3212 3.2694 3.3306 3.2717 3.3    3.1235 3.0581 2.9775 3.087   3.0536 3.0268 3.0648 2.9714 2.9907 3.0148 2.9824 2.9876 2.7918 2.8816   2.8656 2.8934 2.8675 2.8441]]
1025                   3.20172         1.53805         1.03294         -0.12184          -0.11742          0.23899          1.5116          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[3.3011 3.4292 3.3233 3.3264 3.3851 3.3169 3.4218 3.5416 3.4578 3.4513   3.4657 3.4727 3.3727 3.519  3.3509 3.246  3.3469 3.366  3.05   3.1119   3.0764 3.0629 3.0926 3.067  3.2657 3.3132 3.2625 3.2906 3.2615 3.2537   3.3944 3.4408 3.4044 3.4477 3.3915 3.4199 3.2338 3.185  3.1157 3.1943   3.1802 3.1351 3.1837 3.0933 3.1263 3.1487 3.0835 3.1193 2.9172 3.0098   3.0202 3.0116 2.9937 2.9495]]
1026                   3.21146         1.50156         0.99381         -0.12525          -0.12525          0.23552          1.54107          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.2694 3.2741 3.5128 3.2732 3.0709 3.4725 3.2499 3.1969 3.299  3.2625   3.2091 3.4609 3.0685 3.4099 3.1827 3.2003 3.2373 3.5559 2.7593 3.3314   2.7943 2.7726 2.9911 3.0157 3.1596 3.2148 3.1381 3.5069 2.973  3.002   3.0688 3.3378 3.1586 3.3288 3.5223 3.4439 3.4928 3.0271 2.8736 3.094   3.0604 2.7537 3.0682 2.8662 2.9247 3.0432 3.1005 3.0516 2.6736 3.0502   3.1829 2.9665 2.8168 2.7682]]
1027                   3.26348         1.55032         1.06162         -0.14348          -0.11953          0.24317          1.50455          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5499 3.6821 3.4763 3.5532 3.6607 3.512  3.4803 3.7607 2.6899 3.8219   3.8362 3.1222 3.405  3.9247 3.6446 2.5582 3.753  3.5863 2.7773 3.4572   3.2866 3.3242 3.4771 3.3636 3.6751 3.6278 3.54   3.6486 3.6283 3.5978   3.7863 3.8245 3.8011 3.5061 2.5442 2.3809 3.7732 3.4021 3.3713 2.5373   3.5211 3.1872 3.5278 3.4785 3.4203 3.548  3.4168 3.1566 3.3891 3.292   3.3201 2.4133 2.9993 3.4343]]
1028                   3.77568         1.66079         1.16994         -0.32295          -0.28143          0.28087          1.47142          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[3.5377 3.6896 3.4851 3.6039 3.8179 3.6391 3.973  3.9806 3.8744 2.3816   3.8674 2.3342 3.8316 4.172  2.42   3.6638 2.1993 3.8965 3.3803 3.4725   3.4123 3.5762 3.3245 3.6197 3.7706 2.1791 3.828  3.7448 3.681  3.5745   4.038  4.0697 3.8969 3.8541 4.0965 4.0338 3.7362 3.487  3.7258 3.5227   2.0123 3.6357 3.5926 3.3979 4.0399 3.7035 3.6116 3.8122 3.3168 3.6457   3.5625 3.3359 1.9134 1.949 ]]
1029                   3.16627         1.51032         0.98898         -0.10942          -0.10941          0.23237          1.52818          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.2188 3.2006 3.342  3.3249 2.8408 3.4863 3.657  3.3064 3.3551 3.4262   3.1128 3.0792 3.3314 3.7254 3.255  3.1072 3.3306 3.0888 2.7932 3.0605   3.328  3.1067 2.9599 2.7601 3.2697 3.3404 3.1686 3.0403 2.982  3.04   3.335  3.4101 3.301  3.3133 3.3273 3.1361 3.1025 3.0521 2.8704 3.2516   3.0841 2.8485 2.9242 2.9942 2.8837 3.4785 3.3313 2.8528 2.8639 2.6052   2.8389 2.8458 2.9921 3.0045]]
1030                   3.56154         1.60826         1.10008         -0.24792          -0.2354          0.2645          1.46407          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.5039 3.6937 2.7024 3.5256 3.4319 3.5806 3.726  3.5677 3.8425 3.7523   3.788  3.7732 3.6586 3.5498 3.6582 3.5356 3.6152 3.3837 3.3916 3.308   3.4567 3.3086 3.3537 3.3846 3.2875 3.3179 2.3198 3.0718 3.6972 3.5346   3.8947 3.9399 3.8644 3.4745 1.9489 3.5934 3.5622 3.5333 3.5528 3.2486   3.4567 3.4945 2.4629 3.1215 2.3685 3.6437 3.4925 3.4951 2.0873 2.1463   3.2574 3.4291 2.6242 2.1266]]
1031                   3.44884         1.59627         1.18312         -0.20843          -0.14922          0.26739          1.45537          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[3.6007 3.8178 3.6083 3.5842 2.2821 3.639  3.8016 4.0173 3.7721 3.6696   3.8685 3.7832 3.8295 3.8409 3.8348 3.805  3.8318 3.7206 3.4301 3.5986   3.5092 3.5407 3.4723 3.533  3.6193 2.2241 3.8083 3.812  3.7491 3.7304   2.3333 4.0717 4.0126 4.0355 3.8357 4.0031 3.8237 3.6668 3.6906 3.7492   3.4836 3.5833 3.6105 2.0187 2.0186 3.5589 3.8462 3.7126 3.4478 2.0333   3.5484 3.8082 3.4303 3.8742]]
1032                   3.18766         1.52188         0.98973         -0.11692          -0.11689          0.23328          1.53877          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2334 3.2866 3.2334 3.3172 3.4142 3.3495 3.3494   3.3657 3.382  3.2333 3.3933 3.2333 3.1267 3.2332 3.2334 2.9579 3.0226   2.9741 2.9579 2.9741 2.9742 3.1321 3.1698 3.1384 3.1509 3.1257 3.1447   3.2621 3.3107 3.2621 3.3107 3.2619 3.2945 3.1134 3.0602 2.98   3.0867   3.0599 3.0333 3.0485 2.9679 2.9836 3.0161 2.9676 2.9837 2.7667 2.8467   2.8466 2.8733 2.8467 2.82  ]]
1033                   3.18768         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53872          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2866 3.2333 3.3172 3.4143 3.3495 3.3494   3.3658 3.3819 3.2333 3.3934 3.2333 3.1267 3.2335 3.2333 2.958  3.0226   2.9741 2.958  2.9741 2.9741 3.132  3.1697 3.1384 3.151  3.1258 3.1446   3.2621 3.3108 3.2621 3.3107 3.2621 3.2943 3.1133 3.06   2.9799 3.0867   3.06   3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8465   2.8465 2.8733 2.8467 2.82  ]]
1034                   3.18769         1.5219         0.98971         -0.11693          -0.1169          0.23328          1.53877          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2867 3.2334 3.3171 3.4142 3.3492 3.3496   3.3658 3.382  3.2333 3.3933 3.2334 3.1263 3.2333 3.2332 2.9578 3.0226   2.9741 2.958  2.974  2.9741 3.132  3.1698 3.1384 3.1509 3.1257 3.1447   3.2621 3.3105 3.2621 3.3107 3.2621 3.2943 3.1133 3.06   2.98   3.0866   3.06   3.0334 3.0485 2.9676 2.9838 3.0162 2.9677 2.9839 2.7667 2.8467   2.8467 2.8733 2.8466 2.82  ]]
1035                   3.18769         1.5219         0.98973         -0.11693          -0.1169          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2867 3.2332 3.3172 3.4143 3.3495 3.3495   3.3658 3.3816 3.2333 3.3933 3.2333 3.1266 3.2333 3.2332 2.9579 3.0227   2.9741 2.958  2.9741 2.9741 3.1321 3.1697 3.1384 3.1509 3.1259 3.1446   3.2622 3.3107 3.2621 3.3107 3.2621 3.2946 3.1133 3.06   2.9798 3.0867   3.06   3.0333 3.0484 2.9676 2.984  3.0162 2.9677 2.9839 2.7666 2.8467   2.8467 2.8733 2.8465 2.82  ]]
1036                   3.18765         1.52188         0.98973         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2333 3.2335 3.2868 3.2333 3.3172 3.4143 3.3495 3.3497   3.3657 3.3818 3.234  3.3933 3.2333 3.1267 3.2333 3.2334 2.9578 3.0227   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2621 3.2944 3.1133 3.06   2.9801 3.0867   3.0601 3.0334 3.0485 2.9677 2.9838 3.0162 2.9677 2.9837 2.7666 2.8466   2.8468 2.8734 2.8467 2.8199]]
1037                   3.18766         1.52189         0.98973         -0.11692          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2069 3.34   3.2333 3.2336 3.2867 3.2333 3.3171 3.4143 3.3497 3.3495   3.3657 3.3819 3.2334 3.3933 3.2334 3.1267 3.2333 3.2333 2.9579 3.0227   2.9741 2.9583 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1446   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1134 3.06   2.98   3.0866   3.06   3.0336 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8467   2.8467 2.8733 2.8469 2.8196]]
1038                   3.18769         1.5219         0.98974         -0.11692          -0.1169          0.23329          1.53852          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2334 3.2867 3.2334 3.3173 3.4142 3.3496 3.3495   3.3657 3.382  3.2333 3.3933 3.2333 3.1267 3.2334 3.2333 2.9579 3.023   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2619 3.3107 3.262  3.3107 3.2621 3.2945 3.1133 3.06   2.9805 3.0867   3.0603 3.0334 3.0488 2.9676 2.9835 3.0162 2.9676 2.9838 2.7667 2.8467   2.8467 2.8735 2.8467 2.8197]]
1039                   3.1877         1.5219         0.98973         -0.11693          -0.11691          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2867 3.2334 3.3172 3.4142 3.3497 3.3494   3.3657 3.3819 3.2335 3.3934 3.2334 3.1267 3.2332 3.2334 2.9579 3.0227   2.9741 2.9577 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1446   3.2622 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.9801 3.0866   3.06   3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7667 2.8466   2.8466 2.8734 2.8465 2.82  ]]
1040                   3.18766         1.52187         0.98972         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2336 3.2867 3.2336 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2333 3.393  3.2334 3.1267 3.2334 3.2333 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2619 3.3107 3.2621 3.3106 3.2621 3.2946 3.1133 3.06   2.98   3.0866   3.06   3.0333 3.0486 2.9677 2.9836 3.0159 2.9676 2.9838 2.7665 2.8467   2.8466 2.8733 2.8466 2.82  ]]
1041                   3.18769         1.52191         0.98973         -0.11692          -0.1169          0.23328          1.53877          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2065 3.34   3.2333 3.2334 3.2867 3.2333 3.3172 3.4142 3.3497 3.3498   3.3657 3.382  3.2333 3.3934 3.2333 3.1266 3.2333 3.2333 2.9579 3.0225   2.9742 2.958  2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2621 3.3107 3.2621 3.3106 3.2621 3.2943 3.1133 3.06   2.9801 3.0867   3.06   3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8466 2.8733 2.8466 2.82  ]]
1042                   3.18765         1.52189         0.98971         -0.11691          -0.11689          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2868 3.2333 3.3172 3.4143 3.3496 3.3495   3.3657 3.3819 3.2337 3.3934 3.2333 3.1267 3.2332 3.2333 2.9579 3.0227   2.9741 2.958  2.9739 2.9742 3.1321 3.1699 3.1383 3.1509 3.1258 3.1446   3.2621 3.3106 3.2621 3.3105 3.2623 3.2946 3.1127 3.06   2.98   3.0866   3.0604 3.0333 3.0486 2.9677 2.9837 3.016  2.9678 2.9838 2.7667 2.8465   2.8467 2.8734 2.8467 2.8198]]
1043                   3.18767         1.5219         0.98974         -0.11692          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3402 3.2333 3.2334 3.2867 3.2333 3.3172 3.4142 3.3495 3.3498   3.3656 3.3819 3.2333 3.3934 3.2333 3.1266 3.2333 3.2333 2.958  3.0227   2.9742 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3108 3.2621 3.3109 3.262  3.2944 3.1131 3.06   2.9798 3.0866   3.0599 3.0337 3.0484 2.9676 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8466 2.8734 2.8466 2.82  ]]
1044                   3.18765         1.5219         0.98973         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2333 3.2868 3.2332 3.3171 3.4143 3.3496 3.3497   3.3656 3.3819 3.2333 3.3934 3.2333 3.1267 3.2334 3.2333 2.9579 3.0227   2.9742 2.9579 2.9743 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3108 3.2621 3.3106 3.2619 3.2945 3.1133 3.0605 2.9799 3.0866   3.06   3.0333 3.0486 2.9677 2.9838 3.0162 2.9676 2.9838 2.7667 2.8467   2.8467 2.8735 2.8467 2.82  ]]
1045                   3.18769         1.5219         0.98973         -0.11693          -0.1169          0.23328          1.53887          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3401 3.2333 3.2335 3.2868 3.2336 3.3172 3.4143 3.3495 3.3496   3.3657 3.382  3.2334 3.3933 3.2329 3.1266 3.2333 3.2333 2.9579 3.0227   2.9742 2.9579 2.9741 2.974  3.1321 3.1698 3.1383 3.151  3.1258 3.1446   3.2621 3.3106 3.2619 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0868   3.0603 3.033  3.0485 2.9676 2.9838 3.0162 2.9676 2.9836 2.7665 2.8467   2.8467 2.8733 2.8468 2.8202]]
1046                   3.18768         1.52191         0.98973         -0.11692          -0.1169          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2063 3.3402 3.2334 3.2329 3.2866 3.2336 3.3171 3.4142 3.3496 3.3495   3.3658 3.3819 3.2333 3.3933 3.2333 3.1267 3.2333 3.2334 2.9579 3.0227   2.9741 2.958  2.9742 2.9743 3.1321 3.1698 3.1384 3.1509 3.1259 3.1447   3.2621 3.3107 3.2622 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9839 2.7666 2.8467   2.8467 2.8733 2.8466 2.8199]]
1047                   3.18765         1.52189         0.98972         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2334 3.2333 3.2868 3.2333 3.3172 3.4143 3.3495 3.3495   3.3657 3.3815 3.2334 3.3933 3.2333 3.1268 3.2334 3.2333 2.9578 3.0227   2.9741 2.9579 2.9741 2.9742 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3106 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0334 3.0486 2.9676 2.9837 3.0161 2.9676 2.9837 2.7666 2.8467   2.8464 2.8734 2.8467 2.82  ]]
1048                   3.18765         1.5219         0.98973         -0.11691          -0.11689          0.23328          1.53877          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3401 3.2333 3.2335 3.2865 3.2334 3.3174 3.4142 3.3495 3.3496   3.3657 3.3819 3.2332 3.3933 3.2333 3.1266 3.2333 3.2333 2.9579 3.0226   2.9743 2.9579 2.9741 2.9742 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2619 3.3107 3.2621 3.3107 3.2624 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0485 2.9676 2.9837 3.0162 2.9676 2.9841 2.7667 2.8466   2.8472 2.8733 2.8465 2.82  ]]
1049                   3.18769         1.5219         0.98973         -0.11693          -0.1169          0.23329          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2063 3.3399 3.2334 3.2333 3.2866 3.2334 3.3172 3.4142 3.3495 3.3495   3.3657 3.382  3.2333 3.3933 3.2335 3.1267 3.2333 3.2335 2.9579 3.0227   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1134 3.06   2.9801 3.0868   3.06   3.0333 3.0485 2.9677 2.9838 3.0162 2.9675 2.9839 2.7667 2.8467   2.8465 2.8733 2.8467 2.82  ]]
1050                   3.18771         1.52191         0.98972         -0.11693          -0.11691          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2334 3.2334 3.2867 3.2328 3.3172 3.4143 3.3496 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1262 3.2333 3.2335 2.958  3.0227   2.9741 2.9579 2.9741 2.9742 3.132  3.1698 3.1384 3.151  3.1258 3.1446   3.2619 3.3107 3.2621 3.3106 3.2621 3.2945 3.1132 3.0599 2.98   3.0867   3.06   3.0333 3.0486 2.9677 2.9838 3.0161 2.9676 2.9838 2.7666 2.8466   2.8466 2.8733 2.8466 2.8199]]
1051                   3.18763         1.52187         0.98971         -0.11691          -0.11688          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2068 3.3399 3.2334 3.2333 3.2867 3.2334 3.3171 3.4143 3.3496 3.3495   3.3658 3.3819 3.2334 3.3933 3.2333 3.1266 3.2333 3.2337 2.9579 3.0227   2.9741 2.9579 2.9741 2.9743 3.132  3.1698 3.1383 3.151  3.1258 3.1446   3.2621 3.3105 3.2621 3.3107 3.2621 3.2945 3.1134 3.0599 2.9797 3.0867   3.06   3.0332 3.0484 2.9676 2.9838 3.0161 2.9677 2.9838 2.7667 2.8467   2.8467 2.8732 2.8463 2.82  ]]
1052                   3.18771         1.5219         0.98974         -0.11693          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3401 3.2333 3.2333 3.2867 3.2334 3.3171 3.4142 3.3495 3.3495   3.3658 3.3817 3.2334 3.3935 3.2333 3.1266 3.2334 3.2333 2.9579 3.0226   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1259 3.1446   3.2621 3.311  3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.9798 3.0867   3.06   3.0333 3.0486 2.9676 2.9839 3.0161 2.9676 2.9838 2.7666 2.8467   2.8467 2.8733 2.8467 2.82  ]]
1053                   3.1879         1.52195         0.98975         -0.117          -0.11697          0.2333          1.53872          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3404 3.2333 3.2333 3.2867 3.2333 3.3172 3.4144 3.3496 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1265 3.2334 3.2333 2.9579 3.0226   2.9742 2.9579 2.9736 2.9741 3.132  3.1697 3.1383 3.1509 3.1258 3.1447   3.2622 3.3107 3.2622 3.3107 3.2622 3.2945 3.1133 3.06   2.9799 3.0867   3.0605 3.0333 3.0485 2.9676 2.9838 3.0162 2.9677 2.9837 2.7665 2.8465   2.8465 2.8731 2.8465 2.8199]]
1054                   3.18764         1.52188         0.98972         -0.11691          -0.11689          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2334 3.2333 3.2867 3.2333 3.3172 3.4142 3.3495 3.3493   3.3661 3.3819 3.2332 3.3934 3.2333 3.1267 3.2334 3.2334 2.9579 3.0227   2.9742 2.9579 2.9742 2.974  3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3106 3.2621 3.3107 3.2622 3.2945 3.1134 3.0598 2.9799 3.0866   3.0601 3.0333 3.0485 2.9677 2.9836 3.0162 2.9676 2.9838 2.7666 2.8468   2.8467 2.8734 2.8467 2.82  ]]
1055                   3.18762         1.52188         0.98971         -0.1169          -0.11688          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3399 3.2333 3.2334 3.2867 3.2333 3.3173 3.4144 3.3496 3.3492   3.3658 3.3819 3.2333 3.3933 3.2333 3.1266 3.2336 3.2333 2.9579 3.0227   2.9741 2.9578 2.9741 2.9741 3.132  3.1698 3.1384 3.151  3.1258 3.1447   3.262  3.3106 3.2621 3.3106 3.2621 3.2945 3.1133 3.0598 2.98   3.0867   3.0598 3.0333 3.0485 2.9676 2.9837 3.0162 2.9676 2.9837 2.7667 2.8467   2.8465 2.8734 2.847  2.82  ]]
1056                   3.18764         1.52189         0.98974         -0.11691          -0.11689          0.23328          1.53862          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3399 3.2334 3.2333 3.2866 3.2334 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2335 3.3934 3.2333 3.1269 3.2333 3.2334 2.958  3.0228   2.9742 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2622 3.3106 3.2621 3.3107 3.2622 3.2945 3.1139 3.0599 2.98   3.0865   3.06   3.0333 3.0487 2.9676 2.9838 3.0162 2.9676 2.9838 2.7667 2.8468   2.8467 2.8733 2.8467 2.82  ]]
1057                   3.18771         1.5219         0.98973         -0.11693          -0.11691          0.23329          1.53872          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2069 3.3404 3.2333 3.2333 3.2868 3.2334 3.3171 3.4142 3.3495 3.3494   3.3659 3.3819 3.2333 3.3933 3.2334 3.1267 3.2332 3.2333 2.9579 3.0227   2.9739 2.9579 2.9741 2.9742 3.1321 3.1698 3.1384 3.1509 3.1259 3.1446   3.2621 3.3107 3.2622 3.3106 3.2622 3.2945 3.1137 3.0601 2.9794 3.0867   3.06   3.0333 3.0485 2.9676 2.9838 3.0162 2.9676 2.9837 2.7666 2.8465   2.8469 2.8733 2.8469 2.82  ]]
1058                   3.18763         1.52189         0.98973         -0.1169          -0.11688          0.23328          1.53862          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3401 3.2333 3.2332 3.2867 3.2333 3.3172 3.4142 3.3495 3.3495   3.3657 3.3819 3.2334 3.3933 3.2333 3.1267 3.2333 3.2334 2.9579 3.0228   2.9742 2.958  2.9741 2.9742 3.1321 3.1698 3.1383 3.1509 3.1258 3.1447   3.2621 3.3107 3.2622 3.3107 3.2617 3.2945 3.1133 3.06   2.9803 3.0867   3.0601 3.033  3.0485 2.9676 2.9838 3.0163 2.9676 2.9839 2.7666 2.8468   2.8466 2.8734 2.8466 2.8199]]
1059                   3.18773         1.52191         0.98974         -0.11694          -0.11692          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2334 3.2333 3.2867 3.2333 3.3174 3.4142 3.3495 3.3495   3.3658 3.3819 3.2335 3.3934 3.2333 3.1267 3.2333 3.2334 2.9579 3.0226   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1447   3.2619 3.3105 3.2622 3.3108 3.262  3.2949 3.1134 3.06   2.98   3.0871   3.0601 3.0332 3.0485 2.9676 2.984  3.0162 2.9678 2.9838 2.7666 2.8467   2.8466 2.8733 2.8468 2.8199]]
1060                   3.1876         1.52188         0.98971         -0.11689          -0.11687          0.23328          1.53882          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2336 3.2867 3.2333 3.3172 3.4143 3.3495 3.3495   3.3657 3.3819 3.2331 3.3934 3.2333 3.1267 3.2332 3.2334 2.958  3.0226   2.974  2.9578 2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2621 3.3106 3.2621 3.2945 3.1129 3.06   2.98   3.0867   3.06   3.0334 3.0486 2.9676 2.9838 3.0161 2.9677 2.9838 2.7669 2.8467   2.8467 2.8733 2.8467 2.8204]]
1061                   3.18769         1.5219         0.98971         -0.11693          -0.1169          0.23328          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2066 3.3401 3.2334 3.2333 3.2865 3.2333 3.3172 3.4144 3.3496 3.3496   3.3657 3.3819 3.2333 3.3933 3.2333 3.1264 3.2333 3.2333 2.9579 3.0227   2.9742 2.958  2.9739 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3104 3.2621 3.3108 3.2623 3.2941 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0485 2.9678 2.9838 3.016  2.9676 2.9838 2.7666 2.8465   2.8467 2.8733 2.8467 2.82  ]]
1062                   3.18769         1.52189         0.98973         -0.11692          -0.1169          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2065 3.3401 3.2336 3.2333 3.2866 3.2334 3.3172 3.4142 3.3496 3.3495   3.3657 3.3819 3.2333 3.3934 3.2333 3.1267 3.2335 3.2334 2.9579 3.0227   2.9742 2.958  2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1446   3.2623 3.3107 3.262  3.3107 3.262  3.2945 3.1133 3.06   2.9799 3.0868   3.06   3.0333 3.0484 2.9676 2.9838 3.0161 2.9676 2.9836 2.7665 2.8467   2.8466 2.8732 2.8467 2.8198]]
1063                   3.18765         1.52188         0.98972         -0.11691          -0.11689          0.23328          1.53862          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2335 3.2866 3.2334 3.3171 3.4142 3.3495 3.3493   3.3657 3.3819 3.2333 3.3934 3.2333 3.1267 3.2333 3.2334 2.9578 3.0228   2.9741 2.9578 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1257 3.1446   3.262  3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.9801 3.0866   3.06   3.0335 3.0485 2.9677 2.9838 3.0161 2.9676 2.9837 2.7668 2.847   2.8466 2.8733 2.8467 2.8198]]
1064                   3.18758         1.52187         0.98971         -0.11689          -0.11686          0.23328          1.53872          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2069 3.34   3.2333 3.2333 3.2867 3.2332 3.3171 3.4141 3.3495 3.3495   3.3657 3.3817 3.2333 3.3933 3.2333 3.1267 3.2334 3.2334 2.9579 3.0226   2.9741 2.958  2.9741 2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2618 3.3105 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0485 2.9676 2.9837 3.0162 2.9677 2.9837 2.7667 2.8467   2.8468 2.8733 2.8466 2.82  ]]
1065                   3.18771         1.52191         0.98974         -0.11693          -0.11691          0.23329          1.53867          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.3402 3.2337 3.2333 3.2866 3.2333 3.3172 3.4143 3.3495 3.3496   3.3661 3.3819 3.2333 3.3935 3.2333 3.1267 3.2334 3.2333 2.9582 3.0227   2.9746 2.958  2.9741 2.9741 3.132  3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2624 3.3107 3.2621 3.2945 3.1133 3.0601 2.98   3.0868   3.06   3.0334 3.0486 2.9676 2.9835 3.0162 2.9676 2.9836 2.7666 2.8463   2.8465 2.8733 2.8466 2.82  ]]
1066                   3.18762         1.52189         0.98971         -0.1169          -0.11688          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.3399 3.2334 3.2333 3.2868 3.2335 3.317  3.4142 3.3495 3.3497   3.3657 3.3817 3.2333 3.3933 3.2334 3.1268 3.2332 3.2333 2.9579 3.0227   2.9742 2.9578 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.262  3.3105 3.2621 3.3107 3.2621 3.2944 3.1133 3.06   2.9802 3.0867   3.0599 3.0334 3.0483 2.9677 2.9838 3.0163 2.9676 2.9839 2.7667 2.8465   2.8467 2.8733 2.8466 2.82  ]]
1067                   3.18765         1.5219         0.98973         -0.11691          -0.11689          0.23328          1.53867          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2333 3.2336 3.2867 3.2333 3.3172 3.4144 3.35   3.3495   3.3657 3.3819 3.2334 3.3933 3.2334 3.1267 3.2335 3.2333 2.9579 3.0227   2.9741 2.958  2.9742 2.9741 3.132  3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3107 3.2621 3.3107 3.2622 3.2944 3.1133 3.06   2.98   3.0867   3.0599 3.0333 3.0485 2.9675 2.9838 3.0161 2.9677 2.9841 2.7667 2.8467   2.8467 2.8733 2.8467 2.8199]]
1068                   3.18773         1.52191         0.98974         -0.11694          -0.11691          0.23329          1.53867          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2065 3.3401 3.2333 3.2333 3.2866 3.2333 3.3172 3.4143 3.3495 3.3494   3.3657 3.3819 3.2332 3.3934 3.2334 3.1267 3.2333 3.2333 2.9579 3.0228   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1383 3.1509 3.1258 3.1446   3.2621 3.3106 3.2623 3.3107 3.2621 3.2945 3.1137 3.06   2.9799 3.0867   3.0602 3.0333 3.0485 2.9674 2.9838 3.0161 2.9677 2.9838 2.7667 2.8466   2.8467 2.8733 2.8467 2.82  ]]
1069                   3.1876         1.52188         0.98968         -0.11689          -0.11687          0.23328          1.53887          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.3402 3.2333 3.2333 3.2864 3.2333 3.3173 3.4142 3.3495 3.3495   3.3657 3.3819 3.2331 3.3933 3.233  3.1266 3.2333 3.2332 2.9579 3.0226   2.9741 2.9579 2.9741 2.9742 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3102 3.2621 3.3106 3.262  3.2944 3.1133 3.0598 2.9799 3.0867   3.06   3.0326 3.0485 2.9675 2.9839 3.0162 2.9676 2.9837 2.7667 2.8466   2.8466 2.8732 2.8469 2.8198]]
1070                   3.18768         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2333 3.2336 3.2866 3.2331 3.3171 3.4142 3.3495 3.3496   3.3657 3.3819 3.2333 3.3933 3.2333 3.1263 3.2333 3.234  2.958  3.0226   2.9741 2.958  2.9741 2.9741 3.132  3.1698 3.1384 3.1509 3.1258 3.1446   3.2623 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.0596 2.98   3.0867   3.06   3.0333 3.0486 2.9676 2.9838 3.0162 2.9676 2.9839 2.7669 2.8467   2.846  2.8732 2.8467 2.82  ]]
1071                   3.18769         1.5219         0.98974         -0.11692          -0.1169          0.23329          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2331 3.2336 3.2867 3.2333 3.3173 3.4142 3.3495 3.3495   3.3655 3.3821 3.2333 3.3933 3.2334 3.1266 3.2336 3.2333 2.958  3.0226   2.9741 2.9579 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2626 3.2946 3.1133 3.0599 2.98   3.0866   3.06   3.0333 3.0485 2.9677 2.9837 3.0164 2.9676 2.9838 2.7667 2.8466   2.8467 2.8734 2.8465 2.8202]]
1072                   3.18778         1.52191         0.98974         -0.11696          -0.11693          0.23329          1.53862          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2334 3.2333 3.2867 3.2333 3.317  3.4143 3.3495 3.3495   3.3659 3.3819 3.2333 3.3934 3.2334 3.1261 3.2333 3.2333 2.958  3.0228   2.9741 2.958  2.9741 2.9741 3.132  3.1699 3.1384 3.1509 3.1258 3.1447   3.2622 3.3107 3.2621 3.3106 3.2622 3.2946 3.1135 3.06   2.9801 3.0867   3.0596 3.0333 3.0486 2.9676 2.9838 3.0161 2.968  2.9838 2.7667 2.8459   2.8467 2.8733 2.8469 2.82  ]]
1073                   3.18762         1.52188         0.98972         -0.1169          -0.11688          0.23328          1.53877          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2335 3.2333 3.2867 3.2334 3.3172 3.4142 3.3495 3.3495   3.3657 3.3818 3.2331 3.3933 3.2333 3.1269 3.2333 3.2333 2.9579 3.0227   2.9741 2.9579 2.9741 2.9743 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2621 3.3107 3.2621 3.2946 3.1132 3.06   2.98   3.0867   3.0602 3.0332 3.0483 2.9677 2.9838 3.016  2.9676 2.9838 2.7667 2.8467   2.8466 2.8734 2.8466 2.82  ]]
1074                   3.18763         1.52189         0.98973         -0.1169          -0.11688          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2072 3.34   3.2333 3.2336 3.2869 3.2334 3.3174 3.4142 3.3495 3.3495   3.3656 3.382  3.2333 3.3933 3.2333 3.1267 3.2333 3.2333 2.9579 3.0226   2.974  2.958  2.9742 2.9742 3.1321 3.1698 3.1384 3.1509 3.1258 3.1447   3.2623 3.3107 3.2622 3.3107 3.2621 3.2944 3.1133 3.06   2.9801 3.0865   3.06   3.0333 3.0485 2.9674 2.9838 3.016  2.9674 2.9838 2.7667 2.8469   2.8468 2.8733 2.8466 2.8198]]
1075                   3.18767         1.5219         0.98973         -0.11692          -0.1169          0.23328          1.53862          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[3.2066 3.34   3.2333 3.2333 3.2866 3.2333 3.3171 3.4142 3.3495 3.3494   3.3657 3.3819 3.2333 3.3939 3.2334 3.1267 3.2333 3.2334 2.9579 3.0228   2.9741 2.9579 2.9742 2.9741 3.1321 3.1698 3.1383 3.151  3.1258 3.1446   3.2621 3.3107 3.2621 3.3107 3.2621 3.2945 3.1133 3.06   2.98   3.0867   3.06   3.0333 3.0485 2.9677 2.9838 3.0163 2.9676 2.9838 2.7666 2.8466   2.8467 2.8733 2.8467 2.82  ]]
1076                   3.1877         1.52191         0.98972         -0.11693          -0.11691          0.23328          1.53877          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2068 3.34   3.2333 3.2334 3.2867 3.2333 3.3175 3.4143 3.3495 3.3495   3.3657 3.3819 3.2332 3.3933 3.2333 3.1267 3.2333 3.2332 2.958  3.0226   2.9741 2.9579 2.974  2.9741 3.132  3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3106 3.2622 3.3105 3.2622 3.2945 3.1132 3.06   2.98   3.0867   3.0601 3.0334 3.0486 2.9676 2.9838 3.0162 2.9676 2.9838 2.7666 2.8465   2.8467 2.8733 2.8467 2.82  ]]
1077                   3.18777         1.52193         0.98976         -0.11695          -0.11693          0.23329          1.53872          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2333 3.2334 3.2867 3.2334 3.3172 3.4143 3.3496 3.3496   3.3657 3.3819 3.2333 3.3933 3.2333 3.1267 3.2333 3.2334 2.958  3.0226   2.9741 2.9579 2.974  2.9741 3.1321 3.1698 3.1384 3.151  3.1258 3.1447   3.2621 3.3107 3.2623 3.3107 3.2621 3.2945 3.1133 3.0605 2.9801 3.0867   3.0606 3.0333 3.0489 2.9677 2.9838 3.0162 2.9676 2.9842 2.7669 2.8466   2.8466 2.8734 2.8469 2.82  ]]
1078                   3.18764         1.52189         0.98972         -0.11691          -0.11689          0.23328          1.53882          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.34   3.2337 3.2333 3.2867 3.2334 3.3172 3.4142 3.3495 3.3496   3.3659 3.3819 3.2334 3.3933 3.2333 3.1267 3.233  3.2333 2.9582 3.0227   2.9741 2.9582 2.9741 2.9741 3.1321 3.1698 3.1384 3.1509 3.1258 3.1446   3.2621 3.3106 3.2622 3.3107 3.2621 3.2945 3.1133 3.06   2.9801 3.0867   3.0599 3.0333 3.0485 2.9677 2.9838 3.0163 2.9677 2.9838 2.7667 2.8467   2.8465 2.8731 2.8466 2.82  ]]
1079                   3.18771         1.5219         0.98972         -0.11693          -0.11691          0.23328          1.53872          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[3.2067 3.3405 3.2335 3.2333 3.2866 3.2334 3.3171 3.4144 3.3495 3.3495   3.3658 3.3818 3.2333 3.3934 3.2333 3.1263 3.2332 3.2333 2.9579 3.0227   2.9741 2.958  2.9744 2.9741 3.1321 3.1699 3.1383 3.151  3.1258 3.1446   3.2621 3.3105 3.2623 3.3106 3.2621 3.2945 3.1133 3.06   2.98   3.0866   3.06   3.0333 3.0485 2.9676 2.9838 3.016  2.9676 2.9838 2.7663 2.8466   2.8467 2.8733 2.8469 2.82  ]]
1080                   3.38932         1.60947         1.12217         -0.18757          -0.16324          0.25758          1.3983          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.9362 2.8291 2.8716 2.6906 3.1126 2.5606 2.9857 3.3191 3.2673 3.3476   2.9236 3.0659 3.3002 3.4243 3.1448 3.1907 3.1729 3.2693 3.0143 3.1433   3.1897 3.2149 3.0091 3.1796 3.4146 3.46   3.4693 3.4367 3.2461 3.139   3.9037 3.7989 3.9897 3.6255 3.7694 3.7832 3.2144 3.3216 3.5962 3.5793   3.4372 3.5905 3.6858 3.9149 3.6937 3.9849 3.8968 3.91   3.8614 3.9512   3.9834 4.0687 3.7673 2.9083]]
1081                   3.28294         1.57109         1.11969         -0.1503          -0.12362          0.25226          1.46755          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.6898 3.246  2.8426 2.8464 3.2008 3.0159 2.9793 3.0463 3.113  3.302   3.2686 3.1387 3.1812 3.469  3.2456 3.5584 3.1653 3.2036 2.9678 3.0592   2.7775 3.2105 3.2523 2.9086 3.487  3.3875 3.3288 3.5036 3.5271 3.6007   3.8626 3.8734 4.0015 3.8779 3.7622 3.9571 3.077  3.2671 3.0881 3.356   3.0475 3.491  3.828  3.5093 3.8213 3.6455 3.8021 3.8441 3.8462 4.073   3.9834 3.7894 4.0642 3.8444]]
1082                   3.19093         1.54021         1.11057         -0.11806          -0.08545          0.24809          1.21177          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[2.6645 2.7902 3.1346 3.0669 3.1974 3.1574 3.2734 3.3516 3.424  3.3062   3.0574 3.1226 3.4792 3.5636 3.4517 3.4084 3.4656 3.5733 3.0962 2.9964   3.1396 3.0381 2.7894 3.1887 3.3936 3.5493 3.4409 3.4856 3.5671 3.5442   3.9137 3.7389 3.7091 3.9424 3.7778 3.7131 3.3579 3.3554 3.5419 3.5737   3.3156 3.0998 3.0894 3.6179 3.7296 3.7263 3.7399 3.7143 3.9346 3.8456   4.0031 3.6615 4.135  3.8553]]
1083                   3.28872         1.55865         1.12416         -0.15233          -0.11435          0.25463          1.27405          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,shuffle=False,solver='sgd')            [[3.1676 3.1968 2.7395 2.9695 2.8384 3.1343 3.248  3.2596 3.2524 3.1718   3.2693 3.2531 3.3983 3.372  3.8134 3.1499 3.4773 3.4752 3.0857 3.2938   2.9122 3.0231 2.6664 3.0759 3.479  3.4338 3.3076 3.4953 3.5019 3.4362   3.7116 3.8178 3.7845 3.8202 3.8832 3.7516 3.5284 3.3885 3.9069 3.4664   3.2033 3.682  3.6088 3.9223 3.6627 3.664  3.5381 3.7904 4.1421 3.7212   4.2008 3.9944 4.0962 3.928 ]]
1084                   3.18596         1.51923         0.99655         -0.11632          -0.11589          0.2339          1.4898          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8736 2.998  2.9696 2.9457 2.9895 2.8886 3.1191 3.2043 3.0502 3.2292   3.1715 3.1604 3.1991 3.175  3.2522 3.1475 3.1808 3.2669 2.7429 2.8557   2.8803 2.7544 2.8716 2.7217 3.1087 3.1533 3.1147 3.1269 3.1027 3.1125   3.3695 3.3828 3.31   3.4258 3.3027 3.3044 3.1556 3.0504 2.9914 3.0973   3.0462 3.0651 3.2022 3.0934 3.1655 3.2383 3.1473 3.1076 2.9912 3.0942   3.1361 3.1602 3.1271 3.1053]]
1085                   3.219         1.53425         1.00726         -0.1279          -0.12777          0.23675          1.50995          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9451 2.9515 2.8768 2.8857 2.9681 2.8664 3.138  3.2417 3.1495 3.1903   3.1879 3.1908 3.1956 3.3052 3.2199 3.0143 3.1906 3.1709 2.7537 2.9671   2.9538 2.7856 2.8297 2.8027 3.1097 3.151  3.1161 3.1303 3.1031 3.12   3.4025 3.4507 3.3549 3.3242 3.3645 3.3699 3.2022 3.2504 3.1601 3.1242   3.0721 3.1115 3.2409 3.1171 3.0936 3.1826 3.0854 3.1388 3.0899 3.119   3.1527 3.107  3.1183 3.1758]]
1086                   3.18993         1.51929         0.99316         -0.11771          -0.11677          0.23338          1.5406          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9111 2.9847 2.8604 2.8602 2.9856 2.8648 3.1662 3.2166 3.1244 3.1847   3.1952 3.2261 3.1535 3.2604 3.2988 2.8416 3.0793 3.1901 2.8456 2.8412   2.839  2.8992 2.7626 2.7934 3.1171 3.1468 3.1191 3.1262 3.1117 3.1309   3.3482 3.3945 3.3729 3.4242 3.3704 3.2465 3.2059 2.9131 2.8932 2.9218   3.0694 2.9562 3.1938 3.0736 3.0944 3.1192 3.1262 3.0158 3.0306 3.2005   3.0834 3.1449 3.1116 3.0859]]
1087                   3.19772         1.53161         1.00171         -0.12044          -0.12004          0.23455          1.55652          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.82   3.0349 2.9539 2.8874 2.9772 2.9284 3.0606 3.2173 3.1165 3.2149   3.1545 3.1979 3.1745 3.4149 3.1174 3.1326 3.0988 3.1122 2.8179 2.8314   2.8722 2.8907 2.848  2.9436 3.1176 3.1511 3.116  3.1241 3.0987 3.1231   3.4822 3.4358 3.2155 3.4083 3.3485 3.2832 3.1307 3.0061 3.0768 3.1127   2.9622 3.1688 3.2094 3.1064 3.153  3.1141 3.1594 3.1371 2.8791 3.1492   3.1424 3.1081 3.0878 3.0732]]
1088                   3.22521         1.53121         0.98704         -0.13007          -0.13007          0.23514          1.51252          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3335 3.5172 3.2143 3.3412 3.4192 3.3159 3.4225 3.5098 3.4527 3.4204   3.4014 3.4847 3.2654 3.435  3.2983 3.0935 3.2684 3.2607 3.0596 3.0338   2.9884 3.0097 3.0198 2.9713 3.1399 3.1826 3.1461 3.1612 3.1346 3.1485   3.243  3.2259 3.2233 3.2386 3.198  3.293  3.1237 3.0864 2.9593 3.2347   3.0193 3.019  2.9524 2.9023 2.887  2.9539 2.9318 2.9055 2.6683 2.6717   2.8428 2.7463 2.752  2.6489]]
1089                   3.19982         1.52763         0.98278         -0.12118          -0.12113          0.23314          1.54358          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.4062 3.4879 3.3433 3.3473 3.4192 3.2004 3.448  3.437  3.4452 3.418   3.4733 3.3765 3.2288 3.4136 3.2523 3.1769 3.2672 3.2482 3.035  3.0528   2.9897 2.9932 3.0057 2.988  3.1376 3.1776 3.1529 3.1557 3.1281 3.1466   3.2123 3.287  3.1904 3.2344 3.16   3.2285 3.0953 3.0235 2.9954 3.1177   3.0209 3.0303 2.9831 2.9036 2.9386 2.9335 2.8276 2.9166 2.631  2.7122   2.7128 2.7314 2.7435 2.6974]]
1090                   3.22183         1.52605         0.99188         -0.12889          -0.12888          0.23531          1.53108          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3204 3.3337 3.3567 3.354  3.4506 3.3672 3.378  3.5085 3.459  3.4176   3.4753 3.4659 3.2173 3.4427 3.2585 3.1248 3.2681 3.3284 3.0312 3.0798   3.0168 2.9833 3.0298 2.9599 3.1493 3.1878 3.1439 3.1502 3.1295 3.1617   3.212  3.3429 3.2217 3.3167 3.2256 3.2791 3.0842 3.0131 2.9315 3.0668   3.088  3.0149 2.9972 2.9203 2.9311 2.9238 2.8486 2.865  2.6869 2.7092   2.6517 2.7158 2.6586 2.8491]]
1091                   3.18844         1.52235         0.99252         -0.11719          -0.1171          0.2335          1.5616          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1135 3.237  3.1506 3.1424 3.2069 3.1444 3.2759 3.3675 3.3098 3.3052   3.3212 3.3301 3.2069 3.3518 3.2183 3.1079 3.2193 3.2609 2.9462 2.9966   2.9381 2.9316 2.9205 2.9192 3.1272 3.1666 3.1351 3.1462 3.1221 3.1399   3.2865 3.3293 3.2975 3.3466 3.2802 3.3245 3.1199 3.0285 2.9826 3.0632   3.0851 3.0366 3.0869 2.9871 3.025  3.0572 2.9891 3.0294 2.8212 2.9101   2.9163 2.9347 2.9014 2.8728]]
1092                   3.19057         1.52352         0.99389         -0.11793          -0.11788          0.23376          1.57492          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1414 3.2659 3.1455 3.1454 3.2056 3.1412 3.2661 3.3802 3.3143 3.303   3.3304 3.3615 3.2197 3.3836 3.2231 3.1028 3.2154 3.1969 2.9301 2.9866   2.9517 2.9118 2.9535 2.9316 3.1281 3.1625 3.1351 3.1469 3.1229 3.1404   3.3022 3.3434 3.277  3.329  3.3004 3.3288 3.1328 3.0967 3.0044 3.0724   3.0555 2.9976 3.077  2.9869 3.0024 3.0471 2.9908 3.0272 2.8433 2.9146   2.9171 2.9265 2.9292 2.8967]]
1093                   3.18683         1.52211         0.99177         -0.11663          -0.11653          0.23334          1.57135          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1214 3.252  3.123  3.1366 3.2234 3.1333 3.2777 3.3821 3.3043 3.3064   3.3242 3.3437 3.201  3.341  3.2336 3.1056 3.2556 3.2481 2.9085 2.9747   2.9188 2.9032 2.9776 2.9589 3.1278 3.1656 3.1344 3.1472 3.1206 3.141   3.2973 3.328  3.3004 3.3458 3.3036 3.3004 3.0765 3.0531 2.9743 3.1   3.0634 3.0069 3.0906 2.9867 3.0066 3.0503 2.9887 3.0197 2.8244 2.8885   2.9272 2.9518 2.9053 2.8782]]
1094                   3.19658         1.52407         0.9949         -0.12004          -0.11998          0.23409          1.57375          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1413 3.2535 3.1651 3.1563 3.2129 3.1652 3.2942 3.3684 3.311  3.2962   3.3326 3.3449 3.2039 3.4001 3.2161 3.1343 3.1974 3.2211 2.9053 2.9747   2.9473 2.9216 2.9247 2.9516 3.1268 3.1666 3.1333 3.1463 3.1226 3.1404   3.2746 3.3642 3.2878 3.3476 3.3043 3.3152 3.1122 3.0522 3.0148 3.1018   3.0326 3.0414 3.0857 3.0047 3.0057 3.0402 2.9947 3.012  2.8129 2.9193   2.9228 2.9271 2.9007 2.878 ]]
1095                   3.22005         1.49798         0.93891         -0.12826          -0.10856          0.22885          1.60617          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.5678 2.0953 3.1722 2.6316 2.5716 2.516  3.2721 2.79   2.6232 3.3082   2.8052 2.731  2.6589 3.0846 2.6636 2.7059 2.9446 3.0868 2.5351 2.6544   2.533  2.5017 2.5207 2.5425 3.1282 2.8743 2.8211 2.8803 3.122  2.9427   3.0275 3.286  3.0508 3.4304 3.1715 3.2185 2.6412 3.0576 2.7753 2.8306   2.9658 3.0821 3.0044 2.7174 2.8028 3.1368 2.8779 2.917  3.1643 3.2362   3.2699 3.1252 3.1734 3.2815]]
1096                   3.21625         1.51097         0.94252         -0.12693          -0.10862          0.22868          1.52617          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.6689 2.6565 2.5843 2.5099 2.5915 2.5361 2.5344 2.68   2.8965 2.7348   3.3505 2.8226 2.9514 3.1725 3.1928 2.8597 3.0968 3.0106 2.4416 2.8493   2.9519 2.4183 2.6128 2.5129 3.1298 3.167  2.7262 2.9977 2.9347 2.8605   3.2642 3.2924 3.0918 3.3313 3.0712 3.0514 2.9163 2.8158 2.7884 2.7622   3.0709 2.8393 3.0793 2.9401 3.1141 2.8723 2.9824 2.9243 2.9259 3.0241   3.2692 3.2869 2.9096 2.9124]]
1097                   3.24756         1.5174         0.9182         -0.1379          -0.11317          0.22846          1.61272          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.1939 2.3604 2.8278 2.622  2.5246 2.4454 2.8573 2.7318 2.708  3.3164   2.7423 2.9144 2.6965 2.8613 2.7619 2.6987 3.0452 3.0924 2.6288 2.5385   2.5216 2.779  2.5513 2.5397 2.9422 3.1643 2.6725 3.1471 2.7912 3.1428   3.0664 2.9653 3.0597 3.2254 3.2862 3.1552 2.6153 3.1797 2.9759 2.8627   2.8944 2.8923 2.9373 2.9945 2.7218 3.0439 3.0128 2.8136 2.826  3.0733   3.0678 3.127  3.3008 3.0708]]
1098                   3.1253         1.50105         0.91563         -0.09507          -0.07216          0.22162          1.62133          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[2.3884 2.827  2.4827 2.7088 2.5304 2.4159 3.2712 3.3824 3.3131 2.7964   2.6153 3.3474 2.795  2.8193 2.7999 2.8075 2.9245 2.9393 2.5388 2.576   2.6628 2.9345 2.7033 2.9237 2.9232 2.9296 2.8298 2.7764 2.8051 2.8273   3.2912 2.8949 2.9282 3.3177 3.0034 2.9515 2.8415 2.5788 2.7418 2.773   2.6128 2.9166 2.9644 2.9309 3.008  3.0782 2.8855 2.8181 3.2834 3.0679   2.9635 2.9257 3.0563 3.0994]]
1099                   3.17419         1.52739         1.00126         -0.1122          -0.11199          0.23372          1.5171          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.944  3.0011 2.901  2.8139 2.9322 2.9456 3.1455 3.2262 3.1628 3.1173   3.1602 3.182  3.1641 3.274  3.207  3.1326 3.1478 3.2008 2.9209 2.8314   2.9442 2.7599 2.8817 2.8477 3.1184 3.1496 3.1183 3.1294 3.1095 3.1251   3.3218 3.415  3.3787 3.368  3.317  3.4291 3.0566 3.1073 2.9892 3.0641   3.1555 3.1171 3.2334 3.1774 3.1805 3.1923 3.0945 3.1962 3.0554 3.0924   3.1023 3.1341 3.1712 3.0813]]
1100                   3.13091         1.51109         0.99894         -0.09703          -0.09693          0.23181          1.52215          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9042 3.0264 2.8936 2.9793 2.9565 2.9201 3.0976 3.2438 3.1543 3.1457   3.1617 3.2073 3.2517 3.2421 3.1906 3.1226 3.2668 3.163  2.9529 2.9798   3.1144 2.9748 2.754  2.7915 3.1136 3.1451 3.116  3.137  3.1033 3.1206   3.2511 3.32   3.4089 3.4671 3.4421 3.4097 3.1385 3.195  2.9795 3.1289   3.0624 3.0208 3.1219 3.1283 3.1071 3.1388 3.1367 3.0783 3.0611 3.1697   3.0954 3.1192 3.0838 3.1055]]
1101                   3.18437         1.52789         0.99518         -0.11576          -0.11522          0.2334          1.54712          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.8556 2.9924 2.8453 2.9462 2.9574 2.8539 3.1382 3.2406 3.1476 3.152   3.163  3.1455 3.0823 3.4278 3.1651 3.2456 3.0127 3.246  2.8081 2.9752   2.764  2.8476 2.8954 2.8323 3.1137 3.15   3.1183 3.128  3.0999 3.124   3.2769 3.3952 3.3758 3.3402 3.4688 3.3918 3.0723 3.101  2.99   2.9995   3.0097 3.0853 3.1056 3.0962 3.1964 3.1463 3.0796 3.1304 2.9087 3.0758   3.1135 3.1568 3.0964 3.1184]]
1102                   3.1741         1.5217         0.99638         -0.11216          -0.11179          0.23356          1.54197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9403 3.0015 2.8861 2.8544 2.9922 2.9138 3.0951 3.2582 3.13   3.1868   3.186  3.1713 3.1327 3.354  3.0107 3.0657 3.3412 3.1167 2.7499 2.8018   2.8591 3.0328 2.8549 2.7847 3.1111 3.146  3.1171 3.1266 3.1049 3.1214   3.2946 3.36   3.3073 3.3365 3.412  3.4387 3.1332 3.0609 2.9848 3.2166   3.0475 2.9682 3.175  3.1115 3.0041 3.1732 3.1662 3.1205 3.0614 3.0979   3.1957 3.1741 3.133  3.1515]]
1103                   3.17881         1.51906         0.98737         -0.11381          -0.11379          0.23271          1.54057          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3194 3.3685 3.3292 3.2692 3.3835 3.3036 3.2929 3.4513 3.3476 3.3445   3.3962 3.4241 3.2643 3.4017 3.2036 3.1517 3.2143 3.1988 2.9657 3.0534   3.0257 3.0027 3.0407 3.0458 3.132  3.173  3.1434 3.156  3.1162 3.1459   3.2386 3.2866 3.2167 3.3268 3.231  3.2588 3.1315 3.0368 2.9633 3.0896   3.0036 3.0122 3.0235 2.9352 2.9491 3.0157 2.9181 3.0034 2.7225 2.7733   2.8149 2.7796 2.7387 2.8012]]
1104                   3.1908         1.5234         0.98771         -0.11802          -0.118          0.23321          1.52202          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.2668 3.4078 3.2572 3.2497 3.3493 3.3016 3.3314 3.4524 3.371  3.3302   3.4106 3.3865 3.2127 3.4214 3.2377 3.0904 3.2138 3.2523 2.9855 3.0766   3.0119 2.9823 3.0101 3.0158 3.1312 3.1731 3.1434 3.1539 3.1312 3.1405   3.2261 3.3122 3.2579 3.2826 3.2716 3.2962 3.0606 3.0444 2.9836 3.0883   3.0572 3.0031 3.0111 2.9154 2.965  3.014  2.9733 2.9854 2.7366 2.8239   2.7698 2.7875 2.7961 2.771 ]]
1105                   3.18295         1.51938         0.98673         -0.11527          -0.11526          0.23273          1.56097          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.3133 3.4217 3.3179 3.3184 3.3469 3.2994 3.3396 3.4092 3.3864 3.3851   3.3777 3.4112 3.2629 3.4051 3.2213 3.1141 3.2778 3.1902 2.9242 3.0066   2.9884 3.0177 2.9863 2.9787 3.1342 3.1685 3.1414 3.1552 3.1283 3.1487   3.2742 3.3054 3.2264 3.2999 3.2283 3.2727 3.0855 3.0419 2.9468 3.1339   2.9788 3.0634 3.0153 2.9303 2.9719 2.9914 2.9344 2.9656 2.7577 2.8388   2.7763 2.781  2.8787 2.8082]]
1106                   3.17738         1.51856         0.99015         -0.11331          -0.11324          0.23278          1.57477          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1578 3.2529 3.173  3.1488 3.2088 3.1788 3.276  3.3711 3.3124 3.3146   3.3213 3.3473 3.2266 3.361  3.1964 3.1328 3.2671 3.226  2.9334 2.9874   2.9472 2.9201 2.9487 2.9284 3.1287 3.1659 3.1345 3.1451 3.121  3.1397   3.2889 3.3087 3.2753 3.3498 3.2883 3.2937 3.1456 3.0459 3.0028 3.0728   3.0346 3.0172 3.0648 2.9854 3.0162 3.0363 2.9962 3.0152 2.8304 2.9032   2.9031 2.935  2.8929 2.8692]]
1107                   3.19001         1.52385         0.99273         -0.11774          -0.11769          0.23362          1.57115          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1306 3.2661 3.1836 3.1643 3.2294 3.1577 3.305  3.3831 3.3061 3.3178   3.3303 3.349  3.209  3.3955 3.2456 3.1253 3.2067 3.2163 2.936  2.9821   2.9377 2.9171 2.9572 2.943  3.1283 3.1684 3.1358 3.1477 3.1228 3.1415   3.2726 3.3295 3.2882 3.33   3.2872 3.3264 3.1089 3.0798 3.0034 3.0763   3.0567 3.0328 3.0865 3.0066 3.0045 3.0517 3.009  3.0171 2.8315 2.8851   2.9137 2.9191 2.8962 2.8793]]
1108                   3.17651         1.51946         0.99134         -0.11301          -0.11295          0.2328          1.57117          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1388 3.2743 3.1804 3.1508 3.244  3.1753 3.2829 3.3713 3.3166 3.3192   3.325  3.3481 3.1979 3.3589 3.2414 3.13   3.2245 3.2315 2.9563 2.9931   2.9451 2.9203 2.9443 2.94   3.1288 3.1654 3.1346 3.1472 3.1222 3.141   3.2924 3.3241 3.2654 3.3558 3.2676 3.3221 3.0866 3.0585 2.974  3.0795   3.0466 3.0473 3.0816 2.9817 3.0065 3.0463 3.     3.0086 2.8336 2.9072   2.9151 2.9374 2.9161 2.862 ]]
1109                   3.18867         1.52113         0.99152         -0.11727          -0.11721          0.23343          1.56307          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.1239 3.2708 3.1899 3.1707 3.2005 3.1736 3.2717 3.386  3.3058 3.3113   3.3168 3.3417 3.2144 3.3641 3.2292 3.0879 3.244  3.2285 2.9095 2.9928   2.9318 2.9193 2.9531 2.9497 3.1279 3.1662 3.1342 3.1458 3.1217 3.1395   3.2615 3.3427 3.2777 3.3225 3.2979 3.3375 3.0834 3.0543 3.0122 3.0697   3.0739 3.0412 3.0866 2.9961 3.0322 3.0512 3.0028 3.0157 2.8274 2.9019   2.9066 2.9169 2.919  2.874 ]]
1110                   3.38531         1.57442         0.98349         -0.18617          -0.17194          0.24465          1.55963          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[1.901  2.4224 2.6032 1.9902 2.1648 2.2484 2.6517 2.3909 2.9939 2.8135   2.8643 2.7399 2.3209 3.2004 2.9219 2.8705 2.9658 2.9602 2.7354 2.5121   2.741  2.523  2.671  2.5308 2.8885 2.9282 2.8297 2.9023 2.8879 2.9074   3.4377 3.0166 3.3806 3.4191 3.8026 3.3158 3.4912 2.9632 3.2087 3.0825   2.6487 3.3547 3.2728 2.7794 3.14   3.257  3.1757 2.9377 3.172  3.4756   3.5751 3.5489 3.6327 3.281 ]]
1111                   3.30197         1.54414         0.93847         -0.15697          -0.13353          0.23589          1.58853          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.315  2.1654 2.2208 2.1496 2.2638 2.3865 2.697  2.68   2.635  2.5064   2.6123 2.8438 2.7153 3.3372 2.4566 2.9977 2.7241 3.0388 2.2597 2.4683   2.4965 2.7878 2.4738 2.4301 2.9011 2.9717 2.8761 2.8693 2.9151 2.9071   3.0998 3.0969 3.1627 3.0179 3.4485 3.094  3.1982 2.5613 2.8727 3.2683   2.8319 3.1978 3.2996 3.068  3.246  3.0378 3.1878 3.3233 3.2476 3.4508   3.3423 3.3183 3.2217 3.6719]]
1112                   3.13024         1.47562         0.92167         -0.0968          -0.06289          0.22414          1.50325          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.1311 1.8834 2.3903 2.1957 2.1936 1.8966 2.6777 2.5185 2.5218 2.3752   2.5122 2.5088 2.8722 2.6435 3.0586 2.8554 2.8013 3.0418 2.5563 2.4398   2.4739 2.5798 2.6724 2.4707 2.8193 2.9432 2.8875 2.9113 2.8824 2.9252   3.3187 3.4168 3.1479 3.3881 3.0908 3.4125 2.3534 2.1823 2.7303 2.6164   2.6811 2.9118 3.2741 3.0825 3.2483 3.1364 2.9994 3.2357 3.7236 3.7039   3.2782 3.2744 3.512  3.1785]]
1113                   3.2936         1.53959         0.9454         -0.15404          -0.13015          0.23532          1.57113          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[2.3839 2.2829 2.4633 2.0886 2.1955 2.3814 2.7838 2.5638 2.7228 2.6219   2.8279 2.5765 2.394  3.2057 2.7782 3.1277 3.038  2.5475 2.4948 2.4292   2.5448 2.5033 2.6814 2.328  2.8497 2.9403 2.8829 2.9408 2.8483 2.9046   3.2884 3.2092 3.1534 3.1962 3.2495 3.2224 3.1265 2.8373 2.9596 2.8535   2.8033 2.7654 3.3314 3.1627 3.1899 3.1988 3.023  3.3107 3.2887 3.3932   3.4358 3.5663 3.1754 3.1609]]
1114                   4.98958         1.79747         0.71706         -0.74829          -0.04365          0.34717          1.45847          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.0435 1.1931 1.6919 0.732  1.1444 1.6589 1.8116 1.4231 1.7609 1.5759   1.5189 1.4268 2.6256 1.1787 2.1812 1.0786 1.7411 0.9252 1.6221 1.5269   1.591  1.7655 1.8862 1.6282 1.4381 1.6468 1.9057 1.731  1.5984 1.1935   1.5757 2.6029 1.707  1.7771 1.4293 1.9506 1.9757 1.9596 1.8584 1.3267   2.1465 1.481  2.055  2.1883 1.6564 1.33   1.5667 2.4623 2.2173 2.3107   1.3123 2.1971 2.6247 1.7994]]
1115                   5.23074         1.85278         0.71486         -0.83278          -0.07175          0.36743          1.37073          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.9695 1.2993 1.7028 1.3431 1.3028 1.0832 0.9219 1.5837 1.1551 1.197   1.5573 1.4216 1.8587 2.1011 1.5275 1.4975 1.9133 2.3666 0.9035 1.4611   1.9928 1.3437 1.5567 1.6706 1.9514 1.0108 1.4349 1.0552 1.3743 2.2086   1.9192 2.7028 2.2684 1.3413 2.5139 1.4274 1.8366 1.1242 0.9738 1.868   1.6767 1.5951 1.6351 2.221  2.0185 2.1269 1.6569 2.0792 2.2078 2.2223   1.9643 1.6779 2.4061 1.5209]]
1116                   5.3628         1.84474         0.68212         -0.87906          -0.14496          0.37486          1.29252          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[0.9212 1.3716 0.9422 1.6404 0.8665 1.3495 1.7119 1.5864 1.0279 1.5432   1.6803 1.7397 1.505  1.7153 1.2373 1.092  1.3924 1.8312 1.5379 1.9037   1.296  0.8985 1.5847 1.5802 2.2599 2.144  1.8791 1.8779 1.9175 1.7218   1.6255 2.0286 1.967  1.3093 2.4444 2.1039 1.9636 1.8496 1.5225 1.2333   1.6445 2.2179 0.9457 1.8492 2.3477 2.2026 2.2508 1.9072 2.1074 1.697   1.957  2.0761 2.0599 2.1052]]
1117                   5.47498         1.87784         0.70007         -0.91836          -0.11508          0.38508          1.38693          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[1.6011 1.1641 1.1823 0.9805 1.7149 1.2313 1.6024 1.7111 1.3234 1.3356   1.58   1.6188 2.0855 1.9063 1.3165 1.9805 1.422  1.4947 0.8931 1.3819   1.1809 1.2452 1.6753 1.4278 1.6915 1.5116 1.2078 1.7203 1.6137 1.2904   1.728  2.0267 2.4224 1.8125 1.9159 1.6001 1.3998 1.4325 1.1398 2.2937   1.2737 1.7658 1.867  2.1468 1.6001 1.6996 2.3692 1.5517 1.3446 2.4927   1.8928 1.838  1.9922 1.875 ]]
1118                   6.02897         2.02112         1.66694         -1.11248          -0.21329          0.40651          1.83712          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[4.2577 3.9574 3.6155 3.7212 4.2895 3.7088 4.0141 4.2771 4.6626 4.5002   4.187  3.8018 5.2978 4.7516 4.3053 4.8459 5.1213 4.3721 4.2318 4.3389   4.2962 3.8804 4.0931 4.0367 4.6845 5.024  4.7869 4.8686 4.8032 4.5395   5.3916 5.1236 4.884  5.5962 5.3962 5.0573 4.6087 5.1294 4.8177 4.7227   4.9585 4.683  5.0803 5.3596 5.1047 5.4919 4.8014 5.5429 5.3333 5.4617   5.5049 5.3211 5.7074 5.49  ]]
1119                   5.63407         1.9558         1.59214         -0.97411          -0.19538          0.38593          1.81157          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.7653 4.0574 3.8181 4.0373 3.5293 3.5693 4.5592 4.3733 3.8163 4.1573   4.2398 3.4413 4.5871 4.488  4.9288 4.3151 4.5953 5.0635 4.0103 4.0177   4.3306 3.7547 3.9897 4.1455 4.8641 4.8305 4.8018 4.7065 4.5853 5.0341   5.0827 4.8511 5.4652 5.2394 5.4433 4.9109 4.8368 4.4507 4.6971 3.9632   4.1376 4.9313 5.0335 5.294  5.3474 5.3529 5.3666 4.9814 5.1978 5.5337   5.5895 5.315  5.2363 5.1665]]
1120                   5.9659         2.01887         1.66878         -1.09037          -0.15995          0.40484          1.96968          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[3.6601 3.5767 4.207  4.2047 4.3955 3.9231 3.9469 4.4387 4.6978 4.311   4.6596 4.3092 4.7028 4.8065 3.933  4.9047 4.9294 4.6606 4.0383 4.3526   4.4824 4.1915 4.5526 4.1787 4.5313 4.8643 4.7522 4.9305 4.7003 5.0338   5.4745 5.4694 4.7431 5.2702 5.2005 5.2834 4.4487 4.8456 4.9098 4.8424   4.3725 5.0104 5.233  5.3184 4.9536 5.1867 5.0389 4.9124 5.5339 5.3168   5.9755 5.7836 5.9064 5.4235]]
1121                   5.85207         2.00968         1.65301         -1.05049          -0.25482          0.40019          1.84633          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[2.6328 3.934  3.3217 3.6898 3.9634 3.851  4.0917 4.2715 4.2595 4.2006   4.2007 4.3629 5.1746 4.8118 4.3964 4.4171 4.3603 4.5883 3.9878 4.0953   3.8993 4.3743 4.2631 4.2855 4.7483 4.4158 4.8254 4.5266 4.8077 4.8507   5.1712 5.4738 5.2315 5.1023 5.4536 5.0751 5.0786 4.7394 4.5699 4.6607   4.5412 4.7908 4.9654 4.6146 5.3594 5.2126 4.9843 5.3179 5.137  5.4893   5.717  5.7089 5.1362 5.5686]]
1122                   3.19785         1.50177         0.97374         -0.12049          -0.10818          0.23316          1.57698          MLPRegressor(activation='identity',hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.4012 2.3831 2.5102 2.5039 2.2408 2.7512 2.6724 2.7541 2.6266 2.5771   2.7669 2.4217 2.5986 3.0172 3.0885 3.2952 3.009  2.4901 2.4312 2.7528   2.7892 2.3662 2.4966 2.6431 2.9781 2.9717 2.938  2.9859 2.9433 3.0226   3.1875 3.5075 3.1623 3.5413 3.4984 3.1851 3.0355 2.7851 2.8598 3.216   2.6961 2.7293 3.3758 3.2666 3.2614 3.1629 3.1388 3.3523 3.4155 3.4192   3.4242 3.0568 3.8444 3.6667]]
1123                   3.15245         1.52638         0.9556         -0.10458          -0.09485          0.23029          1.57487          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.0656 2.4051 2.096  2.1946 2.5897 2.4007 2.6733 2.8579 2.838  2.5014   2.8016 2.6519 2.6556 3.3241 3.0876 3.1386 3.4042 3.0477 2.6353 2.4602   2.7104 2.7036 2.7956 2.4426 2.9355 3.0018 2.9166 2.9879 2.9729 2.98   3.2223 3.0631 3.0516 3.3071 3.3548 3.1521 3.2104 2.7223 3.3286 3.1054   2.9428 3.078  3.1583 3.2973 3.4285 3.4504 3.2176 3.2718 3.5355 3.801   3.3337 3.3923 3.3732 3.2588]]
1124                   3.18288         1.50727         0.96773         -0.11524          -0.10202          0.23098          1.54467          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.416  2.1977 2.4655 2.3215 2.1656 2.1028 2.9457 2.814  2.791  2.6251   2.6503 2.6117 2.7847 3.0847 2.712  2.7404 3.1412 3.0937 2.622  2.5868   2.8235 2.7663 2.5836 2.6012 2.9875 2.9731 2.9784 2.976  2.9338 2.9656   3.5849 3.6648 3.3087 3.4212 3.243  2.9599 2.7673 3.0311 2.7022 2.7463   2.7694 2.7945 3.2896 2.9834 3.2999 3.4911 3.3621 3.1906 3.4227 3.7181   3.8242 3.3149 3.1139 3.3783]]
1125                   3.16935         1.49975         0.9526         -0.1105          -0.09851          0.23109          1.45858          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(50,50,50),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.3091 2.2533 2.2021 2.2972 2.5125 2.4508 2.7623 2.527  2.7428 2.5741   2.5906 2.8363 2.8282 2.96   2.9044 2.9846 3.2295 2.973  2.5697 2.6179   2.5363 2.7864 2.3694 2.2032 2.9406 2.9775 2.9577 2.9905 2.9453 2.9406   3.0746 3.3268 3.4443 3.268  3.3867 3.3279 3.0244 2.8622 2.9545 2.9182   3.0186 3.0108 3.1826 3.3861 3.24   3.1412 3.1324 3.3253 3.6269 3.7932   3.5474 3.3917 3.8561 3.3289]]
R2 : 0.8379
MSE : 0.4626
MAE : 0.5131
MAPE : 0.3105
Explained Var : 0.8386
MSLE : 0.0428
MedAE : 0.3498
R2 indices : (array([666], dtype=int64),)
MSE indices : (array([666], dtype=int64),)
MAE indices : (array([666], dtype=int64),)
MAPE indices : (array([168], dtype=int64),)
Explained Var indices : (array([666], dtype=int64),)
MSLE indices : (array([666], dtype=int64),)
MedAE indices : (array([565], dtype=int64),)